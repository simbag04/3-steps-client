"use strict";(self.webpackChunklearn_and_run=self.webpackChunklearn_and_run||[]).push([[400],{21878:(e,t,n)=>{n.d(t,{H:()=>i});var s=n(72791),c=n(32378),o=n(80184);const i=e=>{let{title:t,functions:n,display:i,classes:a}=e;const[l,r]=(0,s.useState)("");return(0,s.useEffect)((()=>{if(n){let e="\\begin{cases}";for(let t=0;t<n.length;t++)e=e+n[t].f+"&",e+=n[t].domain,t!==n.length-1&&(e+="\\\\\\\\");e+="\\end{cases}",r(e)}}),[n]),(0,o.jsx)(o.Fragment,{children:(0,o.jsx)(c.Z,{classes:a||"",expression:"".concat(t?"".concat(t," = "):""," ").concat(l),display:i})})}},43400:(e,t,n)=>{n.r(t),n.d(t,{default:()=>x});var s=n(48654),c=n(15041),o=n(1735),i=n(32378),a=n(21878),l=(n(72791),n(80184));const r=n(62005),x=()=>{let e=null;return e=(0,c.xT)(1,10)<=6?(()=>{const e=(0,l.jsx)(l.Fragment,{}),t=[],n=[],r=(0,c.lx)(2,!0,-3,2);let x=[(0,c.xT)(-7,7),(0,c.xT)(-7,7)],d=(0,c.xT)(0,1);for(let i=0;i<=r.length;i++){let e,a,l,h;if(0===i)e="x ".concat(d?"\\leq":"<"," ").concat(r[i]),l=r[i],h=x[i];else if(i===r.length)e="x ".concat(d?">":"\\geq"," ").concat(r[i-1]),l=r[i-1],h=x[i-1];else{e="".concat(r[i-1]," ").concat(d?"<":"\\leq"," x"),d=(0,c.xT)(0,1),e+=" ".concat(d?"\\leq":"<"," ").concat(r[i]);const t=(0,c.xT)(0,1)?i-1:i;l=r[t],h=x[t]}let f=Math.abs(l)>2?1:(0,c.xT)(1,2);a=(0,s.X2)(f,l,(0,c.xT)(0,1)?h:(0,c.xT)(-7,7));const u=o.Qc(a);n.push((e=>u.evaluate({x:e}))),a=o.NC(a).toTex({parenthesis:"auto"}).replaceAll("\\cdot",""),t.push({f:a,domain:e})}const h=(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)("div",{className:"flex vertical center",children:[(0,l.jsx)("h2",{children:"Evaluate the limit."}),(0,l.jsx)("div",{children:'Enter "dne" if the limit doesn\'t exist.'})]}),(0,l.jsx)(a.H,{functions:t,title:"f(x)"})]}),f=(0,c.xT)(0,2),u=r[(0,c.xT)(0,r.length-1)];let m;for(let s=0;s<r.length;s++)if(u===r[s]){let e=Math.round(n[s](u)),t=Math.round(n[s+1](u));m=0===f?e:1===f?t:e===t?e:"dne"}const p=0===f?"^{\\footnotesize\\texttt{-}}":1===f?"^{\\footnotesize\\texttt{+}}":"",j=(0,l.jsxs)("span",{children:[(0,l.jsx)(i.Z,{classes:"bold",expression:"\\lim_{x \\to ".concat(u+p,"}g(x)"),inline:!0})," ="]});return{title:e,question:h,ans:m,type:"math",nextToInput:j,hints:[(0,l.jsxs)("div",{className:"flex vertical center small-gap",children:[(0,l.jsx)("div",{children:h}),(0,l.jsxs)("div",{children:[j," ?"]}),(0,l.jsxs)("div",{children:["Focus on the functions around ",(0,l.jsx)(i.Z,{expression:"x = ".concat(u)}),"."]})]}),(0,l.jsx)("div",{children:"Which side(s) are we evaluating the limit from? Based on that, which function(s) should we use to find the limit?"})]}})():(()=>{const e=(0,l.jsx)(l.Fragment,{}),t=(0,c.xT)(-7,7),n=[t,(0,c.iP)(-7,7,[t])];n.sort(((e,t)=>e-t));const s=(0,c.M2)(n[0]),o=(0,c.M2)(n[1]),x=(0,c.xT)(0,1);let d=(0,c.fZ)(r("".concat(s).concat(o)).expand());d=r(d).toTeX().replaceAll("\\cdot","");let h=(0,c.fZ)(r("-".concat(s).concat(o)).expand());h=r(h).toTeX().replaceAll("\\cdot","");const f=(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)("h3",{children:"Select the piecewise function corresponding to this absolute value function: "}),(0,l.jsx)(i.Z,{expression:"g(x) = |".concat(x?h:d,"|"),classes:"large-font"})]}),u=[{f:d,domain:"x \\leq ".concat(n[0])},{f:h,domain:"".concat(n[0]," < x < ").concat(n[1])},{f:d,domain:"x \\geq ".concat(n[1])}],m=[{f:h,domain:"x \\leq ".concat(n[0])},{f:d,domain:"".concat(n[0]," < x < ").concat(n[1])},{f:h,domain:"x \\geq ".concat(n[1])}],p=[{f:d,domain:"x \\leq 0"},{f:h,domain:"x > 0"}],j=[{component:(0,l.jsx)(a.H,{functions:u,title:"g(x)"}),correct:!0},{component:(0,l.jsx)(a.H,{functions:m,title:"g(x)"}),correct:!1},{component:(0,l.jsx)(a.H,{functions:p,title:"g(x)"}),correct:!1}],g=[(0,l.jsxs)("div",{className:"flex vertical center small-gap",children:[(0,l.jsxs)("div",{children:["Remember we need to find where the function inside the absolute value is ",(0,l.jsx)(i.Z,{expression:">"})," or ",(0,l.jsx)(i.Z,{expression:"<"})," 0. How can we do that with a quadratic?"]}),(0,l.jsx)(i.Z,{expression:"g(x) = |".concat(x?h:d,"|"),classes:"large-font"})]}),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)("div",{children:["Once you've found when the function is ",(0,l.jsx)(i.Z,{expression:">"})," or ",(0,l.jsx)(i.Z,{expression:"<"})," 0, how can we structure that in the piecewise format?"]}),(0,l.jsxs)("div",{children:["Remember we need to make the whole function negative for points where the function is ",(0,l.jsx)(i.Z,{expression:"<"})," 0."]})]})];return{title:e,question:f,type:"mc",input:(0,c.Sy)(j),hints:g}})(),e}}}]);
//# sourceMappingURL=400.405c862b.chunk.js.map