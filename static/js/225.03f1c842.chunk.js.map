{"version":3,"file":"static/js/225.03f1c842.chunk.js","mappings":"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","sources":["components/content-components/tables/FunctionTable.js","helpers/Latex.js","helpers/functions.js","topics/limits/evaluating-limits-using-tables/generate-question.js"],"sourcesContent":["/**\r\n * Creates Table of a funcion. Makes table vertical if screen is not wide enough\r\n * Parameters:\r\n *  - xTitle: title of x values\r\n *  - yTitle: title of y values\r\n *  - data: array data to put in table in { x: Number, y: Number } format\r\n */\r\n\r\nimport { useRef, useState, useEffect } from \"react\"\r\nimport { useWindowSize } from \"../../../helpers/useWindowSize\";\r\nimport '../../../styles/table.css'\r\nimport Latex from \"../../../helpers/Latex\";\r\n\r\nexport const FunctionTable = ({ xTitle, yTitle, data }) => {\r\n  const tableRef = useRef(null);// ref for table\r\n  const [width, setWidth] = useState(0); // current width of table\r\n  const originalWidthRef = useRef(null); // horizontal table width\r\n  const windowWidth = useWindowSize()[0]; // window size\r\n  const [display, setDisplay] = useState(\"horizontal\"); // whether table should be horiz or vert\r\n\r\n  // gets width of table\r\n  useEffect(() => {\r\n    const element = tableRef.current;\r\n    if (!element) return;\r\n\r\n    const resizeObserver = new ResizeObserver(entries => {\r\n      for (const entry of entries) {\r\n        if (entry.target === element) {\r\n          if (display === \"horizontal\") {\r\n            originalWidthRef.current = entry.contentRect.width;\r\n          }\r\n          setWidth(entry.contentRect.width);\r\n        }\r\n      }\r\n    });\r\n\r\n    resizeObserver.observe(element);\r\n\r\n    return () => {\r\n      resizeObserver.unobserve(element);\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, [tableRef, windowWidth, display]);\r\n\r\n  // changes table display to vertical if needed\r\n  useEffect(() => {\r\n    if (width > 0.8 * windowWidth) {\r\n      setDisplay(\"vertical\")\r\n    } else if (originalWidthRef && originalWidthRef.current && originalWidthRef.current < 0.8 * windowWidth) {\r\n      setDisplay(\"horizontal\")\r\n    }\r\n  }, [width, windowWidth])\r\n\r\n  return (\r\n    <table ref={tableRef} className={`function-table`}>\r\n      <tbody className={`flex ${display}`}>\r\n        {/* Headers */}\r\n        <tr>\r\n          <th><Latex expression={xTitle} /></th>\r\n          <th><Latex expression={yTitle} /></th>\r\n        </tr>\r\n        {/* Data */}\r\n        {data.map((d, i) => {\r\n          return (\r\n            <tr key={i} className={i % 2 === 0 ? \"table-color-1\" : \"table-color-2\"}>\r\n              <td>{d.x}</td>\r\n              <td>{d.y}</td>\r\n            </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}","/**\r\n * Latex component that uses katex to render math in latex font\r\n * Parameters: \r\n *  - classes: custom classes to be added to returned html\r\n *  - expression: math to be rendered as latex\r\n *  - inline: boolean value indicating whether latex should be rendered inline or block mode\r\n */\r\n\r\nimport 'katex/dist/katex.min.css';  // Import KaTeX styles\r\nimport { BlockMath, InlineMath } from 'react-katex';\r\n\r\nconst Latex = ({classes, expression, display}) => {\r\n  return (\r\n    <span className={classes}>\r\n      {!display ? \r\n      <InlineMath math={expression} /> :\r\n      <BlockMath math={expression} /> }\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default Latex","const nerdamer = require(\"nerdamer/all.min\")\r\n\r\n/**\r\n * Shuffles an array\r\n * @param {array} array array to be shuffled\r\n * @returns shuffled array\r\n */\r\nfunction shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1)); // Generate a random index from 0 to i\r\n\r\n    // Swap elements at i and j\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n}\r\n\r\n/**\r\n * generates a random number\r\n * @param {number} min minimum value of random number\r\n * @param {number} max maximum value of random number\r\n * @returns random number in the range [min, max]\r\n */\r\nfunction getRandomNumber(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\n/**\r\n * generates a random number with exclusions\r\n * @param {number} min minimum value of random number\r\n * @param {number} max maximum value of random number\r\n * @param {array} exclusions numbers to be excluded from generation\r\n * @returns random number in the range [min, max] excluding exclusions\r\n */\r\nfunction getRandomWithExclusions(min, max, exclusions) {\r\n  const validValues = [];\r\n  for (let i = min; i <= max; i++) {\r\n    if (!exclusions.includes(i)) {\r\n      validValues.push(i);\r\n    }\r\n  }\r\n\r\n  if (validValues.length === 0) {\r\n    return max;\r\n  }\r\n\r\n  const randomIndex = getRandomNumber(0, validValues.length - 1);\r\n  return validValues[randomIndex];\r\n}\r\n\r\n/**\r\n * @param {Number} n number of values to generate\r\n * @param {boolean} increasing true if values should be increasing, false if decreasing\r\n * @returns array of n ordered numbers \r\n */\r\nfunction generateOrderedValues(n, increasing) {\r\n  if (n <= 0) {\r\n    return [];\r\n  }\r\n\r\n  const values = [Math.floor(Math.random() * 10) + 1]; // Initialize with a random value\r\n\r\n  while (values.length < n) {\r\n    // generate a value greater than the last one\r\n    const nextDiff = getRandomNumber(1, 4) * (increasing ? 1 : -1);\r\n    const nextValue = values[values.length - 1] + nextDiff;\r\n    values.push(nextValue);\r\n  }\r\n\r\n  return values;\r\n}\r\n\r\n/**\r\n * \r\n * @param {String} polynomial string with a polynomial\r\n * @returns polynomial sorted in order of degree\r\n */\r\nfunction sortPolynomialByDegree(polynomial) {\r\n  // get coefficients with nerdamer\r\n  const coefficients = nerdamer.coeffs(polynomial, 'x');\r\n  let ans = \"\";\r\n  const coeffs = [];\r\n  coefficients.each(function (e) {\r\n    coeffs.push(nerdamer(e).toString());\r\n  })\r\n\r\n  // build expression\r\n  for (let i = coeffs.length - 1; i >= 0; i--) {\r\n    if (coeffs[i] === \"0\") continue; // skip 0 terms\r\n\r\n    // add \"+\" before positive coefficient terms\r\n    if (i !== coeffs.length - 1) {\r\n      if (Number(coeffs[i]) > 0) {\r\n        ans += \"+\"\r\n      }\r\n    }\r\n\r\n    if (coeffs[i] !== \"1\") {\r\n      ans += coeffs[i];\r\n    }\r\n\r\n    if (i > 1) {\r\n      ans += `x^${i}`;\r\n    } else if (i === 1) {\r\n      ans += 'x';\r\n    }\r\n  }\r\n  return ans;\r\n}\r\n\r\n/**\r\n * \r\n * @param {String} xval xvalue from which to create factor\r\n * @returns String in form (x - p), where p is the xval\r\n */\r\nfunction getStringFactorFromXval(xval) {\r\n  const x = Number(xval);\r\n  if (x < 0) {\r\n    return `(x + ${Math.abs(x)})`\r\n  } else if (x > 0) {\r\n    return `(x - ${x})`\r\n  } else {\r\n    return `(x)`\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Array} array where each element is in the form {f: String, value: Number}\r\n * @returns object with keys as all the f Strings, values as the value of that String\r\n */\r\nfunction convertArrayToObject(array) {\r\n  const obj = {};\r\n  for (let i = 0; i < array.length; i++) {\r\n    const currentObj = array[i];\r\n    if (currentObj.hasOwnProperty('f')) {\r\n      const key = currentObj['f'];\r\n      obj[key] = currentObj['value'];\r\n    }\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * @param {Number} a \r\n * @param {Number} b \r\n * @returns least common multiple of a and b\r\n */\r\nfunction findLCM(a, b) {\r\n  // Calculate the greatest common divisor (GCD) using Euclidean algorithm\r\n  function findGCD(x, y) {\r\n    if (y === 0) {\r\n      return x;\r\n    }\r\n    return findGCD(y, x % y);\r\n  }\r\n\r\n  // LCM is the product of the two numbers divided by their GCD\r\n  return (a * b) / findGCD(a, b);\r\n}\r\n\r\n/**\r\n * @param {Number} xVal at which table will \"zoom in\"\r\n * @param {Array} values to use as yvalues in table\r\n * @param {Number} start of xs in table\r\n * @param {Number} end of xs in table\r\n * @returns data array containing x, y pairs for points that could be used in a limit table\r\n */\r\nfunction generateLimitTableData(xVal, values, start, end) {\r\n  const increasing = values[1] - values[0] >= 0;\r\n  const data = [];\r\n  // build table data\r\n  for (let i = start; i <= end; i++) {\r\n    const val = values[i - start];\r\n\r\n    // zooming in to the left of xVal\r\n    if (i === xVal && xVal !== start) {\r\n      data.push({ x: i - 0.1, y: val - (increasing ? 0.1 : -0.1) })\r\n      data.push({ x: i - 0.01, y: val - (increasing ? 0.01 : -0.01) })\r\n      data.push({ x: i - 0.001, y: val - (increasing ? 0.001 : -0.001) })\r\n    }\r\n\r\n    data.push({ x: i, y: val });  // other xvalues\r\n\r\n    // zooming in to the right of xval\r\n    if (i === xVal && xVal !== end) {\r\n      data.push({ x: i + 0.001, y: val + (increasing ? 0.001 : -0.001) })\r\n      data.push({ x: i + 0.01, y: val + (increasing ? 0.01 : -0.01) })\r\n      data.push({ x: i + 0.1, y: val + (increasing ? 0.1 : -0.1) })\r\n    }\r\n  }\r\n\r\n  return {data}\r\n}\r\n\r\nexport { getRandomNumber, getRandomWithExclusions, generateOrderedValues, shuffleArray, sortPolynomialByDegree, getStringFactorFromXval, convertArrayToObject, findLCM, generateLimitTableData }","import { generateOrderedValues, getRandomNumber, getRandomWithExclusions, getStringFactorFromXval, shuffleArray, sortPolynomialByDegree } from \"../../../helpers/functions\";\r\nimport { FunctionTable } from \"../../../components/content-components/tables/FunctionTable\";\r\nimport Latex from \"../../../helpers/Latex\";\r\nimport * as math from 'mathjs'\r\n\r\nconst nerdamer = require(\"nerdamer/all.min\")\r\n\r\nfunction functionToTable() {\r\n  const title = <></>\r\n\r\n  // generate random function\r\n  const xVal = getRandomWithExclusions(-9, 9, [0]);\r\n\r\n  // get 2-3 factors on top\r\n  const factor1 = getStringFactorFromXval(xVal);\r\n  const factor2 = getStringFactorFromXval(getRandomWithExclusions(-9, 9, [0]));\r\n  const factor3 = getRandomNumber(0, 1) === 0 ?\r\n    getStringFactorFromXval(getRandomWithExclusions(-9, 9, [0])) : \"\";\r\n\r\n  // get expanded latex version of equation\r\n  const numerator = sortPolynomialByDegree(nerdamer(`${factor1}${factor2}${factor3}`).expand());\r\n  const equation = `(${numerator})/${factor1}`;\r\n  const latexEq = nerdamer(equation).toTeX().replaceAll(' \\\\cdot ', \"\")\r\n\r\n  // create question\r\n  const question = <div className=\"flex vertical center medium-gap\">\r\n    <div className=\"flex vertical center small-gap\">\r\n      <h2>Which table is best for estimating the limit of this function?</h2>\r\n      <div>Assume both tables have correct function values.</div>\r\n    </div>\r\n    <Latex expression={`g(x) = ${latexEq}`} classes={'large-font'} display={true} />\r\n  </div>\r\n\r\n  const node = math.parse(`${factor2}${factor3}`);\r\n  const f = (x) => node.evaluate({ x });\r\n\r\n  // create options\r\n  // first option\r\n  const data1 = [];\r\n  for (let i = xVal - 5; i <= xVal + 5; i++) {\r\n    data1.push({ x: i, y: xVal === i ? 'und' : Math.round(f(i)) });\r\n  }\r\n\r\n  // second option data\r\n  const data2 = [];\r\n  for (let i = xVal - 2; i <= xVal + 2; i++) {\r\n    if (i !== xVal) {\r\n      data2.push({ x: i, y: Math.round(f(i)) })\r\n    } else {\r\n      data2.push({ x: i - 0.1, y: fixRounding(f(i - 0.1), 10) });\r\n      data2.push({ x: i - 0.01, y: fixRounding(f(i - 0.01), 100) });\r\n      data2.push({ x: i - 0.001, y: fixRounding(f(i - 0.001), 1000) });\r\n      data2.push({ x: i, y: 'und' });\r\n      data2.push({ x: i + 0.001, y: fixRounding(f(i + 0.001), 1000) });\r\n      data2.push({ x: i + 0.01, y: fixRounding(f(i + 0.01), 100) });\r\n      data2.push({ x: i + 0.1, y: fixRounding(f(i + 0.1), 10) });\r\n    }\r\n  }\r\n\r\n  const option1 = {\r\n    component: <FunctionTable xTitle={`x`} yTitle={`g(x)`} data={data1} />,\r\n    correct: false\r\n  }\r\n\r\n  const option2 = {\r\n    component: <FunctionTable xTitle={`x`} yTitle={`g(x)`} data={data2} />,\r\n    correct: true\r\n  }\r\n\r\n  const input = shuffleArray([option1, option2])\r\n  const type = 'mc'\r\n\r\n  const hints = [\r\n    <div className=\"flex vertical center small-gap\">\r\n      <div>Focus on <Latex expression={`x = ${xVal}`} />. Recall that a limit is about getting infinitely close to the xvalue.</div>\r\n      <div className=\"flex vertical center small-gap\">\r\n        {option1.component}\r\n        {option2.component}\r\n      </div>\r\n    </div>,\r\n    <>\r\n      <div>When using a table, we really need to \"zoom in\" near the x-value. Which table does that?</div>\r\n    </>\r\n  ]\r\n\r\n  return { title, question, input, type, hints }\r\n}\r\n\r\nfunction tableToLimit() {\r\n  const data = []; // data for table\r\n  const xVal = getRandomNumber(-9, 9); // xval at which to evaluate limit\r\n\r\n  // 0: left, 1: right, 2: 2-sided\r\n  const sign = getRandomNumber(0, 2);\r\n\r\n  // domain for table\r\n  const startX = xVal - (getRandomNumber(0, 1) === 0 ? 3 : 0);\r\n  const endX = xVal + ((getRandomNumber(0, 1) === 0 || xVal === startX) ? 3 : 0);\r\n\r\n  const increasing = getRandomNumber(0, 1); // whether table values are increasing or decreasing\r\n  const orderedValues = generateOrderedValues(endX - startX + 1, increasing); // values in table\r\n  let ans = String(orderedValues[xVal === startX ? 0 : 3]); // default answer\r\n\r\n  // build table data\r\n  for (let i = startX; i <= endX; i++) {\r\n    const val = orderedValues[i - startX];\r\n\r\n    // evaluate answer\r\n    if (i === xVal && (i === startX || i === endX)) {\r\n      if ((i === startX && sign === 0) || (i === endX && sign === 1) || sign === 2) {\r\n        ans = \"dne\";\r\n      }\r\n    }\r\n\r\n    // zooming in to the left of xVal\r\n    if (i === xVal && xVal !== startX) {\r\n      data.push({ x: i - 0.1, y: val - (increasing ? 0.1 : -0.1) })\r\n      data.push({ x: i - 0.01, y: val - (increasing ? 0.01 : -0.01) })\r\n      data.push({ x: i - 0.001, y: val - (increasing ? 0.001 : -0.001) })\r\n    }\r\n\r\n    data.push({ x: i, y: val });  // other xvalues\r\n\r\n    // zooming in to the right of xval\r\n    if (i === xVal && xVal !== endX) {\r\n      data.push({ x: i + 0.001, y: val + (increasing ? 0.001 : -0.001) })\r\n      data.push({ x: i + 0.01, y: val + (increasing ? 0.01 : -0.01) })\r\n      data.push({ x: i + 0.1, y: val + (increasing ? 0.1 : -0.1) })\r\n    }\r\n  }\r\n\r\n  // other question components\r\n  const title = <></> // no title as title is included in question\r\n\r\n  const signText = sign === 0 ? `^\\\\textbf{-}` : sign === 1 ? `^\\\\textbf{+}` : ``;\r\n  const nextToInput = <span>\r\n    <Latex expression={`\\\\lim_{x \\\\to ${xVal + signText}}g(x)`} inline={true} /> =\r\n  </span>\r\n\r\n  const question = <div className=\"flex vertical center medium-gap\">\r\n    <div className=\"flex vertical center small-gap\">\r\n      <h2>Estimate the limit from the table.</h2>\r\n      <div>Enter \"dne\" if the limit doesn't exist or cannot be evaluated from the table</div>\r\n    </div>\r\n    <FunctionTable xTitle={`x`} yTitle={`g(x)`} data={data} />\r\n  </div>\r\n\r\n  const type = 'frq';\r\n\r\n  const hints = [\r\n    <div className=\"flex vertical center small-gap\">\r\n      <div>We are focused on evaluating the limit as <Latex expression={`x`} /> approaches {xVal} from {sign === 0 ? \"the left\" : sign === 1 ? \"the right\" : \"both sides\"}. What side(s) do we see in the table?</div>\r\n      <FunctionTable xTitle={`x`} yTitle={`g(x)`} data={data} />\r\n    </div>,\r\n    <>\r\n      {ans === \"dne\" ?\r\n        <div>\r\n          Does the table show the sides that we need?\r\n        </div> :\r\n        <div>\r\n          Look closely at the values in the table near <Latex expression={`x = ${xVal}`} />. What do they seem to be approaching?\r\n        </div>}\r\n    </>\r\n  ]\r\n\r\n  return { title, question, ans, type, nextToInput, hints }\r\n}\r\n\r\nfunction generateRandomQuestion() {\r\n  // determine type of question to generate\r\n  const rand = getRandomNumber(1, 10)\r\n  let q = null;\r\n  if (rand <= 7) {\r\n    q = tableToLimit();\r\n  } else {\r\n    q = functionToTable();\r\n  }\r\n\r\n  return q;\r\n}\r\n\r\n/**\r\n * @param {Number} val value to round\r\n * @param {Number} degree of places to round to: ex. if you want to round to the tenths place, this should be 10\r\n * @returns rounded value\r\n */\r\nfunction fixRounding(val, degree) {\r\n  console.log(val)\r\n  return Math.floor(val * degree * 10) / (degree * 10);\r\n}\r\n\r\nexport default generateRandomQuestion"],"names":["FunctionTable","_ref","xTitle","yTitle","data","tableRef","useRef","_useState","useState","_useState2","_slicedToArray","width","setWidth","originalWidthRef","windowWidth","useWindowSize","_useState3","_useState4","display","setDisplay","useEffect","element","current","resizeObserver","ResizeObserver","entries","_step","_iterator","_createForOfIteratorHelper","s","n","done","entry","value","target","contentRect","err","e","f","observe","unobserve","disconnect","_jsx","ref","className","children","_jsxs","concat","Latex","expression","map","d","i","x","y","classes","BlockMath","math","InlineMath","nerdamer","require","shuffleArray","array","length","j","Math","floor","random","getRandomNumber","min","max","getRandomWithExclusions","exclusions","validValues","includes","push","generateOrderedValues","increasing","values","nextDiff","nextValue","sortPolynomialByDegree","polynomial","coefficients","coeffs","ans","each","toString","Number","getStringFactorFromXval","xval","abs","convertArrayToObject","obj","currentObj","hasOwnProperty","findLCM","a","b","findGCD","generateLimitTableData","xVal","start","end","val","fixRounding","degree","console","log","sign","startX","endX","orderedValues","String","title","_Fragment","signText","nextToInput","inline","question","type","hints","tableToLimit","factor1","factor2","factor3","numerator","expand","equation","latexEq","toTeX","replaceAll","node","evaluate","data1","round","data2","option1","component","correct","option2","input","functionToTable"],"sourceRoot":""}