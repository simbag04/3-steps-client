{"version":3,"file":"static/js/899.f4342c6d.chunk.js","mappings":"0LAiBA,MA0CA,EA1CwDA,IAAgC,IAA/B,UAAEC,EAAS,KAAEC,EAAI,EAAEC,EAAC,EAAEC,GAAGJ,EAChF,MAAMK,GAASC,EAAAA,EAAAA,QAAO,MAoCtB,OAlCAC,EAAAA,EAAAA,YAAU,KACR,GAAIF,EAAOG,QAAS,CAClB,MAAM,OAAEC,EAAM,MAAEC,EAAK,OAAEC,EAAM,OAAEC,IAC7BC,EAAAA,EAAAA,GAAkBX,EAAMA,EAAMG,EAAQ,IAClCS,EAAMC,EAAAA,GAAUV,EAAOG,UAE7BQ,EAAAA,EAAAA,IAA6BF,EAAKb,EAAWS,EAAOD,EAAQE,EAAQC,GACpEE,EAAIG,OAAO,cAAcC,QAGzB,MAAMC,EAAOJ,EAAAA,MACVZ,GAAEiB,GAAKT,EAAOS,EAAEjB,KAChBC,GAAEgB,GAAKR,EAAOQ,EAAEhB,KAEnB,IAAK,IAAIiB,EAAI,EAAGA,EAAIjB,EAAEkB,OAAQD,IAC5BP,EAAIS,OAAO,QACRC,MAAM,CAAC,CAAErB,EAAGQ,EAAOc,OAAO,GAAIrB,EAAGA,EAAEiB,IAAM,CAAElB,EAAGQ,EAAOc,OAAOf,GAAQN,EAAGA,EAAEiB,MACzEK,KAAK,QAAS,WACdA,KAAK,eAAgB,GACrBC,MAAM,mBAAoB,GAC1BD,KAAK,IAAKP,GAGf,IAAK,IAAIE,EAAI,EAAGA,EAAIlB,EAAEmB,OAAQD,IAC5BP,EAAIS,OAAO,QACRC,MAAM,CAAC,CAAErB,EAAGA,EAAEkB,GAAIjB,EAAGQ,EAAOa,OAAO,IAAM,CAAEtB,EAAGA,EAAEkB,GAAIjB,EAAGQ,EAAOa,OAAOhB,MACrEiB,KAAK,QAAS,WACdA,KAAK,eAAgB,GACrBC,MAAM,mBAAoB,GAC1BD,KAAK,IAAKP,EAEjB,IACC,CAAClB,EAAWC,EAAMC,EAAGC,KAGtBwB,EAAAA,EAAAA,KAAA,OAAKC,IAAKxB,GAAU,C,8FCjCxB,MAqBA,EArBoDL,IAAyD,IAAxD,UAAEC,EAAS,KAAEC,EAAI,KAAE4B,EAAI,KAAEC,EAAI,KAAEC,EAAI,KAAEC,EAAI,OAAEC,GAAOlC,EACrG,MAAMK,GAASC,EAAAA,EAAAA,QAAO,MAetB,OAbAC,EAAAA,EAAAA,YAAU,KACR,GAAIF,EAAOG,QAAS,CAClB,MAAM,OAAEC,EAAM,MAAEC,EAAK,OAAEC,EAAM,OAAEC,IAC7BC,EAAAA,EAAAA,GAAkBX,EAAMA,EAAMG,EAAQ,GAAIyB,EAAMC,EAAMC,EAAMC,GACxDnB,EAAMC,EAAAA,GAAUV,EAAOG,UAE7BQ,EAAAA,EAAAA,IAA6BF,EAAKb,EAAWS,EAAOD,EAAQE,EAAQC,GAChEsB,IAAQC,EAAAA,EAAAA,IAAiBrB,EAAKoB,EAAQvB,EAAQC,GAElDE,EAAIG,OAAO,cAAcC,OAC3B,IACC,CAACjB,EAAWC,EAAM4B,EAAMC,EAAME,EAAMD,EAAME,KAG3CN,EAAAA,EAAAA,KAAA,OAAKC,IAAKxB,GAAU,C,sJCxBxB,MA4JM+B,EACJA,CAACC,EAAmBC,EAA6BC,KAC/C,IAAIC,EACAC,EACJ,MAAMC,EAAQ,GA4Fd,OA3FAA,EAAMC,MACJC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACElB,EAAAA,EAAAA,KAAA,OAAAkB,SAAK,4CAGLlB,EAAAA,EAAAA,KAAA,OAAAkB,UACEF,EAAAA,EAAAA,MAAA,MAAIG,UAAU,aAAYD,SAAA,EACxBlB,EAAAA,EAAAA,KAAA,MAAAkB,UACEF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CAAK,MACDlB,EAAAA,EAAAA,KAAA,UAAAkB,SAAQ,cAAkB,wGAIhCF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,MACAlB,EAAAA,EAAAA,KAAA,UAAAkB,SAAQ,SAAa,yDAEzBF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,OACClB,EAAAA,EAAAA,KAAA,UAAAkB,SAAQ,aAAiB,2DAMlCP,GAAwC,KAA1BS,EAAAA,EAAAA,IAAgB,EAAG,IACnCR,GAAQZ,EAAAA,EAAAA,KAAA,MAAAkB,SAAI,mCAIZL,EAAU,CACR,CACEQ,WAAWrB,EAAAA,EAAAA,KAAA,OAAAkB,SAAK,QAChBI,QAASX,GAEX,CACEU,WAAWrB,EAAAA,EAAAA,KAAA,OAAAkB,SAAK,OAChBI,SAAUX,IAIdG,EAAMC,MACJf,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CAAK,yBACoBP,EAAa,4CAA2C,WAAAY,OAA4B,aAAdd,EAA2B,IAAM,GAAE,KAAAc,OAAId,EAAS,yBAGjJO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACElB,EAAAA,EAAAA,KAAA,OAAAkB,SAAK,kCAGLlB,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,6BAA4BD,SACxCP,EAAaE,EAAQ,GAAGQ,UAAYR,EAAQ,GAAGQ,kBAKtDT,GAAQZ,EAAAA,EAAAA,KAAA,MAAAkB,SAAI,6DAIZL,EAAU,CACR,CACEQ,WAAWrB,EAAAA,EAAAA,KAAA,OAAAkB,SAAK,uBAChBI,QAAuB,SAAdb,GAEX,CACEY,WAAWrB,EAAAA,EAAAA,KAAA,OAAAkB,SAAK,2BAChBI,QAAuB,aAAdb,GAEX,CACEY,WAAWrB,EAAAA,EAAAA,KAAA,OAAAkB,SAAK,4BAChBI,QAAuB,cAAdb,IAIbK,EAAMC,MACJf,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CAAK,yBACmB,WAAAK,OAA0B,aAAdd,EAA2B,IAAM,GAAE,KAAAc,OAAId,EAAS,yBAGtFO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACElB,EAAAA,EAAAA,KAAA,OAAAkB,SAAK,kCAGLlB,EAAAA,EAAAA,KAAA,OAAKmB,UAAU,6BAA4BD,SAC1B,SAAdT,EAAuBI,EAAQ,GAAGQ,UAA0B,aAAdZ,EAA2BI,EAAQ,GAAGQ,UAAYR,EAAQ,GAAGQ,iBAM7G,CAAET,QAAOC,UAASC,QAAO,EAsBpC,EAnB+BU,KAC7B,IAAId,EACJ,MAAMe,GAAOL,EAAAA,EAAAA,IAAgB,EAAG,IAchC,OAZEV,EADEe,GAAQ,EA7JiBC,MAC7B,MAAMC,GAAeP,EAAAA,EAAAA,KAAiB,EAAG,GACnCQ,GAAKR,EAAAA,EAAAA,KAAiB,EAAG,GACzBS,GAAKT,EAAAA,EAAAA,IAAgB,EAAG,KAAO,EAAIQ,GAAKE,EAAAA,EAAAA,KAAyB,EAAG,EAAG,CAACF,IACxEG,GAAKC,EAAAA,EAAAA,KAAkCZ,EAAAA,EAAAA,IAAgB,EAAG,GAAIO,EAAMC,GACpEK,GAAKD,EAAAA,EAAAA,KAAkCZ,EAAAA,EAAAA,IAAgB,EAAG,GAAIO,EAAMC,GACpEvD,EAA6B,CACjC,CACE6D,EAAI3D,GAAcwD,EAAGI,SAAS,CAAE5D,MAChC6D,KAAM,GACNC,IAAKV,EACLW,aAAa,EACbC,cAAc,EACdC,WAAW,EACXC,YAAY,EACZC,QAAS,IACTC,YAAY,EACZC,aAAa,GAEf,CACEV,EAAI3D,GAAc0D,EAAGE,SAAS,CAAE5D,MAChC6D,IAAKT,EACLU,IAAK,GACLC,aAAa,EACbC,cAAc,EACdC,WAAW,EACXC,YAAY,EACZC,QAAS,IACTC,YAAY,EACZC,aAAa,IAIXtC,EAAuB,CAC3B,CACE/B,EAAGoD,EACHnD,EAAGqD,EACHa,QAAS,MAIb,IAAIG,GAAkC7B,EAAAA,EAAAA,MAAA,OAAKG,UAAU,kCAAiCD,SAAA,EACpFF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,aAASlB,EAAAA,EAAAA,KAAC8C,EAAAA,EAAK,CAACC,WAAU,OAAUC,QAAQ,QAChDhD,EAAAA,EAAAA,KAACiD,EAAAA,EAAa,CAAC5E,UAAWA,EAAWC,KAAM4E,EAAAA,GAAY5C,OAAQA,OAGjE,MAAM,MAAEM,EAAK,QAAEC,EAAO,MAAEC,GAAUN,EAAwB,YAAaqC,EAAcjB,IAAOC,GAM5F,MAAO,CAAEnB,UALQM,EAAAA,EAAAA,MAAA,OAAKG,UAAU,kCAAiCD,SAAA,CAC9DN,EACAiC,KAGgBjC,OAAOZ,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,IAAOkC,MAAOtC,EAASC,QAAO,EA0G3CY,GACFD,GAAQ,EApNS2B,MAC5B,MAAMzB,GAAOP,EAAAA,EAAAA,KAAiB,EAAG,GACjC,IAAIc,EAAC,IAAAX,OAAiC,KAA1BH,EAAAA,EAAAA,IAAgB,EAAG,GAAW,IAAM,GAAE,eAAAG,OAC3CI,EAAO,EAAC,IAAAJ,OAAOI,GAAI,IAAAJ,OAAS8B,KAAKC,IAAI3B,IAAO,KAEnD,MAAM4B,GAAgBnC,EAAAA,EAAAA,KAAiB,EAAG,GAC1Cc,GAAK,KAAAX,OAAQgC,EAAgB,EAAI,IAAM,IAAG,KAAAhC,OAAI8B,KAAKC,IAAIC,IAEvD,MAAMC,EAAOC,EAAAA,GAAWvB,GAClB7D,EAA6B,CACjC,CACE6D,EAAI3D,GAAciF,EAAKrB,SAAS,CAAE5D,MAClC6D,KAAM,GACNC,IAAKV,EACLW,aAAa,EACbC,cAAc,EACdC,WAAW,EACXC,YAAY,EACZC,QAAS,IACTC,YAAY,EACZC,aAAa,EACbc,KAAM,cAER,CACExB,EAAI3D,GAAciF,EAAKrB,SAAS,CAAE5D,MAClC6D,IAAKT,EACLU,IAAK,GACLC,aAAa,EACbC,cAAc,EACdC,WAAW,EACXC,YAAY,EACZC,QAAS,IACTC,YAAY,EACZC,aAAa,EACbc,KAAM,eAIJb,GAAe7B,EAAAA,EAAAA,MAAA,OAAKG,UAAU,kCAAiCD,SAAA,EACnEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,aAASlB,EAAAA,EAAAA,KAAC8C,EAAAA,EAAK,CAACC,WAAU,OAAUC,QAAQ,QAChDhD,EAAAA,EAAAA,KAAC2D,EAAAA,EAAe,CAACtF,UAAWA,EAAWC,KAAM4E,EAAAA,GAAY3E,EAAG,CAACoD,GAAOnD,EAAG,CAAC+E,SAGpE,MAAE3C,EAAK,QAAEC,EAAO,MAAEC,GAAUN,EAAwB,WAAYqC,GAAc,GAOpF,MAAO,CAAEnC,UALQM,EAAAA,EAAAA,MAAA,OAAKG,UAAU,kCAAiCD,SAAA,CAC9DN,EACAiC,KAGgBjC,OAAOZ,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,IAAOkC,MAAOtC,EAASC,QAAO,EAmK3CsC,GArQWQ,MACxB,MAAMjC,GAAeP,EAAAA,EAAAA,KAAiB,EAAG,GACnCQ,GAAKR,EAAAA,EAAAA,KAAiB,EAAG,GACzBS,GAAKT,EAAAA,EAAAA,IAAgB,EAAG,KAAO,EAAIQ,GAAKE,EAAAA,EAAAA,KAAyB,EAAG,EAAG,CAACF,IACxEU,EAAwC,KAA1BlB,EAAAA,EAAAA,IAAgB,EAAG,GACjCW,GAAKC,EAAAA,EAAAA,KAAkCZ,EAAAA,EAAAA,IAAgB,EAAG,GAAIO,EAAMC,GACpEK,GAAKD,EAAAA,EAAAA,KAAkCZ,EAAAA,EAAAA,IAAgB,EAAG,GAAIO,EAAME,GACpExD,EAA6B,CACjC,CACE6D,EAAI3D,GAAcwD,EAAGI,SAAS,CAAE5D,MAChC6D,KAAM,GACNC,IAAKV,EACLW,aAAa,EACbC,aAAcD,EACdE,WAAW,EACXC,YAAY,EACZC,QAAS,IACTC,YAAY,EACZC,aAAa,GAEf,CACEV,EAAI3D,GAAc0D,EAAGE,SAAS,CAAE5D,MAChC6D,IAAKT,EACLU,IAAK,GACLC,YAAaV,IAAOC,IAAOS,EAC3BC,cAAc,EACdC,WAAW,EACXC,YAAY,EACZC,QAAS,IACTC,YAAY,EACZC,aAAa,IAIjB,IAAIC,GAAkC7B,EAAAA,EAAAA,MAAA,OAAKG,UAAU,kCAAiCD,SAAA,EACpFF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,aAASlB,EAAAA,EAAAA,KAAC8C,EAAAA,EAAK,CAACC,WAAU,OAAUC,QAAQ,QAChDhD,EAAAA,EAAAA,KAACiD,EAAAA,EAAa,CAAC5E,UAAWA,EAAWC,KAAM4E,EAAAA,QAG7C,MAAM,MAAEtC,EAAK,QAAEC,EAAO,MAAEC,GAAUN,EAAwB,OAAQqC,EAAcjB,IAAOC,GAMvF,MAAO,CAAEnB,UALQM,EAAAA,EAAAA,MAAA,OAAKG,UAAU,kCAAiCD,SAAA,CAC9DN,EACAiC,KAGgBjC,OAAOZ,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,IAAOkC,MAAOtC,EAASC,QAAO,EA0N3C8C,GAGblD,EAASgD,KAAO,KAEhBG,SAASC,gBAAgB/D,MAAMgE,YAAY,iBACzCC,EAAAA,IAAO5C,EAAAA,EAAAA,IAAgB,EAAG4C,EAAAA,GAAOtE,OAAS,KAErCgB,CAAQ,C","sources":["components/content-components/graphs/AsymptoticGraph.tsx","components/content-components/graphs/FunctionGraph.tsx","topics/01-limits/09-exploring-types-of-discontinuities/generate-question.tsx"],"sourcesContent":["/**\r\n * Creates asymptotic graph with dashed lines at asymptotes\r\n */\r\nimport { useEffect, useRef } from \"react\"\r\nimport { createBlankCanvas, createMultipleFunctionsGraph } from \"../../../helpers/graph-helpers\";\r\nimport '../../../styles/graph.css'\r\nimport * as d3 from 'd3';\r\nimport React from \"react\";\r\nimport { GraphFunction } from \"../../../@types/GraphFunction\";\r\n\r\ninterface AsymptoticGraphProps {\r\n  functions: GraphFunction[], // functions to graph\r\n  size: number, // size of graph\r\n  x: number[], // xvalues of asymptotes where there will be dotted lines\r\n  y: number[] // y values of asymptotes where there will be dotted lines\r\n}\r\n\r\nconst AsymptoticGraph: React.FC<AsymptoticGraphProps> = ({ functions, size, x, y }) => {\r\n  const svgRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (svgRef.current) {\r\n      const { height, width, xScale, yScale } =\r\n        createBlankCanvas(size, size, svgRef, 12);\r\n      const svg = d3.select(svgRef.current)\r\n\r\n      createMultipleFunctionsGraph(svg, functions, width, height, xScale, yScale)\r\n      svg.select(\".tick-text\").raise();\r\n\r\n      // dashed lines on asymptotes\r\n      const line = d3.line()\r\n        .x(d => xScale(d.x))\r\n        .y(d => yScale(d.y))\r\n\r\n      for (let i = 0; i < y.length; i++) {\r\n        svg.append('path')\r\n          .datum([{ x: xScale.invert(0), y: y[i] }, { x: xScale.invert(width), y: y[i] }])\r\n          .attr('class', 'stroke ')\r\n          .attr('stroke-width', 1)\r\n          .style('stroke-dasharray', 2)\r\n          .attr('d', line)\r\n      }\r\n\r\n      for (let i = 0; i < x.length; i++) {\r\n        svg.append('path')\r\n          .datum([{ x: x[i], y: yScale.invert(0) }, { x: x[i], y: yScale.invert(height) }])\r\n          .attr('class', 'stroke ')\r\n          .attr('stroke-width', 1)\r\n          .style('stroke-dasharray', 2)\r\n          .attr('d', line)\r\n      }\r\n    }\r\n  }, [functions, size, x, y])\r\n\r\n  return (\r\n    <svg ref={svgRef} />\r\n  )\r\n}\r\n\r\nexport default AsymptoticGraph","/**\r\n * Creates graph of multiple functions\r\n */\r\n\r\nimport { useEffect, useRef } from \"react\"\r\nimport { createBlankCanvas, createMultipleFunctionsGraph, addPointsToGraph } from \"../../../helpers/graph-helpers\";\r\nimport '../../../styles/graph.css'\r\nimport * as d3 from 'd3';\r\nimport React from \"react\";\r\nimport { GraphFunction } from \"../../../@types/GraphFunction\";\r\nimport { GraphPoint } from \"../../../@types/GraphPoint\";\r\n\r\ninterface FunctionGraphProps {\r\n  functions: GraphFunction[], // functions to graph\r\n  size: number, // size of graph\r\n  minx?: number, // minimum x value of graph (default: -11)\r\n  maxx?: number, // maximum x value of graph (default: 11)\r\n  miny?: number, // minimum y value of graph (default: -11)\r\n  maxy?: number, // maximum y value of graph (default: -11)\r\n  points?: GraphPoint[] // additional full circle points to graph\r\n}\r\n\r\nconst FunctionGraph: React.FC<FunctionGraphProps> = ({ functions, size, minx, maxx, miny, maxy, points}) => {\r\n  const svgRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (svgRef.current) {\r\n      const { height, width, xScale, yScale } =\r\n        createBlankCanvas(size, size, svgRef, 12, minx, maxx, miny, maxy);\r\n      const svg = d3.select(svgRef.current)\r\n\r\n      createMultipleFunctionsGraph(svg, functions, width, height, xScale, yScale)\r\n      if (points) addPointsToGraph(svg, points, xScale, yScale)\r\n      \r\n      svg.select(\".tick-text\").raise();\r\n    }\r\n  }, [functions, size, minx, maxx, maxy, miny, points])\r\n\r\n  return (\r\n    <svg ref={svgRef} />\r\n  )\r\n}\r\n\r\nexport default FunctionGraph","import { getRandomNumber, getRandomWithExclusions } from \"../../../helpers/functions\";\r\nimport { generateRandomPolynomialWithPoint } from \"../../../helpers/expression-generators\"\r\nimport { GraphFunction } from \"../../../@types/GraphFunction\";\r\nimport React from \"react\";\r\nimport Latex from \"../../../components/latex/Latex\";\r\nimport FunctionGraph from \"../../../components/content-components/graphs/FunctionGraph\";\r\nimport AsymptoticGraph from \"../../../components/content-components/graphs/AsymptoticGraph\";\r\nimport { GRAPH_SIZE } from \"../../../helpers/constants\";\r\nimport { Option } from \"../../../@types/Option\";\r\nimport { Question } from \"../../../@types/Question\";\r\nimport * as math from \"mathjs\"\r\nimport { COLORS } from \"../../../helpers/constants\";\r\nimport { GraphPoint } from \"../../../@types/GraphPoint\";\r\n\r\n\r\nconst jumpGraphQuestion = (): any => {\r\n  const xVal: number = getRandomNumber(-8, 8); // xval where there is a jump\r\n  const y1 = getRandomNumber(-7, 7);\r\n  const y2 = getRandomNumber(0, 10) <= 2 ? y1 : getRandomWithExclusions(-7, 7, [y1])\r\n  const includeLeft = getRandomNumber(0, 1) === 0\r\n  const f1 = generateRandomPolynomialWithPoint(getRandomNumber(1, 4), xVal, y1)\r\n  const f2 = generateRandomPolynomialWithPoint(getRandomNumber(1, 4), xVal, y2)\r\n  const functions: GraphFunction[] = [\r\n    {\r\n      f: (x: number) => f1.evaluate({ x }),\r\n      min: -11,\r\n      max: xVal,\r\n      includeLeft: false,\r\n      includeRight: includeLeft,\r\n      leftArrow: true,\r\n      rightArrow: false,\r\n      classes: 'f',\r\n      leftCircle: false,\r\n      rightCircle: true\r\n    },\r\n    {\r\n      f: (x: number) => f2.evaluate({ x }),\r\n      min: xVal,\r\n      max: 11,\r\n      includeLeft: y1 === y2 || !includeLeft,\r\n      includeRight: false,\r\n      leftArrow: false,\r\n      rightArrow: true,\r\n      classes: 'f',\r\n      leftCircle: true,\r\n      rightCircle: true\r\n    }\r\n  ];\r\n\r\n  let tempQuestion: React.JSX.Element = <div className=\"flex vertical center medium-gap\">\r\n    <h3>Graph of <Latex expression={`g(x)`} inline={true} /></h3>\r\n    <FunctionGraph functions={functions} size={GRAPH_SIZE} />\r\n  </div>\r\n\r\n  const { title, options, hints } = generateOptionsAndHints(\"jump\", tempQuestion, y1 === y2)\r\n  const question = <div className=\"flex vertical center medium-gap\">\r\n    {title}\r\n    {tempQuestion}\r\n  </div>\r\n\r\n  return { question, title: <></>, input: options, hints }\r\n}\r\n\r\nconst infiniteGraphQuestion = () => {\r\n  const xVal = getRandomNumber(-7, 7); // values at which there will be an asymptote\r\n  let f = `(${getRandomNumber(0, 1) === 0 ? \"-\" : \"\"}1/\r\n    (x ${xVal > 0 ? `-${xVal}` : `+${Math.abs(xVal)}`})`; // function\r\n\r\n  const verticalShift = getRandomNumber(-5, 5)\r\n  f = f + `) ${verticalShift > 0 ? '+' : '-'} ${Math.abs(verticalShift)}`\r\n\r\n  const node = math.parse(f);\r\n  const functions: GraphFunction[] = [\r\n    {\r\n      f: (x: number) => node.evaluate({ x }),\r\n      min: -11,\r\n      max: xVal,\r\n      includeLeft: false,\r\n      includeRight: false,\r\n      leftArrow: true,\r\n      rightArrow: true,\r\n      classes: 'f',\r\n      leftCircle: false,\r\n      rightCircle: false,\r\n      type: \"asymptotic\"\r\n    },\r\n    {\r\n      f: (x: number) => node.evaluate({ x }),\r\n      min: xVal,\r\n      max: 11,\r\n      includeLeft: false,\r\n      includeRight: false,\r\n      leftArrow: true,\r\n      rightArrow: true,\r\n      classes: 'f',\r\n      leftCircle: false,\r\n      rightCircle: false,\r\n      type: \"asymptotic\"\r\n    },\r\n  ]\r\n\r\n  const tempQuestion = <div className=\"flex vertical center medium-gap\">\r\n    <h3>Graph of <Latex expression={`g(x)`} inline={true} /></h3>\r\n    <AsymptoticGraph functions={functions} size={GRAPH_SIZE} x={[xVal]} y={[verticalShift]} />\r\n  </div>\r\n\r\n  const { title, options, hints } = generateOptionsAndHints(\"infinite\", tempQuestion, false)\r\n\r\n  const question = <div className=\"flex vertical center medium-gap\">\r\n    {title}\r\n    {tempQuestion}\r\n  </div>\r\n\r\n  return { question, title: <></>, input: options, hints }\r\n}\r\n\r\nconst removableGraphQuestion = (): any => {\r\n  const xVal: number = getRandomNumber(-8, 8); // xval where there is a potential discontinuity\r\n  const y1 = getRandomNumber(-7, 7);\r\n  const y2 = getRandomNumber(0, 10) <= 3 ? y1 : getRandomWithExclusions(-7, 7, [y1])\r\n  const f1 = generateRandomPolynomialWithPoint(getRandomNumber(1, 4), xVal, y1)\r\n  const f2 = generateRandomPolynomialWithPoint(getRandomNumber(1, 4), xVal, y1)\r\n  const functions: GraphFunction[] = [\r\n    {\r\n      f: (x: number) => f1.evaluate({ x }),\r\n      min: -11,\r\n      max: xVal,\r\n      includeLeft: false,\r\n      includeRight: false,\r\n      leftArrow: true,\r\n      rightArrow: false,\r\n      classes: 'f',\r\n      leftCircle: false,\r\n      rightCircle: true\r\n    },\r\n    {\r\n      f: (x: number) => f2.evaluate({ x }),\r\n      min: xVal,\r\n      max: 11,\r\n      includeLeft: false,\r\n      includeRight: false,\r\n      leftArrow: false,\r\n      rightArrow: true,\r\n      classes: 'f',\r\n      leftCircle: true,\r\n      rightCircle: true\r\n    }\r\n  ];\r\n\r\n  const points: GraphPoint[] = [\r\n    {\r\n      x: xVal,\r\n      y: y2,\r\n      classes: 'f'\r\n    }\r\n  ]\r\n\r\n  let tempQuestion: React.JSX.Element = <div className=\"flex vertical center medium-gap\">\r\n    <h3>Graph of <Latex expression={`g(x)`} inline={true} /></h3>\r\n    <FunctionGraph functions={functions} size={GRAPH_SIZE} points={points} />\r\n  </div>\r\n\r\n  const { title, options, hints } = generateOptionsAndHints(\"removable\", tempQuestion, y1 === y2)\r\n  const question = <div className=\"flex vertical center medium-gap\">\r\n    {title}\r\n    {tempQuestion}\r\n  </div>\r\n\r\n  return { question, title: <></>, input: options, hints }\r\n}\r\n\r\nconst generateOptionsAndHints =\r\n  (graphType: string, question: React.JSX.Element, continuous?: boolean): any => {\r\n    let title: React.JSX.Element;\r\n    let options: Option[];\r\n    const hints = []\r\n    hints.push(\r\n      <>\r\n        <div>\r\n          Recall our 3 types of discontinuities:\r\n        </div>\r\n        <div>\r\n          <ul className=\"text-start\">\r\n            <li>\r\n              <div>\r\n                a <strong>removable</strong> discontinuity - when only the value of the function\r\n                is inconsistent with the rest of the graph\r\n              </div>\r\n            </li>\r\n            <li>\r\n              a <strong>jump</strong> discontinuity - when there is a jump in the graph\r\n            </li>\r\n            <li>\r\n              an <strong>infinite</strong> discontinuity - when a graph has asymptotes\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </>)\r\n\r\n    if (continuous || getRandomNumber(0, 1) === 0) {\r\n      title = <h3>\r\n        Is the graph below continuous?\r\n      </h3>\r\n\r\n      options = [\r\n        {\r\n          component: <div>Yes</div>,\r\n          correct: continuous\r\n        },\r\n        {\r\n          component: <div>No</div>,\r\n          correct: !continuous\r\n        },\r\n      ]\r\n\r\n      hints.push(\r\n        <>\r\n          <div>\r\n            Looking at the graph, {continuous ? \"none of these discontinuities are present\" : `we see a${graphType === \"infinite\" ? 'n' : ''} ${graphType} discontinuity.`}\r\n          </div>\r\n        </>,\r\n        <>\r\n          <div>\r\n            Thus, the correct answer is:\r\n          </div>\r\n          <div className=\"hint-ans input correct ans\">\r\n            {continuous ? options[0].component : options[1].component}\r\n          </div>\r\n        </>\r\n      )\r\n    } else {\r\n      title = <h3>\r\n        What type  of discontinuity is shown in the graph below?\r\n      </h3>\r\n\r\n      options = [\r\n        {\r\n          component: <div>Jump Discontinuity</div>,\r\n          correct: graphType === \"jump\"\r\n        },\r\n        {\r\n          component: <div>Infinite Discontinuity</div>,\r\n          correct: graphType === \"infinite\"\r\n        },\r\n        {\r\n          component: <div>Removable Discontinuity</div>,\r\n          correct: graphType === \"removable\"\r\n        }\r\n      ]\r\n\r\n      hints.push(\r\n        <>\r\n          <div>\r\n            Looking at the graph, {`we see a${graphType === \"infinite\" ? 'n' : ''} ${graphType} discontinuity.`}\r\n          </div>\r\n        </>,\r\n        <>\r\n          <div>\r\n            Thus, the correct answer is:\r\n          </div>\r\n          <div className=\"hint-ans input correct ans\">\r\n            {graphType === \"jump\" ? options[0].component : graphType === \"infinite\" ? options[1].component : options[2].component}\r\n          </div>\r\n        </>\r\n      )\r\n    }\r\n\r\n    return { title, options, hints }\r\n  }\r\n\r\nconst generateRandomQuestion = (): Question => {\r\n  let question: any;\r\n  const rand = getRandomNumber(0, 11);\r\n  if (rand <= 3) {\r\n    question = removableGraphQuestion();\r\n  } else if (rand <= 7) {\r\n    question = infiniteGraphQuestion();\r\n  } else {\r\n    question = jumpGraphQuestion();\r\n  }\r\n\r\n  question.type = 'mc'\r\n\r\n  document.documentElement.style.setProperty('--random-color',\r\n    COLORS[getRandomNumber(0, COLORS.length - 1)])\r\n\r\n  return question\r\n}\r\n\r\nexport default generateRandomQuestion"],"names":["_ref","functions","size","x","y","svgRef","useRef","useEffect","current","height","width","xScale","yScale","createBlankCanvas","svg","d3","createMultipleFunctionsGraph","select","raise","line","d","i","length","append","datum","invert","attr","style","_jsx","ref","minx","maxx","miny","maxy","points","addPointsToGraph","generateOptionsAndHints","graphType","question","continuous","title","options","hints","push","_jsxs","_Fragment","children","className","getRandomNumber","component","correct","concat","generateRandomQuestion","rand","removableGraphQuestion","xVal","y1","y2","getRandomWithExclusions","f1","generateRandomPolynomialWithPoint","f2","f","evaluate","min","max","includeLeft","includeRight","leftArrow","rightArrow","classes","leftCircle","rightCircle","tempQuestion","Latex","expression","inline","FunctionGraph","GRAPH_SIZE","input","infiniteGraphQuestion","Math","abs","verticalShift","node","math","type","AsymptoticGraph","jumpGraphQuestion","document","documentElement","setProperty","COLORS"],"sourceRoot":""}