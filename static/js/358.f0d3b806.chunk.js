"use strict";(self.webpackChunklearn_and_run=self.webpackChunklearn_and_run||[]).push([[358],{21878:(e,s,n)=>{n.d(s,{H:()=>l});var t=n(72791),c=n(32378),i=n(80184);const l=e=>{let{title:s,functions:n,display:l,classes:o}=e;const[a,x]=(0,t.useState)("");return(0,t.useEffect)((()=>{if(n){let e="\\begin{cases}";for(let s=0;s<n.length;s++)e=e+n[s].f+"&",e+=n[s].domain,s!==n.length-1&&(e+="\\\\\\\\");e+="\\end{cases}",x(e)}}),[n]),(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(c.Z,{classes:o||"",expression:"".concat(s?"".concat(s," = "):""," ").concat(a),display:l})})}},68358:(e,s,n)=>{n.r(s),n.d(s,{default:()=>d});var t=n(15041),c=n(48654),i=n(1735),l=n(32378),o=(n(72791),n(21878)),a=n(59959),x=n(80184);n(62005);const r=(e,s)=>{const n=(0,t.KE)(e);let c=(0,t.xT)(0,n.length-1);for(;0===n[c];)c=(0,t.xT)(0,n.length-1);const i=n[c];n[c]="b";let l=0,o="";for(let t=0;t<n.length;t++)if("b"===n[t]){const e=s**t;o+="".concat(1===e?"b":-1===e?"-b":"".concat(e,"b"))}else l+=n[t]*s**t;return o+="".concat(l>0?"+".concat(l):l<0?"".concat(l):""),{ans:i,f:(0,t.ts)(n),simplified:o}},d=()=>(()=>{const e=[],s=(0,t.xT)(0,10)<=6?1:2,n=(0,t.lx)(s,!0,-3,2);let d=[],h=(0,t.xT)(0,n.length-1);0===n[h]&&(1===n.length?n[0]=(0,t.iP)(-3,3,[0]):h=(0,t.iP)(0,n.length-1,[h]));const f=n[h];for(let c=0;c<s;c++)d.push((0,t.xT)(-7,7));const p=1===s&&(0,t.xT)(0,10)<=6,j=p?(0,t.xT)(0,2):(0,t.xT)(0,1);let m,u=0===h&&p?0:(0,t.xT)(0,1);const g=[];for(let l=0;l<=n.length;l++){let s,o,a,x,b=!1,v="";if(l-1===h&&p){const s=2!==j?String(d[h]):"b";e.push({f:s,domain:"x = ".concat(f)}),u=1,2===j&&(m=d[h]),g.push({type:1,f:s,value:s,replaced:!1})}0===l?(s="x ".concat(u?"\\leq":"<"," ").concat(n[l]),a=n[l],x=d[l],b=u&&l===h):l===n.length?(s="x ".concat(u?">":"\\geq"," ").concat(n[l-1]),a=n[l-1],x=d[l-1],b=!u&&l-1===h):(s="".concat(n[l-1]," ").concat(u?"<":"\\leq"," x"),b=l-1===h&&!u,u=h===l&&p?0:(0,t.xT)(0,1),b=b||u&&h===l,s+=" ".concat(u?"\\leq":"<"," ").concat(n[l]),a=n[h],x=d[h]);let y=Math.abs(a)>2?1:(0,t.xT)(1,2);if(o=(0,c.X2)(y,a,x,!0),o=i.NC(o).toString().replaceAll(" * ",""),2!==j&&j+h===l){const e=r(o,a);o=e.f,m=e.ans,v=e.simplified}const Z=o.includes("x"),_=o.includes("b");let T=o.replaceAll("x","(".concat(a,")"));T=T.replaceAll("b","(".concat(m,")")),o=(0,t.VT)(o).replaceAll("\\mathrm",""),e.push({f:o,domain:s}),b&&g.push({type:1,f:T,value:x,simplified:_?v:x,replaced:Z}),l!==h&&l-1!==h||g.push({type:l===h?0:2,f:o,value:x,simplified:_?v:x})}g.sort(((e,s)=>e.type-s.type));const b=[(0,x.jsxs)(x.Fragment,{children:[(0,x.jsx)("div",{children:"Remember, we have 2 conditions to check for continuity for this function:"}),(0,x.jsx)("div",{children:(0,x.jsxs)("ul",{className:"text-start",children:[(0,x.jsxs)("li",{children:[(0,x.jsx)(l.Z,{classes:"bold",expression:"\\lim_{x \\to a} f(x)"})," must ",(0,x.jsx)("strong",{children:"exist"})]}),(0,x.jsx)("li",{children:(0,x.jsx)(l.Z,{classes:"bold",expression:"\\lim_{x \\to a} f(x) = f(a)",display:!0})})]})})]}),(0,x.jsx)(x.Fragment,{children:(0,x.jsxs)("div",{children:["In order to determine if ",(0,x.jsx)(l.Z,{classes:"bold",expression:"\\lim_{x \\to ".concat(f,"} f(x)")})," ",(0,x.jsx)("strong",{children:"exists"}),", we need ",(0,x.jsx)(l.Z,{classes:"bold",expression:"\\lim_{x \\to ".concat(f).concat(a.G9,"} f(x) = \\lim_{x \\to ").concat(f).concat(a.md,"} f(x)")}),"."]})}),(0,x.jsxs)(x.Fragment,{children:[(0,x.jsx)("div",{children:"We can evaluate:"}),(0,x.jsx)("div",{children:(0,x.jsx)(l.Z,{expression:"\\lim_{x \\to ".concat(f).concat(a.G9,"} f(x) = \\lim_{x \\to ").concat(f,"} \\left(").concat(g[0].f,"\\right) = ").concat(g[0].simplified),display:!0})}),(0,x.jsx)("div",{children:(0,x.jsx)(l.Z,{expression:"\\lim_{x \\to ".concat(f).concat(a.md,"} f(x) = \\lim_{x \\to ").concat(f,"} \\left(").concat(g[2].f,"\\right) = ").concat(g[2].simplified),display:!0})})]})];2!==j?b.push((0,x.jsxs)(x.Fragment,{children:[(0,x.jsx)("div",{children:"Since both limits need to be equal, we have:"}),(0,x.jsxs)("div",{children:[(0,x.jsx)(l.Z,{expression:"".concat(g[0].simplified," = ").concat(g[2].simplified),display:!0}),g[0].simplified.length>1||g[2].simplified.length>1?(0,x.jsx)(l.Z,{expression:"b = ".concat(m),display:!0}):null]})]}),(0,x.jsxs)(x.Fragment,{children:[(0,x.jsxs)("div",{children:["Now, we need to verify ",(0,x.jsx)(l.Z,{classes:"bold",expression:"\\lim_{x \\to ".concat(f,"} f(x) = f(").concat(f,")")}),p?"":(0,x.jsxs)(x.Fragment,{children:[" with this value of ",(0,x.jsx)(l.Z,{expression:"b"})]}),":"]}),(0,x.jsx)("div",{children:(0,x.jsx)(l.Z,{expression:"f(".concat(f,") = ").concat(g[1].f,"\n          ").concat(g[1].replaced?"= ".concat(g[1].value):""," = \\lim_{x \\to ").concat(f,"} f(x)"),display:!0})})]}),(0,x.jsx)(x.Fragment,{children:(0,x.jsxs)("div",{children:["When ",(0,x.jsx)(l.Z,{expression:"b = ".concat(m)}),", both conditions of continuity are satisfied!"]})})):b.push((0,x.jsxs)(x.Fragment,{children:[(0,x.jsxs)("div",{children:["The limits equal each other, so the first condition is satisfied. Now, we just need ",(0,x.jsx)(l.Z,{classes:"bold",expression:"\\lim_{x \\to ".concat(f,"} f(x) = f(").concat(f,")")}),":"]}),(0,x.jsxs)("div",{children:[(0,x.jsx)(l.Z,{expression:"\\lim_{x \\to ".concat(f,"} f(x) = ").concat(g[0].value," = f(").concat(f,") = b"),display:!0}),(0,x.jsx)(l.Z,{expression:"b = ".concat(m)})]})]})),b.push((0,x.jsxs)(x.Fragment,{children:[(0,x.jsx)("div",{children:"Thus, the correct answer is:"}),(0,x.jsx)("div",{className:"hint-ans input correct ans",children:m})]}));const v=(0,x.jsx)(l.Z,{expression:"b = ",display:!0});return{title:(0,x.jsx)(x.Fragment,{}),question:(0,x.jsxs)(x.Fragment,{children:[(0,x.jsxs)("h3",{children:["For what value of ",(0,x.jsx)(l.Z,{expression:"b"})," will ",(0,x.jsx)(l.Z,{expression:"f(x)"})," be continuous at ",(0,x.jsx)(l.Z,{expression:"x = ".concat(f)}),"?"]}),(0,x.jsx)(o.H,{title:"f(x)",functions:e,display:!0})]}),nextToInput:v,ans:m,hints:b,type:"math"}})()}}]);
//# sourceMappingURL=358.f0d3b806.chunk.js.map