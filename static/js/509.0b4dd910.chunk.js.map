{"version":3,"file":"static/js/509.0b4dd910.chunk.js","mappings":"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","sources":["components/latex/Piecewise.tsx","topics/01-limits/11-confirming-continuity-over-an-interval/generate-question.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Latex from \"./Latex\";\r\nimport { PiecewiseFunction } from \"../../types/PiecewiseFunction\";\r\n\r\ninterface PiecewiseProps {\r\n  title: string,\r\n  functions: PiecewiseFunction[],\r\n  display?: string | boolean,\r\n  classes?: string\r\n}\r\n\r\nexport const Piecewise: React.FC<PiecewiseProps> = ({ title, functions, display, classes }) => {\r\n  const [expression, setExpression] = useState(``);\r\n  useEffect(() => {\r\n    if (functions) {\r\n      let e = `\\\\begin{cases}`;\r\n      for (let i = 0; i < functions.length; i++) {\r\n        e = e + functions[i].f + \"&\";\r\n        e = e + functions[i].domain;\r\n        if (i !== functions.length - 1) {\r\n          e = e + \"\\\\\\\\\"\r\n        }\r\n      }\r\n      e = e + \"\\\\end{cases}\"\r\n      setExpression(e)\r\n    }\r\n  },[functions])\r\n  \r\n  return (\r\n    <>\r\n      <Latex classes={classes ? classes : \"\"} expression={`${title ? `${title} = ` : ''} ${expression}`} display={display} />\r\n    </>\r\n  )\r\n}","import { formatPolynomialToLatex, getCoeffsOfPolynomial, getRandomNumber, getRandomWithExclusions, getRootsOfPolynomial, getStringFactorFromXval, sortPolynomialByDegree } from \"../../../helpers/functions\"\r\nimport { getPolynomialFunctionWithPoint, fitPointsToQuadraticFractions } from \"../../../helpers/expression-generators\"\r\nimport * as math from \"mathjs\"\r\nimport { PiecewiseFunction } from \"../../../types/PiecewiseFunction\"\r\nimport { Piecewise } from \"../../../components/latex/Piecewise\"\r\nimport React from \"react\"\r\nimport Latex from \"../../../components/latex/Latex\"\r\nimport { Option } from \"../../../types/Option\"\r\n\r\nconst nerdamer = require(\"nerdamer/all.min\")\r\n\r\nconst piecewiseQuestion = () => {\r\n  // need 1 point where function may or may not be continuous but will be included in the interval\r\n  // need endpoints (can be on the boundaries or not) that will be included in the interval\r\n  const continuousX = getRandomNumber(-3, 3);\r\n  const endpoint1 = getRandomNumber(-7, continuousX - 1);\r\n  const endpoint2 = getRandomNumber(continuousX + 1, 7);\r\n  const b4EP1 = endpoint1 - getRandomNumber(1, 3)\r\n  const bYEP2 = endpoint2 + getRandomNumber(1, 3)\r\n\r\n  // decide if domains will be \r\n  // 1. [(before ep1, ep1)], [(ep1, contX)], [(contX, beyond ep2)]\r\n  // 2. [(before ep1, contX)], [(contX, ep2)], [(ep2, beyond ep2)]\r\n  const firstOrSecond = getRandomNumber(0, 1)\r\n\r\n  // first generate quadratic with all 3 points\r\n  let srF = math.string(fitPointsToQuadraticFractions([\r\n    { x: endpoint1, y: getRandomNumber(1, 6) ** 2 },\r\n    { x: continuousX, y: getRandomNumber(1, 6) ** 2 },\r\n    { x: endpoint2, y: getRandomNumber(1, 6) ** 2 }\r\n  ]))\r\n\r\n  // get coeffs and roots of function\r\n  const coeffs = getCoeffsOfPolynomial(srF)\r\n  let sqRtFunction = coeffs[2] < 0 ? 1 : getRandomWithExclusions(0, 2, [1])\r\n  const roots = getRootsOfPolynomial(srF)\r\n  srF = `sqrt(${srF})`\r\n\r\n  // if 2 real roots, modify root function position (0-2) based on continuousX\r\n  if (!roots[0].includes(\"i\") && !roots[1].includes(\"i\") && Number(roots[0]) !== Number(roots[1])) {\r\n    const rootNumbers = [Number(roots[0]), Number(roots[1])]\r\n    rootNumbers.sort((a, b) => a - b) // sort in ascending order\r\n    sqRtFunction = continuousX < rootNumbers[0] ? 0 : continuousX > rootNumbers[1] ? 2 : 1\r\n  }\r\n\r\n  // generate other function positions\r\n  const ratFunction = getRandomWithExclusions(0, 2, [1, sqRtFunction])\r\n  const lnFunction = getRandomWithExclusions(0, 2, [sqRtFunction, ratFunction])\r\n  const functionTypes = [\"\", \"\", \"\"] // array keeping track of type of 3 functions\r\n  functionTypes[sqRtFunction] = \"root\"\r\n  functionTypes[lnFunction] = \"ln\"\r\n  functionTypes[ratFunction] = \"rat\"\r\n\r\n  let ans = getRandomNumber(0, 2) // correct answer option\r\n\r\n  const firstYAtContX = Math.round(math.evaluate(srF, { x: continuousX })); //srF's yVal\r\n  const secondYAtContX = (ans === 1) ? getRandomWithExclusions(-7, 7, [firstYAtContX]) : firstYAtContX // based on answer determineif f should be continuous at contX\r\n  let defaultEpY: number; // default and other endpoint vals\r\n  let otherEpY: number;\r\n\r\n  const piecewiseFunctions: PiecewiseFunction[] = [] // array to keep track of functions\r\n\r\n  // generate domaing strings and left and right Xs based on firstOrSecond\r\n  const leftXs = [b4EP1]\r\n  const rightXs = []\r\n  const domains = []\r\n  if (firstOrSecond === 0) {\r\n    leftXs.push(endpoint1, continuousX)\r\n    rightXs.push(endpoint1, continuousX)\r\n    domains.push(`${leftXs[0]} < x \\\\leq ${rightXs[0]}`)\r\n    domains.push(`${leftXs[1]} < x \\\\leq ${rightXs[1]}`)\r\n    domains.push(`${leftXs[2]} < x \\\\leq ${bYEP2}`)\r\n  } else {\r\n    leftXs.push(continuousX, endpoint2)\r\n    rightXs.push(continuousX, endpoint2)\r\n    domains.push(`${leftXs[0]} < x \\\\leq ${rightXs[0]}`)\r\n    domains.push(`${leftXs[1]} < x < ${rightXs[1]}`)\r\n    domains.push(`${leftXs[2]} \\\\leq x \\\\leq ${bYEP2}`)\r\n  }\r\n  rightXs.push(bYEP2)\r\n\r\n  // generate xypairs of points that functions should have\r\n  const xYPairs = [[], [], []]\r\n  xYPairs[1][0] = continuousX\r\n  xYPairs[1][1] = secondYAtContX\r\n\r\n  // generate middle function first\r\n  piecewiseFunctions[1] = getFunctionHelper(srF, functionTypes, xYPairs, leftXs, rightXs, domains, 1)\r\n\r\n  // based on answer decide if endoint should be included\r\n  defaultEpY = Math.round(math.evaluate(piecewiseFunctions[1].f,\r\n    { x: firstOrSecond === 0 ? endpoint1 : endpoint2 }))\r\n  otherEpY = (ans === 2) ? getRandomWithExclusions(-7, 7, [defaultEpY]) : defaultEpY\r\n\r\n  // populate xypairs with x-values\r\n  xYPairs[0][0] = rightXs[0]\r\n  xYPairs[2][0] = leftXs[2]\r\n\r\n  // determine y values based on root function position and firstorsecond\r\n  if (firstOrSecond === 1) {\r\n    if (functionTypes[2] === \"root\") {\r\n      xYPairs[0][1] = firstYAtContX\r\n      // corrner case where srF accidentally has same endpoint val\r\n      if ((ans === 0) && Math.round(math.evaluate(srF, { x: endpoint2 })) !== otherEpY) {\r\n        ans = 2\r\n      } else if (ans === 2 && Math.round(math.evaluate(srF, { x: endpoint2 })) === defaultEpY) {\r\n        ans = 0\r\n      }\r\n    } else {\r\n      xYPairs[0][1] = secondYAtContX\r\n      xYPairs[2][1] = otherEpY\r\n    }\r\n  } else {\r\n    if (functionTypes[0] === \"root\") {\r\n      xYPairs[2][1] = firstYAtContX\r\n      // corrner case where srF accidentally has same endpoint val\r\n      if ((ans === 0) && Math.round(math.evaluate(srF, { x: endpoint1 })) !== otherEpY) {\r\n        ans = 2\r\n      } else if (ans === 2 && Math.round(math.evaluate(srF, { x: endpoint1 })) === defaultEpY) {\r\n        ans = 0\r\n      }\r\n    } else {\r\n      xYPairs[0][1] = otherEpY\r\n      xYPairs[2][1] = secondYAtContX\r\n    }\r\n  }\r\n\r\n  // generate other fs based on values computed above\r\n  piecewiseFunctions[0] = getFunctionHelper(srF, functionTypes, xYPairs, leftXs, rightXs, domains, 0)\r\n  piecewiseFunctions[2] = getFunctionHelper(srF, functionTypes, xYPairs, leftXs, rightXs, domains, 2)\r\n\r\n  // convrt everything to latex\r\n  for (let i = 0; i < 3; i++) {\r\n    piecewiseFunctions[i].f = formatPolynomialToLatex(piecewiseFunctions[i].f)\r\n  }\r\n\r\n  const title = <></>\r\n\r\n  const question = <div className=\"flex vertical center medium-gap\">\r\n    <h2>\r\n      Is <Latex expression=\"f(x)\" /> continous on <Latex expression={`[${endpoint1}, ${endpoint2}]`} />?\r\n    </h2>\r\n    <Piecewise classes=\"larger-font\" functions={piecewiseFunctions} title={`f(x)`} />\r\n  </div>\r\n\r\n  const hints: React.JSX.Element[] = [\r\n    <div>\r\n      <div className=\"flex vertical center medium-gap\">\r\n        <div>\r\n          Remember, we have 2 conditions to verify continuity on the closed interval <Latex expression={`[${endpoint1}, ${endpoint2}]`} /> for this function:\r\n        </div>\r\n        <Piecewise functions={piecewiseFunctions} title={`f(x)`} />\r\n      </div>\r\n      <div>\r\n        <ul className=\"text-start\">\r\n          <li>\r\n            <Latex expression=\"f(x)\" /> is continuous on <Latex expression=\"(a, b)\" />\r\n          </li>\r\n          <li>\r\n            <Latex classes=\"bold\" expression={`\\\\lim_{x \\\\to a^{\\\\footnotesize\\\\texttt{+}}} = f(a)`} /> and <Latex classes=\"bold\" expression={`\\\\lim_{x \\\\to b^{\\\\footnotesize\\\\texttt{-}}} = f(b)`} />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>,\r\n    <div>\r\n      <div>\r\n        Let's start with the first condition. First, it is worthwhile noting that at <Latex expression={`x = ${continuousX}`} />, there is a change in functions. Thus, for this condition, 3 things must be verified:\r\n      </div>\r\n      <div>\r\n        <ul className=\"text-start\">\r\n          <li>\r\n            <Latex expression=\"f(x)\" /> is continuous on <Latex expression={`(${endpoint1}, ${continuousX})`} />\r\n          </li>\r\n          <li>\r\n            <Latex expression=\"f(x)\" /> is continuous at <Latex expression={`x = ${continuousX}`} />\r\n          </li>\r\n          <li>\r\n            <Latex expression=\"f(x)\" /> is continuous on <Latex expression={`(${continuousX}, ${endpoint2})`} />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>,\r\n    <div>\r\n      <div>\r\n        For the first and third bullets, use the domains of the functions to determine whether they are continuous on those intervals.\r\n      </div>\r\n      <div>\r\n        For <Latex expression={`x = ${continuousX}`} />, do the process we learned in the last section to determine whether <Latex expression=\"f(x)\" /> is continuous at that point!\r\n      </div>\r\n    </div>,\r\n    <div className=\"flex vertical center medium-gap\">\r\n      <div>\r\n        If this verification fails, you automatically know <Latex expression=\"f(x)\" /> is not continuous on the given interval. If the verification passes, move on to the 2nd condition:\r\n      </div>\r\n      <div>\r\n        <Latex classes=\"bold\" expression={`\\\\lim_{x \\\\to a^{\\\\footnotesize\\\\texttt{+}}} = f(a)`} /> and <Latex classes=\"bold\" expression={`\\\\lim_{x \\\\to b^{\\\\footnotesize\\\\texttt{-}}} = f(b)`} />\r\n      </div>\r\n    </div>,\r\n    <div>\r\n      <div>\r\n        Basically, ensure the respective one-sided limits equal the respective function values. If either of these verifications fail, you know <Latex expression=\"f(x)\" /> is not continous on the interval. However, if both pass, both conditions of continuity on an interval have passed! Therefore, you know <Latex expression=\"f(x)\" /> is continous on the interval.\r\n      </div>\r\n    </div>\r\n  ]\r\n\r\n  const options: Option[] = [\r\n    {\r\n      component: <div>\r\n        Yes, <Latex expression=\"f(x)\" /> is continous on <Latex expression={`[${endpoint1}, ${endpoint2}]`} />.\r\n      </div>,\r\n      correct: ans === 0\r\n    },\r\n    {\r\n      component: <div>\r\n        No, because <Latex expression=\"f(x)\" /> is not continuous at <Latex expression={`x = ${continuousX}`} />, so it is not continous on <Latex expression={`(${endpoint1}, ${endpoint2})`} />.\r\n      </div>,\r\n      correct: ans === 1\r\n    },\r\n    {\r\n      component: <div>\r\n        No, because <Latex expression=\"f(x)\" /> is continuous on <Latex expression={`(${endpoint1}, ${endpoint2})`} />, but <Latex expression={`\\\\lim_{x \\\\to ${endpoint1}^{\\\\footnotesize\\\\texttt{+}}} f(x) \\\\neq f(${endpoint1})`} />.\r\n      </div>,\r\n      correct: ans === 2 && firstOrSecond === 0\r\n    },\r\n    {\r\n      component: <div>\r\n        No, because <Latex expression=\"f(x)\" /> is continuous on <Latex expression={`(${endpoint1}, ${endpoint2})`} />, but <Latex expression={`\\\\lim_{x \\\\to ${endpoint2}^{\\\\footnotesize\\\\texttt{-}}} f(x) \\\\neq f(${endpoint2})`} />.\r\n      </div>,\r\n      correct: ans === 2 && firstOrSecond === 1\r\n    },\r\n  ]\r\n\r\n  return { title, question, type: 'mc', input: options, hints }\r\n\r\n}\r\n\r\nconst getFunctionHelper = (srF: string, functions: string[], xYPairs: Array<number>[],\r\n  leftXs: number[], rightXs: number[], domains: string[], i: number) => {\r\n  let f;\r\n  if (functions[i] === \"root\") {\r\n    f = srF\r\n  } else {\r\n    f = generateFunction(functions[i], xYPairs[i][0], xYPairs[i][1], leftXs[i], rightXs[i])\r\n  }\r\n  return { f, domain: domains[i] }\r\n}\r\n\r\nconst generateFunction = (type: string, x: number, y: number, minValid: number, maxValid: number) => {\r\n  if (type === \"ln\") {\r\n    const node = getPolynomialFunctionWithPoint(getRandomNumber(1, 2), x, y)\r\n    return `log(e^(${node}))`\r\n  } else if (type === \"rat\") {\r\n    const f1 = getStringFactorFromXval(maxValid + getRandomNumber(1, 2))\r\n    const f2 = getStringFactorFromXval(minValid - getRandomNumber(1, 2))\r\n\r\n    const bottomExpression = sortPolynomialByDegree(nerdamer(`${f1}${f2}`).expand());\r\n    const bottom = math.evaluate(bottomExpression, { x })\r\n    const top = bottom * y\r\n\r\n    return `${top}/(${bottomExpression})`\r\n  }\r\n}\r\n\r\nconst generateRandomQuestion = () => {\r\n  return piecewiseQuestion()\r\n}\r\n\r\nexport default generateRandomQuestion\r\n\r\n// if there are 3 functions\r\n// functions will be [(before ep1, ep1)], [(ep1, contX)], [(contX, beyond ep2)]\r\n// or [(before ep1, contX)], [(contX, ep2)], [(ep2, beyond ep2)]\r\n\r\n// if there are 2 functions\r\n// functions will be [(endpoint1, continuousX)] and the other one will be [(continousX, endpoint2)]\r\n// functions may or may not be continous at endpoint1 and endpoint2\r\n\r\n// question: is f(x) continuous on [(endpoint1, endpoint2)]\r\n\r\n// answer format\r\n// Yes (ans = 0)\r\n// No, because f(x) is not continuous at continousX, so it is not continous on (endpoint1, endpoint2) (ans = 1)\r\n// No, because f(x) is continuous on (endpoint1, endpoint2), but lim_{x \\\\to endpoint1^+} \\\\neq f(endpoint1) (ans = 2)\r\n// IF [endpoint1, endpoint2]:\r\n// No, because f(x) is continuous on (endpoint1, endpoint2), but lim_{x \\\\to endpoint2^-} \\\\neq f(endpoint2) (ans = 3)\r\n// ELSE IF ONLY 1 []\r\n// No, because lim_{x \\\\to endpoint2^+} \\\\neq f(endpoint2) (lim from diff side) (ans = 3)\r\n"],"names":["Piecewise","_ref","title","functions","display","classes","_useState","useState","_useState2","_slicedToArray","expression","setExpression","useEffect","e","i","length","f","domain","_jsx","_Fragment","children","Latex","concat","nerdamer","require","getFunctionHelper","srF","xYPairs","leftXs","rightXs","domains","generateFunction","type","x","y","minValid","maxValid","node","getPolynomialFunctionWithPoint","getRandomNumber","f1","getStringFactorFromXval","f2","bottomExpression","sortPolynomialByDegree","expand","bottom","math","continuousX","endpoint1","endpoint2","b4EP1","bYEP2","firstOrSecond","fitPointsToQuadraticFractions","Math","pow","sqRtFunction","getCoeffsOfPolynomial","getRandomWithExclusions","roots","getRootsOfPolynomial","includes","Number","rootNumbers","sort","a","b","ratFunction","lnFunction","functionTypes","defaultEpY","otherEpY","ans","firstYAtContX","round","secondYAtContX","piecewiseFunctions","push","formatPolynomialToLatex","question","_jsxs","className","hints","input","component","correct","piecewiseQuestion"],"sourceRoot":""}