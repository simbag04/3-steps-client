"use strict";(self.webpackChunklearn_and_run=self.webpackChunklearn_and_run||[]).push([[400],{21878:(e,t,n)=>{n.d(t,{H:()=>o});var s=n(72791),i=n(32378),c=n(80184);const o=e=>{let{title:t,functions:n,display:o,classes:a}=e;const[r,l]=(0,s.useState)("");return(0,s.useEffect)((()=>{if(n){let e="\\begin{cases}";for(let t=0;t<n.length;t++)e=e+n[t].f+"&",e+=n[t].domain,t!==n.length-1&&(e+="\\\\\\\\");e+="\\end{cases}",l(e)}}),[n]),(0,c.jsx)(c.Fragment,{children:(0,c.jsx)(i.Z,{classes:a||"",expression:"".concat(t?"".concat(t," = "):""," ").concat(r),display:o})})}},43400:(e,t,n)=>{n.r(t),n.d(t,{default:()=>h});var s=n(48654),i=n(15041),c=n(1735),o=n(32378),a=n(21878),r=(n(72791),n(59959)),l=n(80184);const x=n(62005),h=()=>{let e=null;return e=(0,i.xT)(1,10)<=6?(()=>{const e=(0,l.jsx)(l.Fragment,{}),t=[],n=[],x=(0,i.lx)(2,!0,-3,2);let h=[(0,i.xT)(-7,7),(0,i.xT)(-7,7)],d=(0,i.xT)(0,1);for(let o=0;o<=x.length;o++){let e,a,r,l;if(0===o)e="x ".concat(d?"\\leq":"<"," ").concat(x[o]),r=x[o],l=h[o];else if(o===x.length)e="x ".concat(d?">":"\\geq"," ").concat(x[o-1]),r=x[o-1],l=h[o-1];else{e="".concat(x[o-1]," ").concat(d?"<":"\\leq"," x"),d=(0,i.xT)(0,1),e+=" ".concat(d?"\\leq":"<"," ").concat(x[o]);const t=(0,i.xT)(0,1)?o-1:o;r=x[t],l=h[t]}let u=Math.abs(r)>2?1:(0,i.xT)(1,2);a=(0,s.X2)(u,r,(0,i.xT)(0,1)?l:(0,i.xT)(-7,7));const j=c.Qc(a);n.push((e=>j.evaluate({x:e}))),a=c.NC(a).toTex({parenthesis:"auto"}).replaceAll("\\cdot",""),t.push({f:a,domain:e})}const u=(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)("div",{className:"flex vertical center",children:[(0,l.jsx)("h2",{children:"Evaluate the limit."}),(0,l.jsx)("div",{children:'Enter "dne" if the limit doesn\'t exist.'})]}),(0,l.jsx)(a.H,{functions:t,title:"f(x)"})]}),j=(0,i.xT)(0,2),f=x[(0,i.xT)(0,x.length-1)];let p;const m=[];for(let s=0;s<x.length;s++)if(f===x[s]){let e=Math.round(n[s](f)),i=Math.round(n[s+1](f));0===j?(p=e,m.push({f:t[s].f,value:e})):1===j?(p=i,m.push({f:t[s+1].f,value:i})):(p=e===i?e:"dne",m.push({f:t[s].f,value:e}),m.push({f:t[s+1].f,value:i}))}const v=0===j?"^{\\footnotesize\\texttt{-}}":1===j?"^{\\footnotesize\\texttt{+}}":"",g=(0,l.jsxs)("span",{children:[(0,l.jsx)(o.Z,{classes:"bold",expression:"\\lim_{x \\to ".concat(f+v,"}g(x)"),inline:!0})," ="]}),w=[(0,l.jsx)(l.Fragment,{children:(0,l.jsxs)("div",{children:["In this case, we want to evaluate the limit as ",(0,l.jsx)(o.Z,{expression:"x"})," approaches ",(0,l.jsx)(o.Z,{expression:"".concat(f)})," from ",2===j?(0,l.jsx)("strong",{children:"both sides"}):1===j?(0,l.jsxs)(l.Fragment,{children:["the ",(0,l.jsx)("strong",{children:"right"})]}):(0,l.jsxs)(l.Fragment,{children:["the ",(0,l.jsx)("strong",{children:"left"})]}),". Focus on the functions around ",(0,l.jsx)(o.Z,{expression:"x = ".concat(f)}),"."]})})];return 2===j?w.push((0,l.jsxs)("div",{children:["Since we want to evaluate the limit from both sides, we need to look at the limits from both the left and the right of ",(0,l.jsx)(o.Z,{expression:"x = ".concat(f)}),"."]}),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)("div",{children:"Evaluating from the left, you should get:"}),(0,l.jsx)("div",{children:(0,l.jsx)(o.Z,{expression:"\\lim_{x \\to ".concat(f).concat(r.G9,"} f(x) = \\lim_{x \\to ").concat(f).concat(r.G9,"} ").concat(m[0].f," = ").concat(m[0].value),display:!0})}),(0,l.jsx)("div",{children:"Evaluating from the right, you should get:"}),(0,l.jsx)("div",{children:(0,l.jsx)(o.Z,{expression:"\\lim_{x \\to ".concat(f).concat(r.md,"} f(x) = \\lim_{x \\to ").concat(f).concat(r.md,"} ").concat(m[1].f," = ").concat(m[1].value),display:!0})})]}),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)("div",{children:["Since these limits are ","dne"===p?"not":""," equal, we know the correct answer is:"]}),(0,l.jsx)("div",{className:"hint-ans input correct ans",children:p})]})):w.push((0,l.jsxs)("div",{children:["Since we want to evaluate the limit from the ",(0,l.jsx)("strong",{children:0===j?"left":"right"})," of ",(0,l.jsx)(o.Z,{expression:"x = ".concat(f)}),", we should use the function ",(0,l.jsx)(o.Z,{expression:m[0].f}),"."]}),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)("div",{children:"Evaluating the limit, we get:"}),(0,l.jsx)("div",{children:(0,l.jsx)(o.Z,{expression:"\\lim_{x \\to ".concat(f).concat(0===j?r.G9:r.md,"} f(x) = \\lim_{x \\to ").concat(f).concat(0===j?r.G9:r.md,"} ").concat(m[0].f," = ").concat(m[0].value),display:!0})})]}),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)("div",{children:"Thus, the correct answer is:"}),(0,l.jsx)("div",{className:"hint-ans input correct ans",children:p})]})),{title:e,question:u,ans:p,type:"math",nextToInput:g,hints:w}})():(()=>{const e=(0,l.jsx)(l.Fragment,{}),t=(0,i.xT)(-7,7),n=[t,(0,i.iP)(-7,7,[t])];n.sort(((e,t)=>e-t));const s=(0,i.M2)(n[0]),c=(0,i.M2)(n[1]),r=(0,i.xT)(0,1);let h=(0,i.fZ)(x("".concat(s).concat(c)).expand());h=x(h).toTeX().replaceAll("\\cdot","");let d=(0,i.fZ)(x("-".concat(s).concat(c)).expand());d=x(d).toTeX().replaceAll("\\cdot","");const u=(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)("h3",{children:"Select the piecewise function corresponding to this absolute value function: "}),(0,l.jsx)(o.Z,{expression:"g(x) = |".concat(r?d:h,"|"),classes:"large-font"})]}),j=[{f:h,domain:"x \\leq ".concat(n[0])},{f:d,domain:"".concat(n[0]," < x < ").concat(n[1])},{f:h,domain:"x \\geq ".concat(n[1])}],f=[{f:d,domain:"x \\leq ".concat(n[0])},{f:h,domain:"".concat(n[0]," < x < ").concat(n[1])},{f:d,domain:"x \\geq ".concat(n[1])}],p=[{f:h,domain:"x \\leq 0"},{f:d,domain:"x > 0"}],m=[{component:(0,l.jsx)(a.H,{functions:j,title:"g(x)"}),correct:!0},{component:(0,l.jsx)(a.H,{functions:f,title:"g(x)"}),correct:!1},{component:(0,l.jsx)(a.H,{functions:p,title:"g(x)"}),correct:!1}],v=[(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)("div",{children:["In order to convert an absolute value function to a piecewise function, the first thing we have to do is find where the function inside is ",(0,l.jsx)(o.Z,{expression:">"})," or ",(0,l.jsx)(o.Z,{expression:"<"})," 0."]}),(0,l.jsx)("div",{children:"In this case, we have a quadratic equation inside the absolute value. In order to find where this is above or below 0, first find its zeros."})]}),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)("div",{children:["You should've found that the zeros are ",(0,l.jsx)(o.Z,{expression:"x = ".concat(n[0])})," and ",(0,l.jsx)(o.Z,{expression:"x = ".concat(n[1])}),"."]}),(0,l.jsx)("div",{children:"Now, think about whether the parabola is right side up or upside down."})]}),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)("div",{children:["Since the coefficient of the ",(0,l.jsx)(o.Z,{expression:"x^2"})," term is ",r?"negative":"positive",", we know the parabola is ",r?"upside down":"right side up","."]}),(0,l.jsxs)("div",{children:["This means that when ",(0,l.jsx)(o.Z,{expression:"x < ".concat(n[0])})," and ",(0,l.jsx)(o.Z,{expression:"x > ".concat(n[1])}),", the quadratic is ",r?"negative":"positive",". When ",(0,l.jsx)(o.Z,{expression:"".concat(n[0]," < x < ").concat(n[1])}),", the quadratic is ",r?"positive":"negative","."]})]}),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)("div",{children:["We can use this to create our piecewise function. Absolute value basically means that negative values are made positive. Thus, wherever our quadratic is negative, for that domain only, we will multiply the quadratic by ",(0,l.jsx)(o.Z,{expression:"-1"}),"."]}),(0,l.jsxs)("div",{children:["Basically, when ",r?(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(o.Z,{expression:"x < ".concat(n[0])})," and ",(0,l.jsx)(o.Z,{expression:"x > ".concat(n[1])})]}):(0,l.jsx)(o.Z,{expression:"".concat(n[0]," < x < ").concat(n[1])}),", our piecewise function will be ",(0,l.jsx)(o.Z,{expression:"".concat(r?h:d)}),"."]}),(0,l.jsxs)("div",{children:["Otherwise, when ",r?(0,l.jsx)(o.Z,{expression:"".concat(n[0]," < x < ").concat(n[1])}):(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(o.Z,{expression:"x < ".concat(n[0])})," and ",(0,l.jsx)(o.Z,{expression:"x > ".concat(n[1])})]})," it will be ",(0,l.jsx)(o.Z,{expression:"".concat(r?d:h)}),"."]})]}),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)("div",{children:"This means that the correct answer is:"}),(0,l.jsx)("div",{className:"hint-ans input correct ans",children:m[0].component})]})];return{title:e,question:u,type:"mc",input:(0,i.Sy)(m),hints:v}})(),e}}}]);
//# sourceMappingURL=400.6e5d67da.chunk.js.map