"use strict";(self.webpackChunklearn_and_run=self.webpackChunklearn_and_run||[]).push([[520],{1878:function(e,t,n){n.d(t,{H:function(){return x}});var s=n(9439),o=n(2791),i=n(3522),c=n(184),x=function(e){var t=e.title,n=e.functions,x=e.display,a=(0,o.useState)(""),r=(0,s.Z)(a,2),l=r[0],d=r[1];return(0,o.useEffect)((function(){if(n){for(var e="\\begin{cases}",t=0;t<n.length;t++)e=e+n[t].f+"&",e+=n[t].domain,t!==n.length-1&&(e+="\\\\");d(e+="\\end{cases}")}}),[n]),(0,c.jsx)(c.Fragment,{children:(0,c.jsx)(i.Z,{expression:"".concat(t?"".concat(t," = "):""," ").concat(l),display:x})})}},1520:function(e,t,n){n.r(t);n(2791);var s=n(5041),o=n(8729),i=n(7198),c=n(1878),x=n(3522),a=n(184);t.default=function(){return function(){for(var e=[],t=[],n=(0,s.xT)(0,10)<=6?1:2,r=(0,s.lx)(n,!0,-3,2),l=[],d=(0,s.xT)(0,r.length-1),f=r[d],u=0;u<n;u++)l.push((0,s.xT)(-7,7));for(var h=1===n&&(0,s.xT)(0,10)<=6,p=h?(0,s.xT)(0,2):(0,s.xT)(0,1),m=0===d&&h?0:(0,s.xT)(0,1),j=function(){var n,c,x,a;v-1===d&&h&&(e.push({f:String(2!==p?l[d]:(0,s.iP)(-7,7,[l[d]])),domain:"x = ".concat(f)}),m=1),0===v?(n="x ".concat(m?"\\leq":"<"," ").concat(r[v]),x=r[v],a=l[v]):v===r.length?(n="x ".concat(m?">":"\\geq"," ").concat(r[v-1]),x=r[v-1],a=1===p&&d===v-1?(0,s.iP)(-7,7,[l[v-1]]):l[v-1]):(n="".concat(r[v-1]," ").concat(m?"<":"\\leq"," x"),m=d===v&&h?0:(0,s.xT)(0,1),n+=" ".concat(m?"\\leq":"<"," ").concat(r[v]),x=r[d],a=1===p?(0,s.iP)(-7,7,[l[d]]):l[d]);var u=Math.abs(x)>2?1:(0,s.xT)(1,2);c=(0,i.X2)(u,x,a);var j=o.Qc(c);t.push((function(e){return j.evaluate({x:e})})),c=o.NC(c).toTex({parenthesis:"auto"}).replaceAll("\\cdot",""),e.push({f:c,domain:n})},v=0;v<=r.length;v++)j();var b=(0,a.jsx)(c.H,{functions:e,title:"f(x)"}),_=(0,a.jsx)("div",{className:"flex vertical center",children:(0,a.jsxs)("h2",{children:["Is the function continuous at ",(0,a.jsx)(x.Z,{expression:"x = ".concat(f)}),"?"]})}),Z=[{component:(0,a.jsxs)("div",{children:["Yes, because ",(0,a.jsx)(x.Z,{expression:"\\lim_{x \\to ".concat(f,"^{\\footnotesize\\texttt{+}}} f(x) = \\lim_{x \\to ").concat(f,"^{\\footnotesize\\texttt{-}}} f(x)")})," and ",(0,a.jsx)(x.Z,{expression:"\\lim_{x \\to ".concat(f,"} f(x) = f(").concat(f,")")})]}),correct:0===p},{component:(0,a.jsxs)("div",{children:["Yes, because ",(0,a.jsx)(x.Z,{expression:"\\lim_{x \\to ".concat(f,"} f(x)")})," exists."]}),correct:!1},{component:(0,a.jsxs)("div",{children:["No, because ",(0,a.jsx)(x.Z,{expression:"\\lim_{x \\to ".concat(f,"} f(x) ")})," does not exist."]}),correct:1===p},{component:(0,a.jsxs)("div",{children:["No, because ",(0,a.jsx)(x.Z,{expression:"\\lim_{x \\to ".concat(f,"} f(x) ")})," exists, but ",(0,a.jsx)(x.Z,{expression:"\\lim_{x \\to ".concat(f,"} f(x) \\neq f(").concat(f,")")}),"."]}),correct:2===p}],g=[(0,a.jsxs)("div",{children:[(0,a.jsxs)("div",{className:"flex vertical center medium-gap",children:["Remember, we have 2 conditions to check for continuity for this function:",(0,a.jsx)(c.H,{functions:e,title:"f(x)",display:!0})]}),(0,a.jsx)("div",{children:(0,a.jsxs)("ul",{className:"text-start",children:[(0,a.jsxs)("li",{children:[(0,a.jsx)(x.Z,{classes:"bold",expression:"\\lim_{x \\to a} f(x)"})," must ",(0,a.jsx)("strong",{children:"exist"})]}),(0,a.jsx)("li",{children:(0,a.jsx)(x.Z,{classes:"bold",expression:"\\lim_{x \\to a} f(x) = f(a)",display:!0})})]})})]}),(0,a.jsxs)("div",{children:["How can we determine if ",(0,a.jsx)(x.Z,{classes:"bold",expression:"\\lim_{x \\to ".concat(f,"} f(x)")})," ",(0,a.jsx)("strong",{children:"exists"}),"?"]}),(0,a.jsxs)("div",{children:["Since ",(0,a.jsx)(x.Z,{expression:"f(x)"})," is a piecewise function, in order for the limit to exist, we can first check that ",(0,a.jsx)(x.Z,{classes:"bold",expression:"\\lim_{x \\to ".concat(f,"^{\\footnotesize\\texttt{-}}} f(x) = \\lim_{x \\to ").concat(f,"^{\\footnotesize\\texttt{+}}} f(x)")}),". Start by confirming that this is true."]})];return 1===p?g.push((0,a.jsx)("div",{children:"If these limits did not equal each other, then we automatically know the function isn't continuous!"})):(g.push((0,a.jsxs)("div",{children:["Once you have confirmed that these limits do equal each other, we can move on to the second condition: does ",(0,a.jsx)(x.Z,{classes:"bold",expression:"\\lim_{x \\to ".concat(f,"} f(x) = f(").concat(f,")")}),"?"]})),g.push((0,a.jsxs)("div",{children:["If yes, we know the function is continuous at ",(0,a.jsx)(x.Z,{expression:"x = ".concat(f)})," as both conditions have been satisfied. If not, the function isn't continuous as the second condition isn't satisfied."]}))),{title:_,question:b,input:Z,type:"mc",hints:g}}()}}}]);
//# sourceMappingURL=520.fe0319bf.chunk.js.map