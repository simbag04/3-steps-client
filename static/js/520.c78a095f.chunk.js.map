{"version":3,"file":"static/js/520.c78a095f.chunk.js","mappings":"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","sources":["components/latex/Piecewise.tsx","topics/01-limits/10-defining-continuity-at-a-point/generate-question.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Latex from \"./Latex\";\r\nimport { PiecewiseFunction } from \"../../types/PiecewiseFunction\";\r\n\r\ninterface PiecewiseProps {\r\n  title: string,\r\n  functions: PiecewiseFunction[],\r\n  display?: string | boolean,\r\n  classes?: string\r\n}\r\n\r\nexport const Piecewise: React.FC<PiecewiseProps> = ({ title, functions, display, classes }) => {\r\n  const [expression, setExpression] = useState(``);\r\n  useEffect(() => {\r\n    if (functions) {\r\n      let e = `\\\\begin{cases}`;\r\n      for (let i = 0; i < functions.length; i++) {\r\n        e = e + functions[i].f + \"&\";\r\n        e = e + functions[i].domain;\r\n        if (i !== functions.length - 1) {\r\n          e = e + \"\\\\\\\\\"\r\n        }\r\n      }\r\n      e = e + \"\\\\end{cases}\"\r\n      setExpression(e)\r\n    }\r\n  },[functions])\r\n  \r\n  return (\r\n    <>\r\n      <Latex classes={classes ? classes : \"\"} expression={`${title ? `${title} = ` : ''} ${expression}`} display={display} />\r\n    </>\r\n  )\r\n}","import { Question } from \"../../../types/Question\";\r\nimport React from \"react\";\r\nimport { PiecewiseFunction } from \"../../../types/PiecewiseFunction\";\r\nimport { generateOrderedValues, getRandomNumber, getRandomWithExclusions } from \"../../../helpers/functions\";\r\nimport * as math from 'mathjs'\r\nimport { getPolynomialFunctionWithPoint } from \"../../../helpers/expression-generators\";\r\nimport { Piecewise } from \"../../../components/latex/Piecewise\";\r\nimport Latex from \"../../../components/latex/Latex\";\r\nimport { Option } from \"../../../types/Option\";\r\n\r\nconst piecewiseToLimit = (): Question => {\r\n  const functions: PiecewiseFunction[] = []; // array for piecewise\r\n  const mathFs = []; // array of mathjs functions\r\n  const numFunctions = getRandomNumber(0, 10) <= 6 ? 1 : 2\r\n  const xValues = generateOrderedValues(numFunctions, true, -3, 2); // random xvalues\r\n\r\n  let yValues = []; // array for random y values\r\n\r\n  const xIndex = getRandomNumber(0, xValues.length - 1); // index of x val to ask about \r\n  const x = xValues[xIndex] // actual x val to ask about\r\n\r\n  // generate y values\r\n  for (let i = 0; i < numFunctions; i++) {\r\n    yValues.push(getRandomNumber(-7, 7))\r\n  }\r\n\r\n  // whether there is a separate value at the function\r\n  const separateFunctionVal = (numFunctions === 1) ? getRandomNumber(0, 10) <= 6 : false\r\n  // 0: continuous at x, 1: limits not equal, 2: limits equal but f value diff\r\n  const continuous = separateFunctionVal ? getRandomNumber(0, 2) : getRandomNumber(0, 1)\r\n  let includes = xIndex === 0 && separateFunctionVal ? 0 : getRandomNumber(0, 1); // whether current xval is included in domain - don't include if there is a separate function value\r\n\r\n  // generate functions\r\n  for (let i = 0; i <= xValues.length; i++) {\r\n    // figure out domain of values and functions\r\n    let domain: string; // latex domain\r\n    let f: string; // function for domain\r\n    let xVal: number; // xval to have point at\r\n    let yVal: number; // yval to have point at\r\n\r\n    // add number at function\r\n    if (i - 1 === xIndex && separateFunctionVal) {\r\n      functions.push({ f: continuous !== 2 ? String(yValues[xIndex]) : String(getRandomWithExclusions(-7, 7, [yValues[xIndex]])), domain: `x = ${x}` })\r\n      includes = 1 // don't include xval in next function\r\n    }\r\n\r\n    if (i === 0) {\r\n      domain = `x ${includes ? \"\\\\leq\" : \"<\"} ${xValues[i]}`\r\n      xVal = xValues[i];\r\n      yVal = yValues[i];\r\n    } else if (i === xValues.length) {\r\n      domain = `x ${includes ? \">\" : \"\\\\geq\"} ${xValues[i - 1]}`\r\n      xVal = xValues[i - 1];\r\n      yVal = (continuous === 1 && xIndex === i - 1) ? getRandomWithExclusions(-7, 7, [yValues[i - 1]]) : yValues[i - 1] // decide whether yVal will be different or the same for continuity\r\n    } else {\r\n      // 2-sided domain\r\n      domain = `${xValues[i - 1]} ${includes ? \"<\" : \"\\\\leq\"} x`;\r\n      includes = xIndex === i && separateFunctionVal ? 0 : getRandomNumber(0, 1);\r\n      domain = domain + ` ${includes ? \"\\\\leq\" : \"<\"} ${xValues[i]}`\r\n\r\n      xVal = xValues[xIndex];\r\n\r\n      // decide whether yVal will be different or the same for continuity\r\n      yVal = continuous === 1 ? getRandomWithExclusions(-7, 7, [yValues[xIndex]]) : yValues[xIndex];\r\n    }\r\n\r\n    // generate function\r\n    let degree = Math.abs(xVal) > 2 ? 1 : getRandomNumber(1, 2); // only do degree 2 for small x\r\n    f = getPolynomialFunctionWithPoint(degree, xVal, yVal);\r\n\r\n    // store function to evaluate f\r\n    const node = math.parse(f);\r\n    mathFs.push((x: number) => node.evaluate({ x }));\r\n\r\n    // format f\r\n    f = math.simplifyCore(f).toTex({ parenthesis: 'auto' }).replaceAll('\\\\cdot', \"\");\r\n    functions.push({ f, domain });\r\n  }\r\n\r\n  const question = <Piecewise functions={functions} title={`f(x)`} />\r\n\r\n  // find answer\r\n  const title: React.JSX.Element = <div className=\"flex vertical center\">\r\n    <h2>Is the function continuous at <Latex expression={`x = ${x}`} />?</h2>\r\n  </div>\r\n\r\n  const options: Option[] = [\r\n    {\r\n      component: <div>\r\n        Yes, because <Latex expression={`\\\\lim_{x \\\\to ${x}^{\\\\footnotesize\\\\texttt{+}}} f(x) = \\\\lim_{x \\\\to ${x}^{\\\\footnotesize\\\\texttt{-}}} f(x)`} /> and <Latex expression={`\\\\lim_{x \\\\to ${x}} f(x) = f(${x})`} />\r\n      </div>,\r\n      correct: continuous === 0\r\n    },\r\n    {\r\n      component: <div>\r\n        Yes, because <Latex expression={`\\\\lim_{x \\\\to ${x}} f(x)`} /> exists.\r\n      </div>,\r\n      correct: false\r\n    },\r\n    {\r\n      component: <div>\r\n        No, because <Latex expression={`\\\\lim_{x \\\\to ${x}} f(x) `} /> does not exist.\r\n      </div>,\r\n      correct: continuous === 1\r\n    },\r\n    {\r\n      component: <div>\r\n        No, because <Latex expression={`\\\\lim_{x \\\\to ${x}} f(x) `} /> exists, but <Latex expression={`\\\\lim_{x \\\\to ${x}} f(x) \\\\neq f(${x})`} />.\r\n      </div>,\r\n      correct: continuous === 2\r\n    },\r\n  ]\r\n  \r\n  const hints = [\r\n    <div>\r\n      <div className=\"flex vertical center medium-gap\">\r\n        Remember, we have 2 conditions to check for continuity for this function:\r\n        <Piecewise functions={functions} title={`f(x)`} display={true} />\r\n      </div>\r\n      <div>\r\n        <ul className=\"text-start\">\r\n          <li>\r\n            <Latex classes=\"bold\" expression={`\\\\lim_{x \\\\to a} f(x)`} /> must <strong>exist</strong>\r\n          </li>\r\n          <li>\r\n            <Latex classes=\"bold\" expression={`\\\\lim_{x \\\\to a} f(x) = f(a)`} display={true} />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>,\r\n    <div>\r\n      How can we determine if <Latex classes=\"bold\" expression={`\\\\lim_{x \\\\to ${x}} f(x)`} /> <strong>exists</strong>?\r\n    </div>,\r\n    <div>\r\n      Since <Latex expression=\"f(x)\" /> is a piecewise function, in order for the limit to exist, we can first check that <Latex classes=\"bold\" expression={`\\\\lim_{x \\\\to ${x}^{\\\\footnotesize\\\\texttt{-}}} f(x) = \\\\lim_{x \\\\to ${x}^{\\\\footnotesize\\\\texttt{+}}} f(x)`} />. Start by confirming that this is true.\r\n    </div>,\r\n\r\n  ]\r\n\r\n  if (continuous === 1) {\r\n    hints.push(<div>\r\n      If these limits did not equal each other, then we automatically know the function isn't continuous!\r\n    </div>)\r\n  } else {\r\n    hints.push(<div>\r\n      Once you have confirmed that these limits do equal each other, we can move on to the second condition: does <Latex classes=\"bold\" expression={`\\\\lim_{x \\\\to ${x}} f(x) = f(${x})`} />?\r\n    </div>)\r\n    hints.push(<div>\r\n      If yes, we know the function is continuous at <Latex expression={`x = ${x}`} /> as both conditions have been satisfied. If not, the function isn't continuous as the second condition isn't satisfied.\r\n    </div>)\r\n  }\r\n\r\n  return { title, question, input: options, type: 'mc', hints }\r\n}\r\n\r\nconst generateRandomQuestion = (): Question => {\r\n  return piecewiseToLimit()\r\n}\r\n\r\nexport default generateRandomQuestion"],"names":["Piecewise","_ref","title","functions","display","classes","_useState","useState","_useState2","_slicedToArray","expression","setExpression","useEffect","e","i","length","f","domain","_jsx","_Fragment","children","Latex","concat","mathFs","numFunctions","getRandomNumber","xValues","generateOrderedValues","yValues","xIndex","x","push","separateFunctionVal","continuous","includes","_loop","xVal","yVal","String","getRandomWithExclusions","degree","Math","abs","getPolynomialFunctionWithPoint","node","math","evaluate","toTex","parenthesis","replaceAll","question","className","_jsxs","options","component","correct","hints","input","type","piecewiseToLimit"],"sourceRoot":""}