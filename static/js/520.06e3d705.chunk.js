"use strict";(self.webpackChunklearn_and_run=self.webpackChunklearn_and_run||[]).push([[520],{21878:(e,t,s)=>{s.d(t,{H:()=>i});var n=s(72791),o=s(32378),c=s(80184);const i=e=>{let{title:t,functions:s,display:i,classes:x}=e;const[a,l]=(0,n.useState)("");return(0,n.useEffect)((()=>{if(s){let e="\\begin{cases}";for(let t=0;t<s.length;t++)e=e+s[t].f+"&",e+=s[t].domain,t!==s.length-1&&(e+="\\\\\\\\");e+="\\end{cases}",l(e)}}),[s]),(0,c.jsx)(c.Fragment,{children:(0,c.jsx)(o.Z,{classes:x||"",expression:"".concat(t?"".concat(t," = "):""," ").concat(a),display:i})})}},11520:(e,t,s)=>{s.r(t),s.d(t,{default:()=>l});s(72791);var n=s(15041),o=s(1735),c=s(57198),i=s(21878),x=s(32378),a=s(80184);const l=()=>(()=>{const e=[],t=[],s=(0,n.xT)(0,10)<=6?1:2,l=(0,n.lx)(s,!0,-3,2);let r=[];const d=(0,n.xT)(0,l.length-1),h=l[d];for(let o=0;o<s;o++)r.push((0,n.xT)(-7,7));const f=1===s&&(0,n.xT)(0,10)<=6,u=f?(0,n.xT)(0,2):(0,n.xT)(0,1);let m=0===d&&f?0:(0,n.xT)(0,1);for(let i=0;i<=l.length;i++){let s,x,a,p;i-1===d&&f&&(e.push({f:String(2!==u?r[d]:(0,n.iP)(-7,7,[r[d]])),domain:"x = ".concat(h)}),m=1),0===i?(s="x ".concat(m?"\\leq":"<"," ").concat(l[i]),a=l[i],p=r[i]):i===l.length?(s="x ".concat(m?">":"\\geq"," ").concat(l[i-1]),a=l[i-1],p=1===u&&d===i-1?(0,n.iP)(-7,7,[r[i-1]]):r[i-1]):(s="".concat(l[i-1]," ").concat(m?"<":"\\leq"," x"),m=d===i&&f?0:(0,n.xT)(0,1),s+=" ".concat(m?"\\leq":"<"," ").concat(l[i]),a=l[d],p=1===u?(0,n.iP)(-7,7,[r[d]]):r[d]);let j=Math.abs(a)>2?1:(0,n.xT)(1,2);x=(0,c.X2)(j,a,p);const v=o.Qc(x);t.push((e=>v.evaluate({x:e}))),x=o.NC(x).toTex({parenthesis:"auto"}).replaceAll("\\cdot",""),e.push({f:x,domain:s})}const p=(0,a.jsxs)("div",{className:"flex vertical center medium-gap",children:[(0,a.jsxs)("h3",{children:["Is the function continuous at ",(0,a.jsx)(x.Z,{expression:"x = ".concat(h)}),"?"]}),(0,a.jsx)(i.H,{functions:e,title:"f(x)"})]}),j=(0,a.jsx)(a.Fragment,{}),v=[{component:(0,a.jsxs)("div",{children:["Yes, because ",(0,a.jsx)(x.Z,{expression:"\\lim_{x \\to ".concat(h,"^{\\footnotesize\\texttt{+}}} f(x) = \\lim_{x \\to ").concat(h,"^{\\footnotesize\\texttt{-}}} f(x)")})," and ",(0,a.jsx)(x.Z,{expression:"\\lim_{x \\to ".concat(h,"} f(x) = f(").concat(h,")")})]}),correct:0===u},{component:(0,a.jsxs)("div",{children:["Yes, because ",(0,a.jsx)(x.Z,{expression:"\\lim_{x \\to ".concat(h,"} f(x)")})," exists."]}),correct:!1},{component:(0,a.jsxs)("div",{children:["No, because ",(0,a.jsx)(x.Z,{expression:"\\lim_{x \\to ".concat(h,"} f(x) ")})," does not exist."]}),correct:1===u},{component:(0,a.jsxs)("div",{children:["No, because ",(0,a.jsx)(x.Z,{expression:"\\lim_{x \\to ".concat(h,"} f(x) ")})," exists, but ",(0,a.jsx)(x.Z,{expression:"\\lim_{x \\to ".concat(h,"} f(x) \\neq f(").concat(h,")")}),"."]}),correct:2===u}],b=[(0,a.jsxs)("div",{children:[(0,a.jsxs)("div",{className:"flex vertical center medium-gap",children:["Remember, we have 2 conditions to check for continuity for this function:",(0,a.jsx)(i.H,{functions:e,title:"f(x)",display:!0})]}),(0,a.jsx)("div",{children:(0,a.jsxs)("ul",{className:"text-start",children:[(0,a.jsxs)("li",{children:[(0,a.jsx)(x.Z,{classes:"bold",expression:"\\lim_{x \\to a} f(x)"})," must ",(0,a.jsx)("strong",{children:"exist"})]}),(0,a.jsx)("li",{children:(0,a.jsx)(x.Z,{classes:"bold",expression:"\\lim_{x \\to a} f(x) = f(a)",display:!0})})]})})]}),(0,a.jsxs)("div",{children:["How can we determine if ",(0,a.jsx)(x.Z,{classes:"bold",expression:"\\lim_{x \\to ".concat(h,"} f(x)")})," ",(0,a.jsx)("strong",{children:"exists"}),"?"]}),(0,a.jsxs)("div",{children:["Since ",(0,a.jsx)(x.Z,{expression:"f(x)"})," is a piecewise function, in order for the limit to exist, we can first check that ",(0,a.jsx)(x.Z,{classes:"bold",expression:"\\lim_{x \\to ".concat(h,"^{\\footnotesize\\texttt{-}}} f(x) = \\lim_{x \\to ").concat(h,"^{\\footnotesize\\texttt{+}}} f(x)")}),". Start by confirming that this is true."]})];return 1===u?b.push((0,a.jsx)("div",{children:"If these limits did not equal each other, then we automatically know the function isn't continuous!"})):(b.push((0,a.jsxs)("div",{children:["Once you have confirmed that these limits do equal each other, we can move on to the second condition: does ",(0,a.jsx)(x.Z,{classes:"bold",expression:"\\lim_{x \\to ".concat(h,"} f(x) = f(").concat(h,")")}),"?"]})),b.push((0,a.jsxs)("div",{children:["If yes, we know the function is continuous at ",(0,a.jsx)(x.Z,{expression:"x = ".concat(h)})," as both conditions have been satisfied. If not, the function isn't continuous as the second condition isn't satisfied."]}))),{title:j,question:p,input:v,type:"mc",hints:b}})()}}]);
//# sourceMappingURL=520.06e3d705.chunk.js.map