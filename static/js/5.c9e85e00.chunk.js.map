{"version":3,"file":"static/js/5.c9e85e00.chunk.js","mappings":"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,IAAIjzB,EAAE,CAAC,EAAEyI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK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","sources":["../node_modules/nerdamer/Algebra.js","../node_modules/nerdamer/Calculus.js","../node_modules/nerdamer/all.min.js","../node_modules/nerdamer/nerdamer.core.js"],"sourcesContent":["/*\r\n * Author : Martin Donk\r\n * Website : http://www.nerdamer.com\r\n * Email : martin.r.donk@gmail.com\r\n * License : MIT\r\n * Source : https://github.com/jiggzson/nerdamer\r\n */\r\n\r\n/* global module, Function */\r\n\r\nif((typeof module) !== 'undefined') {\r\n    var nerdamer = require('./nerdamer.core.js');\r\n    require('./Calculus.js');\r\n}\r\n\r\n(function () {\r\n    \"use strict\";\r\n\r\n    /*shortcuts*/\r\n    var core = nerdamer.getCore(),\r\n            _ = core.PARSER,\r\n            N = core.groups.N,\r\n            P = core.groups.P,\r\n            S = core.groups.S,\r\n            EX = core.groups.EX,\r\n            FN = core.groups.FN,\r\n            PL = core.groups.PL,\r\n            CP = core.groups.CP,\r\n            CB = core.groups.CB,\r\n            keys = core.Utils.keys,\r\n            even = core.Utils.even,\r\n            variables = core.Utils.variables,\r\n            format = core.Utils.format,\r\n            round = core.Utils.round,\r\n            Frac = core.Frac,\r\n            isInt = core.Utils.isInt,\r\n            Symbol = core.Symbol,\r\n            CONST_HASH = core.Settings.CONST_HASH,\r\n            math = core.Utils.importFunctions(),\r\n            evaluate = core.Utils.evaluate;\r\n    //*************** CLASSES ***************//\r\n    /**\r\n     * Converts a symbol into an equivalent polynomial arrays of \r\n     * the form [[coefficient_1, power_1],[coefficient_2, power_2], ... ]\r\n     * Univariate polymials only. \r\n     * @param {Symbol|Number} symbol\r\n     * @param {String} variable The variable name of the polynomial\r\n     * @param {int} order\r\n     */\r\n    function Polynomial(symbol, variable, order) {\r\n        if(core.Utils.isSymbol(symbol)) {\r\n            this.parse(symbol);\r\n            this.variable = this.variable || variable;\r\n        }\r\n        else if(!isNaN(symbol)) {\r\n            order = order || 0;\r\n            if(variable === undefined)\r\n                throw new core.exceptions.InvalidVariableNameError('Polynomial expects a variable name when creating using order');\r\n            this.coeffs = [];\r\n            this.coeffs[order] = symbol;\r\n            this.fill(symbol);\r\n        }\r\n        else if(typeof symbol === 'string') {\r\n            this.parse(_.parse(symbol));\r\n        }\r\n    }\r\n    /**\r\n     * Creates a Polynomial given an array of coefficients\r\n     * @param {int[]} arr\r\n     * @param {String} variable\r\n     * @returns {Polynomial}\r\n     */\r\n    Polynomial.fromArray = function (arr, variable) {\r\n        if(typeof variable === 'undefined')\r\n            throw new core.exceptions.InvalidVariableNameError('A variable name must be specified when creating polynomial from array');\r\n        var p = new Polynomial();\r\n        p.coeffs = arr;\r\n        p.variable = variable;\r\n        return p;\r\n    };\r\n\r\n    Polynomial.fit = function (c1, c2, n, base, p, variable) {\r\n        //after having looped through and mod 10 the number to get the matching factor\r\n        var terms = new Array(p + 1),\r\n                t = n - c2;\r\n        terms[0] = c2; //the constants is assumed to be correct\r\n        //constant for x^p is also assumed know so add\r\n        terms[p] = c1;\r\n        t -= c1 * Math.pow(base, p);\r\n        //start fitting\r\n        for(var i = p - 1; i > 0; i--) {\r\n            var b = Math.pow(base, i), //we want as many wholes as possible\r\n                    q = t / b,\r\n                    sign = Math.sign(q);\r\n            var c = sign * Math.floor(Math.abs(q));\r\n            t -= c * b;\r\n            terms[i] = c;\r\n        }\r\n        if(t !== 0)\r\n            return null;\r\n        for(var i = 0; i < terms.length; i++)\r\n            terms[i] = new Frac(terms[i]);\r\n\r\n        return Polynomial.fromArray(terms, variable);\r\n    };\r\n\r\n    Polynomial.prototype = {\r\n        /**\r\n         * Converts Symbol to Polynomial\r\n         * @param {Symbol} symbol\r\n         * @param {Array} c - a collector array\r\n         * @returns {Polynomial}\r\n         */\r\n        parse: function (symbol, c) {\r\n            this.variable = variables(symbol)[0];\r\n            if(!symbol.isPoly())\r\n                throw core.exceptions.NerdamerTypeError('Polynomial Expected! Received ' + core.Utils.text(symbol));\r\n            c = c || [];\r\n            if(!symbol.power.absEquals(1))\r\n                symbol = _.expand(symbol);\r\n\r\n            if(symbol.group === core.groups.N) {\r\n                c[0] = symbol.multiplier;\r\n            }\r\n            else if(symbol.group === core.groups.S) {\r\n                c[symbol.power.toDecimal()] = symbol.multiplier;\r\n            }\r\n            else {\r\n                for(var x in symbol.symbols) {\r\n                    var sub = symbol.symbols[x],\r\n                            p = sub.power;\r\n                    if(core.Utils.isSymbol(p))\r\n                        throw new core.exceptions.NerdamerTypeError('power cannot be a Symbol');\r\n\r\n                    p = sub.group === N ? 0 : p.toDecimal();\r\n                    if(sub.symbols) {\r\n                        this.parse(sub, c);\r\n                    }\r\n                    else {\r\n                        c[p] = sub.multiplier;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.coeffs = c;\r\n\r\n            this.fill();\r\n        },\r\n        /**\r\n         * Fills in the holes in a polynomial with zeroes\r\n         * @param {Number} x - The number to fill the holes with\r\n         */\r\n        fill: function (x) {\r\n            x = Number(x) || 0;\r\n            var l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++) {\r\n                if(this.coeffs[i] === undefined) {\r\n                    this.coeffs[i] = new Frac(x);\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * Removes higher order zeros or a specific coefficient\r\n         * @returns {Array}\r\n         */\r\n        trim: function () {\r\n            var l = this.coeffs.length;\r\n            while(l--) {\r\n                var c = this.coeffs[l];\r\n                var equalsZero = c.equals(0);\r\n                if(c && equalsZero) {\r\n                    if(l === 0)\r\n                        break;\r\n                    this.coeffs.pop();\r\n                }\r\n                else\r\n                    break;\r\n            }\r\n\r\n            return this;\r\n        },\r\n        /*\r\n         * Returns polynomial mod p **currently fails**\r\n         * @param {Number} p\r\n         * @returns {Polynomial}\r\n         */\r\n        modP: function (p) {\r\n            var l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var c = this.coeffs[i];\r\n                if(c < 0) { //go borrow\r\n                    var b; //a coefficient > 0\r\n                    for(var j = i; j < l; j++) {//starting from where we left off\r\n                        if(this.coeffs[j] > 0) {\r\n                            b = this.coeffs[j];\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if(b) { //if such a coefficient exists\r\n                        for(j; j > i; j--) { //go down the line and adjust using p\r\n                            this.coeffs[j] = this.coeffs[j].subtract(new Frac(1));\r\n                            this.coeffs[j - 1] = this.coeffs[j - 1].add(new Frac(p));\r\n                        }\r\n                        c = this.coeffs[i]; //reset c\r\n                    }\r\n                }\r\n\r\n                var d = c.mod(p);\r\n                var w = c.subtract(d).divide(p);\r\n                if(!w.equals(0)) {\r\n                    var up_one = i + 1;\r\n                    var next = this.coeffs[up_one] || new Frac(0);\r\n                    next = next.add(w);\r\n                    this.coeffs[up_one] = new Frac(next);\r\n                    this.coeffs[i] = new Frac(d);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n        /**\r\n         * Adds together 2 polynomials\r\n         * @param {Polynomial} poly\r\n         */\r\n        add: function (poly) {\r\n            var l = Math.max(this.coeffs.length, poly.coeffs.length);\r\n            for(var i = 0; i < l; i++) {\r\n                var a = (this.coeffs[i] || new Frac(0)),\r\n                        b = (poly.coeffs[i] || new Frac(0));\r\n                this.coeffs[i] = a.add(b);\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * Adds together 2 polynomials\r\n         * @param {Polynomial} poly\r\n         */\r\n        subtract: function (poly) {\r\n            var l = Math.max(this.coeffs.length, poly.coeffs.length);\r\n            for(var i = 0; i < l; i++) {\r\n                var a = (this.coeffs[i] || new Frac(0)),\r\n                        b = (poly.coeffs[i] || new Frac(0));\r\n                this.coeffs[i] = a.subtract(b);\r\n            }\r\n            return this;\r\n        },\r\n        divide: function (poly) {\r\n            var variable = this.variable,\r\n                    dividend = core.Utils.arrayClone(this.coeffs),\r\n                    divisor = core.Utils.arrayClone(poly.coeffs),\r\n                    n = dividend.length,\r\n                    mp = divisor.length - 1,\r\n                    quotient = [];\r\n\r\n            //loop through the dividend\r\n            for(var i = 0; i < n; i++) {\r\n                var p = n - (i + 1);\r\n                //get the difference of the powers\r\n                var d = p - mp;\r\n                //get the quotient of the coefficients\r\n                var q = dividend[p].divide(divisor[mp]);\r\n\r\n                if(d < 0)\r\n                    break;//the divisor is not greater than the dividend\r\n                //place it in the quotient\r\n                quotient[d] = q;\r\n\r\n                for(var j = 0; j <= mp; j++) {\r\n                    //reduce the dividend\r\n                    dividend[j + d] = dividend[j + d].subtract((divisor[j].multiply(q)));\r\n                }\r\n            }\r\n\r\n            //clean up\r\n            var p1 = Polynomial.fromArray(dividend, variable || 'x').trim(), //pass in x for safety\r\n                    p2 = Polynomial.fromArray(quotient, variable || 'x');\r\n            return [p2, p1];\r\n        },\r\n        multiply: function (poly) {\r\n            var l1 = this.coeffs.length, l2 = poly.coeffs.length,\r\n                    c = []; //array to be returned\r\n            for(var i = 0; i < l1; i++) {\r\n                var x1 = this.coeffs[i];\r\n                for(var j = 0; j < l2; j++) {\r\n                    var k = i + j, //add the powers together\r\n                            x2 = poly.coeffs[j],\r\n                            e = c[k] || new Frac(0); //get the existing term from the new array\r\n                    c[k] = e.add(x1.multiply(x2)); //multiply the coefficients and add to new polynomial array\r\n                }\r\n            }\r\n            this.coeffs = c;\r\n            return this;\r\n        },\r\n        /**\r\n         * Checks if a polynomial is zero\r\n         * @returns {Boolean}\r\n         */\r\n        isZero: function () {\r\n            var l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var e = this.coeffs[i];\r\n                if(!e.equals(0))\r\n                    return false;\r\n            }\r\n            return true;\r\n        },\r\n        /** \r\n         * Substitutes in a number n into the polynomial p(n)\r\n         * @param {Number} n\r\n         * @returns {Frac}\r\n         */\r\n        sub: function (n) {\r\n            var sum = new Frac(0), l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var t = this.coeffs[i];\r\n                if(!t.equals(0))\r\n                    sum = sum.add(t.multiply(new Frac(Math.pow(n, i))));\r\n            }\r\n            return sum;\r\n        },\r\n        /**\r\n         * Returns a clone of the polynomial\r\n         * @returns {Polynomial}\r\n         */\r\n        clone: function () {\r\n            var p = new Polynomial();\r\n            p.coeffs = this.coeffs;\r\n            p.variable = this.variable;\r\n            return p;\r\n        },\r\n        /**\r\n         * Gets the degree of the polynomial\r\n         * @returns {Number}\r\n         */\r\n        deg: function () {\r\n            this.trim();\r\n            return this.coeffs.length - 1;\r\n        },\r\n        /**\r\n         * Returns a lead coefficient\r\n         * @returns {Frac}\r\n         */\r\n        lc: function () {\r\n            return this.coeffs[this.deg()].clone();\r\n        },\r\n        /**\r\n         * Converts polynomial into a monic polynomial\r\n         * @returns {Polynomial}\r\n         */\r\n        monic: function () {\r\n            var lc = this.lc(), l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++)\r\n                this.coeffs[i] = this.coeffs[i].divide(lc);\r\n            return this;\r\n        },\r\n        /**\r\n         * Returns the GCD of two polynomials\r\n         * @param {Polynomial} poly\r\n         * @returns {Polynomial}\r\n         */\r\n        gcd: function (poly) {\r\n            //get the maximum power of each\r\n            var mp1 = this.coeffs.length - 1,\r\n                    mp2 = poly.coeffs.length - 1,\r\n                    T;\r\n            //swap so we always have the greater power first\r\n            if(mp1 < mp2) {\r\n                return poly.gcd(this);\r\n            }\r\n            var a = this;\r\n\r\n            while(!poly.isZero()) {\r\n                var t = poly.clone();\r\n                a = a.clone();\r\n                T = a.divide(t);\r\n                poly = T[1];\r\n                a = t;\r\n            }\r\n\r\n            var gcd = core.Math2.QGCD.apply(null, a.coeffs);\r\n            if(!gcd.equals(1)) {\r\n                var l = a.coeffs.length;\r\n                for(var i = 0; i < l; i++) {\r\n                    a.coeffs[i] = a.coeffs[i].divide(gcd);\r\n                }\r\n            }\r\n            return a;\r\n        },\r\n        /**\r\n         * Differentiates the polynomial\r\n         * @returns {Polynomial}\r\n         */\r\n        diff: function () {\r\n            var new_array = [], l = this.coeffs.length;\r\n            for(var i = 1; i < l; i++)\r\n                new_array.push(this.coeffs[i].multiply(new Frac(i)));\r\n            this.coeffs = new_array;\r\n            return this;\r\n        },\r\n        /**\r\n         * Integrates the polynomial\r\n         * @returns {Polynomial} \r\n         */\r\n        integrate: function () {\r\n            var new_array = [0], l = this.coeffs.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var c = new Frac(i + 1);\r\n                new_array[c] = this.coeffs[i].divide(c);\r\n            }\r\n            this.coeffs = new_array;\r\n            return this;\r\n        },\r\n        /**\r\n         * Returns the Greatest common factor of the polynomial\r\n         * @param {bool} toPolynomial - true if a polynomial is wanted\r\n         * @returns {Frac|Polynomial}\r\n         */\r\n        gcf: function (toPolynomial) {\r\n            //get the first nozero coefficient and returns its power\r\n            var fnz = function (a) {\r\n                for(var i = 0; i < a.length; i++)\r\n                    if(!a[i].equals(0))\r\n                        return i;\r\n            },\r\n                    ca = [];\r\n            for(var i = 0; i < this.coeffs.length; i++) {\r\n                var c = this.coeffs[i];\r\n                if(!c.equals(0) && ca.indexOf(c) === -1)\r\n                    ca.push(c);\r\n            }\r\n            var p = [core.Math2.QGCD.apply(undefined, ca), fnz(this.coeffs)].toDecimal();\r\n\r\n            if(toPolynomial) {\r\n                var parr = [];\r\n                parr[p[1] - 1] = p[0];\r\n                p = Polynomial.fromArray(parr, this.variable).fill();\r\n            }\r\n\r\n            return p;\r\n        },\r\n        /**\r\n         * Raises a polynomial P to a power p -> P^p. e.g. (x+1)^2\r\n         * @param {bool} incl_img - Include imaginary numbers \r\n         */\r\n        quad: function (incl_img) {\r\n            var roots = [];\r\n            if(this.coeffs.length > 3)\r\n                throw new Error('Cannot calculate quadratic order of ' + (this.coeffs.length - 1));\r\n            if(this.coeffs.length === 0)\r\n                throw new Error('Polynomial array has no terms');\r\n            var a = this.coeffs[2] || 0, b = this.coeffs[1] || 0, c = this.coeffs[0];\r\n            var dsc = b * b - 4 * a * c;\r\n            if(dsc < 0 && !incl_img)\r\n                return roots;\r\n            else {\r\n                roots[0] = (-b + Math.sqrt(dsc)) / (2 * a);\r\n                roots[1] = (-b - Math.sqrt(dsc)) / (2 * a);\r\n            }\r\n            return roots;\r\n        },\r\n        /**\r\n         * Makes polynomial square free\r\n         * @returns {Array}\r\n         */\r\n        squareFree: function () {\r\n\r\n            var a = this.clone(),\r\n                    i = 1,\r\n                    b = a.clone().diff(),\r\n                    c = a.clone().gcd(b),\r\n                    w = a.divide(c)[0];\r\n            var output = Polynomial.fromArray([new Frac(1)], a.variable);\r\n            while(!c.equalsNumber(1)) {\r\n                var y = w.gcd(c);\r\n                var z = w.divide(y)[0];\r\n                //one of the factors may have shown up since it's square but smaller than the \r\n                //one where finding\r\n                if(!z.equalsNumber(1) && i > 1) {\r\n                    var t = z.clone();\r\n                    for(var j = 1; j < i; j++)\r\n                        t.multiply(z.clone());\r\n                    z = t;\r\n                }\r\n                output = output.multiply(z);\r\n                i++;\r\n                w = y;\r\n                c = c.divide(y)[0];\r\n            }\r\n\r\n            return [output, w, i];\r\n        },\r\n        /**\r\n         * Converts polynomial to Symbol\r\n         * @returns {Symbol}\r\n         */\r\n        toSymbol: function () {\r\n            var l = this.coeffs.length,\r\n                    variable = this.variable;\r\n            if(l === 0)\r\n                return new core.Symbol(0);\r\n            var end = l - 1, str = '';\r\n\r\n            for(var i = 0; i < l; i++) {\r\n                //place the plus sign for all but the last one\r\n                var plus = i === end ? '' : '+',\r\n                        e = this.coeffs[i];\r\n                if(!e.equals(0))\r\n                    str += (e + '*' + variable + '^' + i + plus);\r\n            }\r\n            return _.parse(str);\r\n        },\r\n        /**\r\n         * Checks if polynomial is equal to a number\r\n         * @param {Number} x\r\n         * @returns {Boolean}\r\n         */\r\n        equalsNumber: function (x) {\r\n            this.trim();\r\n            return this.coeffs.length === 1 && this.coeffs[0].toDecimal() === String(x);\r\n        },\r\n        toString: function () {\r\n            return this.toSymbol().toString();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * TODO\r\n     * ===================================================================================\r\n     * THIS METHOD HAS A NASTY HIDDEN BUG. IT HAS INCONSISTENT RETURN TYPES PRIMARILY DUE TO \r\n     * WRONG ASSUMPTIONS AT THE BEGINNING. THE ASSUMPTION WAS THAT COEFFS WERE ALWAYS GOING BE NUMBERS\r\n     * NOT TAKING INTO ACCOUNT THAT IMAGINARY NUMBERS. FIXING THIS BREAKS WAY TOO MANY TESTS \r\n     * AT THEM MOMENT WHICH I DON'T HAVE TO FIX\r\n     * ===================================================================================\r\n     * If the symbols is of group PL or CP it will return the multipliers of each symbol\r\n     * as these are polynomial coefficients. CB symbols are glued together by multiplication\r\n     * so the symbol multiplier carries the coefficients for all contained symbols.\r\n     * For S it just returns it's own multiplier. This function doesn't care if it's a polynomial or not\r\n     * @param {Array} c The coefficient array\r\n     * @param {boolean} with_order \r\n     * @return {Array}\r\n     */\r\n    Symbol.prototype.coeffs = function (c, with_order) {\r\n        if(with_order && !this.isPoly(true))\r\n            _.error('Polynomial expected when requesting coefficients with order');\r\n        c = c || [];\r\n        var s = this.clone().distributeMultiplier();\r\n        if(s.isComposite()) {\r\n            for(var x in s.symbols) {\r\n                var sub = s.symbols[x];\r\n                if(sub.isComposite()) {\r\n                    sub.clone().distributeMultiplier().coeffs(c, with_order);\r\n                }\r\n                else {\r\n                    if(with_order)\r\n                        c[sub.isConstant() ? 0 : sub.power.toDecimal()] = sub.multiplier;\r\n                    else {\r\n                        c.push(sub.multiplier);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if(with_order)\r\n                c[s.isConstant(true) ? 0 : s.power.toDecimal()] = s.multiplier;\r\n            else {\r\n                if(s.group === CB && s.isImaginary()) {\r\n                    var m = new Symbol(s.multiplier);\r\n                    s.each(function (x) {\r\n                        //add the imaginary part\r\n                        if(x.isConstant(true) || x.imaginary)\r\n                            m = _.multiply(m, x);\r\n                    });\r\n                    c.push(m);\r\n                }\r\n                else\r\n                    c.push(s.multiplier);\r\n            }\r\n        }\r\n        //fill the holes\r\n        if(with_order) {\r\n            for(var i = 0; i < c.length; i++)\r\n                if(c[i] === undefined)\r\n                    c[i] = new Symbol(0);\r\n        }\r\n        return c;\r\n    };\r\n    Symbol.prototype.tBase = function (map) {\r\n        if(typeof map === 'undefined')\r\n            throw new Error('Symbol.tBase requires a map object!');\r\n        var terms = [];\r\n        var symbols = this.collectSymbols(null, null, null, true),\r\n                l = symbols.length;\r\n        for(var i = 0; i < l; i++) {\r\n            var symbol = symbols[i],\r\n                    g = symbol.group,\r\n                    nterm = new MVTerm(symbol.multiplier, [], map);\r\n            if(g === CB) {\r\n                for(var x in symbol.symbols) {\r\n                    var sym = symbol.symbols[x];\r\n                    nterm.terms[map[x]] = sym.power;\r\n                }\r\n            }\r\n            else {\r\n                nterm.terms[map[symbol.value]] = symbol.power;\r\n            }\r\n\r\n            terms.push(nterm.fill());\r\n            nterm.updateCount();\r\n        }\r\n        return terms;\r\n    };\r\n    Symbol.prototype.altVar = function (x) {\r\n        var m = this.multiplier.toString(), p = this.power.toString();\r\n        return (m === '1' ? '' : m + '*') + x + (p === '1' ? '' : '^' + p);\r\n    };\r\n    /**\r\n     * Checks to see if the symbols contain the same variables\r\n     * @param {Symbol} symbol\r\n     * @returns {Boolean}\r\n     */\r\n    Symbol.prototype.sameVars = function (symbol) {\r\n        if(!(this.symbols || this.group === symbol.group))\r\n            return false;\r\n        for(var x in this.symbols) {\r\n            var a = this.symbols[x], b = symbol.symbols[x];\r\n            if(!b)\r\n                return false;\r\n            if(a.value !== b.value)\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Groups the terms in a symbol with respect to a variable\r\n     * For instance the symbol {a*b^2*x^2+a*b*x^2+x+6} returns [6,1,a*b+a*b^2]\r\n     * @returns {Factors}\r\n     */\r\n    Symbol.prototype.groupTerms = function (x) {\r\n        x = String(x);\r\n        var f, p, egrouped;\r\n        var grouped = [];\r\n        this.each(function (e) {\r\n            if(e.group === PL) {\r\n                egrouped = e.groupTerms(x);\r\n                for(var i = 0; i < egrouped.length; i++) {\r\n                    var el = egrouped[i];\r\n                    if(el)\r\n                        grouped[i] = el;\r\n                }\r\n            }\r\n            else {\r\n                f = core.Utils.decompose_fn(e, x, true);\r\n                p = f.x.value === x ? Number(f.x.power) : 0;\r\n                //check if there's an existing value\r\n                grouped[p] = _.add(grouped[p] || new Symbol(0), f.a);\r\n            }\r\n        });\r\n        return grouped;\r\n    };\r\n    /**\r\n     * Use this to collect Factors\r\n     * @returns {Symbol[]}\r\n     */\r\n    Symbol.prototype.collectFactors = function () {\r\n        var factors = [];\r\n        if(this.group === CB)\r\n            this.each(function (x) {\r\n                factors.push(x.clone());\r\n            });\r\n        else\r\n            factors.push(this.clone());\r\n        return factors;\r\n    };\r\n    /**\r\n     * A container class for factors\r\n     * @returns {Factors}\r\n     */\r\n    function Factors() {\r\n        this.factors = {};\r\n        this.length = 0;\r\n    }\r\n    ;\r\n    Factors.prototype.getNumberSymbolics = function () {\r\n        var n = 0;\r\n        this.each(function (x) {\r\n            if(!x.isConstant(true))\r\n                n++;\r\n        });\r\n        return n;\r\n    };\r\n    /**\r\n     * Adds the factors to the factor object\r\n     * @param {Symbo} s\r\n     * @returns {Factors}\r\n     */\r\n    Factors.prototype.add = function (s) {\r\n        if(s.equals(0))\r\n            return this; //nothing to add\r\n\r\n        //we don't want to carry -1 as a factor. If a factor already exists,\r\n        //then add the minus one to that factor and return.\r\n        if(s.equals(-1) && this.length > 0) {\r\n            var fo = core.Utils.firstObject(this.factors, null, true);\r\n            this.add(_.symfunction(core.Settings.PARENTHESIS, [fo.obj]).negate());\r\n            delete this.factors[fo.key];\r\n            this.length--;\r\n            return this;\r\n        }\r\n\r\n        if(s.group === CB) {\r\n            var factors = this;\r\n            if(!s.multiplier.equals(1))\r\n                factors.add(new Symbol(s.multiplier));\r\n            s.each(function (x) {\r\n                factors.add(x);\r\n            });\r\n        }\r\n        else {\r\n            if(this.preAdd) //if a preAdd function was defined call it to do prep\r\n                s = this.preAdd(s);\r\n            if(this.pFactor) //if the symbol isn't linear add back the power\r\n                s = _.pow(s, new Symbol(this.pFactor));\r\n\r\n            var is_constant = s.isConstant();\r\n            if(is_constant && s.equals(1))\r\n                return this; //don't add 1\r\n            var v = is_constant ? s.value : s.text();\r\n            if(v in this.factors) {\r\n                this.factors[v] = _.multiply(this.factors[v], s);\r\n                //did the addition cancel out the existing factor? If so remove it and decrement the length\r\n                if(this.factors[v].equals(1)) {\r\n                    delete this.factors[v];\r\n                    this.length--;\r\n                }\r\n            }\r\n            else {\r\n                this.factors[v] = s;\r\n                this.length++;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Converts the factor object to a Symbol\r\n     * @returns {Symbol}\r\n     */\r\n    Factors.prototype.toSymbol = function () {\r\n        var factored = new Symbol(1);\r\n        var factors = Object.values(this.factors).sort(function (a, b) {\r\n            return a.group > b.group;\r\n        });\r\n\r\n        for(var i = 0, l = factors.length; i < l; i++) {\r\n            var f = factors[i];\r\n\r\n            //don't wrap group S or FN\r\n            var factor = f.power.equals(1) && f.fname !== '' /* don't wrap it twice */ ?\r\n                    _.symfunction(core.PARENTHESIS, [f]) : f;\r\n\r\n            factored = _.multiply(factored, factor);\r\n        }\r\n        if(factored.fname === '')\r\n            factored = Symbol.unwrapPARENS(factored);\r\n        return factored;\r\n    };\r\n    /**\r\n     * Merges 2 factor objects into one\r\n     * @param {Factor} o\r\n     * @returns {Factors}\r\n     */\r\n    Factors.prototype.merge = function (o) {\r\n        for(var x in o) {\r\n            if(x in this.factors)\r\n                this.factors[x] = _.multiply(this.factors[x], o[x]);\r\n            else\r\n                this.factors[x] = o[x];\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * The iterator for the factor object\r\n     * @param {Function} f - callback\r\n     * @returns {Factor}\r\n     */\r\n    Factors.prototype.each = function (f) {\r\n        for(var x in this.factors) {\r\n            var factor = this.factors[x];\r\n            if(factor.fname === core.PARENTHESIS && factor.isLinear())\r\n                factor = factor.args[0];\r\n            f.call(this, factor, x);\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Return the number of factors contained in the factor object\r\n     * @returns {int}\r\n     */\r\n    Factors.prototype.count = function () {\r\n        return keys(this.factors).length;\r\n    };\r\n    /**\r\n     * Cleans up factors from -1\r\n     * @returns {undefined}\r\n     */\r\n    Factors.prototype.clean = function () {\r\n        try {\r\n            var h = core.Settings.CONST_HASH;\r\n            if(this.factors[h].lessThan(0)) {\r\n                if(this.factors[h].equals(-1))\r\n                    delete this.factors[h];\r\n                else\r\n                    this.factors[h].negate();\r\n                this.each(function (x) {\r\n                    x.negate();\r\n                });\r\n            }\r\n        }\r\n        catch(e) {\r\n        }\r\n        ;\r\n    };\r\n    Factors.prototype.toString = function () {\r\n        return this.toSymbol().toString();\r\n    };\r\n\r\n    //a wrapper for performing multivariate division\r\n    function MVTerm(coeff, terms, map) {\r\n        this.terms = terms || [];\r\n        this.coeff = coeff;\r\n        this.map = map; //careful! all maps are the same object\r\n        this.sum = new core.Frac(0);\r\n        this.image = undefined;\r\n    }\r\n    ;\r\n    MVTerm.prototype.updateCount = function () {\r\n        this.count = this.count || 0;\r\n        for(var i = 0; i < this.terms.length; i++) {\r\n            if(!this.terms[i].equals(0))\r\n                this.count++;\r\n        }\r\n        return this;\r\n    };\r\n    MVTerm.prototype.getVars = function () {\r\n        var vars = [];\r\n        for(var i = 0; i < this.terms.length; i++) {\r\n            var term = this.terms[i],\r\n                    rev_map = this.getRevMap();\r\n            if(!term.equals(0))\r\n                vars.push(this.rev_map[i]);\r\n        }\r\n        return vars.join(' ');\r\n    };\r\n    MVTerm.prototype.len = function () {\r\n        if(typeof this.count === 'undefined') {\r\n            this.updateCount();\r\n        }\r\n        return this.count;\r\n    };\r\n    MVTerm.prototype.toSymbol = function (rev_map) {\r\n        rev_map = rev_map || this.getRevMap();\r\n        var symbol = new Symbol(this.coeff);\r\n        for(var i = 0; i < this.terms.length; i++) {\r\n            var v = rev_map[i],\r\n                    t = this.terms[i];\r\n            if(t.equals(0) || v === CONST_HASH)\r\n                continue;\r\n            var mapped = new Symbol(v);\r\n            mapped.power = t;\r\n            symbol = _.multiply(symbol, mapped);\r\n        }\r\n        return symbol;\r\n    };\r\n    MVTerm.prototype.getRevMap = function () {\r\n        if(this.rev_map)\r\n            return this.rev_map;\r\n        var o = {};\r\n        for(var x in this.map)\r\n            o[this.map[x]] = x;\r\n        this.rev_map = o;\r\n        return o;\r\n    };\r\n    MVTerm.prototype.generateImage = function () {\r\n        this.image = this.terms.join(' ');\r\n        return this;\r\n    },\r\n            MVTerm.prototype.getImg = function () {\r\n                if(!this.image)\r\n                    this.generateImage();\r\n                return this.image;\r\n            },\r\n            MVTerm.prototype.fill = function () {\r\n                var l = this.map.length;\r\n                for(var i = 0; i < l; i++) {\r\n                    if(typeof this.terms[i] === 'undefined')\r\n                        this.terms[i] = new core.Frac(0);\r\n                    else {\r\n                        this.sum = this.sum.add(this.terms[i]);\r\n                    }\r\n                }\r\n                return this;\r\n            };\r\n    MVTerm.prototype.divide = function (mvterm) {\r\n        var c = this.coeff.divide(mvterm.coeff),\r\n                l = this.terms.length,\r\n                new_mvterm = new MVTerm(c, [], this.map);\r\n        for(var i = 0; i < l; i++) {\r\n            new_mvterm.terms[i] = this.terms[i].subtract(mvterm.terms[i]);\r\n            new_mvterm.sum = new_mvterm.sum.add(new_mvterm.terms[i]);\r\n        }\r\n        return new_mvterm;\r\n    };\r\n    MVTerm.prototype.multiply = function (mvterm) {\r\n        var c = this.coeff.multiply(mvterm.coeff),\r\n                l = this.terms.length,\r\n                new_mvterm = new MVTerm(c, [], this.map);\r\n        for(var i = 0; i < l; i++) {\r\n            new_mvterm.terms[i] = this.terms[i].add(mvterm.terms[i]);\r\n            new_mvterm.sum = new_mvterm.sum.add(new_mvterm.terms[i]);\r\n        }\r\n        return new_mvterm;\r\n    };\r\n    MVTerm.prototype.isZero = function () {\r\n        return this.coeff.equals(0);\r\n    };\r\n    MVTerm.prototype.toString = function () {\r\n        return '{ coeff: ' + this.coeff.toString() + ', terms: [' +\r\n                this.terms.join(',') + ']: sum: ' + this.sum.toString() + ', count: ' + this.count + '}';\r\n    };\r\n\r\n    core.Utils.toMapObj = function (arr) {\r\n        var c = 0, o = {};\r\n        for(var i = 0; i < arr.length; i++) {\r\n            var v = arr[i];\r\n            if(typeof o[v] === 'undefined') {\r\n                o[v] = c;\r\n                c++;\r\n            }\r\n        }\r\n        o.length = c;\r\n        return o;\r\n    };\r\n    core.Utils.filledArray = function (v, n, clss) {\r\n        var a = [];\r\n        while(n--) {\r\n            a[n] = clss ? new clss(v) : v;\r\n        }\r\n        return a;\r\n    };\r\n    core.Utils.arrSum = function (arr) {\r\n        var sum = 0, l = arr.length;\r\n        for(var i = 0; i < l; i++)\r\n            sum += arr[i];\r\n        return sum;\r\n    };\r\n    /**\r\n     * Determines if 2 arrays have intersecting elements.\r\n     * @param {Array} a\r\n     * @param {Array} b\r\n     * @returns {Boolean} True if a and b have intersecting elements.\r\n     */\r\n    core.Utils.haveIntersection = function (a, b) {\r\n        var t;\r\n        if(b.length > a.length)\r\n            t = b, b = a, a = t; // indexOf to loop over shorter\r\n        return a.some(function (e) {\r\n            return b.indexOf(e) > -1;\r\n        });\r\n    };\r\n    /**\r\n     * Substitutes out functions as variables so they can be used in regular algorithms\r\n     * @param {Symbol} symbol\r\n     * @param {Object} map\r\n     * @returns {String} The expression string\r\n     */\r\n    core.Utils.subFunctions = function (symbol, map) {\r\n        map = map || {};\r\n        var subbed = [];\r\n        symbol.each(function (x) {\r\n            if(x.group === FN || x.previousGroup === FN) {\r\n                //we need a new variable name so why not use one of the existing\r\n                var val = core.Utils.text(x, 'hash'), tvar = map[val];\r\n                if(!tvar) {\r\n                    //generate a unique enough name\r\n                    var t = x.fname + keys(map).length;\r\n                    map[val] = t;\r\n                    subbed.push(x.altVar(t));\r\n                }\r\n                else\r\n                    subbed.push(x.altVar(tvar));\r\n            }\r\n            else if(x.group === CB || x.group === PL || x.group === CP) {\r\n                subbed.push(core.Utils.subFunctions(x, map));\r\n            }\r\n            else\r\n                subbed.push(x.text());\r\n        });\r\n        if(symbol.group === CP || symbol.group === PL)\r\n            return symbol.altVar(core.Utils.inBrackets(subbed.join('+')));\r\n        ;\r\n        if(symbol.group === CB)\r\n            return symbol.altVar(core.Utils.inBrackets(subbed.join('*')));\r\n        return symbol.text();\r\n    };\r\n    core.Utils.getFunctionsSubs = function (map) {\r\n        var subs = {};\r\n        //prepare substitutions\r\n        for(var x in map)\r\n            subs[map[x]] = _.parse(x);\r\n        return subs;\r\n    };\r\n\r\n    var __ = core.Algebra = {\r\n        version: '1.4.6',\r\n        proots: function (symbol, decp) {\r\n            //the roots will be rounded up to 7 decimal places.\r\n            //if this causes trouble you can explicitly pass in a different number of places\r\n            //rarr for polynomial of power n is of format [n, coeff x^n, coeff x^(n-1), ..., coeff x^0]\r\n            decp = decp || 7;\r\n            var zeros = 0;\r\n            var known_roots = [];\r\n            var get_roots = function (rarr, powers, max) {\r\n                var roots = calcroots(rarr, powers, max).concat(known_roots);\r\n                for(var i = 0; i < zeros; i++)\r\n                    roots.unshift(0);\r\n                return roots;\r\n            };\r\n\r\n            if(symbol instanceof Symbol && symbol.isPoly()) {\r\n                symbol.distributeMultiplier();\r\n                //make it so the symbol has a constants as the lowest term\r\n                if(symbol.group === PL) {\r\n                    var lowest_pow = core.Utils.arrayMin(keys(symbol.symbols));\r\n                    var lowest_symbol = symbol.symbols[lowest_pow].clone().toUnitMultiplier();\r\n                    symbol = _.expand(_.divide(symbol, lowest_symbol));\r\n                    known_roots.push(0); //add zero since this is a known root\r\n                }\r\n                if(symbol.group === core.groups.S) {\r\n                    return [0];\r\n                }\r\n                else if(symbol.group === core.groups.PL) {\r\n                    var powers = keys(symbol.symbols),\r\n                            minpower = core.Utils.arrayMin(powers),\r\n                            symbol = core.PARSER.divide(symbol, core.PARSER.parse(symbol.value + '^' + minpower));\r\n                }\r\n\r\n                var variable = keys(symbol.symbols).sort().pop(),\r\n                        sym = symbol.group === core.groups.PL ? symbol.symbols : symbol.symbols[variable],\r\n                        g = sym.group,\r\n                        powers = g === S ? [sym.power.toDecimal()] : keys(sym.symbols),\r\n                        rarr = [],\r\n                        max = core.Utils.arrayMax(powers); //maximum power and degree of polynomial to be solved\r\n\r\n                // Prepare the data\r\n                for(var i = 1; i <= max; i++) {\r\n                    var c = 0; //if there is no power then the hole must be filled with a zero\r\n                    if(powers.indexOf(i + '') !== -1) {\r\n                        if(g === S) {\r\n                            c = sym.multiplier;\r\n                        }\r\n                        else {\r\n                            c = sym.symbols[i].multiplier;\r\n                        }\r\n                    }\r\n                    // Insert the coeffient but from the front\r\n                    rarr.unshift(c);\r\n                }\r\n\r\n                rarr.push(symbol.symbols[CONST_HASH].multiplier);\r\n\r\n                if(sym.group === S)\r\n                    rarr[0] = sym.multiplier;//the symbol maybe of group CP with one variable\r\n\r\n                return get_roots(rarr, powers, max);\r\n            }\r\n            else if(core.Utils.isArray(symbol)) {\r\n                var parr = symbol;\r\n                var rarr = [],\r\n                        powers = [],\r\n                        last_power = 0;\r\n                for(var i = 0; i < parr.length; i++) {\r\n\r\n                    var coeff = parr[i][0],\r\n                            pow = parr[i][1],\r\n                            d = pow - last_power - 1;\r\n                    //insert the zeros\r\n                    for(var j = 0; j < d; j++)\r\n                        rarr.unshift(0);\r\n\r\n                    rarr.unshift(coeff);\r\n                    if(pow !== 0)\r\n                        powers.push(pow);\r\n                    last_power = pow;\r\n                }\r\n                var max = Math.max.apply(undefined, powers);\r\n\r\n                return get_roots(rarr, powers, max);\r\n            }\r\n            else {\r\n                throw new core.exceptions.NerdamerTypeError('Cannot calculate roots. Symbol must be a polynomial!');\r\n            }\r\n\r\n            function calcroots(rarr, powers, max) {\r\n                var MAXDEGREE = 100; // Degree of largest polynomial accepted by this script.\r\n\r\n                // Make a clone of the coefficients before appending the max power\r\n                var p = rarr.slice(0);\r\n\r\n                // Divide the string up into its individual entries, which--presumably--are separated by whitespace\r\n                rarr.unshift(max);\r\n\r\n                if(max > MAXDEGREE) {\r\n                    throw new core.exceptions.ValueLimitExceededError(\"This utility accepts polynomials of degree up to \" + MAXDEGREE + \". \");\r\n                }\r\n\r\n                var zeroi = [], // Vector of imaginary components of roots\r\n                        degreePar = {};    // degreePar is a dummy variable for passing the parameter POLYDEGREE by reference\r\n                degreePar.Degree = max;\r\n\r\n                for(i = 0; i < max; i++) {\r\n                    zeroi.push(0);\r\n                }\r\n                var zeror = zeroi.slice(0); // Vector of real components of roots\r\n\r\n                // Find the roots\r\n                //--> Begin Jenkins-Traub\r\n\r\n                /*\r\n                 * A verbatim copy of Mr. David Binner's Jenkins-Traub port\r\n                 */\r\n                function QuadSD_ak1(NN, u, v, p, q, iPar) {\r\n                    // Divides p by the quadratic 1, u, v placing the quotient in q and the remainder in a, b\r\n                    // iPar is a dummy variable for passing in the two parameters--a and b--by reference\r\n                    q[0] = iPar.b = p[0];\r\n                    q[1] = iPar.a = -(u * iPar.b) + p[1];\r\n\r\n                    for(var i = 2; i < NN; i++) {\r\n                        q[i] = -(u * iPar.a + v * iPar.b) + p[i];\r\n                        iPar.b = iPar.a;\r\n                        iPar.a = q[i];\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                function calcSC_ak1(DBL_EPSILON, N, a, b, iPar, K, u, v, qk) {\r\n                    // This routine calculates scalar quantities used to compute the next K polynomial and\r\n                    // new estimates of the quadratic coefficients.\r\n                    // calcSC -\tinteger variable set here indicating how the calculations are normalized\r\n                    // to avoid overflow.\r\n                    // iPar is a dummy variable for passing in the nine parameters--a1, a3, a7, c, d, e, f, g, and h --by reference\r\n\r\n                    // sdPar is a dummy variable for passing the two parameters--c and d--into QuadSD_ak1 by reference\r\n                    var sdPar = new Object(),\r\n                            // TYPE = 3 indicates the quadratic is almost a factor of K\r\n                            dumFlag = 3;\r\n\r\n                    // Synthetic division of K by the quadratic 1, u, v\r\n                    sdPar.b = sdPar.a = 0.0;\r\n                    QuadSD_ak1(N, u, v, K, qk, sdPar);\r\n                    iPar.c = sdPar.a;\r\n                    iPar.d = sdPar.b;\r\n\r\n                    if(Math.abs(iPar.c) <= (100.0 * DBL_EPSILON * Math.abs(K[N - 1]))) {\r\n                        if(Math.abs(iPar.d) <= (100.0 * DBL_EPSILON * Math.abs(K[N - 2])))\r\n                            return dumFlag;\r\n                    }\r\n\r\n                    iPar.h = v * b;\r\n                    if(Math.abs(iPar.d) >= Math.abs(iPar.c)) {\r\n                        // TYPE = 2 indicates that all formulas are divided by d\r\n                        dumFlag = 2;\r\n                        iPar.e = a / (iPar.d);\r\n                        iPar.f = (iPar.c) / (iPar.d);\r\n                        iPar.g = u * b;\r\n                        iPar.a3 = (iPar.e) * ((iPar.g) + a) + (iPar.h) * (b / (iPar.d));\r\n                        iPar.a1 = -a + (iPar.f) * b;\r\n                        iPar.a7 = (iPar.h) + ((iPar.f) + u) * a;\r\n                    }\r\n                    else {\r\n                        // TYPE = 1 indicates that all formulas are divided by c;\r\n                        dumFlag = 1;\r\n                        iPar.e = a / (iPar.c);\r\n                        iPar.f = (iPar.d) / (iPar.c);\r\n                        iPar.g = (iPar.e) * u;\r\n                        iPar.a3 = (iPar.e) * a + ((iPar.g) + (iPar.h) / (iPar.c)) * b;\r\n                        iPar.a1 = -(a * ((iPar.d) / (iPar.c))) + b;\r\n                        iPar.a7 = (iPar.g) * (iPar.d) + (iPar.h) * (iPar.f) + a;\r\n                    }\r\n                    return dumFlag;\r\n                }\r\n\r\n                function nextK_ak1(DBL_EPSILON, N, tFlag, a, b, iPar, K, qk, qp) {\r\n                    // Computes the next K polynomials using the scalars computed in calcSC_ak1\r\n                    // iPar is a dummy variable for passing in three parameters--a1, a3, and a7\r\n                    var temp;\r\n                    if(tFlag == 3) {\t// Use unscaled form of the recurrence\r\n                        K[1] = K[0] = 0.0;\r\n                        for(var i = 2; i < N; i++) {\r\n                            K[i] = qk[i - 2];\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    temp = ((tFlag == 1) ? b : a);\r\n                    if(Math.abs(iPar.a1) > (10.0 * DBL_EPSILON * Math.abs(temp))) {\r\n                        // Use scaled form of the recurrence\r\n                        iPar.a7 /= iPar.a1;\r\n                        iPar.a3 /= iPar.a1;\r\n                        K[0] = qp[0];\r\n                        K[1] = -(qp[0] * iPar.a7) + qp[1];\r\n                        for(var i = 2; i < N; i++)\r\n                            K[i] = -(qp[i - 1] * iPar.a7) + qk[i - 2] * iPar.a3 + qp[i];\r\n                    }\r\n                    else {\r\n                        // If a1 is nearly zero, then use a special form of the recurrence\r\n                        K[0] = 0.0;\r\n                        K[1] = -(qp[0] * iPar.a7);\r\n                        for(var i = 2; i < N; i++) {\r\n                            K[i] = -(qp[i - 1] * iPar.a7) + qk[i - 2] * iPar.a3;\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                function newest_ak1(tFlag, iPar, a, a1, a3, a7, b, c, d, f, g, h, u, v, K, N, p) {\r\n                    // Compute new estimates of the quadratic coefficients using the scalars computed in calcSC_ak1\r\n                    // iPar is a dummy variable for passing in the two parameters--uu and vv--by reference\r\n                    // iPar.a = uu, iPar.b = vv\r\n\r\n                    var a4, a5, b1, b2, c1, c2, c3, c4, temp;\r\n                    iPar.b = iPar.a = 0.0;// The quadratic is zeroed\r\n\r\n                    if(tFlag != 3) {\r\n                        if(tFlag != 2) {\r\n                            a4 = a + u * b + h * f;\r\n                            a5 = c + (u + v * f) * d;\r\n                        }\r\n                        else {\r\n                            a4 = (a + g) * f + h;\r\n                            a5 = (f + u) * c + v * d;\r\n                        }\r\n\r\n                        // Evaluate new quadratic coefficients\r\n                        b1 = -(K[N - 1] / p[N]);\r\n                        b2 = -(K[N - 2] + b1 * p[N - 1]) / p[N];\r\n                        c1 = v * b2 * a1;\r\n                        c2 = b1 * a7;\r\n                        c3 = b1 * b1 * a3;\r\n                        c4 = -(c2 + c3) + c1;\r\n                        temp = -c4 + a5 + b1 * a4;\r\n                        if(temp != 0.0) {\r\n                            iPar.a = -((u * (c3 + c2) + v * (b1 * a1 + b2 * a7)) / temp) + u;\r\n                            iPar.b = v * (1.0 + c4 / temp);\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                function Quad_ak1(a, b1, c, iPar) {\r\n                    // Calculates the zeros of the quadratic a*Z^2 + b1*Z + c\r\n                    // The quadratic formula, modified to avoid overflow, is used to find the larger zero if the\r\n                    // zeros are real and both zeros are complex. The smaller real zero is found directly from\r\n                    // the product of the zeros c/a.\r\n\r\n                    // iPar is a dummy variable for passing in the four parameters--sr, si, lr, and li--by reference\r\n\r\n                    var b, d, e;\r\n                    iPar.sr = iPar.si = iPar.lr = iPar.li = 0.0;\r\n\r\n                    if(a == 0) {\r\n                        iPar.sr = ((b1 != 0) ? -(c / b1) : iPar.sr);\r\n                        return;\r\n                    }\r\n                    if(c == 0) {\r\n                        iPar.lr = -(b1 / a);\r\n                        return;\r\n                    }\r\n\r\n                    // Compute discriminant avoiding overflow\r\n                    b = b1 / 2.0;\r\n                    if(Math.abs(b) < Math.abs(c)) {\r\n                        e = ((c >= 0) ? a : -a);\r\n                        e = -e + b * (b / Math.abs(c));\r\n                        d = Math.sqrt(Math.abs(e)) * Math.sqrt(Math.abs(c));\r\n                    }\r\n                    else {\r\n                        e = -((a / b) * (c / b)) + 1.0;\r\n                        d = Math.sqrt(Math.abs(e)) * (Math.abs(b));\r\n                    }\r\n\r\n                    if(e >= 0) {\r\n                        // Real zeros\r\n                        d = ((b >= 0) ? -d : d);\r\n                        iPar.lr = (-b + d) / a;\r\n                        iPar.sr = ((iPar.lr != 0) ? (c / (iPar.lr)) / a : iPar.sr);\r\n                    }\r\n                    else {\r\n                        // Complex conjugate zeros\r\n                        iPar.lr = iPar.sr = -(b / a);\r\n                        iPar.si = Math.abs(d / a);\r\n                        iPar.li = -(iPar.si);\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                function QuadIT_ak1(DBL_EPSILON, N, iPar, uu, vv, qp, NN, sdPar, p, qk, calcPar, K) {\r\n                    // Variable-shift K-polynomial iteration for a quadratic factor converges only if the\r\n                    // zeros are equimodular or nearly so.\r\n                    // iPar is a dummy variable for passing in the five parameters--NZ, lzi, lzr, szi, and szr--by reference\r\n                    // sdPar is a dummy variable for passing the two parameters--a and b--in by reference\r\n                    // calcPar is a dummy variable for passing the nine parameters--a1, a3, a7, c, d, e, f, g, and h --in by reference\r\n\r\n                    // qPar is a dummy variable for passing the four parameters--szr, szi, lzr, and lzi--into Quad_ak1 by reference\r\n                    var qPar = new Object(),\r\n                            ee, mp, omp, relstp, t, u, ui, v, vi, zm,\r\n                            i, j = 0, tFlag, triedFlag = 0;   // Integer variables\r\n\r\n                    iPar.NZ = 0;// Number of zeros found\r\n                    u = uu; // uu and vv are coefficients of the starting quadratic\r\n                    v = vv;\r\n\r\n                    do {\r\n                        qPar.li = qPar.lr = qPar.si = qPar.sr = 0.0;\r\n                        Quad_ak1(1.0, u, v, qPar);\r\n                        iPar.szr = qPar.sr;\r\n                        iPar.szi = qPar.si;\r\n                        iPar.lzr = qPar.lr;\r\n                        iPar.lzi = qPar.li;\r\n\r\n                        // Return if roots of the quadratic are real and not close to multiple or nearly\r\n                        // equal and of opposite sign.\r\n                        if(Math.abs(Math.abs(iPar.szr) - Math.abs(iPar.lzr)) > 0.01 * Math.abs(iPar.lzr))\r\n                            break;\r\n\r\n                        // Evaluate polynomial by quadratic synthetic division\r\n\r\n                        QuadSD_ak1(NN, u, v, p, qp, sdPar);\r\n\r\n                        mp = Math.abs(-((iPar.szr) * (sdPar.b)) + (sdPar.a)) + Math.abs((iPar.szi) * (sdPar.b));\r\n\r\n                        // Compute a rigorous bound on the rounding error in evaluating p\r\n\r\n                        zm = Math.sqrt(Math.abs(v));\r\n                        ee = 2.0 * Math.abs(qp[0]);\r\n                        t = -((iPar.szr) * (sdPar.b));\r\n\r\n                        for(i = 1; i < N; i++) {\r\n                            ee = ee * zm + Math.abs(qp[i]);\r\n                        }\r\n\r\n                        ee = ee * zm + Math.abs(t + sdPar.a);\r\n                        ee = (9.0 * ee + 2.0 * Math.abs(t) - 7.0 * (Math.abs((sdPar.a) + t) + zm * Math.abs((sdPar.b)))) * DBL_EPSILON;\r\n\r\n                        // Iteration has converged sufficiently if the polynomial value is less than 20 times this bound\r\n                        if(mp <= 20.0 * ee) {\r\n                            iPar.NZ = 2;\r\n                            break;\r\n                        }\r\n\r\n                        j++;\r\n                        // Stop iteration after 20 steps\r\n                        if(j > 20)\r\n                            break;\r\n                        if(j >= 2) {\r\n                            if((relstp <= 0.01) && (mp >= omp) && (!triedFlag)) {\r\n                                // A cluster appears to be stalling the convergence. Five fixed shift\r\n                                // steps are taken with a u, v close to the cluster.\r\n                                relstp = ((relstp < DBL_EPSILON) ? Math.sqrt(DBL_EPSILON) : Math.sqrt(relstp));\r\n                                u -= u * relstp;\r\n                                v += v * relstp;\r\n\r\n                                QuadSD_ak1(NN, u, v, p, qp, sdPar);\r\n                                for(i = 0; i < 5; i++) {\r\n                                    tFlag = calcSC_ak1(DBL_EPSILON, N, sdPar.a, sdPar.b, calcPar, K, u, v, qk);\r\n                                    nextK_ak1(DBL_EPSILON, N, tFlag, sdPar.a, sdPar.b, calcPar, K, qk, qp);\r\n                                }\r\n\r\n                                triedFlag = 1;\r\n                                j = 0;\r\n\r\n                            }\r\n                        }\r\n                        omp = mp;\r\n\r\n                        // Calculate next K polynomial and new u and v\r\n                        tFlag = calcSC_ak1(DBL_EPSILON, N, sdPar.a, sdPar.b, calcPar, K, u, v, qk);\r\n                        nextK_ak1(DBL_EPSILON, N, tFlag, sdPar.a, sdPar.b, calcPar, K, qk, qp);\r\n                        tFlag = calcSC_ak1(DBL_EPSILON, N, sdPar.a, sdPar.b, calcPar, K, u, v, qk);\r\n                        newest_ak1(tFlag, sdPar, sdPar.a, calcPar.a1, calcPar.a3, calcPar.a7, sdPar.b, calcPar.c, calcPar.d, calcPar.f, calcPar.g, calcPar.h, u, v, K, N, p);\r\n                        ui = sdPar.a;\r\n                        vi = sdPar.b;\r\n\r\n                        // If vi is zero, the iteration is not converging\r\n                        if(vi != 0) {\r\n                            relstp = Math.abs((-v + vi) / vi);\r\n                            u = ui;\r\n                            v = vi;\r\n                        }\r\n                    }\r\n                    while(vi != 0);\r\n                    return;\r\n                }\r\n\r\n                function RealIT_ak1(DBL_EPSILON, iPar, sdPar, N, p, NN, qp, K, qk) {\r\n                    // Variable-shift H-polynomial iteration for a real zero\r\n                    // sss\t- starting iterate = sdPar.a\r\n                    // NZ\t\t- number of zeros found = iPar.NZ\r\n                    // dumFlag\t- flag to indicate a pair of zeros near real axis, returned to iFlag\r\n\r\n                    var ee, kv, mp, ms, omp, pv, s, t,\r\n                            dumFlag, i, j, nm1 = N - 1;   // Integer variables\r\n\r\n                    iPar.NZ = j = dumFlag = 0;\r\n                    s = sdPar.a;\r\n\r\n                    for(; ; ) {\r\n                        pv = p[0];\r\n\r\n                        // Evaluate p at s\r\n                        qp[0] = pv;\r\n                        for(i = 1; i < NN; i++) {\r\n                            qp[i] = pv = pv * s + p[i];\r\n                        }\r\n                        mp = Math.abs(pv);\r\n\r\n                        // Compute a rigorous bound on the error in evaluating p\r\n                        ms = Math.abs(s);\r\n                        ee = 0.5 * Math.abs(qp[0]);\r\n                        for(i = 1; i < NN; i++) {\r\n                            ee = ee * ms + Math.abs(qp[i]);\r\n                        }\r\n\r\n                        // Iteration has converged sufficiently if the polynomial value is less than\r\n                        // 20 times this bound\r\n                        if(mp <= 20.0 * DBL_EPSILON * (2.0 * ee - mp)) {\r\n                            iPar.NZ = 1;\r\n                            iPar.szr = s;\r\n                            iPar.szi = 0.0;\r\n                            break;\r\n                        }\r\n                        j++;\r\n                        // Stop iteration after 10 steps\r\n                        if(j > 10)\r\n                            break;\r\n\r\n                        if(j >= 2) {\r\n                            if((Math.abs(t) <= 0.001 * Math.abs(-t + s)) && (mp > omp)) {\r\n                                // A cluster of zeros near the real axis has been encountered.\r\n                                // Return with iFlag set to initiate a quadratic iteration.\r\n                                dumFlag = 1;\r\n                                iPar.a = s;\r\n                                break;\r\n                            } // End if ((fabs(t) <= 0.001*fabs(s - t)) && (mp > omp))\r\n                        } //End if (j >= 2)\r\n\r\n                        // Return if the polynomial value has increased significantly\r\n                        omp = mp;\r\n\r\n                        // Compute t, the next polynomial and the new iterate\r\n                        qk[0] = kv = K[0];\r\n                        for(i = 1; i < N; i++) {\r\n                            qk[i] = kv = kv * s + K[i];\r\n                        }\r\n\r\n                        if(Math.abs(kv) > Math.abs(K[nm1]) * 10.0 * DBL_EPSILON) {\r\n                            // Use the scaled form of the recurrence if the value of K at s is non-zero\r\n                            t = -(pv / kv);\r\n                            K[0] = qp[0];\r\n                            for(i = 1; i < N; i++) {\r\n                                K[i] = t * qk[i - 1] + qp[i];\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Use unscaled form\r\n                            K[0] = 0.0;\r\n                            for(i = 1; i < N; i++)\r\n                                K[i] = qk[i - 1];\r\n                        }\r\n\r\n                        kv = K[0];\r\n                        for(i = 1; i < N; i++) {\r\n                            kv = kv * s + K[i];\r\n                        }\r\n                        t = ((Math.abs(kv) > (Math.abs(K[nm1]) * 10.0 * DBL_EPSILON)) ? -(pv / kv) : 0.0);\r\n                        s += t;\r\n                    }\r\n                    return dumFlag;\r\n                }\r\n\r\n                function Fxshfr_ak1(DBL_EPSILON, MDP1, L2, sr, v, K, N, p, NN, qp, u, iPar) {\r\n\r\n                    // Computes up to L2 fixed shift K-polynomials, testing for convergence in the linear or\r\n                    // quadratic case. Initiates one of the variable shift iterations and returns with the\r\n                    // number of zeros found.\r\n                    // L2\tlimit of fixed shift steps\r\n                    // iPar is a dummy variable for passing in the five parameters--NZ, lzi, lzr, szi, and szr--by reference\r\n                    // NZ\tnumber of zeros found\r\n                    var sdPar = new Object(), // sdPar is a dummy variable for passing the two parameters--a and b--into QuadSD_ak1 by reference\r\n                            calcPar = new Object(),\r\n                            // calcPar is a dummy variable for passing the nine parameters--a1, a3, a7, c, d, e, f, g, and h --into calcSC_ak1 by reference\r\n\r\n                            qk = new Array(MDP1),\r\n                            svk = new Array(MDP1),\r\n                            a, b, betas, betav, oss, ots, otv, ovv, s, ss, ts, tss, tv, tvv, ui, vi, vv,\r\n                            fflag, i, iFlag = 1, j, spass, stry, tFlag, vpass, vtry;     // Integer variables\r\n\r\n                    iPar.NZ = 0;\r\n                    betav = betas = 0.25;\r\n                    oss = sr;\r\n                    ovv = v;\r\n\r\n                    //Evaluate polynomial by synthetic division\r\n                    sdPar.b = sdPar.a = 0.0;\r\n                    QuadSD_ak1(NN, u, v, p, qp, sdPar);\r\n                    a = sdPar.a;\r\n                    b = sdPar.b;\r\n                    calcPar.h = calcPar.g = calcPar.f = calcPar.e = calcPar.d = calcPar.c = calcPar.a7 = calcPar.a3 = calcPar.a1 = 0.0;\r\n                    tFlag = calcSC_ak1(DBL_EPSILON, N, a, b, calcPar, K, u, v, qk);\r\n\r\n                    for(j = 0; j < L2; j++) {\r\n                        fflag = 1;\r\n\r\n                        // Calculate next K polynomial and estimate v\r\n                        nextK_ak1(DBL_EPSILON, N, tFlag, a, b, calcPar, K, qk, qp);\r\n                        tFlag = calcSC_ak1(DBL_EPSILON, N, a, b, calcPar, K, u, v, qk);\r\n\r\n                        // Use sdPar for passing in uu and vv instead of defining a brand-new variable.\r\n                        // sdPar.a = ui, sdPar.b = vi\r\n                        newest_ak1(tFlag, sdPar, a, calcPar.a1, calcPar.a3, calcPar.a7, b, calcPar.c, calcPar.d, calcPar.f, calcPar.g, calcPar.h, u, v, K, N, p);\r\n                        ui = sdPar.a;\r\n                        vv = vi = sdPar.b;\r\n\r\n                        // Estimate s\r\n                        ss = ((K[N - 1] != 0.0) ? -(p[N] / K[N - 1]) : 0.0);\r\n                        ts = tv = 1.0;\r\n\r\n                        if((j != 0) && (tFlag != 3)) {\r\n                            // Compute relative measures of convergence of s and v sequences\r\n                            tv = ((vv != 0.0) ? Math.abs((vv - ovv) / vv) : tv);\r\n                            ts = ((ss != 0.0) ? Math.abs((ss - oss) / ss) : ts);\r\n\r\n                            // If decreasing, multiply the two most recent convergence measures\r\n                            tvv = ((tv < otv) ? tv * otv : 1.0);\r\n                            tss = ((ts < ots) ? ts * ots : 1.0);\r\n\r\n                            // Compare with convergence criteria\r\n                            vpass = ((tvv < betav) ? 1 : 0);\r\n                            spass = ((tss < betas) ? 1 : 0);\r\n\r\n                            if((spass) || (vpass)) {\r\n\r\n                                // At least one sequence has passed the convergence test.\r\n                                // Store variables before iterating\r\n\r\n                                for(i = 0; i < N; i++) {\r\n                                    svk[i] = K[i];\r\n                                }\r\n                                s = ss;\r\n\r\n                                // Choose iteration according to the fastest converging sequence\r\n\r\n                                stry = vtry = 0;\r\n\r\n                                for(; ; ) {\r\n                                    if((fflag && ((fflag = 0) == 0)) && ((spass) && (!vpass || (tss < tvv)))) {\r\n                                        ;// Do nothing. Provides a quick \"short circuit\".\r\n                                    }\r\n                                    else {\r\n                                        QuadIT_ak1(DBL_EPSILON, N, iPar, ui, vi, qp, NN, sdPar, p, qk, calcPar, K);\r\n                                        a = sdPar.a;\r\n                                        b = sdPar.b;\r\n\r\n                                        if((iPar.NZ) > 0)\r\n                                            return;\r\n\r\n                                        // Quadratic iteration has failed. Flag that it has been tried and decrease the\r\n                                        // convergence criterion\r\n                                        iFlag = vtry = 1;\r\n                                        betav *= 0.25;\r\n\r\n                                        // Try linear iteration if it has not been tried and the s sequence is converging\r\n                                        if(stry || (!spass)) {\r\n                                            iFlag = 0;\r\n                                        }\r\n                                        else {\r\n                                            for(i = 0; i < N; i++)\r\n                                                K[i] = svk[i];\r\n                                        }\r\n                                    }\r\n                                    //fflag = 0;\r\n                                    if(iFlag != 0) {\r\n                                        // Use sdPar for passing in s instead of defining a brand-new variable.\r\n                                        // sdPar.a = s\r\n                                        sdPar.a = s;\r\n                                        iFlag = RealIT_ak1(DBL_EPSILON, iPar, sdPar, N, p, NN, qp, K, qk);\r\n                                        s = sdPar.a;\r\n\r\n                                        if((iPar.NZ) > 0)\r\n                                            return;\r\n\r\n                                        // Linear iteration has failed. Flag that it has been tried and decrease the\r\n                                        // convergence criterion\r\n                                        stry = 1;\r\n                                        betas *= 0.25;\r\n\r\n                                        if(iFlag != 0) {\r\n                                            // If linear iteration signals an almost double real zero, attempt quadratic iteration\r\n                                            ui = -(s + s);\r\n                                            vi = s * s;\r\n                                            continue;\r\n\r\n                                        }\r\n                                    }\r\n\r\n                                    // Restore variables\r\n                                    for(i = 0; i < N; i++)\r\n                                        K[i] = svk[i];\r\n\r\n                                    // Try quadratic iteration if it has not been tried and the v sequence is converging\r\n                                    if(!vpass || vtry)\r\n                                        break;\t\t// Break out of infinite for loop\r\n\r\n                                }\r\n\r\n                                // Re-compute qp and scalar values to continue the second stage\r\n\r\n                                QuadSD_ak1(NN, u, v, p, qp, sdPar);\r\n                                a = sdPar.a;\r\n                                b = sdPar.b;\r\n\r\n                                tFlag = calcSC_ak1(DBL_EPSILON, N, a, b, calcPar, K, u, v, qk);\r\n                            }\r\n                        }\r\n                        ovv = vv;\r\n                        oss = ss;\r\n                        otv = tv;\r\n                        ots = ts;\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                function rpSolve(degPar, p, zeror, zeroi) {\r\n                    var N = degPar.Degree,\r\n                            RADFAC = 3.14159265358979323846 / 180, // Degrees-to-radians conversion factor = PI/180\r\n                            LB2 = Math.LN2, // Dummy variable to avoid re-calculating this value in loop below\r\n                            MDP1 = degPar.Degree + 1,\r\n                            K = new Array(MDP1),\r\n                            pt = new Array(MDP1),\r\n                            qp = new Array(MDP1),\r\n                            temp = new Array(MDP1),\r\n                            // qPar is a dummy variable for passing the four parameters--sr, si, lr, and li--by reference\r\n                            qPar = new Object(),\r\n                            // Fxshfr_Par is a dummy variable for passing parameters by reference : NZ, lzi, lzr, szi, szr);\r\n                            Fxshfr_Par = new Object(),\r\n                            bnd, DBL_EPSILON, df, dx, factor, ff, moduli_max, moduli_min, sc, x, xm,\r\n                            aa, bb, cc, sr, t, u, xxx,\r\n                            j, jj, l, NM1, NN, zerok;// Integer variables\r\n\r\n                    // Calculate the machine epsilon and store in the variable DBL_EPSILON.\r\n                    // To calculate this value, just use existing variables rather than create new ones that will be used only for this code block\r\n                    aa = 1.0;\r\n                    do {\r\n                        DBL_EPSILON = aa;\r\n                        aa /= 2;\r\n                        bb = 1.0 + aa;\r\n                    }\r\n                    while(bb > 1.0);\r\n\r\n                    var LO = Number.MIN_VALUE / DBL_EPSILON,\r\n                            cosr = Math.cos(94.0 * RADFAC), // = -0.069756474\r\n                            sinr = Math.sin(94.0 * RADFAC), // = 0.99756405\r\n                            xx = Math.sqrt(0.5), // = 0.70710678\r\n                            yy = -xx;\r\n\r\n                    Fxshfr_Par.NZ = j = 0;\r\n                    Fxshfr_Par.szr = Fxshfr_Par.szi = Fxshfr_Par.lzr = Fxshfr_Par.lzi = 0.0;\r\n\r\n                    // Remove zeros at the origin, if any\r\n                    while(p[N] == 0) {\r\n                        zeror[j] = zeroi[j] = 0;\r\n                        N--;\r\n                        j++;\r\n                    }\r\n                    NN = N + 1;\r\n\r\n                    // >>>>> Begin Main Loop <<<<<\r\n                    while(N >= 1) { // Main loop\r\n                        // Start the algorithm for one zero\r\n                        if(N <= 2) {\r\n                            // Calculate the final zero or pair of zeros\r\n                            if(N < 2) {\r\n                                zeror[degPar.Degree - 1] = -(p[1] / p[0]);\r\n                                zeroi[degPar.Degree - 1] = 0;\r\n                            }\r\n                            else {\r\n                                qPar.li = qPar.lr = qPar.si = qPar.sr = 0.0;\r\n                                Quad_ak1(p[0], p[1], p[2], qPar);\r\n                                zeror[degPar.Degree - 2] = qPar.sr;\r\n                                zeroi[degPar.Degree - 2] = qPar.si;\r\n                                zeror[degPar.Degree - 1] = qPar.lr;\r\n                                zeroi[degPar.Degree - 1] = qPar.li;\r\n                            }\r\n                            break;\r\n                        }\r\n\r\n                        // Find the largest and smallest moduli of the coefficients\r\n                        moduli_max = 0.0;\r\n                        moduli_min = Number.MAX_VALUE;\r\n\r\n                        for(i = 0; i < NN; i++) {\r\n                            x = Math.abs(p[i]);\r\n                            if(x > moduli_max)\r\n                                moduli_max = x;\r\n                            if((x != 0) && (x < moduli_min))\r\n                                moduli_min = x;\r\n                        }\r\n\r\n                        // Scale if there are large or very small coefficients\r\n                        // Computes a scale factor to multiply the coefficients of the polynomial. The scaling\r\n                        // is done to avoid overflow and to avoid undetected underflow interfering with the\r\n                        // convergence criterion.\r\n                        // The factor is a power of the base.\r\n                        sc = LO / moduli_min;\r\n\r\n                        if(((sc <= 1.0) && (moduli_max >= 10)) || ((sc > 1.0) && (Number.MAX_VALUE / sc >= moduli_max))) {\r\n                            sc = ((sc == 0) ? Number.MIN_VALUE : sc);\r\n                            l = Math.floor(Math.log(sc) / LB2 + 0.5);\r\n                            factor = Math.pow(2.0, l);\r\n                            if(factor != 1.0) {\r\n                                for(i = 0; i < NN; i++)\r\n                                    p[i] *= factor;\r\n                            }\r\n                        }\r\n\r\n                        // Compute lower bound on moduli of zeros\r\n                        for(var i = 0; i < NN; i++)\r\n                            pt[i] = Math.abs(p[i]);\r\n                        pt[N] = -(pt[N]);\r\n                        NM1 = N - 1;\r\n\r\n                        // Compute upper estimate of bound\r\n                        x = Math.exp((Math.log(-pt[N]) - Math.log(pt[0])) / N);\r\n\r\n                        if(pt[NM1] != 0) {\r\n                            // If Newton step at the origin is better, use it\r\n                            xm = -pt[N] / pt[NM1];\r\n                            x = ((xm < x) ? xm : x);\r\n                        }\r\n\r\n                        // Chop the interval (0, x) until ff <= 0\r\n                        xm = x;\r\n                        do {\r\n                            x = xm;\r\n                            xm = 0.1 * x;\r\n                            ff = pt[0];\r\n                            for(var i = 1; i < NN; i++) {\r\n                                ff = ff * xm + pt[i];\r\n                            }\r\n                        }\r\n                        while(ff > 0); // End do-while loop\r\n\r\n                        dx = x;\r\n                        // Do Newton iteration until x converges to two decimal places\r\n\r\n                        do {\r\n                            df = ff = pt[0];\r\n                            for(var i = 1; i < N; i++) {\r\n                                ff = x * ff + pt[i];\r\n                                df = x * df + ff;\r\n                            } // End for i\r\n                            ff = x * ff + pt[N];\r\n                            dx = ff / df;\r\n                            x -= dx;\r\n                        }\r\n                        while(Math.abs(dx / x) > 0.005); // End do-while loop\r\n\r\n                        bnd = x;\r\n\r\n                        // Compute the derivative as the initial K polynomial and do 5 steps with no shift\r\n                        for(var i = 1; i < N; i++)\r\n                            K[i] = (N - i) * p[i] / N;\r\n                        K[0] = p[0];\r\n                        aa = p[N];\r\n                        bb = p[NM1];\r\n                        zerok = ((K[NM1] == 0) ? 1 : 0);\r\n\r\n                        for(jj = 0; jj < 5; jj++) {\r\n                            cc = K[NM1];\r\n                            if(zerok) {\r\n                                // Use unscaled form of recurrence\r\n                                for(var i = 0; i < NM1; i++) {\r\n                                    j = NM1 - i;\r\n                                    K[j] = K[j - 1];\r\n                                } // End for i\r\n                                K[0] = 0;\r\n                                zerok = ((K[NM1] == 0) ? 1 : 0);\r\n                            }\r\n                            else {\r\n                                // Used scaled form of recurrence if value of K at 0 is nonzero\r\n                                t = -aa / cc;\r\n                                for(var i = 0; i < NM1; i++) {\r\n                                    j = NM1 - i;\r\n                                    K[j] = t * K[j - 1] + p[j];\r\n                                } // End for i\r\n                                K[0] = p[0];\r\n                                zerok = ((Math.abs(K[NM1]) <= Math.abs(bb) * DBL_EPSILON * 10.0) ? 1 : 0);\r\n                            }\r\n                        }\r\n\r\n                        // Save K for restarts with new shifts\r\n                        for(var i = 0; i < N; i++)\r\n                            temp[i] = K[i];\r\n\r\n                        // Loop to select the quadratic corresponding to each new shift\r\n                        for(jj = 1; jj <= 20; jj++) {\r\n\r\n                            // Quadratic corresponds to a double shift to a non-real point and its\r\n                            // complex conjugate. The point has modulus BND and amplitude rotated\r\n                            // by 94 degrees from the previous shift.\r\n\r\n                            xxx = -(sinr * yy) + cosr * xx;\r\n                            yy = sinr * xx + cosr * yy;\r\n                            xx = xxx;\r\n                            sr = bnd * xx;\r\n                            u = -(2.0 * sr);\r\n\r\n                            // Second stage calculation, fixed quadratic\r\n                            Fxshfr_ak1(DBL_EPSILON, MDP1, 20 * jj, sr, bnd, K, N, p, NN, qp, u, Fxshfr_Par);\r\n\r\n                            if(Fxshfr_Par.NZ != 0) {\r\n                                // The second stage jumps directly to one of the third stage iterations and\r\n                                // returns here if successful. Deflate the polynomial, store the zero or\r\n                                // zeros, and return to the main algorithm.\r\n                                j = degPar.Degree - N;\r\n                                zeror[j] = Fxshfr_Par.szr;\r\n                                zeroi[j] = Fxshfr_Par.szi;\r\n                                NN = NN - Fxshfr_Par.NZ;\r\n                                N = NN - 1;\r\n                                for(var i = 0; i < NN; i++)\r\n                                    p[i] = qp[i];\r\n                                if(Fxshfr_Par.NZ != 1) {\r\n                                    zeror[j + 1] = Fxshfr_Par.lzr;\r\n                                    zeroi[j + 1] = Fxshfr_Par.lzi;\r\n                                }\r\n                                break;\r\n                            }\r\n                            else {\r\n                                // If the iteration is unsuccessful, another quadratic is chosen after restoring K\r\n                                for(var i = 0; i < N; i++) {\r\n                                    K[i] = temp[i];\r\n                                }\r\n                            }\r\n                        }\r\n                        // Return with failure if no convergence with 20 shifts\r\n                        if(jj > 20) {\r\n                            degPar.Degree -= N;\r\n                            break;\r\n                        }\r\n                    }\r\n                    // >>>>> End Main Loop <<<<<\r\n                    return;\r\n                }\r\n                //--> End Jenkins-Traub\r\n                rpSolve(degreePar, p, zeror, zeroi);\r\n\r\n                var l = zeroi.length;\r\n                //format the output\r\n                for(i = 0; i < l; i++) {\r\n                    // We round the imaginary part to avoid having something crazy like 5.67e-16.\r\n                    var img = round(zeroi[i], decp + 8),\r\n                            real = round(zeror[i], decp + 8);\r\n                    // Did the rounding pay off? If the rounding did nothing more than chop off a few digits then no.\r\n                    // If the rounding results in a a number at least 3 digits shorter we'll keep it else we'll keep \r\n                    // the original otherwise the rounding was worth it.\r\n                    real = decp - String(real).length > 2 ? real : zeror[i];\r\n                    var sign = img < 0 ? '-' : '';\r\n\r\n                    // Remove the zeroes\r\n                    if(real === 0) {\r\n                        real = '';\r\n                    }\r\n                    if(img === 0) {\r\n                        img = '';\r\n                    }\r\n\r\n                    // Remove 1 as the multiplier and discard imaginary part if there isn't one.\r\n                    img = Math.abs(img) === 1 ? sign + 'i' : (img ? img + '*i' : '');\r\n\r\n                    var num = (real && img) ? real + '+' + img : real + img;\r\n                    zeror[i] = num.replace(/\\+\\-/g, '-');\r\n                }\r\n                return zeror;\r\n            }\r\n        },\r\n        roots: function (symbol) {\r\n\r\n            if(symbol.isConstant(true, true)) {\r\n                return core.Utils.nroots(symbol);\r\n            }\r\n            var roots = __.proots(symbol).map(function (x) {\r\n                return _.parse(x);\r\n            });\r\n            return core.Vector.fromArray(roots);\r\n        },\r\n        froot: function (f, guess, dx) {\r\n            var newtonraph = function (xn) {\r\n                var mesh = 1e-12,\r\n                        // If the derivative was already provided then don't recalculate.\r\n                        df = dx ? dx : core.Utils.build(core.Calculus.diff(f.clone())),\r\n                        // If the function was passed in as a function then don't recalculate.\r\n                        fn = f instanceof Function ? f : core.Utils.build(f),\r\n                        max = 10000,\r\n                        done = false,\r\n                        safety = 0;\r\n                while(!done) {\r\n                    var x = xn - (fn(xn) / df(xn));\r\n                    //absolute values for both x & xn ensures that we indeed have the radius    \r\n                    var r = Math.abs(x) - Math.abs(xn),\r\n                            delta = Math.abs(r);\r\n                    xn = x;\r\n\r\n                    if(delta < mesh)\r\n                        done = true;\r\n                    else if(safety > max) {\r\n                        xn = null;\r\n                        done = true;\r\n                    }\r\n\r\n                    safety++;\r\n                }\r\n                return xn;\r\n            };\r\n            return newtonraph(Number(guess));\r\n        },\r\n        quad: function (a, b, c) {\r\n            var q = function (a, b, c, sign) {\r\n                return _.parse('-(' + b + '+' + sign + '*sqrt((' + b + ')^2-4*(' + a + ')*(' + c + ')))/(2*' + a + ')');\r\n            };\r\n            return [q(a, b, c, 1), q(a, b, c, -1)];\r\n        },\r\n        sumProd: function (a, b) {\r\n            return __.quad(-b, a, -1).map(function (x) {\r\n                return x.invert();\r\n            });\r\n        },\r\n        coeffs: function (symbol, wrt, coeffs) {\r\n            wrt = String(wrt);\r\n            symbol = _.expand(symbol);\r\n            coeffs = coeffs || [new Symbol(0)];\r\n            //we cannot get coeffs for group EX\r\n            if(symbol.group === EX && symbol.contains(wrt, true))\r\n                _.error('Unable to get coefficients using expression ' + symbol.toString());\r\n            var vars = variables(symbol);\r\n            if(vars.length === 1 && vars[0] === wrt && !symbol.isImaginary()) {\r\n                var a = new Polynomial(symbol).coeffs.map(function (x) {\r\n                    return new Symbol(x);\r\n                });\r\n\r\n                for(var i = 0, l = a.length; i < l; i++) {\r\n                    var coeff = a[i],\r\n                            e = coeffs[i];\r\n                    if(e)\r\n                        coeff = _.add(e, coeff);\r\n                    coeffs[i] = coeff; //transfer it all over\r\n                }\r\n            }\r\n            else {\r\n                if(!wrt)\r\n                    _.error('Polynomial contains more than one variable. Please specify which variable is to be used!');\r\n                //if the variable isn't part of this polynomial then we're looking at x^0\r\n\r\n                if(vars.indexOf(wrt) === -1) {\r\n                    coeffs[0] = _.add(symbol, coeffs[0]);\r\n                }\r\n                else {\r\n                    coeffs = coeffs || [new Symbol(0)];\r\n                    if(symbol.group === CB) {\r\n                        var s = symbol.symbols[wrt];\r\n                        if(!s)\r\n                            _.error('Expression is not a polynomial!');\r\n                        var p = Number(s.power);\r\n                        coeff = _.divide(symbol.clone(), s.clone());\r\n                        if(coeff.contains(wrt, true) || p < 0 || !isInt(p))\r\n                            _.error('Expression is not a polynomial!');\r\n                        var e = coeffs[p];\r\n                        if(e)\r\n                            coeff = _.add(e, coeff);\r\n                        coeffs[p] = coeff;\r\n                    }\r\n                    else if(symbol.group === CP) {\r\n                        symbol.each(function (x) {\r\n                            __.coeffs(x.clone(), wrt, coeffs);\r\n                        }, true);\r\n                    }\r\n                }\r\n            }\r\n            //fill holes\r\n            for(var i = 0, l = coeffs.length; i < l; i++)\r\n                if(typeof coeffs[i] === 'undefined')\r\n                    coeffs[i] = new Symbol(0);\r\n\r\n            return coeffs;\r\n        },\r\n        /**\r\n         * Get's all the powers of a particular polynomial including the denominators. The denominators powers\r\n         * are returned as negative. All remaining polynomials are returned as zero order polynomials.\r\n         * for example polyPowers(x^2+1/x+y+t) will return [ '-1', 0, '2' ]\r\n         * @param {Symbol} e\r\n         * @param {String} for_variable\r\n         * @param {Array} powers\r\n         * @returns {Array} An array of the powers\r\n         */\r\n        //assumes you've already verified that it's a polynomial\r\n        polyPowers: function (e, for_variable, powers) {\r\n            powers = powers || [];\r\n            var g = g = e.group;\r\n            if(g === PL && for_variable === e.value) {\r\n                powers = powers.concat(keys(e.symbols));\r\n            }\r\n            else if(g === CP) {\r\n                for(var s in e.symbols) {\r\n                    var symbol = e.symbols[s];\r\n                    var g = symbol.group, v = symbol.value;\r\n                    if(g === S && for_variable === v)\r\n                        powers.push(symbol.power);\r\n                    else if(g === PL || g === CP)\r\n                        powers = __.polyPowers(symbol, for_variable, powers);\r\n                    else if(g === CB && symbol.contains(for_variable)) {\r\n                        var t = symbol.symbols[for_variable];\r\n                        if(t)\r\n                            powers.push((t.power));\r\n                    }\r\n                    else if(g === N || for_variable !== v)\r\n                        powers.push(0);\r\n                }\r\n            }\r\n            else if(g === CB && e.contains(for_variable)) {\r\n                powers.push(core.Utils.decompose_fn(e, for_variable, true).x.power);\r\n            }\r\n            return core.Utils.arrayUnique(powers).sort();\r\n        },\r\n        //The factor object\r\n        Factor: {\r\n            //splits the symbol in symbol and constant\r\n            split: function (symbol) {\r\n                var c = new Symbol(1); //the constants part\r\n                var s = new Symbol(1); //the symbolic part\r\n                __.Factor.factor(symbol, new Factors()).each(function (x) {\r\n                    var t = _.parse(x);\r\n                    if(x.isConstant(true)) {\r\n                        c = _.multiply(c, t);\r\n                    }\r\n                    else {\r\n                        s = _.multiply(s, t);\r\n                    }\r\n                });\r\n                return [c, s];\r\n            },\r\n            mix: function (o, include_negatives) {\r\n                var factors = keys(o);\r\n                var l = factors.length;\r\n                var m = [];//create a row which we'r going to be mixing\r\n                for(var i = 0; i < l; i++) {\r\n                    var factor = factors[i],\r\n                            p = o[factor];\r\n                    var ll = m.length;\r\n                    for(var j = 0; j < ll; j++) {\r\n                        var t = m[j] * factor;\r\n                        m.push(t);\r\n                        if(include_negatives)\r\n                            m.push(-t);\r\n                    }\r\n\r\n                    for(var j = 1; j <= p; j++)\r\n                        m.push(Math.pow(factor, j));\r\n                }\r\n                return m;\r\n            },\r\n            //TODO: this method is to replace common factoring\r\n            common: function (symbol, factors) {\r\n                try {\r\n                    if(symbol.group === CP) {\r\n                        //this may have the unfortunate side effect of expanding and factoring again\r\n                        //to only end up with the same result. \r\n                        //TODO: try to avoid this\r\n                        //collect the symbols and sort to have the longest first. Thinking is that the longest terms \r\n                        //has to contain the variable in order for it to be factorable\r\n                        var symbols = _.expand(symbol.clone(), true).collectSymbols(null, null, function (a, b) {\r\n                            return (b.length || 1) - (a.length || 1);\r\n                        });\r\n\r\n                        var map = {}; //create a map of common factors\r\n                        var coeffs = [];\r\n                        for(var i = 0; i < symbols.length; i++) {\r\n                            var sym = symbols[i];\r\n                            coeffs.push(sym.multiplier.clone());\r\n                            sym.each(function (x) {\r\n                                var p = Number(x.power);\r\n                                //This check exits since we have a symbolic power.\r\n                                //For the future... think about removing this check and modify for symbolic powers\r\n                                if(isNaN(p))\r\n                                    throw new Error('exiting');\r\n                                //loop through the symbols and lump together common terms\r\n                                if(x.value in map) {\r\n                                    if(p < map[x.value][0])\r\n                                        map[x.value][0] = p;\r\n                                    map[x.value][1].push(x);\r\n                                }\r\n                                else\r\n                                    map[x.value] = [p, [x]];\r\n                            });\r\n                        }\r\n                        //the factor\r\n                        var factor = new Symbol(1);\r\n                        for(var x in map) {\r\n                            //if this factor is found in all terms since the length of \r\n                            //matching variable terms matches the number of original terms\r\n                            if(map[x][1].length === symbols.length) {\r\n                                //generate a symbol and multiply into the factor\r\n                                factor = _.multiply(factor, _.pow(new Symbol(x), new Symbol(map[x][0])));\r\n                            }\r\n                        }\r\n                        //get coefficient factor\r\n                        var c = core.Math2.QGCD.apply(null, coeffs);\r\n\r\n                        if(!c.equals(1)) {\r\n                            factors.add(new Symbol(c));\r\n                            for(var i = 0; i < symbols.length; i++) {\r\n                                symbols[i].multiplier = symbols[i].multiplier.divide(c);\r\n                            }\r\n                        }\r\n\r\n                        //if we actuall found any factors\r\n                        if(!factor.equals(1)) {\r\n                            factors.add(factor);\r\n                            symbol = new Symbol(0);\r\n                            for(var i = 0; i < symbols.length; i++) {\r\n                                symbol = _.add(symbol, _.divide(symbols[i], factor.clone()));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                catch(e) {\r\n                    ;\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            zeroes: function (symbol, factors) {\r\n                var exit = function () {\r\n                    throw new core.exceptions.ValueLimitExceededError('Exiting');\r\n                };\r\n                try {\r\n                    var vars, term, sum, p, e;\r\n                    symbol = _.expand(symbol.clone());\r\n                    e = symbol.toString();\r\n                    vars = variables(symbol);\r\n\r\n                    sum = new Symbol(0);\r\n\r\n                    var terms = [];\r\n                    var powers = [];\r\n\r\n                    //start setting each variable to zero\r\n                    for(var i = 0, l = vars.length; i < vars.length; i++) {\r\n                        var subs = {};\r\n                        //we want to create a subs object with all but the current variable set to zero\r\n                        for(var j = 0; j < l; j++)\r\n                            if(i !== j) //make sure we're not looking at the same variable\r\n                                subs[vars[j]] = 0;\r\n                        term = _.parse(e, subs);\r\n                        var tp = term.power;\r\n                        //the temporary power has to be an integer as well\r\n                        if(!isInt(tp))\r\n                            exit();\r\n                        terms.push(term);\r\n                        powers.push(term.power);\r\n                    }\r\n\r\n                    //get the gcd. This will be the p in (a^n+b^m)^p\r\n                    //if the gcd equals 1 meaning n = m then we need a tie breakder\r\n                    if(core.Utils.allSame(powers)) {\r\n                        //get p given x number of terms\r\n                        var n_terms = symbol.length;\r\n                        //the number of zeroes determines\r\n                        var n_zeroes = terms.length;\r\n                        if(n_zeroes === 2) {\r\n                            p = new Frac(powers[0] / (n_terms - 1));\r\n                        }\r\n                        if(n_zeroes === 3) {\r\n                            p = new Frac(powers[0] / Math.round((Math.sqrt(8 * n_terms - 1) - 3) / 2));\r\n                        }\r\n                        /*\r\n                         //get the lowest possible power\r\n                         //e.g. given b^4+2*a^2*b^2+a^4, the power we're looking for would be 2\r\n                         symbol.each(function(x) {\r\n                         if(x.group === CB)\r\n                         x.each(function(y) {\r\n                         if(!p || y.power.lessThan(p))\r\n                         //p = Number(y.power);\r\n                         p = y.power;\r\n                         });\r\n                         else if(!p || x.power.lessThan(p))\r\n                         //p = Number(x.power);\r\n                         p = x.power;\r\n                         });\r\n                         */\r\n                    }\r\n                    else\r\n                        //p is just the gcd of the powers\r\n                        p = core.Math2.QGCD.apply(null, powers);\r\n\r\n                    //if we don't have an integer then exit\r\n                    if(!isInt(p))\r\n                        exit();\r\n\r\n                    //build the factor\r\n                    for(var i = 0; i < terms.length; i++) {\r\n                        var t = terms[i];\r\n                        var n = t.power.clone().divide(p);\r\n                        t.multiplier = new Frac(Math.pow(t.multiplier, 1 / n));\r\n                        t.power = p.clone();\r\n                        sum = _.add(sum, t);\r\n                    }\r\n\r\n                    //by now we have the factor of zeroes. We'll know if we got it right because \r\n                    //we'll get a remainder of zero each time we divide by it\r\n                    if(sum.group !== CP)\r\n                        return symbol; //nothing to do\r\n\r\n                    while(true) {\r\n                        var d = __.div(symbol.clone(), sum.clone());\r\n                        if(d[1].equals(0)) {\r\n                            symbol = d[0];\r\n                            factors.add(sum.clone());\r\n                            if(symbol.equals(1)) //we've reached 1 so done.\r\n                                break;\r\n                        }\r\n                        else\r\n                            break;\r\n                    }\r\n                }\r\n                catch(e) {\r\n                }\r\n                ;\r\n\r\n                return symbol;\r\n            },\r\n            factor: function (symbol, factors) {\r\n                // Don't try to factor constants\r\n                if(symbol.isConstant()) {\r\n                    return core.Math2.factor(symbol);\r\n                }\r\n\r\n                var _symbol = _.parse(symbol);\r\n                var retval = __.Factor._factor(_symbol, factors);\r\n                if(retval.equals(symbol)) {\r\n                    return retval;\r\n                }\r\n\r\n                if(retval.group === CB) {\r\n                    var t = new Symbol(1);\r\n                    var p = _.parse(retval.power);\r\n                    //store the multiplier and strip it\r\n                    var m = _.parse(retval.multiplier);\r\n\r\n                    retval.toUnitMultiplier();\r\n\r\n                    /* \r\n                     * NOTE: for sign issues with factor START DEBUGGING HERE\r\n                     */\r\n                    //move the sign to t\r\n                    if(retval.multiplier.lessThan(0)) {\r\n                        t.negate();\r\n                        retval.negate();\r\n                    }\r\n\r\n                    retval.each(function (x) {\r\n                        // Related to #566. Since the symbol's group may not have been properly\r\n                        // updated, it's easier to just parse the symbol and have the parser \r\n                        // do the update for us.\r\n                        var factored = _.parse(__.Factor._factor(x));\r\n\r\n                        if(factored.group === CB) {\r\n                            // Include the multiplier\r\n                            m = _.multiply(m, Symbol.create(factored.multiplier));\r\n                            factored.each(function (y) {\r\n                                var _factored = _.parse(__.Factor._factor(y));\r\n                                t = _.multiply(t, _factored);\r\n                                if(_factored.group === CB) {\r\n                                    m = _.multiply(m, Symbol.create(_factored.multiplier));\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            t = _.multiply(t, factored);\r\n                        }\r\n                    });\r\n\r\n                    //put back the multiplier and power\r\n                    retval = _.pow(_.multiply(m, t), p);\r\n                }\r\n\r\n                return retval;\r\n            },\r\n            quadFactor: function (symbol, factors) {\r\n                if(symbol.isPoly() && __.degree(symbol.equals(2))) {\r\n                    //We've  already checked that we're dealing with a polynomial\r\n                    var v = core.Utils.variables(symbol)[0]; //get the variable\r\n                    var coeffs = __.coeffs(symbol, v);\r\n                    //factor the lead coefficient\r\n                    var cf = __.Factor._factor(coeffs[2].clone());\r\n                    //check if we have factors\r\n                    if(cf.group === CB) {\r\n                        var symbols = cf.collectSymbols();\r\n                        //if the factors are greater than 2 we're done so exit\r\n                        if(symbols.length > 2)\r\n                            return symbol;\r\n                        //if we have two factors then attempt to factor the polynomial\r\n                        //let the factors be f1 and f1\r\n                        //let the factors be (ax+b)(cx+d)\r\n                        //let the coefficients be c1x^2+c2x+c3\r\n                        //then a(x1)+c(x2)=c2 and x1*x2=c3\r\n                        //we can solve for x1 and x2\r\n                        var c = _.multiply(_.parse(coeffs[0]), _.parse(symbols[0]));\r\n                        var b = _.parse(coeffs[1]).negate();\r\n                        var a = _.parse(symbols[1]);\r\n                        //solve the system\r\n                        var root = __.quad(a, b, c).filter(function (x) {\r\n                            if(core.Utils.isInt(x))\r\n                                return x;\r\n                        });\r\n                        //if we have one root then find the other one by dividing the constant\r\n                        if(root.length === 1) {\r\n                            var root1 = root[0];\r\n                            var root2 = _.divide(coeffs[0], _.parse(root1));\r\n                            if(core.Utils.isInt(root2)) {\r\n                                //we found them both\r\n                                factors.add(_.parse(format('({0})*({1})+({2})', symbols[1], v, root2)));\r\n                                factors.add(_.parse(format('({0})*({1})+({2})', symbols[0], v, root1)));\r\n                                symbol = new Symbol(1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return symbol;\r\n            },\r\n            cubeFactor: function (symbol, factors) {\r\n                if(symbol.isComposite()) {\r\n                    var symbols = symbol.collectSymbols();\r\n                    // The symbol should be in the form of a^3+-b^3. The length\r\n                    // should therefore only be two. If it's any different from this\r\n                    // then we're done\r\n                    if(symbols.length === 2) {\r\n                        // Store the signs and then strip them from the symbols\r\n                        var sign_a = symbols[0].sign();\r\n                        var a = symbols[0].clone().abs();\r\n                        var sign_b = symbols[1].sign();\r\n                        var b = symbols[1].clone().abs();\r\n                        // Check if they're cube\r\n                        if(a.isCube() && b.isCube()) {\r\n                            // Keep the negative sign on the right, meaning b is always negative.\r\n                            if(sign_a < sign_b) {\r\n                                // Swap the signs and then the values\r\n                                [sign_a, sign_b] = [sign_b, sign_a];\r\n                                [a, b] = [b, a];\r\n                            }\r\n\r\n                            // Get teh roots\r\n                            var m_root_a = _.parse(a.getNth(3));\r\n                            var m_root_b = _.parse(b.getNth(3));\r\n\r\n                            // Remove the cube for both\r\n                            var x = _.multiply(_.expand(_.pow(a.clone().toUnitMultiplier(), _.parse('1/3'))), m_root_a);\r\n                            var y = _.multiply(_.expand(_.pow(b.clone().toUnitMultiplier(), _.parse('1/3'))), m_root_b);\r\n\r\n                            if(sign_a === 1 && sign_b === -1) {\r\n                                // Apply difference of cubes rule\r\n                                factors.add(_.parse(format('(({0})-({1}))', x, y)));\r\n                                factors.add(_.parse(format('(({0})^2+({0})*({1})+({1})^2)', x, y)));\r\n                                symbol = Symbol(1);\r\n                            }\r\n                            else if(sign_a === 1 && sign_b === 1) {\r\n                                // Apply sum of cubes rule\r\n                                factors.add(_.parse(format('(({0})+({1}))', x, y)));\r\n                                factors.add(_.parse(format('(({0})^2-({0})*({1})+({1})^2)', x, y)));\r\n                                symbol = Symbol(1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            _factor: function (symbol, factors) {\r\n                var g = symbol.group;\r\n                //some items cannot be factored any further so return those right away\r\n                if(symbol.group === FN) {\r\n                    var arg = symbol.args[0];\r\n                    if(arg.group === S && arg.isSimple()) {\r\n                        return symbol;\r\n                    }\r\n                }\r\n                else if(symbol.group === S && symbol.isSimple()) {\r\n                    return symbol;\r\n                }\r\n\r\n                // Expand the symbol to get it in a predictable form. If this step\r\n                // is skipped some factors are missed.\r\n                //if(symbol.group === CP && !(even(symbol.power) && symbol.multiplier.lessThan(0))) {\r\n                if(symbol.group === CP) {\r\n                    symbol.distributeMultiplier(true);\r\n                    var t = new Symbol(0);\r\n                    symbol.each(function (x) {\r\n                        if((x.group === CP && x.power.greaterThan(1) || x.group === CB))\r\n                            x = _.expand(x);\r\n                        t = _.add(t, x);\r\n                    });\r\n                    t.power = symbol.power;\r\n\r\n                    symbol = t;\r\n                }\r\n\r\n                if(symbol.group === FN && symbol.fname !== 'sqrt') {\r\n                    symbol = core.Utils.evaluate(symbol);\r\n                }\r\n\r\n                //make a copy of the symbol to return if something goes wrong\r\n                var untouched = symbol.clone();\r\n                try {\r\n                    if(symbol.group === CB) {\r\n                        var p = _.parse(symbol.power);\r\n\r\n                        var den_array, num_array, den, num, dfact, nfact;\r\n                        //grab the denominator and strip the multiplier and power. Store them in an array\r\n                        den_array = __.Simplify.strip(symbol.getDenom());\r\n                        num_array = __.Simplify.strip(symbol.getNum());\r\n\r\n                        den = den_array.pop();\r\n                        num = num_array.pop();\r\n\r\n                        //if the numerator equals the symbol then we've hit the simplest form and then we're done\r\n                        if(num.equals(symbol)) {\r\n                            return symbol;\r\n                        }\r\n                        nfact = __.Factor.factor(num);\r\n                        dfact = __.Factor.factor(den);\r\n\r\n                        var n = __.Simplify.unstrip(num_array, nfact);\r\n                        var d = __.Simplify.unstrip(den_array, dfact);\r\n\r\n                        var retval = _.divide(n, d);\r\n\r\n                        return retval;\r\n                    }\r\n                    if(symbol.group === S) {\r\n                        return symbol; //absolutely nothing to do\r\n                    }\r\n\r\n                    if(symbol.isConstant()) {\r\n                        if(symbol.equals(1))\r\n                            return symbol.clone();\r\n                        var ret = core.Math2.factor(symbol);\r\n                        return ret;\r\n                    }\r\n\r\n                    var p = symbol.power.clone();\r\n\r\n                    if(isInt(p) && !(p.lessThan(0) && symbol.group === FN)) {\r\n                        var sign = p.sign();\r\n                        symbol.toLinear();\r\n                        factors = factors || new Factors();\r\n                        var map = {};\r\n                        symbol = _.parse(core.Utils.subFunctions(symbol, map));\r\n                        if(keys(map).length > 0) { //it might have functions\r\n                            factors.preAdd = function (factor) {\r\n                                var ret = _.parse(factor, core.Utils.getFunctionsSubs(map));\r\n                                return ret;\r\n                            };\r\n                        }\r\n\r\n                        //strip the power\r\n                        if(!symbol.isLinear()) {\r\n                            factors.pFactor = symbol.power.toString();\r\n                            symbol.toLinear();\r\n                        }\r\n\r\n                        var vars = variables(symbol);\r\n                        //bypass for imaginary. TODO: find a better solution\r\n                        if(symbol.isImaginary()) {\r\n                            vars.push(core.Settings.IMAGINARY);\r\n                        }\r\n                        var multiVar = vars.length > 1;\r\n\r\n                        //minor optimization. Seems to cut factor time by half in some cases.\r\n                        if(multiVar) {\r\n                            var all_S = true, all_unit = true;\r\n                            symbol.each(function (x) {\r\n                                if(x.group !== S)\r\n                                    all_S = false;\r\n                                if(!x.multiplier.equals(1))\r\n                                    all_unit = false;\r\n                            });\r\n\r\n                            if(all_S && all_unit) {\r\n                                return _.pow(_.parse(symbol, core.Utils.getFunctionsSubs(map)), _.parse(p));\r\n                            }\r\n                        }\r\n\r\n                        //factor the coefficients\r\n                        var coeff_factors = new Factors();\r\n\r\n                        symbol = __.Factor.coeffFactor(symbol, coeff_factors);\r\n\r\n                        coeff_factors.each(function (x) {\r\n                            // If the factor was negative but was within a square then it becomes positive\r\n                            if(even(p) && x.lessThan(0)) {\r\n                                x.negate();\r\n                            }\r\n\r\n                            if(sign < 0)\r\n                                x.invert();\r\n                            factors.add(x);\r\n                        });\r\n\r\n                        //factor the power\r\n                        var power_factors = new Factors();\r\n                        symbol = __.Factor.powerFactor(symbol, power_factors);\r\n                        power_factors.each(function (x) {\r\n                            if(sign < 0)\r\n                                x.invert();\r\n                            factors.add(x);\r\n                        });\r\n\r\n                        if(!multiVar) {\r\n                            //pass in vars[0] for safety\r\n                            var v = vars[0];\r\n\r\n                            symbol = __.Factor.squareFree(symbol, factors, v);\r\n\r\n                            var t_factors = new Factors();\r\n\r\n                            symbol = __.Factor.trialAndError(symbol, t_factors, v);\r\n\r\n                            //generate a symbol based off the last factors\r\n                            var tf_symbol = t_factors.toSymbol();\r\n                            //if nothing was factored then return the factors\r\n                            if(tf_symbol.equals(untouched)) {\r\n                                return tf_symbol;\r\n                            }\r\n\r\n                            for(var x in t_factors.factors) {\r\n                                //store the current factor in t_factor\r\n                                var t_factor = t_factors.factors[x];\r\n                                factors.add(_.pow(t_factor, _.parse(p)));\r\n                            }\r\n                            //if we still don't have a factor and it's quadratic then let's just do a quad factor\r\n                            if(symbol.equals(untouched)) {\r\n                                symbol = __.Factor.quadFactor(symbol, factors);\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            // Try sum and difference of cubes\r\n                            symbol = __.Factor.cubeFactor(symbol, factors);\r\n\r\n                            symbol = __.Factor.mfactor(symbol, factors);\r\n\r\n                            //put back the sign of power\r\n                            factors.each(function (x) {\r\n                                if(sign < 0)\r\n                                    x.power.negate();\r\n                            });\r\n                        }\r\n\r\n                        //last minute clean up\r\n                        symbol = _.parse(symbol, core.Utils.getFunctionsSubs(map));\r\n                        \r\n                        var addPower = factors.length === 1;\r\n                        \r\n                        factors.add(_.pow(symbol, _.parse(p)));\r\n\r\n                        var retval = factors.toSymbol();\r\n                        \r\n                        // We may have only factored out the symbol itself so we end up with a factor of one \r\n                        // where the power needs to be placed back\r\n                        // e.g. factor((2*y+p)^2). Here we end up having a factor of 1 remaining and a p of 2.\r\n                        if(addPower && symbol.equals(1) && retval.isLinear()) {\r\n                            retval = _.pow(retval, _.parse(p));\r\n                        }\r\n                        \r\n                        return retval;\r\n                    }\r\n\r\n                    return symbol;\r\n                }\r\n                catch(e) {\r\n                    //no need to stop the show because something went wrong :). Just return the unfactored.\r\n                    return untouched;\r\n                }\r\n            },\r\n            reduce: function (symbol, factors) {\r\n                if(symbol.group === CP && symbol.length === 2) {\r\n                    var symbols = symbol.collectSymbols().sort(function (a, b) {\r\n                        return b.multiplier - a.multiplier;\r\n                    });\r\n                    if(symbols[0].power.equals(symbols[1].power)) {\r\n                        //x^n-a^n\r\n                        var n = _.parse(symbols[0].power),\r\n                                a = symbols[0].clone().toLinear(),\r\n                                b = symbols[1].clone().toLinear();\r\n\r\n                        //apply rule: (a-b)*sum(a^(n-i)*b^(i-1),1,n)\r\n                        factors.add(_.add(a.clone(), b.clone()));\r\n                        //flip the sign\r\n                        b.negate();\r\n                        //turn n into a number\r\n                        var nn = Number(n);\r\n                        //the remainder\r\n                        var result = new Symbol(0);\r\n                        for(var i = 1; i <= nn; i++) {\r\n                            var aa = _.pow(a.clone(), _.subtract(n.clone(), new Symbol(i))),\r\n                                    bb = _.pow(b.clone(), _.subtract(new Symbol(i), new Symbol(1)));\r\n                            result = _.add(result, _.multiply(aa, bb));\r\n                        }\r\n                        return result;\r\n                    }\r\n                }\r\n                return symbol;\r\n            },\r\n            /**\r\n             * Makes Symbol square free\r\n             * @param {Symbol} symbol\r\n             * @param {Factors} factors\r\n             * @@param {String} variable The variable which is being factored \r\n             * @returns {[Symbol, Factor]}\r\n             */\r\n            squareFree: function (symbol, factors, variable) {\r\n                if(symbol.isConstant() || symbol.group === S)\r\n                    return symbol;\r\n\r\n                var poly = new Polynomial(symbol, variable);\r\n                var sqfr = poly.squareFree();\r\n                var p = sqfr[2];\r\n                //if we found a square then the p entry in the array will be non-unit\r\n                if(p !== 1) {\r\n                    //make sure the remainder doesn't have factors\r\n                    var t = sqfr[1].toSymbol();\r\n                    t.power = t.power.multiply(new Frac(p));\r\n                    //send the factor to be fatored to be sure it's completely factored\r\n                    factors.add(__.Factor.factor(t));\r\n\r\n                    var retval = __.Factor.squareFree(sqfr[0].toSymbol(), factors);\r\n\r\n                    return retval;\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            /**\r\n             * Factors the powers such that the lowest power is a constant\r\n             * @param {Symbol} symbol\r\n             * @param {Factors} factors\r\n             * @returns {[Symbol, Factor]}\r\n             */\r\n            powerFactor: function (symbol, factors) {\r\n                //only PL need apply\r\n                if(symbol.group !== PL || symbol.previousGroup === EX)\r\n                    return symbol;\r\n                var k = keys(symbol.symbols);\r\n                //we expect only numeric powers so return all else\r\n                if(!core.Utils.allNumeric(k))\r\n                    return symbol;\r\n\r\n                var d = core.Utils.arrayMin(k);\r\n                var retval = new Symbol(0);\r\n                var q = _.parse(symbol.value + '^' + d);\r\n                symbol.each(function (x) {\r\n                    x = _.divide(x, q.clone());\r\n                    retval = _.add(retval, x);\r\n                });\r\n\r\n                factors.add(q);\r\n                return retval;\r\n            },\r\n            /**\r\n             * Removes GCD from coefficients\r\n             * @param {Symbol} symbol\r\n             * @param {Factor} factors\r\n             * @returns {Symbol}\r\n             */\r\n            coeffFactor: function (symbol, factors) {\r\n                if(symbol.isComposite()) {\r\n                    var gcd = core.Math2.QGCD.apply(null, symbol.coeffs());\r\n\r\n                    if(!gcd.equals(1)) {\r\n                        symbol.each(function (x) {\r\n                            if(x.isComposite()) {\r\n                                x.each(function (y) {\r\n                                    y.multiplier = y.multiplier.divide(gcd);\r\n                                });\r\n                            }\r\n                            else\r\n                                x.multiplier = x.multiplier.divide(gcd);\r\n                        });\r\n                        symbol.updateHash();\r\n                    }\r\n                    else {\r\n                        // TODO: This should probably go to the prototype\r\n                        var power = function (symbol) {\r\n                            var p;\r\n                            if(symbol.group === CB) {\r\n                                p = 0;\r\n                                symbol.each(function (x) {\r\n                                    p += x.power;\r\n                                });\r\n                            }\r\n                            else {\r\n                                p = Number(symbol.power);\r\n                            }\r\n                            return p;\r\n                        };\r\n                        // Factor out negatives from the lead term\r\n                        var terms = symbol.collectSymbols(null, null, null, true).sort(function (a, b) {\r\n                            // Push constants to the back\r\n                            if(a.isConstant(true))\r\n                                return 1;\r\n                            return b.power - a.power;\r\n                        });\r\n\r\n                        var LT = terms[0];\r\n\r\n                        // Check if the LT is indeed the greatest\r\n                        if(power(LT) > power(terms[1]) || terms[1].isConstant(true)) {\r\n                            if(LT.multiplier.lessThan(0)) {\r\n                                // Although the symbol should always be linear at this point, remove the negative for squares\r\n                                // to be safe.\r\n                                factors.add(new Symbol(-1));\r\n\r\n                                symbol.each(function (x) {\r\n                                    x.negate();\r\n                                }, true);\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n                    if(factors) {\r\n                        factors.add(new Symbol(gcd));\r\n                    }\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            /**\r\n             * The name says it all :)\r\n             * @param {Symbol} symbol\r\n             * @param {Factor} factors\r\n             * @@param {String} variable \r\n             * @returns {Symbol}\r\n             */\r\n            trialAndError: function (symbol, factors, variable) {\r\n                var untouched = symbol.clone();\r\n                try {\r\n                    // At temp holder for the factors. If all goes well then\r\n                    // they'll be moved to the actual factors.\r\n                    var factor_array = [];\r\n\r\n                    if(symbol.isConstant() || symbol.group === S)\r\n                        return symbol;\r\n                    var poly = new Polynomial(symbol, variable),\r\n                            cnst = poly.coeffs[0],\r\n                            cfactors = core.Math2.ifactor(cnst),\r\n                            roots = __.proots(symbol);\r\n                    for(var i = 0; i < roots.length; i++) {\r\n                        var r = roots[i],\r\n                                p = 1;\r\n                        if(!isNaN(r)) { //if it's a number\r\n                            for(var x in cfactors) {\r\n                                //check it's raised to a power\r\n                                var n = core.Utils.round(Math.log(x) / Math.log(Math.abs(r)), 8);\r\n                                if(isInt(n)) {\r\n                                    r = x; //x must be the root since n gave us a whole\r\n                                    p = n;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            var root = new Frac(r),\r\n                                    terms = [new Frac(root.num).negate()];\r\n                            terms[p] = new Frac(root.den);\r\n                            //convert to Frac. The den is coeff of LT and the num is coeff of constant\r\n                            var div = Polynomial.fromArray(terms, poly.variable).fill(),\r\n                                    t = poly.divide(div);\r\n                            if(t[1].equalsNumber(0)) { //if it's zero we have a root and divide it out\r\n                                poly = t[0];\r\n                                // factors.add(div.toSymbol());\r\n                                factor_array.push(div.toSymbol());\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if(!poly.equalsNumber(1)) {\r\n                        poly = __.Factor.search(poly, factors);\r\n                    }\r\n\r\n                    // Move the factors over since all went well.\r\n                    factor_array.forEach(function (x) {\r\n                        factors.add(x);\r\n                    });\r\n\r\n                    return poly.toSymbol();\r\n                }\r\n                catch(e) {\r\n                    return untouched;\r\n                }\r\n            },\r\n            search: function (poly, factors, base) {\r\n                base = base || 10; //I like 10 because numbers exhibit similar behaviours at 10\r\n                var v = poly.variable; //the polynmial variable name\r\n                /**\r\n                 * Attempt to remove a root by division given a number by first creating\r\n                 * a polynomial fromt he given information\r\n                 * @param {int} c1 - coeffient for the constant\r\n                 * @param {int} c2 - coefficient for the LT\r\n                 * @param {int} n - the number to be used to construct the polynomial\r\n                 * @param {int} p - the power at which to create the polynomial\r\n                 * @returns {null|Polynomial} - returns polynomial if successful otherwise null\r\n                 */\r\n                var check = function (c1, c2, n, p) {\r\n                    var candidate = Polynomial.fit(c1, c2, n, base, p, v);\r\n                    if(candidate && candidate.coeffs.length > 1) {\r\n                        var t = poly.divide(candidate);\r\n                        if(t[1].equalsNumber(0)) {\r\n                            factors.add(candidate.toSymbol());\r\n                            return [t[0], candidate];\r\n                        }\r\n                    }\r\n                    return null;\r\n                };\r\n                var cnst = poly.coeffs[0];\r\n                var cfactors = core.Math2.ifactor(cnst);\r\n                var lc = poly.lc();\r\n                var ltfactors = core.Math2.ifactor(lc);\r\n                var subbed = poly.sub(base);\r\n                var isubbed = core.Math2.ifactor(subbed);\r\n                var nfactors = __.Factor.mix(isubbed, subbed < 0);\r\n                var cp = Math.ceil(poly.coeffs.length / 2);\r\n                var lc_is_neg = lc.lessThan(0);\r\n                var cnst_is_neg = cnst.lessThan(0);\r\n                ltfactors['1'] = 1;\r\n                cfactors['1'] = 1;\r\n                while(cp--) {\r\n                    for(var x in ltfactors) {\r\n                        for(var y in cfactors) {\r\n                            for(var i = 0; i < nfactors.length; i++) {\r\n                                var factor_found = check(x, y, nfactors[i], cp);\r\n                                if(factor_found) {\r\n                                    poly = factor_found[0];\r\n                                    if(!core.Utils.isPrime(poly.sub(base)))\r\n                                        poly = __.Factor.search(poly, factors);\r\n                                    return poly;\r\n                                }\r\n                                else if(!factor_found) {\r\n                                    if(lc_is_neg && cnst_is_neg)\r\n                                        factor_found = check(-x, -y, nfactors[i], cp);\r\n                                    else if(lc_is_neg)\r\n                                        factor_found = check(-x, y, nfactors[i], cp); //check a negative lc\r\n                                    else if(cnst_is_neg)\r\n                                        factor_found = check(x, -y, nfactors[i], cp); //check a negative constant\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return poly;\r\n            },\r\n            /**\r\n             * Equivalent of square free factor for multivariate polynomials\r\n             * @param {type} symbol\r\n             * @param {type} factors\r\n             * @returns {AlgebraL#18.Factor.mSqfrFactor.symbol|Array|AlgebraL#18.__.Factor.mSqfrFactor.d}\r\n             */\r\n            mSqfrFactor: function (symbol, factors) {\r\n                if(symbol.group !== FN) {\r\n                    var vars = variables(symbol).reverse();\r\n\r\n                    // Loop through all the variable and remove the partial derivatives\r\n                    for(var i = 0; i < vars.length; i++) {\r\n                        do {\r\n                            if(vars[i] === symbol.value) {\r\n                                //the derivative tells us nothing since this symbol is already the factor\r\n                                factors.add(symbol);\r\n                                symbol = new Symbol(1);\r\n                                continue;\r\n                            }\r\n\r\n                            var diff = core.Calculus.diff(symbol, vars[i]);\r\n\r\n                            var d = __.Factor.coeffFactor(diff);\r\n\r\n                            if(d.equals(0))\r\n                                break;\r\n\r\n                            //trial division to see if factors have whole numbers. \r\n                            //This can be optimized by stopping as soon as can_divide is false\r\n                            //this will also need utilize big number at some point\r\n                            var can_divide = true;\r\n                            if(d.isConstant() && symbol.isComposite()) {\r\n                                //check the coefficients\r\n\r\n                                symbol.each(function (x) {\r\n                                    if(x.multiplier % d !== 0)\r\n                                        can_divide = false;\r\n                                }, true);\r\n                            }\r\n\r\n                            //if we can divide then do so\r\n                            if(can_divide) {\r\n\r\n                                var div = __.div(symbol, d.clone()),\r\n                                        is_factor = div[1].equals(0);\r\n                                \r\n                                // Break infinite loop for factoring e^t*x-1\r\n                                if((symbol.equals(div[0]) && div[1].equals(0))) {\r\n                                    break;\r\n                                }\r\n                                \r\n                                if(div[0].isConstant()) {\r\n                                    factors.add(div[0]);\r\n                                    break;\r\n                                }\r\n                                \r\n                            }\r\n                            else\r\n                                is_factor = false;\r\n\r\n                            if(is_factor) {\r\n                                factors.add(div[0]);\r\n                                symbol = d;\r\n                            }\r\n                        }\r\n                        while(is_factor)\r\n                    }\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            //difference of squares factorization\r\n            sqdiff: function (symbol, factors) {\r\n                if(symbol.isConstant('all')) {\r\n                    // Nothing to do\r\n                    return symbol;\r\n                }\r\n\r\n                try {\r\n                    var remove_square = function (x) {\r\n                        return core.Utils.block('POSITIVE_MULTIPLIERS', function () {\r\n                            return Symbol.unwrapPARENS(math.sqrt(math.abs(x)));\r\n                        }, true);\r\n                    };\r\n                    var separated = core.Utils.separate(symbol.clone());\r\n\r\n                    var obj_array = [];\r\n\r\n                    //get the unique variables\r\n                    for(var x in separated) {\r\n                        if(x !== 'constants') {\r\n                            obj_array.push(separated[x]);\r\n                        }\r\n                    }\r\n                    obj_array.sort(function (a, b) {\r\n                        return b.power - a.power;\r\n                    });\r\n\r\n                    //if we have the same number of variables as unique variables then we can apply the difference of squares\r\n                    if(obj_array.length === 2) {\r\n                        var a, b;\r\n                        a = obj_array.pop();\r\n                        b = obj_array.pop();\r\n\r\n                        if(even(a.power) && even(b.power)\r\n                                && a.sign() === b.sign()\r\n                                && a.group === S && b.group === S) {\r\n                            throw new Error('Unable to factor');\r\n                        }\r\n                        ;\r\n\r\n                        if(a.isComposite() && b.power.equals(2)) {\r\n                            //remove the square from b\r\n                            b = remove_square(b);\r\n                            var f = __.Factor.factor(_.add(a, separated.constants));\r\n                            if(f.power.equals(2)) {\r\n                                f.toLinear();\r\n                                factors.add(_.subtract(f.clone(), b.clone()));\r\n                                factors.add(_.add(f, b));\r\n                                symbol = new Symbol(1);\r\n                            }\r\n                        }\r\n                        else {\r\n                            a = a.powSimp();\r\n                            b = b.powSimp();\r\n\r\n                            if((a.group === S || a.fname === '') && a.power.equals(2) && (b.group === S || b.fname === '') && b.power.equals(2) && !separated.constants) {\r\n                                if(a.multiplier.lessThan(0)) {\r\n                                    var t = b;\r\n                                    b = a;\r\n                                    a = t;\r\n                                }\r\n                                if(a.multiplier.greaterThan(0)) {\r\n                                    a = remove_square(a);\r\n                                    b = remove_square(b);\r\n                                }\r\n\r\n                                factors.add(_.subtract(a.clone(), b.clone()));\r\n                                factors.add(_.add(a, b));\r\n                                symbol = new Symbol(1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                catch(e) {\r\n                    ;\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            //factoring for multivariate\r\n            mfactor: function (symbol, factors) {\r\n\r\n                if(symbol.group === FN) {\r\n                    if(symbol.fname === 'sqrt') {\r\n                        var factors2 = new Factors(),\r\n                                arg = __.Factor.common(symbol.args[0].clone(), factors2);\r\n                        arg = __.Factor.coeffFactor(arg, factors2);\r\n                        symbol = _.multiply(_.symfunction('sqrt', [arg]), _.parse(symbol.multiplier));\r\n                        factors2.each(function (x) {\r\n                            symbol = _.multiply(symbol, _.parse(core.Utils.format('sqrt({0})', x)));\r\n                        });\r\n                    }\r\n                    else\r\n                        factors.add(symbol);\r\n                }\r\n                else {\r\n\r\n                    //square free factorization\r\n                    symbol = __.Factor.mSqfrFactor(symbol, factors);\r\n\r\n                    //try factor out common factors\r\n                    //symbol = __.Factor.common(symbol, factors);\r\n\r\n                    var vars = variables(symbol),\r\n                            symbols = symbol.collectSymbols().map(function (x) {\r\n                        return Symbol.unwrapSQRT(x);\r\n                    }),\r\n                            sorted = {},\r\n                            maxes = {},\r\n                            l = vars.length, n = symbols.length;\r\n                    //take all the variables in the symbol and organize by variable name\r\n                    //e.g. a^2+a^2+b*a -> {a: {a^3, a^2, b*a}, b: {b*a}}\r\n\r\n                    for(var i = 0; i < l; i++) {\r\n                        var v = vars[i];\r\n                        sorted[v] = new Symbol(0);\r\n                        for(var j = 0; j < n; j++) {\r\n                            var s = symbols[j];\r\n                            if(s.contains(v)) {\r\n                                var p = s.value === v ? s.power.toDecimal() : s.symbols[v].power.toDecimal();\r\n                                if(!maxes[v] || p < maxes[v])\r\n                                    maxes[v] = p;\r\n                                sorted[v] = _.add(sorted[v], s.clone());\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    for(var x in sorted) {\r\n                        var r = _.parse(x + '^' + maxes[x]);\r\n                        var div = _.divide(sorted[x], r);\r\n                        var new_factor = _.expand(div);\r\n\r\n                        if(new_factor.equals(1))\r\n                            break; //why divide by one. Just move \r\n                        var divided = __.div(symbol.clone(), new_factor);\r\n\r\n                        if(divided[0].equals(0)) {\r\n                            //cant factor anymore\r\n                            break;\r\n                        }\r\n\r\n                        // We potentially ended up with fractional coefficients when the\r\n                        // trial division was performed. We need to remove \r\n                        // This check will more then likely become superfluous with improvements\r\n                        // to polynomial division\r\n                        if(divided[1].equals(0)) {\r\n                            var has_fractions = false;\r\n\r\n                            divided[0].each(function (x) {\r\n                                if(!isInt(x.multiplier)) {\r\n                                    has_fractions = true;\r\n                                }\r\n                            });\r\n\r\n                            // The factor isn't really a factor and needs to be put back\r\n                            if(has_fractions) {\r\n                                divided[1] = _.expand(_.multiply(divided[1], new_factor));\r\n                                // Since the new factor is not just one, we exit.\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        var neg_numeric_factor = isInt(new_factor) && new_factor.lessThan(0);\r\n\r\n                        if(divided[1].equals(0) && !neg_numeric_factor) { //we found at least one factor\r\n\r\n                            //factors.add(new_factor);\r\n                            var d = __.div(symbol.clone(), divided[0].clone());\r\n                            var r = d[0];\r\n\r\n                            // Nothing left to do since we didn't get a reduction\r\n                            if(r.equals(0)) {\r\n                                return symbol;\r\n                            }\r\n\r\n                            symbol = d[1];\r\n                            //we don't want to just flip the sign. If the remainder is -1 then we accomplished nothing\r\n                            //and we just return the symbol;\r\n                            //If r equals zero then there's nothing left to do so we're done\r\n\r\n                            if(r.equals(-1) && !symbol.equals(0))\r\n                                return symbol;\r\n\r\n                            var factor = divided[0];\r\n\r\n                            if(symbol.equals(factor)) {\r\n                                var rem = __.Factor.reduce(factor, factors);\r\n\r\n                                if(!symbol.equals(rem))\r\n                                    return __.Factor.mfactor(rem, factors);\r\n\r\n                                return rem;\r\n                            }\r\n                            else {\r\n                                factors.add(factor);\r\n                                //if the remainder of the symbol is zero then we're done. TODO: Rethink this logic a bit.\r\n                                if(symbol.equals(0))\r\n                                    return r;\r\n                            }\r\n\r\n                            if(r.isConstant('all')) {\r\n                                factors.add(r);\r\n                                return r;\r\n                            }\r\n\r\n                            return __.Factor.mfactor(r, factors);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                //difference of squares factorization\r\n                symbol = __.Factor.sqdiff(symbol, factors);\r\n\r\n                //factors by fishing for zeroes\r\n                symbol = __.Factor.zeroes(symbol, factors);\r\n\r\n                return symbol;\r\n            }\r\n        },\r\n        /**\r\n         * Checks to see if a set of \"equations\" is linear. \r\n         * @param {type} set\r\n         * @returns {Boolean}\r\n         */\r\n        allLinear: function (set) {\r\n            var l = set.length;\r\n            for(var i = 0; i < l; i++) {\r\n                if(!__.isLinear(set[i]))\r\n                    return false;\r\n            }\r\n            return true;\r\n        },\r\n        /*\r\n         * Checks to see if the \"equation\" is linear\r\n         * @param {Symbol} e\r\n         * @returns {boolean}\r\n         */\r\n        isLinear: function (e) {\r\n            var status = false, g = e.group;\r\n            if(g === PL || g === CP) {\r\n                status = true;\r\n                for(var s in e.symbols) {\r\n                    var symbol = e.symbols[s], sg = symbol.group;\r\n                    if(sg === FN || sg === EX) {\r\n                        status = false;\r\n                    }\r\n                    if(sg === CB) {\r\n                        //needs further checking since it might be imaginary\r\n                        status = variables(symbol).length === 1;\r\n                    }\r\n                    else {\r\n                        if(sg === PL || sg === CP)\r\n                            status = __.isLinear(symbol);\r\n                        else {\r\n                            if(symbol.group !== N && symbol.power.toString() !== '1') {\r\n                                status = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if(g === S && e.power === 1)\r\n                status = true;\r\n            return status;\r\n        },\r\n        gcd: function () {\r\n            var args;\r\n            if(arguments.length === 1 && arguments[0] instanceof core.Vector)\r\n                args = arguments[0].elements;\r\n            else\r\n                args = core.Utils.arguments2Array(arguments);\r\n\r\n            //short-circuit early\r\n            if(args.length === 0)\r\n                return new Symbol(1);\r\n            else if(args.length === 1)\r\n                return args[0];\r\n\r\n            var appeared = [], evaluate = false;\r\n            for(var i = 0; i < args.length; i++) {\r\n                if(args[i].group === FN && args[i].fname === 'gcd')\r\n                {\r\n                    //compress gcd(a,gcd(b,c)) into gcd(a,b,c)\r\n                    args = args.concat(arguments[i].args);\r\n                    //do not keep gcd in args\r\n                    args.splice(i, 1);\r\n                }\r\n                else\r\n                {\r\n                    //Look if there are any common variables such that\r\n                    //gcd(a,b) => gcd(a,b); gcd(a,a) => a\r\n                    var vars = variables(args[i]);\r\n                    if(core.Utils.haveIntersection(vars, appeared))\r\n                    {\r\n                        //Ok, there are common variables\r\n                        evaluate = true;\r\n                        break;\r\n                    }\r\n                    else\r\n                        appeared = appeared.concat(vars);\r\n                }\r\n            }\r\n\r\n            //appeared.length is 0 when all arguments are group N\r\n            if(evaluate || appeared.length === 0) {\r\n                //TODO: distribute exponent so that (a^-1*b^-1)^-1 => a*b\r\n                if(args.every(function (symbol) {\r\n                    return symbol.getDenom().equals(1)\r\n                })) {\r\n                    var aggregate = args[0];\r\n\r\n                    for(var i = 1; i < args.length; i++) {\r\n                        aggregate = __.gcd_(args[i], aggregate);\r\n                    }\r\n                    return aggregate;\r\n                }\r\n                else {\r\n                    //gcd_ cannot handle denominators correctly\r\n                    return _.divide(__.gcd.apply(null, args.map(function (symbol) {\r\n                        return symbol.getNum();\r\n                    })),\r\n                            __.lcm.apply(null, args.map(function (symbol) {\r\n                                return symbol.getDenom();\r\n                            })));\r\n                }\r\n            }\r\n            else\r\n                return _.symfunction('gcd', args);\r\n        },\r\n        gcd_: function (a, b) {\r\n            if(a.group === FN || a.group === P)\r\n                a = core.Utils.block('PARSE2NUMBER', function () {\r\n                    return _.parse(a);\r\n                });\r\n\r\n            if(b.group === FN)\r\n                b = core.Utils.block('PARSE2NUMBER', function () {\r\n                    return _.parse(b);\r\n                });\r\n\r\n            if(a.isConstant() && b.isConstant()) {\r\n                // return core.Math2.QGCD(new Frac(+a), new Frac(+b));\r\n                return new Symbol(core.Math2.QGCD(new Frac(+a), new Frac(+b)));\r\n            }\r\n\r\n            var den = _.multiply(a.getDenom() || new Symbol(1), b.getDenom() || new Symbol(1)).invert();\r\n            a = _.multiply(a.clone(), den.clone());\r\n            b = _.multiply(b.clone(), den.clone());\r\n\r\n            //feels counter intuitive but it works. Issue #123 (nerdamer(\"gcd(x+y,(x+y)^2)\"))\r\n            a = _.expand(a);\r\n            b = _.expand(b);\r\n\r\n            if(a.group === CB || b.group === CB) {\r\n                var q = _.divide(a.clone(), b.clone()); //get the quotient\r\n                var t = _.multiply(b.clone(), q.getDenom().invert());//multiply by the denominator\r\n                //if they have a common factor then the result will not equal one \r\n                if(!t.equals(1))\r\n                    return t;\r\n            }\r\n\r\n            //just take the gcd of each component when either of them is in group EX\r\n            if(a.group === EX || b.group === EX)\r\n            {\r\n                var gcd_m = new Symbol(core.Math2.GCD(a.multiplier, b.multiplier));\r\n                var gcd_v = __.gcd_(a.value === CONST_HASH ? new Symbol(1) : _.parse(a.value), b.value === CONST_HASH ? new Symbol(1) : _.parse(b.value));\r\n                var gcd_p = __.gcd_(_.parse(a.power), _.parse(b.power));\r\n                return _.multiply(gcd_m, _.pow(gcd_v, gcd_p));\r\n            }\r\n\r\n            if(a.length < b.length) { //swap'm\r\n                var t = a;\r\n                a = b;\r\n                b = t;\r\n            }\r\n            var vars_a = variables(a), vars_b = variables(b);\r\n            if((vars_a.length === vars_b.length && vars_a.length === 1 && vars_a[0] === vars_b[0])\r\n                    || vars_a.length === 1 && vars_b.length === 0\r\n                    || vars_a.length === 0 && vars_b.length === 1) {\r\n                a = new Polynomial(a);\r\n                b = new Polynomial(b);\r\n                return _.divide(a.gcd(b).toSymbol(), den);\r\n            }\r\n            else {\r\n                //get the gcd of the multipiers\r\n                //get rid of gcd in coeffs\r\n                var multipliers = [];\r\n                a.each(function (x) {\r\n                    multipliers.push(x.multiplier);\r\n                });\r\n                b.each(function (x) {\r\n                    multipliers.push(x.multiplier);\r\n                });\r\n\r\n                var T;\r\n                while(!b.equals(0)) {\r\n                    var t = b.clone();\r\n                    a = a.clone();\r\n                    T = __.div(a, t);\r\n\r\n                    b = T[1];\r\n                    if(T[0].equals(0)) {\r\n                        //return _.multiply(new Symbol(core.Math2.QGCD(a.multiplier, b.multiplier)), b);\r\n                        return _.divide(new Symbol(core.Math2.QGCD(a.multiplier, b.multiplier)), den);\r\n                    }\r\n                    a = t;\r\n                }\r\n\r\n                var gcd = core.Math2.QGCD.apply(undefined, multipliers);\r\n\r\n                if(!gcd.equals(1)) {\r\n                    a.each(function (x) {\r\n                        x.multiplier = x.multiplier.divide(gcd);\r\n                    });\r\n                }\r\n\r\n                //return symbolic function for gcd in indeterminate form\r\n                if(a.equals(1) && !a.isConstant() && !b.isConstant())\r\n                    return _.divide(_.symfunction('gcd', arguments), den);\r\n\r\n                return _.divide(a, den);\r\n            }\r\n        },\r\n        lcm: function () {\r\n            //https://math.stackexchange.com/a/319310\r\n            //generalization of the 2-variable formula of lcm\r\n\r\n            var args;\r\n            if(arguments.length === 1)\r\n                if(arguments[0] instanceof core.Vector)\r\n                    args = arguments[0].elements;\r\n                else\r\n                    _.error('lcm expects either 1 vector or 2 or more arguments');\r\n            else\r\n                args = core.Utils.arguments2Array(arguments);\r\n\r\n            //product of all arguments\r\n            //start with new Symbol(1) so that prev.clone() which makes unnessesary clones can be avoided\r\n            var numer = args.reduce(function (prev, curr) {\r\n                return _.multiply(prev, curr.clone())\r\n            }, new Symbol(1));\r\n\r\n            //gcd of complementary terms\r\n            var denom_args =\r\n                    //https://stackoverflow.com/a/18223072\r\n                //take all complementary terms, e.g.\r\n                //[a,b,c] => [a*b, b*c, a*c]\r\n                //[a,b,c,d] => [a*b*c, a*b*d, a*c*d, b*c*d]\r\n                (function (input, size) {\r\n                        size = Number(size);\r\n                        var results = [], result, mask, i, total = Math.pow(2, input.length);\r\n                        for(mask = size; mask < total; mask++) {\r\n                            result = [];\r\n                            i = input.length - 1;\r\n\r\n                            do {\r\n                                if((mask & (1 << i)) !== 0) {\r\n                                    result.push(input[i]);\r\n                                }\r\n                            }\r\n                            while(i--);\r\n\r\n                            if(result.length === size) {\r\n                                results.push(result);\r\n                            }\r\n                        }\r\n                        return results;\r\n                        //start with new Symbol(1) so that prev.clone() which makes unnessesary clones can be avoided\r\n                    })(arguments, arguments.length - 1).map(function (x) {\r\n                return x.reduce(function (prev, curr) {\r\n                    return _.multiply(prev, curr.clone())\r\n                }, new Symbol(1))\r\n            });\r\n\r\n            var denom;\r\n            //don't eat the gcd term if all arguments are symbols\r\n            if(args.every(function (x) {\r\n                return core.Utils.isVariableSymbol(x)\r\n            }))\r\n                denom = _.symfunction('gcd', core.Utils.arrayUnique(denom_args));\r\n            else\r\n                denom = __.gcd.apply(null, denom_args);\r\n            //divide product of all arguments by gcd of complementary terms\r\n            var div = _.divide(numer, denom);\r\n            return div;\r\n        },\r\n        /**\r\n         * Divides one expression by another\r\n         * @param {Symbol} symbol1\r\n         * @param {Symbol} symbol2\r\n         * @returns {Array}\r\n         */\r\n        divide: function (symbol1, symbol2) {\r\n            var result, remainder, factored, den;\r\n            factored = core.Algebra.Factor.factor(symbol1.clone());\r\n            den = factored.getDenom();\r\n            if(!den.isConstant('all')) {\r\n                symbol1 = _.expand(Symbol.unwrapPARENS(_.multiply(factored, den.clone())));\r\n            }\r\n            else\r\n                //reset the denominator since we're not dividing by it anymore\r\n                den = new Symbol(1);\r\n            result = __.div(symbol1, symbol2);\r\n            remainder = _.divide(result[1], symbol2);\r\n            return _.divide(_.add(result[0], remainder), den);\r\n        },\r\n        div: function (symbol1, symbol2) {\r\n            // If all else fails then assume that division failed with\r\n            // a remainder of zero and the original quotient\r\n            var fail = [new Symbol(0), symbol1.clone()];\r\n\r\n            try {\r\n\r\n                // Division by constants\r\n                if(symbol2.isConstant('all')) {\r\n                    symbol1.each(function (x) {\r\n                        x.multiplier = x.multiplier.divide(symbol2.multiplier);\r\n                    });\r\n                    return [symbol1, new Symbol(0)];\r\n                }\r\n                // So that factorized symbols don't affect the result\r\n                symbol1 = _.expand(symbol1);\r\n                symbol2 = _.expand(symbol2);\r\n                // Special case. May need revisiting\r\n                if(symbol1.group === S && symbol2.group === CP) {\r\n                    var x = symbol1.value;\r\n                    var f = core.Utils.decompose_fn(symbol2.clone(), x, true);\r\n                    if(symbol1.isLinear() && f.x && f.x.isLinear() && symbol2.isLinear()) {\r\n                        var k = Symbol.create(symbol1.multiplier);\r\n                        return [_.divide(k.clone(), f.a.clone()), _.divide(_.multiply(k, f.b), f.a).negate()];\r\n                    }\r\n                }\r\n                if(symbol1.group === S && symbol2.group === S) {\r\n                    var r = _.divide(symbol1.clone(), symbol2.clone());\r\n                    if(r.isConstant()) //we have a whole\r\n                        return [r, new Symbol(0)];\r\n                    return [new Symbol(0), symbol1.clone()];\r\n                }\r\n                var symbol1_has_func = symbol1.hasFunc(),\r\n                        symbol2_has_func = symbol2.hasFunc(),\r\n                        parse_funcs = false;\r\n\r\n                //substitute out functions so we can treat them as regular variables\r\n                if(symbol1_has_func || symbol2_has_func) {\r\n                    parse_funcs = true;\r\n                    var map = {},\r\n                            symbol1 = _.parse(core.Utils.subFunctions(symbol1, map)),\r\n                            symbol2 = _.parse(core.Utils.subFunctions(symbol2, map)),\r\n                            subs = core.Utils.getFunctionsSubs(map);\r\n                }\r\n                //get a list of the variables\r\n                var vars = core.Utils.arrayUnique(variables(symbol1).concat(variables(symbol2))),\r\n                        quot, rem;\r\n\r\n                //treat imaginary numbers as variables\r\n                if(symbol1.isImaginary() || symbol2.isImaginary()) {\r\n                    vars.push(core.Settings.IMAGINARY);\r\n                }\r\n\r\n                if(vars.length === 1) {\r\n                    var q = new Polynomial(symbol1).divide(new Polynomial(symbol2));\r\n                    quot = q[0].toSymbol();\r\n                    rem = q[1].toSymbol();\r\n                }\r\n                else {\r\n                    vars.push(CONST_HASH); //this is for the numbers\r\n                    var reconvert = function (arr) {\r\n                        var symbol = new Symbol(0);\r\n                        for(var i = 0; i < arr.length; i++) {\r\n                            var x = arr[i].toSymbol();\r\n                            symbol = _.add(symbol, x);\r\n                        }\r\n                        return symbol;\r\n                    };\r\n\r\n                    // Silly Martin. This is why you document. I don't remember now\r\n                    var get_unique_max = function (term, any) {\r\n                        var max = Math.max.apply(null, term.terms),\r\n                                count = 0, idx;\r\n\r\n                        if(!any) {\r\n                            for(var i = 0; i < term.terms.length; i++) {\r\n                                if(term.terms[i].equals(max)) {\r\n                                    idx = i;\r\n                                    count++;\r\n                                }\r\n                                if(count > 1)\r\n                                    return;\r\n                            }\r\n                        }\r\n                        if(any) {\r\n                            for(i = 0; i < term.terms.length; i++)\r\n                                if(term.terms[i].equals(max)) {\r\n                                    idx = i;\r\n                                    break;\r\n                                }\r\n                        }\r\n                        return [max, idx, term];\r\n                    };\r\n\r\n                    // Tries to find an LT in the dividend that will satisfy division\r\n                    var get_det = function (s, lookat) {\r\n                        lookat = lookat || 0;\r\n                        var det = s[lookat], l = s.length;\r\n                        if(!det)\r\n                            return;\r\n                        //eliminate the first term if it doesn't apply\r\n                        var umax = get_unique_max(det);\r\n                        for(var i = lookat + 1; i < l; i++) {\r\n                            var term = s[i],\r\n                                    is_equal = det.sum.equals(term.sum);\r\n                            if(!is_equal && umax) {\r\n                                break;\r\n                            }\r\n                            if(is_equal) {\r\n                                // Check the differences of their maxes. The one with the biggest difference governs\r\n                                // e.g. x^2*y^3 vs x^2*y^3 is unclear but this isn't the case in x*y and x^2\r\n                                var max1, max2, idx1, idx2, l2 = det.terms.length;\r\n                                for(var j = 0; j < l2; j++) {\r\n                                    var item1 = det.terms[j], item2 = term.terms[j];\r\n                                    if(typeof max1 === 'undefined' || item1.greaterThan(max1)) {\r\n                                        max1 = item1;\r\n                                        idx1 = j;\r\n                                    }\r\n                                    if(typeof max2 === 'undefined' || item2.greaterThan(max2)) {\r\n                                        max2 = item2;\r\n                                        idx2 = j;\r\n                                    }\r\n                                }\r\n                                //check their differences\r\n                                var d1 = max1.subtract(term.terms[idx1]),\r\n                                        d2 = max2.subtract(det.terms[idx2]);\r\n                                if(d2 > d1) {\r\n                                    umax = [max2, idx2, term];\r\n                                    break;\r\n                                }\r\n                                if(d1 > d2) {\r\n                                    umax = [max1, idx1, det];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            else {\r\n                                //check if it's a suitable pick to determine the order\r\n                                umax = get_unique_max(term);\r\n                                //if(umax) return umax;\r\n                                if(umax)\r\n                                    break;\r\n                            }\r\n                            umax = get_unique_max(term); //calculate a new unique max\r\n                        }\r\n\r\n                        //if still no umax then any will do since we have a tie\r\n                        if(!umax)\r\n                            return get_unique_max(s[0], true);\r\n                        var e, idx;\r\n                        for(var i = 0; i < s2.length; i++) {\r\n                            var cterm = s2[i].terms;\r\n                            //confirm that this is a good match for the denominator\r\n                            idx = umax[1];\r\n                            if(idx === cterm.length - 1)\r\n                                return;\r\n                            e = cterm[idx];\r\n                            if(!e.equals(0))\r\n                                break;\r\n                        }\r\n                        if(e.equals(0))\r\n                            return get_det(s, ++lookat); //look at the next term\r\n\r\n                        return umax;\r\n                    };\r\n\r\n                    var t_map = core.Utils.toMapObj(vars);\r\n                    var init_sort = function (a, b) {\r\n                        return b.sum.subtract(a.sum);\r\n                    };\r\n                    var is_larger = function (a, b) {\r\n                        if(!a || !b)\r\n                            return false; //it's empty so...\r\n                        for(var i = 0; i < a.terms.length; i++) {\r\n                            if(a.terms[i].lessThan(b.terms[i]))\r\n                                return false;\r\n                        }\r\n                        return true;\r\n                    };\r\n\r\n                    var s1 = symbol1.tBase(t_map).sort(init_sort),\r\n                            s2 = symbol2.tBase(t_map).sort(init_sort);\r\n                    var target = is_larger(s1[0], s2[0]) && s1[0].count > s2[0].count ? s2 : s1; //since the num is already larger than we can get the det from denom\r\n                    var det = get_det(target);//we'll begin by assuming that this will let us know which term \r\n                    var quotient = [];\r\n                    if(det) {\r\n                        var lead_var = det[1];\r\n                        var can_divide = function (a, b) {\r\n                            if(a[0].sum.equals(b[0].sum))\r\n                                return a.length >= b.length;\r\n                            return true;\r\n                        };\r\n\r\n                        var try_better_lead_var = function (s1, s2, lead_var) {\r\n                            var checked = [];\r\n                            for(var i = 0; i < s1.length; i++) {\r\n                                var t = s1[i];\r\n                                for(var j = 0; j < t.terms.length; j++) {\r\n                                    var cf = checked[j], tt = t.terms[j];\r\n                                    if(i === 0)\r\n                                        checked[j] = tt; //add the terms for the first one\r\n                                    else if(cf && !cf.equals(tt))\r\n                                        checked[j] = undefined;\r\n                                }\r\n                            }\r\n                            for(var i = 0; i < checked.length; i++) {\r\n                                var t = checked[i];\r\n                                if(t && !t.equals(0))\r\n                                    return i;\r\n                            }\r\n                            return lead_var;\r\n                        };\r\n                        var sf = function (a, b) {\r\n                            var l1 = a.len(), l2 = b.len();\r\n                            var blv = b.terms[lead_var], alv = a.terms[lead_var];\r\n                            if(l2 > l1 && blv.greaterThan(alv))\r\n                                return l2 - l1;\r\n                            return blv.subtract(alv);\r\n                        };\r\n\r\n                        //check to see if there's a better lead_var\r\n                        lead_var = try_better_lead_var(s1, s2, lead_var);\r\n                        //reorder both according to the max power\r\n                        s1.sort(sf); //sort them both according to the leading variable power\r\n                        s2.sort(sf);\r\n\r\n                        //try to adjust if den is larger\r\n                        var fdt = s2[0], fnt = s1[0];\r\n\r\n                        var den = new MVTerm(new Frac(1), [], fnt.map);\r\n                        if(fdt.sum.greaterThan(fnt.sum) && fnt.len() > 1) {\r\n                            for(var i = 0; i < fnt.terms.length; i++) {\r\n                                var d = fdt.terms[i].subtract(fnt.terms[i]);\r\n                                if(!d.equals(0)) {\r\n                                    var nd = d.add(new Frac(1));\r\n                                    den.terms[i] = d;\r\n                                    for(var j = 0; j < s1.length; j++) {\r\n                                        s1[j].terms[i] = s1[j].terms[i].add(nd);\r\n                                    }\r\n                                }\r\n                                else\r\n                                    den.terms[i] = new Frac(0);\r\n                            }\r\n                        }\r\n\r\n                        var dividend_larger = is_larger(s1[0], s2[0]);\r\n\r\n                        var safety = 0;\r\n                        var max = 200;\r\n\r\n                        while(dividend_larger && can_divide(s1, s2)) {\r\n                            if(safety++ > max) {\r\n                                throw new core.exceptions.InfiniteLoopError('Unable to compute!');\r\n                            }\r\n\r\n                            var q = s1[0].divide(s2[0]);\r\n\r\n                            quotient.push(q); //add what's divided to the quotient\r\n                            s1.shift();//the first one is guaranteed to be gone so remove from dividend\r\n                            for(var i = 1; i < s2.length; i++) { //loop through the denominator\r\n                                var t = s2[i].multiply(q).generateImage(),\r\n                                        l2 = s1.length;\r\n                                //if we're subtracting from 0\r\n                                if(l2 === 0) {\r\n                                    t.coeff = t.coeff.neg();\r\n                                    s1.push(t);\r\n                                    s1.sort(sf);\r\n                                }\r\n\r\n                                for(var j = 0; j < l2; j++) {\r\n                                    var cur = s1[j];\r\n                                    if(cur.getImg() === t.getImg()) {\r\n                                        cur.coeff = cur.coeff.subtract(t.coeff);\r\n                                        if(cur.coeff.equals(0)) {\r\n                                            core.Utils.remove(s1, j);\r\n                                            j--; //adjust the iterator\r\n                                        }\r\n                                        break;\r\n                                    }\r\n                                    if(j === l2 - 1) {\r\n                                        t.coeff = t.coeff.neg();\r\n                                        s1.push(t);\r\n                                        s1.sort(sf);\r\n                                    }\r\n                                }\r\n                            }\r\n                            dividend_larger = is_larger(s1[0], s2[0]);\r\n\r\n                            if(!dividend_larger && s1.length >= s2.length) {\r\n                                //One more try since there might be a terms that is larger than the LT of the divisor\r\n                                for(var i = 1; i < s1.length; i++) {\r\n                                    dividend_larger = is_larger(s1[i], s2[0]);\r\n                                    if(dividend_larger) {\r\n                                        //take it from its current position and move it to the front\r\n                                        s1.unshift(core.Utils.remove(s1, i));\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    quot = reconvert(quotient);\r\n                    rem = reconvert(s1);\r\n\r\n                    if(typeof den !== 'undefined') {\r\n                        den = den.toSymbol();\r\n                        quot = _.divide(quot, den.clone());\r\n                        rem = _.divide(rem, den);\r\n                    }\r\n                }\r\n\r\n                //put back the functions\r\n                if(parse_funcs) {\r\n                    quot = _.parse(quot.text(), subs);\r\n                    rem = _.parse(rem.text(), subs);\r\n                }\r\n\r\n                return [quot, rem];\r\n            }\r\n            catch(e) {\r\n                return fail;\r\n            }\r\n\r\n        },\r\n        line: function (v1, v2, x) {\r\n            if(core.Utils.isArray(v1))\r\n                v1 = core.Utils.convertToVector(v1);\r\n            if(core.Utils.isArray(v2))\r\n                v2 = core.Utils.convertToVector(v2);\r\n            x = _.parse(x || 'x');\r\n            if(!core.Utils.isVector(v1) || !core.Utils.isVector(v2))\r\n                _.error('Line expects a vector! Received \"' + v1 + '\" & \"' + v2 + '\"');\r\n            var dx = _.subtract(v2.e(1).clone(), v1.e(1).clone()),\r\n                    dy = _.subtract(v2.e(2).clone(), v1.e(2).clone()),\r\n                    m = _.divide(dy, dx),\r\n                    a = _.multiply(x, m.clone()),\r\n                    b = _.multiply(v1.e(1).clone(), m);\r\n            return _.add(_.subtract(a, b), v1.e(2).clone());\r\n        },\r\n        PartFrac: {\r\n            createTemplate: function (den, denom_factors, f_array, v) {\r\n                //clean up the denominator function by factors so it reduces nicely\r\n                den = __.Factor.factor(den);\r\n\r\n                //clean up factors. This is so inefficient but factors are wrapped in parens for safety\r\n                den.each(function (x, key) {\r\n                    if(x.group === FN && x.fname === '' && x.args[0].group === S) {\r\n                        var y = x.args[0];\r\n                        if(this.symbols) {\r\n                            delete this.symbols[key];\r\n                            this.symbols[y.value] = y;\r\n                        }\r\n                        else {\r\n                            den = x.args[0];\r\n                        }\r\n                    }\r\n                });\r\n\r\n                var factors, factors_vec, f, p, deg, degrees, m;\r\n                factors = denom_factors.collectFactors();\r\n                factors_vec = []; //a vector for the template\r\n                degrees = [];\r\n                m = new Symbol(1);\r\n\r\n                for(var i = 0; i < factors.length; i++) { //loop through the factors\r\n                    var factor = Symbol.unwrapPARENS(factors[i]);\r\n                    //if in he for P^n where P is polynomial and n = integer\r\n                    if(factor.power.greaterThan(1)) {\r\n                        p = Number(factor.power);\r\n                        f = factor.clone().toLinear(); //remove the power so we have only the function\r\n                        deg = Number(__.degree(f, v)); //get the degree of f\r\n                        //expand the factor\r\n                        for(var j = 0; j < p; j++) {\r\n                            var efactor = _.pow(f.clone(), new Symbol(j + 1));\r\n                            f_array.push(efactor.clone());\r\n                            var d = _.divide(den.clone(), efactor.clone());\r\n                            degrees.push(deg);\r\n                            factors_vec.push(d);\r\n                        }\r\n                    }\r\n                    /*\r\n                     Possible bug.\r\n                     Removed: causes 1/(20+24*x+4*x^2) to result in (-1/64)*(5+x)^(-1)+(1/64)*(1+x)^(-1)\r\n                     else if(factor.isConstant('all')) {\r\n                     m = _.multiply(m, factor);\r\n                     }\r\n                     */\r\n                    else {\r\n                        //get the degree of the factor so we tack it on tot he factor. This should probably be an array\r\n                        //but for now we note it on the symbol\r\n                        deg = Number(__.degree(factor, v));\r\n                        f_array.push(factor);\r\n                        var d = _.divide(den.clone(), factor.clone());\r\n                        d = _.expand(Symbol.unwrapPARENS(d));\r\n                        degrees.push(deg);\r\n                        factors_vec.push(d);\r\n                    }\r\n                }\r\n                //put back the constant\r\n                f_array = f_array.map(function (x) {\r\n                    return _.multiply(x, m.clone());\r\n                });\r\n                return [f_array, factors_vec, degrees];\r\n            },\r\n            partfrac: function (symbol, v, as_array) {\r\n\r\n                var vars = variables(symbol);\r\n\r\n                v = v || _.parse(vars[0]); //make wrt optional and assume first variable\r\n                try {\r\n                    var num, den, factors, tfactors, ofactors, nterms, degrees,\r\n                            dterms, max, M, c, powers, div, r, factors_vec, ks,\r\n                            template, tfactors;\r\n                    num = _.expand(symbol.getNum());\r\n                    den = _.expand(symbol.getDenom().toUnitMultiplier());\r\n                    //move the entire multipier to the numerator\r\n                    num.multiplier = symbol.multiplier;\r\n                    //we only have a meaningful change if n factors > 1. This means that\r\n                    //the returned group will be a CB\r\n                    //collect the terms wrt the x\r\n                    nterms = num.groupTerms(v);\r\n                    //divide out wholes if top is larger\r\n                    if(Number(__.degree(num, v)) >= Number(__.degree(den, v))) {\r\n                        div = __.div(num.clone(), _.expand(den.clone()));\r\n                        r = div[0]; //remove the wholes\r\n                        num = div[1]; //work with the remainder\r\n                        nterms = num.groupTerms(v); //recalculate the nterms\r\n                    }\r\n                    else\r\n                        r = new Symbol(0);\r\n\r\n                    if(Number(__.degree(den, v)) === 1) {\r\n                        var q = _.divide(num, den);\r\n                        if(as_array)\r\n                            return [r, q];\r\n                        return _.add(r, q);\r\n                    }\r\n                    //first factor the denominator. This means that the strength of this\r\n                    //algorithm depends on how well we can factor the denominator. \r\n                    ofactors = __.Factor.factor(den);\r\n                    //create the template. This method will create the template for solving \r\n                    //the partial fractions. So given x/(x-1)^2 the template creates A/(x-1)+B/(x-1)^2\r\n                    template = __.PartFrac.createTemplate(den.clone(), ofactors, [], v);\r\n                    tfactors = template[0]; //grab the factors\r\n                    factors_vec = template[1]; //grab the factor vectors\r\n                    degrees = template[2]; //grab the degrees\r\n                    //make note of the powers of each term\r\n                    powers = [nterms.length];\r\n                    //create the dterms vector\r\n                    dterms = [];\r\n                    factors = [];\r\n                    ks = [];\r\n                    var factor, deg;\r\n                    factors_vec.map(function (x, idx) {\r\n                        factor = tfactors[idx];\r\n                        deg = degrees[idx];\r\n                        for(var i = 0; i < deg; i++) {\r\n                            factors.push(factor.clone());\r\n                            var k = Symbol.create(v, i);\r\n                            var t = _.expand(_.multiply(x, k.clone())).groupTerms(v);\r\n                            //make a note of the power which corresponds to the length of the array\r\n                            var p = t.length;\r\n                            powers.push(p);\r\n                            dterms.push(t);\r\n                            ks.push(k.clone());\r\n                        }\r\n                    });\r\n                    //get the max power\r\n                    max = core.Utils.arrayMax(powers);\r\n\r\n                    //fill the holes and create a matrix\r\n                    c = new core.Matrix(core.Utils.fillHoles(nterms, max)).transpose();\r\n                    //for each of the factors we do the same\r\n                    M = new core.Matrix();\r\n                    for(var i = 0; i < dterms.length; i++) {\r\n                        M.elements.push(core.Utils.fillHoles(dterms[i], max));\r\n                    }\r\n\r\n                    //solve the system of equations\r\n                    var partials = _.multiply(M.transpose().invert(), c);\r\n                    //the results are backwards to reverse it\r\n                    //partials.elements.reverse();\r\n                    //convert it all back\r\n                    var retval = as_array ? [r] : r;\r\n                    partials.each(function (e, i) {\r\n                        var term = _.multiply(ks[i], _.divide(e, factors[i]));\r\n                        if(as_array)\r\n                            retval.push(term);\r\n                        else\r\n                            retval = _.add(retval, term);\r\n                    });\r\n\r\n                    //done\r\n                    return retval;\r\n                }\r\n                catch(e) {\r\n                    //try to group symbols\r\n                    try {\r\n                        if(symbol.isComposite()) {\r\n                            //group denominators\r\n                            var denominators = {};\r\n\r\n                            symbol.each(function (x) {\r\n                                var d = x.getDenom();\r\n                                var n = x.getNum();\r\n                                var e = denominators[d];\r\n                                denominators[d] = e ? _.add(e, n) : n;\r\n                            });\r\n\r\n                            var t = new Symbol(0);\r\n\r\n                            for(var x in denominators) {\r\n                                t = _.add(t, _.divide(denominators[x], _.parse(x)));\r\n                            }\r\n\r\n                            symbol = t;\r\n                        }\r\n                    }\r\n                    catch(e2) {\r\n                    }\r\n                    ;\r\n                }\r\n                ;\r\n\r\n                return symbol;\r\n            }\r\n        },\r\n        degree: function (symbol, v, o) {\r\n            o = o || {\r\n                nd: [], //numeric\r\n                sd: [], //symbolic\r\n                depth: 0 //call depth\r\n            };\r\n\r\n            if(!v) {\r\n                var vars = variables(symbol);\r\n                //The user must specify the variable for multivariate\r\n                if(vars.length > 1)\r\n                    throw new Error('You must specify the variable for multivariate polynomials!');\r\n                //if it's empty then we're dealing with a constant\r\n                if(vars.length === 0)\r\n                    return new Symbol(0);\r\n                //assume the variable for univariate\r\n                v = _.parse(vars[0]);\r\n            }\r\n\r\n            //store the group\r\n            var g = symbol.group;\r\n            //we're going to trust the user and assume no EX. Calling isPoly \r\n            //would eliminate this but no sense in checking twice. \r\n            if(symbol.isComposite()) {\r\n                symbol = symbol.clone();\r\n                symbol.distributeExponent();\r\n                symbol.each(function (x) {\r\n                    o.depth++; //mark a depth increase\r\n                    __.degree(x, v, o);\r\n                    o.depth--; //we're back\r\n                });\r\n            }\r\n            else if(symbol.group === CB) {\r\n                symbol.each(function (x) {\r\n                    o.depth++;\r\n                    __.degree(x, v, o);\r\n                    o.depth++;\r\n                });\r\n            }\r\n            else if(g === EX && symbol.value === v.value) {\r\n                o.sd.push(symbol.power.clone());\r\n            }\r\n            else if(g === S && symbol.value === v.value) {\r\n                o.nd.push(_.parse(symbol.power));\r\n            }\r\n            else\r\n                o.nd.push(new Symbol(0));\r\n\r\n            //get the max out of the array\r\n            var deg = o.nd.length > 0 ? core.Utils.arrayMax(o.nd) : undefined;\r\n\r\n            if(o.depth === 0 && o.sd.length > 0) {\r\n                if(deg !== undefined)\r\n                    o.sd.unshift(deg);\r\n                return _.symfunction('max', o.sd);\r\n            }\r\n            if(!core.Utils.isSymbol(deg))\r\n                deg = _.parse(deg);\r\n            //return the degree\r\n            return deg;\r\n        },\r\n        /**\r\n         * Attempts to complete the square of a polynomial\r\n         * @param {type} symbol\r\n         * @param {type} v\r\n         * @param {type} raw\r\n         * @throws {Error} \r\n         * @returns {Object|Symbol[]}\r\n         */\r\n        sqComplete: function (symbol, v, raw) {\r\n            if(!core.Utils.isSymbol(v))\r\n                v = _.parse(v);\r\n            var stop = function (msg) {\r\n                msg = msg || 'Stopping';\r\n                throw new core.exceptions.ValueLimitExceededError(msg);\r\n            };\r\n            //if not CP then nothing to do\r\n            if(!symbol.isPoly(true))\r\n                stop('Must be a polynomial!');\r\n\r\n            //declare vars\r\n            var deg, a, b, c, d, e, coeffs, sign, br, sym, sqrt_a;\r\n\r\n            br = core.Utils.inBrackets;\r\n            //make a copy\r\n            symbol = symbol.clone();\r\n            deg = core.Algebra.degree(symbol, v); //get the degree of polynomial\r\n            //must be in form ax^2 +/- bx +/- c\r\n            if(!deg.equals(2))\r\n                stop('Cannot complete square for degree ' + deg);\r\n            //get the coeffs\r\n            coeffs = core.Algebra.coeffs(symbol, v);\r\n            a = coeffs[2];\r\n            //store the sign\r\n            sign = coeffs[1].sign();\r\n            //divide the linear term by two and square it\r\n            b = _.divide(coeffs[1], new Symbol(2));\r\n            //add the difference to the constant\r\n            c = _.pow(b.clone(), new Symbol(2));\r\n            if(raw)\r\n                return [a, b, d];\r\n            sqrt_a = math.sqrt(a);\r\n            e = _.divide(math.sqrt(c), sqrt_a.clone());\r\n            //calculate d which is the constant\r\n            d = _.subtract(coeffs[0], _.pow(e.clone(), new Symbol(2)));\r\n            //compute the square part\r\n            sym = _.parse(br(sqrt_a.clone() + '*' + v + (sign < 0 ? '-' : '+') + e));\r\n            return {\r\n                a: sym,\r\n                c: d,\r\n                f: _.add(_.pow(sym.clone(), new Symbol(2)), d.clone())\r\n            };\r\n        },\r\n        Simplify: {\r\n            strip: function (symbol) {\r\n                var c = _.parse(symbol.multiplier);\r\n                symbol.toUnitMultiplier();\r\n                var p = _.parse(symbol.power);\r\n                symbol.toLinear();\r\n                return [c, p, symbol];\r\n            },\r\n            unstrip: function (cp, symbol) {\r\n                var c = cp[0];\r\n                var p = cp[1];\r\n                return _.multiply(c, _.pow(symbol, p));\r\n            },\r\n            complexSimp: function (num, den) {\r\n                var ac, bd, bc, ad, cd, r1, r2, i1, i2;\r\n                r1 = num.realpart();\r\n                i1 = num.imagpart();\r\n                r2 = den.realpart();\r\n                i2 = den.imagpart();\r\n                //apply complex arithmatic rule\r\n                ac = _.multiply(r1.clone(), r2.clone());\r\n                bd = _.multiply(i1.clone(), i2.clone());\r\n                bc = _.multiply(r2.clone(), i1);\r\n                ad = _.multiply(r1, i2.clone());\r\n                cd = _.add(_.pow(r2, new Symbol(2)), _.pow(i2, new Symbol(2)));\r\n\r\n                return _.divide(_.add(_.add(ac, bd), _.multiply(_.subtract(bc, ad), Symbol.imaginary())), cd);\r\n            },\r\n            trigSimp: function (symbol) {\r\n                if(symbol.containsFunction(['cos', 'sin', 'tan'])) {\r\n                    symbol = symbol.clone();\r\n                    //remove power and multiplier\r\n                    var sym_array = __.Simplify.strip(symbol);\r\n                    symbol = sym_array.pop();\r\n                    //the default return value is the symbol\r\n                    var retval = symbol.clone();\r\n\r\n                    //rewrite the symbol\r\n                    if(symbol.group === CP) {\r\n                        var sym = new Symbol(0);\r\n                        symbol.each(function (x) {\r\n                            //rewrite the function\r\n                            var tr = __.Simplify.trigSimp(x.fnTransform());\r\n                            sym = _.add(sym, tr);\r\n                        }, true);\r\n\r\n                        //put back the power and multiplier and return\r\n                        retval = _.pow(_.multiply(new Symbol(symbol.multiplier), sym), new Symbol(symbol.power));\r\n                    }\r\n                    else if(symbol.group === CB) {\r\n\r\n                        var n = symbol.getNum();\r\n                        var d = symbol.getDenom();\r\n\r\n                        //try for tangent\r\n                        if(n.fname === 'sin' && d.fname === 'cos' && n.args[0].equals(d.args[0]) && n.power.equals(d.power)) {\r\n                            retval = _.parse(core.Utils.format('({0})*({1})*tan({2})^({3})', d.multiplier, n.multiplier, n.args[0], n.power));\r\n                        }\r\n                        if(retval.group === CB) {\r\n                            var t = new Symbol(1);\r\n                            retval.each(function (x) {\r\n                                if(x.fname === 'tan') {\r\n                                    x = _.parse(core.Utils.format('({0})*sin({1})^({2})/cos({1})^({2})', x.multiplier, __.Simplify.simplify(x.args[0]), x.power));\r\n                                }\r\n                                t = _.multiply(t, x);\r\n                            });\r\n                            retval = t;\r\n                        }\r\n                    }\r\n\r\n\r\n                    retval = __.Simplify.unstrip(sym_array, retval).distributeMultiplier();\r\n\r\n                    symbol = retval;\r\n                }\r\n\r\n                return symbol;\r\n            },\r\n            fracSimp: function (symbol) {\r\n                //try a quick simplify of imaginary numbers\r\n                var den = symbol.getDenom();\r\n                var num = symbol.getNum();\r\n\r\n                if(num.isImaginary() && den.isImaginary())\r\n                    symbol = __.Simplify.complexSimp(num, den);\r\n\r\n                if(symbol.isComposite()) {\r\n                    if(symbol.power > 1) {\r\n                        symbol = _.expand(symbol);\r\n                    }\r\n\r\n                    var symbols = symbol.collectSymbols();\r\n                    //assumption 1.\r\n                    //since it's a composite, it has a length of at least 1\r\n                    var retval, a, b, d1, d2, n1, n2, s, x, y, c, den, num;\r\n                    a = symbols.pop(); //grab the first symbol\r\n                    //loop through each term and make denominator common\r\n                    while(symbols.length) {\r\n                        b = symbols.pop(); //grab the second symbol\r\n                        d1 = _.parse(a.getDenom());\r\n                        d2 = _.parse(b.getDenom());\r\n                        n1 = a.getNum();\r\n                        n2 = b.getNum();\r\n                        c = _.multiply(d1.clone(), d2.clone());\r\n                        x = _.multiply(n1, d2);\r\n                        y = _.multiply(n2, d1);\r\n                        s = _.add(x, y);\r\n                        a = _.divide(s, c);\r\n                    }\r\n                    den = _.expand(a.getDenom());\r\n                    num = _.expand(a.getNum());\r\n                    //simplify imaginary\r\n                    if(num.isImaginary() && den.isImaginary()) {\r\n                        retval = __.Simplify.complexSimp(num, den);\r\n                    }\r\n                    else {\r\n                        retval = _.divide(num, den);\r\n                    }\r\n\r\n                    //we've already hit the simplest form so return that\r\n                    if(retval.equals(symbol)) {\r\n                        return symbol;\r\n                    }\r\n\r\n                    //otherwise simplify it some more\r\n                    return __.Simplify.simplify(retval);\r\n                }\r\n                return symbol;\r\n            },\r\n            ratSimp: function (symbol) {\r\n                if(symbol.group === CB) {\r\n                    var den = symbol.getDenom();\r\n                    var num = symbol.getNum().distributeMultiplier();\r\n                    var d = __.Simplify.fracSimp(den);\r\n                    var n = __.Simplify.fracSimp(num);\r\n                    symbol = _.divide(n, d);\r\n                }\r\n                return symbol;\r\n            },\r\n            sqrtSimp: function (symbol, sym_array) {\r\n                var retval;\r\n                if(symbol.isSQRT()) {\r\n                    var factored = __.Factor.factor(symbol.args[0].clone());\r\n                    var m = _.parse(factored.multiplier);\r\n                    var sign = m.sign();\r\n\r\n                    var retval = _.sqrt(m.abs());\r\n                    var arg;\r\n\r\n                    if(isInt(retval)) {\r\n\r\n                        if(factored.group === CB) {\r\n                            var rem = new Symbol(1);\r\n\r\n                            factored.each(function (x) {\r\n                                if(x.group === N) {\r\n                                    var trial = _.sqrt(x.clone());\r\n\r\n                                    // Multiply back sqrt if it's an integer otherwise just put back the number\r\n                                    if(isInt(trial)) {\r\n                                        retval = _.multiply(retval, trial);\r\n                                    }\r\n                                    else {\r\n                                        rem = _.multiply(rem, x);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    rem = _.multiply(rem, x);\r\n                                }\r\n\r\n                            });\r\n                            var t = _.multiply(rem, _.parse(sign));\r\n                            arg = _.sqrt(t.clone());\r\n\r\n                            // Expand if it's imaginary\r\n                            if(arg.isImaginary) {\r\n                                arg = _.sqrt(_.expand(t.clone()));\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Strip the multiplier\r\n                            arg = _.sqrt(factored.clone().toUnitMultiplier());\r\n                        }\r\n                        return _.multiply(retval, arg);\r\n\r\n                    }\r\n\r\n                }\r\n                else if(symbol.isComposite() && symbol.isLinear()) {\r\n                    retval = new Symbol(0);\r\n                    symbol.each(function (x) {\r\n                        retval = _.add(retval, __.Simplify.sqrtSimp(x));\r\n                    }, true);\r\n                    // Put back the multiplier\r\n                    retval = _.multiply(retval, _.parse(symbol.multiplier));\r\n                }\r\n                else if(symbol.group === CB) {\r\n                    retval = _.parse(symbol.multiplier);\r\n                    symbol.each(function (x) {\r\n                        var simp = __.Simplify.sqrtSimp(x);\r\n                        retval = _.multiply(retval, simp);\r\n\r\n                    }, true);\r\n                    // Put back the power\r\n                    retval = _.pow(retval, _.parse(symbol.power));\r\n                }\r\n\r\n                return retval ? retval : _.parse(symbol);\r\n            },\r\n            /**\r\n             * Unused. The goal is to substitute out patterns but it currently doesn't work.\r\n             * @param {Symbol} symbol\r\n             * @return {Array} The symbol and the matched patterns\r\n             */\r\n            patternSub: function (symbol) {\r\n                var patterns = {};\r\n\r\n                var has_CP = function (symbol) {\r\n                    var found = false;\r\n                    symbol.each(function (x) {\r\n                        if(x.group === CP) {\r\n                            found = true;\r\n                        }\r\n                        else if(x.symbols) {\r\n                            found = has_CP(x);\r\n                        }\r\n                    });\r\n\r\n                    return found;\r\n                };\r\n\r\n                var collect = function (sym) {\r\n                    // We loop through each symbol looking for anything in the simplest\r\n                    // form of ax+byz+...\r\n                    sym.each(function (x) {\r\n                        // Items of group N,P,S, need to apply\r\n                        if(!x.symbols && x.group !== FN) {\r\n                            return;\r\n                        }\r\n\r\n                        // Check to see if it has any symbols of group CP\r\n                        // Get the patterns in that symbol instead if it has anything of group CP\r\n                        if(has_CP(x)) {\r\n                            collect(x);\r\n                        }\r\n                        else {\r\n                            if(!patterns[x.value]) {\r\n                                var u = core.Utils.getU(symbol);\r\n                                // Get a u value and mark it for subsitution\r\n                                patterns[x.value] = u;\r\n                                symbol = symbol.sub(x.value, u);\r\n                            }\r\n                        }\r\n                    }, true);\r\n                };\r\n\r\n                // Collect a list of patterns\r\n                collect(symbol);\r\n\r\n                return [symbol, patterns];\r\n            },\r\n            simplify: function (symbol) {\r\n                //remove the multiplier to make calculation easier;\r\n                var sym_array = __.Simplify.strip(symbol);\r\n                symbol = sym_array.pop();\r\n                //remove gcd from denominator\r\n                symbol = __.Simplify.fracSimp(symbol);\r\n                //nothing more to do\r\n                if(symbol.isConstant() || symbol.group === core.groups.S) {\r\n                    sym_array.push(symbol);\r\n                    var ret = __.Simplify.unstrip(sym_array, symbol);\r\n                    return ret;\r\n                }\r\n\r\n                //var patterns;\r\n\r\n                var simplified = symbol.clone(); //make a copy\r\n\r\n                //[simplified, patterns] = __.Simplify.patternSub(symbol);\r\n\r\n                // Simplify sqrt within the symbol\r\n//                simplified = __.Simplify.sqrtSimp(simplified, sym_array);\r\n\r\n                // Try trig simplificatons e.g. cos(x)^2+sin(x)^2\r\n                simplified = __.Simplify.trigSimp(simplified);\r\n\r\n                // Simplify common denominators\r\n                simplified = __.Simplify.ratSimp(simplified);\r\n\r\n                // First go for the \"cheapest\" simplification which may eliminate \r\n                // your problems right away. factor -> evaluate. Remember\r\n                // that there's no need to expand since factor already does that\r\n\r\n                simplified = __.Factor.factor(simplified);\r\n\r\n                //If the simplfied is a sum then we can make a few more simplifications\r\n                //e.g. simplify(1/(x-1)+1/(1-x)) as per issue #431\r\n                if(simplified.group === core.groups.CP && simplified.isLinear()) {\r\n                    var m = simplified.multiplier.clone();\r\n                    simplified.toUnitMultiplier(); //strip the multiplier\r\n                    var r = new Symbol(0);\r\n                    //return the sum of simplifications\r\n                    simplified.each(function (x) {\r\n                        var s = __.Simplify.simplify(x);\r\n                        r = _.add(r, s);\r\n                    });\r\n                    simplified = r;\r\n                    //put back the multiplier\r\n                    r.multiplier = r.multiplier.multiply(m);\r\n                }\r\n\r\n                //place back multiplier and return\r\n                var retval = __.Simplify.unstrip(sym_array, simplified);\r\n\r\n                // Back substitute\r\n                /*\r\n                 for(var x in patterns) {\r\n                 retval = retval.sub(patterns[x], x);\r\n                 }\r\n                 */\r\n\r\n                return retval;\r\n            }\r\n        },\r\n\r\n        Classes: {\r\n            Polynomial: Polynomial,\r\n            Factors: Factors,\r\n            MVTerm: MVTerm\r\n        }\r\n    };\r\n\r\n    // Add a link to simplify\r\n    core.Expression.prototype.simplify = function () {\r\n        return __.Simplify.simplify(this.symbol);\r\n    };\r\n\r\n    nerdamer.useAlgebraDiv = function () {\r\n        var divide = __.divideFn = _.divide;\r\n        var calls = 0; //keep track of how many calls were made\r\n        _.divide = function (a, b) {\r\n            calls++;\r\n            var ans;\r\n            if(calls === 1) //check if this is the first call. If it is use algebra divide\r\n                ans = core.Algebra.divide(a, b);\r\n            else //otherwise use parser divide\r\n                ans = divide(a, b);\r\n            calls = 0; //reset the number of calls back to none\r\n            return ans;\r\n        };\r\n    };\r\n\r\n    nerdamer.useParserDiv = function () {\r\n        if(__.divideFn)\r\n            _.divide = __.divideFn;\r\n        delete __.divideFn;\r\n    };\r\n\r\n    nerdamer.register([\r\n        {\r\n            name: 'factor',\r\n            visible: true,\r\n            numargs: 1,\r\n            build: function () {\r\n                return __.Factor.factor;\r\n            }\r\n        },\r\n        {\r\n            name: 'simplify',\r\n            visible: true,\r\n            numargs: 1,\r\n            build: function () {\r\n                return __.Simplify.simplify;\r\n            }\r\n        },\r\n        {\r\n            name: 'gcd',\r\n            visible: true,\r\n            numargs: [1, ],\r\n            build: function () {\r\n                return __.gcd;\r\n            }\r\n        },\r\n        {\r\n            name: 'lcm',\r\n            visible: true,\r\n            numargs: [1, ],\r\n            build: function () {\r\n                return __.lcm;\r\n            }\r\n        },\r\n        {\r\n            name: 'roots',\r\n            visible: true,\r\n            numargs: -1,\r\n            build: function () {\r\n                return __.roots;\r\n            }\r\n        },\r\n        {\r\n            name: 'divide',\r\n            visible: true,\r\n            numargs: 2,\r\n            build: function () {\r\n                return __.divide;\r\n            }\r\n        },\r\n        {\r\n            name: 'div',\r\n            visible: true,\r\n            numargs: 2,\r\n            build: function () {\r\n                return __.div;\r\n            }\r\n        },\r\n        {\r\n            name: 'partfrac',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function () {\r\n                return __.PartFrac.partfrac;\r\n            }\r\n        },\r\n        {\r\n            name: 'deg',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function () {\r\n                return __.degree;\r\n            }\r\n        },\r\n        {\r\n            name: 'coeffs',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function () {\r\n                var f = function () {\r\n                    var coeffs = __.coeffs.apply(__, arguments);\r\n                    return new core.Vector(coeffs);\r\n                };\r\n                return f;\r\n            }\r\n        },\r\n        {\r\n            name: 'line',\r\n            visible: true,\r\n            numargs: [2, 3],\r\n            build: function () {\r\n                return __.line;\r\n            }\r\n        },\r\n        {\r\n            name: 'sqcomp',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function () {\r\n                var f = function (x, v) {\r\n                    try {\r\n                        v = v || variables(x)[0];\r\n                        var sq = __.sqComplete(x.clone(), v);\r\n                        return sq.f;\r\n                    }\r\n                    catch(e) {\r\n                        return x;\r\n                    }\r\n                };\r\n                return f;\r\n            }\r\n        }\r\n    ]);\r\n    nerdamer.updateAPI();\r\n})();","/* global module */\r\n\r\n/*\r\n * Author : Martin Donk\r\n * Website : http://www.nerdamer.com\r\n * Email : martin.r.donk@gmail.com\r\n * Source : https://github.com/jiggzson/nerdamer\r\n */\r\n\r\nif((typeof module) !== 'undefined' && typeof nerdamer === 'undefined') {\r\n    var nerdamer = require('./nerdamer.core.js');\r\n    require('./Algebra.js');\r\n}\r\n\r\n(function () {\r\n    \"use strict\";\r\n\r\n    var core = nerdamer.getCore(),\r\n            _ = core.PARSER,\r\n            Frac = core.Frac,\r\n            Settings = core.Settings,\r\n            isSymbol = core.Utils.isSymbol,\r\n            FN = core.groups.FN,\r\n            Symbol = core.Symbol,\r\n            text = core.Utils.text,\r\n            inBrackets = core.Utils.inBrackets,\r\n            isInt = core.Utils.isInt,\r\n            format = core.Utils.format,\r\n            even = core.Utils.even,\r\n            evaluate = core.Utils.evaluate,\r\n            N = core.groups.N,\r\n            S = core.groups.S,\r\n            FN = core.groups.FN,\r\n            PL = core.groups.PL,\r\n            CP = core.groups.CP,\r\n            CB = core.groups.CB,\r\n            EX = core.groups.EX,\r\n            P = core.groups.P,\r\n            LOG = Settings.LOG,\r\n            EXP = 'exp',\r\n            ABS = 'abs',\r\n            SQRT = 'sqrt',\r\n            SIN = 'sin',\r\n            COS = 'cos',\r\n            TAN = 'tan',\r\n            SEC = 'sec',\r\n            CSC = 'csc',\r\n            COT = 'cot',\r\n            ASIN = 'asin',\r\n            ACOS = 'acos',\r\n            ATAN = 'atan',\r\n            ASEC = 'asec',\r\n            ACSC = 'acsc',\r\n            ACOT = 'acot',\r\n            SINH = 'sinh',\r\n            COSH = 'cosh',\r\n            TANH = 'tanh',\r\n            CSCH = 'csch',\r\n            SECH = 'sech',\r\n            COTH = 'coth',\r\n            ASECH = 'asech',\r\n            ACSCH = 'acsch',\r\n            ACOTH = 'acoth';\r\n\r\n    //custom errors\r\n    function NoIntegralFound(msg) {\r\n        this.message = msg || \"\";\r\n    }\r\n    NoIntegralFound.prototype = new Error();\r\n\r\n    //Preparations\r\n    Symbol.prototype.hasIntegral = function () {\r\n        return this.containsFunction('integrate');\r\n    };\r\n    //transforms a function\r\n    Symbol.prototype.fnTransform = function () {\r\n        if(this.group !== FN)\r\n            return this;\r\n        var retval, a = this.args[0];\r\n        var m = new Symbol(this.multiplier);\r\n        var sym = this.clone().toUnitMultiplier();\r\n        if(this.isLinear()) {\r\n            switch(this.fname) {\r\n                case SINH:\r\n                    retval = _.parse(format('(e^({0})-e^(-({0})))/2', a));\r\n                    break;\r\n                case COSH:\r\n                    retval = _.parse(format('(e^({0})+e^(-({0})))/2', a));\r\n                    break;\r\n                case TANH:\r\n                    retval = _.parse(format('(e^({0})-e^(-({0})))/(e^({0})+e^(-({0})))', a));\r\n                    break;\r\n                case TAN:\r\n                    retval = _.parse(format('sin({0})/cos({0})', a));\r\n                    break;\r\n                case CSC:\r\n                    retval = _.parse(format('1/sin({0})', a));\r\n                    break;\r\n                case SEC:\r\n                    retval = _.parse(format('1/cos({0})', a));\r\n                    break;\r\n                default:\r\n                    retval = sym;\r\n            }\r\n        }\r\n        else if(this.power.equals(2)) {\r\n            switch(this.fname) {\r\n                case SIN:\r\n                    retval = _.parse(format('1/2-cos(2*({0}))/2', a));\r\n                    break;\r\n                case COS:\r\n                    retval = _.parse(format('1/2+cos(2*({0}))/2', a));\r\n                    break;\r\n                case TAN:\r\n                    //retval = _.parse(format('(1-cos(2*({0})))/(1+cos(2*({0})))', a));\r\n                    retval = _.parse(format('sin({0})^2/cos({0})^2', a));\r\n                    break;\r\n                case COSH:\r\n                    retval = _.parse(format('1/2+cosh(2*({0}))/2', a));\r\n                    break;\r\n                case SINH:\r\n                    retval = _.parse(format('-1/2+cosh(2*({0}))/2', a));\r\n                    break;\r\n                case TANH:\r\n                    retval = _.parse(format('(1+cosh(2*({0})))/(-1+cosh(2*({0})))', a));\r\n                    break;\r\n                case SEC:\r\n                    retval = _.parse(format('(1-cos(2*({0})))/(1+cos(2*({0})))+1', a));\r\n                    break;\r\n                default:\r\n                    retval = sym;\r\n            }\r\n        }\r\n        else if(this.fname === SEC) {\r\n            retval = _.parse(format('1/cos({0})^({1})', this.args[0], this.power));\r\n        }\r\n        else if(this.fname === CSC) {\r\n            retval = _.parse(format('1/sin({0})^({1})', this.args[0], this.power));\r\n        }\r\n        else if(this.fname === TAN) {\r\n            if(this.power.lessThan(0)) {\r\n                retval = _.parse(format('cos({0})^(-({1}))/sin({0})^({1})', this.args[0], this.power.negate()));\r\n            }\r\n            else {\r\n                retval = _.parse(format('sin({0})^({1})/cos({0})^({1})', this.args[0], this.power));\r\n            }\r\n        }\r\n        else if(this.fname === SIN && this.power.lessThan(0)) {\r\n            retval = _.parse(format('csc({0})^(-({1}))', this.args[0], this.power.negate()));\r\n        }\r\n        else if(this.fname === COS && this.power.lessThan(0)) {\r\n            retval = _.parse(format('sec({0})^(-({1}))', this.args[0], this.power.negate()));\r\n        }\r\n        else if(this.fname === SIN && this.power.equals(3)) {\r\n            retval = _.parse(format('(3*sin({0})-sin(3*({0})))/4', this.args[0]));\r\n        }\r\n        else if(this.fname === COS && this.power.equals(3)) {\r\n            retval = _.parse(format('(cos(3*({0}))+3*cos({0}))/4', this.args[0]));\r\n        }\r\n        //cos(a*x)^(2*n) or sin(a*x)^(2*n)\r\n        else if((this.fname === COS || this.fname === SIN) && even(this.power)) {\r\n            var n = this.power / 2;\r\n            //convert to a double angle\r\n            var double_angle = _.pow(this.clone().toLinear(), _.parse(2)).fnTransform();\r\n            //raise to the n and expand\r\n            var transformed = _.expand(_.pow(double_angle, _.parse(n)));\r\n\r\n            retval = new Symbol(0);\r\n\r\n            transformed.each(function (s) {\r\n                var t = s.fnTransform();\r\n                retval = _.add(retval, t);\r\n            }, true);\r\n        }\r\n        else\r\n            retval = sym;\r\n\r\n        return _.multiply(retval, m);\r\n    };\r\n\r\n    Symbol.prototype.hasTrig = function () {\r\n        if(this.isConstant(true) || this.group === S)\r\n            return false;\r\n        if(this.fname && (core.Utils.in_trig(this.fname) || core.Utils.in_inverse_trig(this.fname)))\r\n            return true;\r\n        if(this.symbols) {\r\n            for(var x in this.symbols)\r\n                if(this.symbols[x].hasTrig())\r\n                    return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    core.Expression.prototype.hasIntegral = function () {\r\n        return this.symbol.hasIntegral();\r\n    };\r\n    /**\r\n     * Attempts to rewrite a symbol under one common denominator\r\n     * @param {Symbol} symbol \r\n     */\r\n    core.Utils.toCommonDenominator = function (symbol) {\r\n        //transform x/a+x -> (ax+x)/a\r\n        if(symbol.isComposite() && symbol.isLinear()) {\r\n            var m = new Symbol(symbol.multiplier);\r\n            var denominator = new Symbol(1);\r\n            var numerator = new Symbol(0);\r\n            symbol.each(function (x) {\r\n                denominator = _.multiply(denominator, x.getDenom());\r\n            }, true);\r\n\r\n            //remove the denomitor in each term\r\n            symbol.each(function (x) {\r\n                var num = x.getNum();\r\n                var den = x.getDenom();\r\n                var factor = _.multiply(num, _.divide(denominator.clone(), den));\r\n                numerator = _.add(numerator, factor);\r\n            });\r\n            var retval = _.multiply(m, core.Algebra.divide(_.expand(numerator), _.expand(denominator)));\r\n            return retval;\r\n        }\r\n        return symbol;\r\n    };\r\n    //A function to check if a function name is an inverse trig function\r\n    core.Utils.in_inverse_trig = function (x) {\r\n        var inv_trig_fns = [ASIN, ACOS, ATAN, ACSC, ASEC, ACOT];\r\n        return inv_trig_fns.indexOf(x) !== -1;\r\n    };\r\n    //A function to check if a function name is a trig function\r\n    core.Utils.in_trig = function (x) {\r\n        var trig_fns = [COS, SIN, TAN, SEC, CSC, COT];\r\n        return trig_fns.indexOf(x) !== -1;\r\n    };\r\n\r\n    core.Utils.in_htrig = function (x) {\r\n        var trig_fns = [SINH, COSH, TANH, ACSCH, ASECH, ACOTH];\r\n        return trig_fns.indexOf(x) !== -1;\r\n    };\r\n\r\n    // Matrix functions\r\n    core.Matrix.jacobian = function (eqns, vars) {\r\n        var jacobian = new core.Matrix();\r\n        //get the variables if not supplied\r\n        if(!vars) {\r\n            vars = core.Utils.arrayGetVariables(eqns);\r\n        }\r\n\r\n        vars.forEach(function (v, i) {\r\n            eqns.forEach(function (eq, j) {\r\n                var e = core.Calculus.diff(eq.clone(), v);\r\n                jacobian.set(j, i, e);\r\n            });\r\n        });\r\n\r\n        return jacobian;\r\n    };\r\n\r\n    core.Matrix.prototype.max = function () {\r\n        var max = new Symbol(0);\r\n        this.each(function (x) {\r\n            var e = x.abs();\r\n            if(e.gt(max))\r\n                max = e;\r\n        });\r\n        return max;\r\n    };\r\n\r\n    core.Matrix.cMatrix = function (value, vars) {\r\n        var m = new core.Matrix();\r\n        //make an initial guess\r\n        vars.forEach(function (v, i) {\r\n            m.set(i, 0, _.parse(value));\r\n        });\r\n        return m;\r\n    };\r\n\r\n    var all_functions = core.Utils.all_functions = function (arr) {\r\n        for(var i = 0, l = arr.length; i < l; i++)\r\n            if(arr[i].group !== FN)\r\n                return false;\r\n        return true;\r\n    },\r\n            cosAsinBtransform = core.Utils.cosAsinBtranform = function (symbol1, symbol2) {\r\n                var a, b;\r\n                a = symbol1.args[0];\r\n                b = symbol2.args[0];\r\n                return _.parse(format('(sin(({0})+({1}))-sin(({0})-({1})))/2', a, b));\r\n            },\r\n            cosAsinAtransform = core.Utils.cosAsinAtranform = function (symbol1, symbol2) {\r\n                //TODO: temporary fix for integrate(e^x*sin(x)*cos(x)^2).\r\n                //we technically know how to do this transform but more is needed for correct output\r\n                if(Number(symbol2.power) !== 1)\r\n                    return _.multiply(symbol1, symbol2);\r\n                var a;\r\n                a = symbol1.args[0];\r\n                return _.parse(format('(sin(2*({0})))/2', a));\r\n            },\r\n            sinAsinBtransform = core.Utils.cosAsinBtranform = function (symbol1, symbol2) {\r\n                var a, b;\r\n                a = symbol1.args[0];\r\n                b = symbol2.args[0];\r\n                return _.parse(format('(cos(({0})+({1}))-cos(({0})-({1})))/2', a, b));\r\n            },\r\n            trigTransform = core.Utils.trigTransform = function (arr) {\r\n                var map = {}, symbol, t,\r\n                        retval = new Symbol(1);\r\n                for(var i = 0, l = arr.length; i < l; i++) {\r\n                    symbol = arr[i];\r\n\r\n                    if(symbol.group === FN) {\r\n                        var fname = symbol.fname;\r\n\r\n                        if(fname === COS && map[SIN]) {\r\n\r\n                            if(map[SIN].args[0].toString() !== symbol.args[0].toString()) {\r\n                                t = cosAsinBtransform(symbol, map[SIN]);\r\n                            }\r\n                            else {\r\n                                t = cosAsinAtransform(symbol, map[SIN]);\r\n                            }\r\n                            delete map[SIN];\r\n\r\n                            retval = _.multiply(retval, t);\r\n                        }\r\n                        else if(fname === SIN && map[COS]) {\r\n                            if(map[COS].args[0].toString() !== symbol.args[0].toString()) {\r\n                                t = cosAsinBtransform(symbol, map[COS]);\r\n                            }\r\n                            else {\r\n                                t = cosAsinAtransform(symbol, map[COS]);\r\n                            }\r\n                            delete map[COS];\r\n\r\n                            retval = _.multiply(retval, t);\r\n                        }\r\n                        else if(fname === SIN && map[SIN]) {\r\n                            if(map[SIN].args[0].toString() !== symbol.args[0].toString()) {\r\n                                t = sinAsinBtransform(symbol, map[SIN]);\r\n                                delete map[SIN];\r\n                            }\r\n                            else {\r\n                                //This should actually be redundant code but let's put just in case\r\n                                t = _.multiply(symbol, map[SIN]);\r\n                                delete map[SIN];\r\n                            }\r\n\r\n                            retval = t;\r\n                        }\r\n                        else {\r\n                            map[fname] = symbol;\r\n                        }\r\n                    }\r\n                    else\r\n                        retval = _.multiply(retval, symbol);\r\n                }\r\n\r\n                //put back the remaining functions\r\n                for(var x in map)\r\n                    retval = _.multiply(retval, map[x]);\r\n\r\n                return retval;\r\n\r\n            };\r\n\r\n    core.Settings.integration_depth = 10;\r\n\r\n    core.Settings.max_lim_depth = 10;\r\n\r\n    var __ = core.Calculus = {\r\n\r\n        version: '1.4.6',\r\n\r\n        sum: function (fn, index, start, end) {\r\n            if(!(index.group === core.groups.S))\r\n                throw new core.exceptions.NerdamerTypeError('Index must be symbol. ' + text(index) + ' provided');\r\n            index = index.value;\r\n            var retval;\r\n            if(core.Utils.isNumericSymbol(start) && core.Utils.isNumericSymbol(end)) {\r\n                var modifier = end - start < 200 ? '' : 'PARSE2NUMBER';\r\n                start = Number(start);\r\n                end = Number(end);\r\n                retval = core.Utils.block(modifier, function () {\r\n                    var f = fn.text(),\r\n                            subs = {'~': true}, //lock subs. Is this even being used?\r\n                            retval = new core.Symbol(0);\r\n\r\n                    for(var i = start; i <= end; i++) {\r\n                        subs[index] = new Symbol(i);\r\n                        var ans = _.parse(f, subs);\r\n                        retval = _.add(retval, ans);\r\n                    }\r\n                    return retval;\r\n                });\r\n            }\r\n            else {\r\n                retval = _.symfunction('sum', arguments);\r\n            }\r\n\r\n            return retval;\r\n        },\r\n        product: function (fn, index, start, end) {\r\n            if(!(index.group === core.groups.S))\r\n                throw new core.exceptions.NerdamerTypeError('Index must be symbol. ' + text(index) + ' provided');\r\n            index = index.value;\r\n            var retval;\r\n            if(core.Utils.isNumericSymbol(start) && core.Utils.isNumericSymbol(end)) {\r\n                var modifier = end - start < 200 ? '' : 'PARSE2NUMBER';\r\n                retval = core.Utils.block(modifier, function () {\r\n                    start = Number(start);\r\n                    end = Number(end.multiplier);\r\n\r\n                    var f = fn.text(),\r\n                            subs = {},\r\n                            retval = new core.Symbol(1);\r\n\r\n                    for(var i = start; i <= end; i++) {\r\n                        subs[index] = new Symbol(i);\r\n                        retval = _.multiply(retval, _.parse(f, subs));\r\n                    }\r\n                    return retval;\r\n                });\r\n            }\r\n            else {\r\n                retval = _.symfunction('product', arguments);\r\n            }\r\n\r\n            return retval;\r\n        },\r\n        diff: function (symbol, wrt, nth) {\r\n            if(core.Utils.isVector(symbol)) {\r\n                var vector = new core.Vector([]);\r\n                symbol.each(function (x) {\r\n                    vector.elements.push(__.diff(x, wrt, nth));\r\n                });\r\n                return vector;\r\n            }\r\n            else if(core.Utils.isMatrix(symbol)) {\r\n                var matrix = new core.Matrix();\r\n                symbol.each(function (x, i, j) {\r\n                    matrix.set(i, j, __.diff(x, wrt, nth));\r\n                });\r\n                return matrix;\r\n            }\r\n\r\n            var d = isSymbol(wrt) ? wrt.text() : wrt;\r\n            //the nth derivative\r\n            nth = isSymbol(nth) ? nth.multiplier : nth || 1;\r\n\r\n            if(d === undefined)\r\n                d = core.Utils.variables(symbol)[0];\r\n\r\n            //unwrap sqrt\r\n            if(symbol.group === FN && symbol.fname === SQRT) {\r\n                var s = symbol.args[0],\r\n                        sp = symbol.power.clone();\r\n                //these groups go to zero anyway so why waste time?\r\n                if(s.group !== N || s.group !== P) {\r\n                    s.power = isSymbol(s.power) ? _.multiply(s.power, _.multiply(new Symbol(1 / 2)), sp) : s.power.multiply(new Frac(0.5)).multiply(sp);\r\n                    s.multiplier = s.multiplier.multiply(symbol.multiplier);\r\n                }\r\n\r\n                symbol = s;\r\n            }\r\n\r\n            if(symbol.group === FN && !isSymbol(symbol.power)) {\r\n                var a = derive(_.parse(symbol));\r\n                var b = __.diff(symbol.args[0].clone(), d);\r\n                symbol = _.multiply(a, b);//chain rule\r\n            }\r\n            else {\r\n                symbol = derive(symbol);\r\n            }\r\n\r\n            if(nth > 1) {\r\n                nth--;\r\n                symbol = __.diff(symbol, wrt, nth);\r\n            }\r\n\r\n            return symbol;\r\n\r\n            // Equivalent to \"derivative of the outside\".\r\n            function polydiff(symbol) {\r\n                if(symbol.value === d || symbol.contains(d, true)) {\r\n                    symbol.multiplier = symbol.multiplier.multiply(symbol.power);\r\n                    symbol.power = symbol.power.subtract(new Frac(1));\r\n                    if(symbol.power.equals(0)) {\r\n                        symbol = Symbol(symbol.multiplier);\r\n                    }\r\n                }\r\n\r\n                return symbol;\r\n            }\r\n            \r\n            function derive(symbol) {\r\n                var g = symbol.group, a, b, cp;\r\n\r\n                if(g === N || g === S && symbol.value !== d || g === P) {\r\n                    symbol = Symbol(0);\r\n                }\r\n                else if(g === S) {\r\n                    symbol = polydiff(symbol);\r\n                }\r\n                else if(g === CB) {\r\n                    var m = symbol.multiplier.clone();\r\n                    symbol.toUnitMultiplier();\r\n                    var retval = _.multiply(product_rule(symbol), polydiff(symbol));\r\n                    retval.multiplier = retval.multiplier.multiply(m);\r\n                    return retval;\r\n                }\r\n                else if(g === FN && symbol.power.equals(1)) {\r\n                    // Table of known derivatives\r\n                    switch(symbol.fname) {\r\n                        case LOG:\r\n                            cp = symbol.clone();\r\n                            symbol = symbol.args[0].clone();//get the arguments\r\n                            symbol.power = symbol.power.negate();\r\n                            symbol.multiplier = cp.multiplier.divide(symbol.multiplier);\r\n                            break;\r\n                        case COS:\r\n                            //cos -> -sin\r\n                            symbol.fname = SIN;\r\n                            symbol.multiplier.negate();\r\n                            break;\r\n                        case SIN:\r\n                            //sin -> cos\r\n                            symbol.fname = COS;\r\n                            break;\r\n                        case TAN:\r\n                            //tan -> sec^2\r\n                            symbol.fname = SEC;\r\n                            symbol.power = new Frac(2);\r\n                            break;\r\n                        case SEC:\r\n                            // Use a clone if this gives errors\r\n                            symbol = qdiff(symbol, TAN);\r\n                            break;\r\n                        case CSC:\r\n                            symbol = qdiff(symbol, '-cot');\r\n                            break;\r\n                        case COT:\r\n                            symbol.fname = CSC;\r\n                            symbol.multiplier.negate();\r\n                            symbol.power = new Frac(2);\r\n                            break;\r\n                        case ASIN:\r\n                            symbol = _.parse('(sqrt(1-(' + text(symbol.args[0]) + ')^2))^(-1)');\r\n                            break;\r\n                        case ACOS:\r\n                            symbol = _.parse('-(sqrt(1-(' + text(symbol.args[0]) + ')^2))^(-1)');\r\n                            break;\r\n                        case ATAN:\r\n                            symbol = _.parse('(1+(' + text(symbol.args[0]) + ')^2)^(-1)');\r\n                            break;\r\n                        case ABS:\r\n                            m = symbol.multiplier.clone();\r\n                            symbol.toUnitMultiplier();\r\n                            //depending on the complexity of the symbol it's easier to just parse it into a new symbol\r\n                            //this should really be readdressed soon\r\n                            b = symbol.args[0].clone();\r\n                            b.toUnitMultiplier();\r\n                            symbol = _.parse(inBrackets(text(symbol.args[0])) + '/abs' + inBrackets(text(b)));\r\n                            symbol.multiplier = m;\r\n                            break;\r\n                        case 'parens':\r\n                            //see product rule: f'.g goes to zero since f' will return zero. This way we only get back\r\n                            //1*g'\r\n                            symbol = Symbol(1);\r\n                            break;\r\n                        case 'cosh':\r\n                            //cosh -> -sinh\r\n                            symbol.fname = 'sinh';\r\n                            break;\r\n                        case 'sinh':\r\n                            //sinh -> cosh\r\n                            symbol.fname = 'cosh';\r\n                            break;\r\n                        case TANH:\r\n                            //tanh -> sech^2\r\n                            symbol.fname = SECH;\r\n                            symbol.power = new Frac(2);\r\n                            break;\r\n                        case SECH:\r\n                            // Use a clone if this gives errors\r\n                            symbol = qdiff(symbol, '-tanh');\r\n                            break;\r\n                        case CSCH:\r\n                            var arg = String(symbol.args[0]);\r\n                            return _.parse('-coth(' + arg + ')*csch(' + arg + ')');\r\n                            break;\r\n                        case COTH:\r\n                            var arg = String(symbol.args[0]);\r\n                            return _.parse('-csch(' + arg + ')^2');\r\n                            break;\r\n                        case 'asinh':\r\n                            symbol = _.parse('(sqrt(1+(' + text(symbol.args[0]) + ')^2))^(-1)');\r\n                            break;\r\n                        case 'acosh':\r\n                            symbol = _.parse('(sqrt(-1+(' + text(symbol.args[0]) + ')^2))^(-1)');\r\n                            break;\r\n                        case 'atanh':\r\n                            symbol = _.parse('(1-(' + text(symbol.args[0]) + ')^2)^(-1)');\r\n                            break;\r\n                        case ASECH:\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('-1/(sqrt(1/(' + arg + ')^2-1)*(' + arg + ')^2)');\r\n                            break;\r\n                        case ACOTH:\r\n                            symbol = _.parse('-1/((' + symbol.args[0] + ')^2-1)');\r\n                            break;\r\n                        case ACSCH:\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('-1/(sqrt(1/(' + arg + ')^2+1)*(' + arg + ')^2)');\r\n                            break;\r\n                        case ASEC:\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('1/(sqrt(1-1/(' + arg + ')^2)*(' + arg + ')^2)');\r\n                            break;\r\n                        case ACSC:\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('-1/(sqrt(1-1/(' + arg + ')^2)*(' + arg + ')^2)');\r\n                            break;\r\n                        case ACOT:\r\n                            symbol = _.parse('-1/((' + symbol.args[0] + ')^2+1)');\r\n                            break;\r\n                        case 'S':\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('sin((pi*(' + arg + ')^2)/2)');\r\n                            break;\r\n                        case 'C':\r\n                            var arg = String(symbol.args[0]);\r\n                            symbol = _.parse('cos((pi*(' + arg + ')^2)/2)');\r\n                            break;\r\n                        case 'Si':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('sin(' + arg + ')/(' + arg + ')');\r\n                            break;\r\n                        case 'Shi':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('sinh(' + arg + ')/(' + arg + ')');\r\n                            break;\r\n                        case 'Ci':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('cos(' + arg + ')/(' + arg + ')');\r\n                            break;\r\n                        case 'Chi':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('cosh(' + arg + ')/(' + arg + ')');\r\n                            break;\r\n                        case 'Ei':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('e^(' + arg + ')/(' + arg + ')');\r\n                            break;\r\n                        case 'Li':\r\n                            var arg = symbol.args[0];\r\n                            symbol = _.parse('1/' + Settings.LOG + '(' + arg + ')');\r\n                            break;\r\n                        case 'erf':\r\n                            symbol = _.parse('(2*e^(-(' + symbol.args[0] + ')^2))/sqrt(pi)');\r\n                            break;\r\n                        case 'atan2':\r\n                            var x_ = String(symbol.args[0]),\r\n                                    y_ = String(symbol.args[1]);\r\n                            symbol = _.parse('(' + y_ + ')/((' + y_ + ')^2+(' + x_ + ')^2)');\r\n                            break;\r\n                        case 'sign':\r\n                            symbol = new Symbol(0);\r\n                            break;\r\n                        case 'sinc':\r\n                            symbol = _.parse(format('(({0})*cos({0})-sin({0}))*({0})^(-2)', symbol.args[0]));\r\n                            break;\r\n                        case Settings.LOG10:\r\n                            symbol = _.parse('1/((' + symbol.args[0] + ')*' + Settings.LOG + '(10))');\r\n                            break;\r\n                        default:\r\n                            symbol = _.symfunction('diff', [symbol, wrt]);\r\n                    }\r\n                }\r\n                else if(g === EX || g === FN && isSymbol(symbol.power)) {\r\n                    var value;\r\n                    if(g === EX) {\r\n                        value = symbol.value;\r\n                    }\r\n                    else if(g === FN && symbol.contains(d)) {\r\n                        value = symbol.fname + inBrackets(text(symbol.args[0]));\r\n                    }\r\n                    else {\r\n                        value = symbol.value + inBrackets(text(symbol.args[0]));\r\n                    }\r\n                    a = _.multiply(_.parse(LOG + inBrackets(value)), symbol.power.clone());\r\n                    b = __.diff(_.multiply(_.parse(LOG + inBrackets(value)), symbol.power.clone()), d);\r\n                    symbol = _.multiply(symbol, b);\r\n                }\r\n                else if(g === FN && !symbol.power.equals(1)) {\r\n                    b = symbol.clone();\r\n                    b.toLinear();\r\n                    b.toUnitMultiplier();\r\n                    symbol = _.multiply(polydiff(symbol.clone()), derive(b));\r\n                }\r\n                else if(g === CP || g === PL) {\r\n                    // Note: Do not use `parse` since this puts back the sqrt and causes a bug as in #610. Use clone.\r\n                    var c = symbol.clone();\r\n                    var result = new Symbol(0);\r\n                    for(var x in symbol.symbols) {\r\n                        result = _.add(result, __.diff(symbol.symbols[x].clone(), d));\r\n                    }\r\n                    symbol = _.multiply(polydiff(c), result);\r\n                }\r\n\r\n                symbol.updateHash();\r\n\r\n                return symbol;\r\n            }\r\n            ;\r\n\r\n            function qdiff(symbol, val, altVal) {\r\n                return _.multiply(symbol, _.parse(val + inBrackets(altVal || text(symbol.args[0]))));\r\n            }\r\n            ;\r\n\r\n            function product_rule(symbol) {\r\n                //grab all the symbols within the CB symbol\r\n                var symbols = symbol.collectSymbols(),\r\n                        result = new Symbol(0),\r\n                        l = symbols.length;\r\n                //loop over all the symbols\r\n                for(var i = 0; i < l; i++) {\r\n                    var df = __.diff(symbols[i].clone(), d);\r\n                    for(var j = 0; j < l; j++) {\r\n                        //skip the symbol of which we just pulled the derivative\r\n                        if(i !== j) {\r\n                            //multiply out the remaining symbols\r\n                            df = _.multiply(df, symbols[j].clone());\r\n                        }\r\n                    }\r\n                    //add the derivative to the result\r\n                    result = _.add(result, df);\r\n                }\r\n                return result; //done\r\n            }\r\n            ;\r\n        },\r\n        integration: {\r\n            u_substitution: function (symbols, dx) {\r\n                function try_combo(a, b, f) {\r\n                    var d = __.diff(b, dx);\r\n                    var q = f ? f(a, b) : _.divide(a.clone(), d);\r\n                    if(!q.contains(dx, true))\r\n                        return q;\r\n                    return null;\r\n                }\r\n                function do_fn_sub(fname, arg) {\r\n                    var subbed = __.integrate(_.symfunction(fname, [new Symbol(u)]), u, 0);\r\n                    subbed = subbed.sub(new Symbol(u), arg);\r\n                    subbed.updateHash();\r\n                    return subbed;\r\n                }\r\n\r\n                var a = symbols[0].clone(),\r\n                        b = symbols[1].clone(),\r\n                        g1 = a.group,\r\n                        g2 = b.group,\r\n                        //may cause problems if person is using this already. Will need\r\n                        //to find algorithm for detecting conflict\r\n                        u = '__u__',\r\n                        Q;\r\n                if(g1 === FN && g2 !== FN) {\r\n                    //e.g. 2*x*cos(x^2)\r\n                    var arg = a.args[0];\r\n                    Q = try_combo(b, arg.clone());\r\n                    if(Q)\r\n                        return _.multiply(Q, do_fn_sub(a.fname, arg));\r\n                    Q = try_combo(b, a);\r\n                    if(Q) {\r\n                        return __.integration.poly_integrate(a);\r\n                    }\r\n                }\r\n                else if(g2 === FN && g1 !== FN) {\r\n                    //e.g. 2*(x+1)*cos((x+1)^2\r\n                    var arg = b.args[0];\r\n                    Q = try_combo(a, arg.clone());\r\n                    if(Q)\r\n                        return _.multiply(Q, do_fn_sub(b.fname, arg));\r\n                }\r\n                else if(g1 === FN && g2 === FN) {\r\n                    Q = try_combo(a.clone(), b.clone());\r\n                    if(Q)\r\n                        return _.multiply(__.integration.poly_integrate(b), Q);\r\n                    Q = try_combo(b.clone(), a.clone());\r\n                    if(Q)\r\n                        return _.multiply(__.integration.poly_integrate(b), Q);\r\n                }\r\n                else if(g1 === EX && g2 !== EX) {\r\n                    var p = a.power;\r\n                    Q = try_combo(b, p.clone());\r\n                    if(!Q) {\r\n                        //one more try\r\n                        var dc = __.integration.decompose_arg(p.clone(), dx);\r\n                        //consider the possibility of a^x^(n-1)*x^n dx\r\n                        var xp = __.diff(dc[2].clone(), dx);\r\n                        var dc2 = __.integration.decompose_arg(xp.clone(), dx);\r\n                        //if their powers equal, so if dx*p == b\r\n                        if(_.multiply(dc[1], dc2[1]).power.equals(b.power)) {\r\n                            var m = _.divide(dc[0].clone(), dc2[0].clone());\r\n\r\n                            var new_val = _.multiply(m.clone(), _.pow(new Symbol(a.value), _.multiply(dc[0], new Symbol(u))));\r\n                            new_val = _.multiply(new_val, new Symbol(u));\r\n                            return __.integration.by_parts(new_val, u, 0, {}).sub(u, dc[1].clone());\r\n                        }\r\n\r\n                    }\r\n                    var integrated = __.integrate(a.sub(p.clone(), new Symbol(u)), u, 0),\r\n                            retval = _.multiply(integrated.sub(new Symbol(u), p), Q);\r\n\r\n\r\n                    return retval;\r\n                }\r\n                else if(g2 === EX && g1 !== EX) {\r\n                    var p = b.power;\r\n                    Q = try_combo(a, p.clone());\r\n                    var integrated = __.integrate(b.sub(p, new Symbol(u)), u, 0);\r\n                    return _.multiply(integrated.sub(new Symbol(u), p), Q);\r\n                }\r\n                else if(a.isComposite() || b.isComposite()) {\r\n                    var f = function (a, b) {\r\n                        var d = __.diff(b, dx);\r\n                        var A = core.Algebra.Factor.factor(a),\r\n                                B = core.Algebra.Factor.factor(d);\r\n                        var q = _.divide(A, B);\r\n                        return q;\r\n                    };\r\n                    var f1 = a.isComposite() ? a.clone().toLinear() : a.clone(),\r\n                            f2 = b.isComposite() ? b.clone().toLinear() : b.clone();\r\n                    Q = try_combo(f1.clone(), f2.clone(), f);\r\n                    if(Q)\r\n                        return _.multiply(__.integration.poly_integrate(b), Q);\r\n                    Q = try_combo(f2.clone(), f1.clone(), f);\r\n                    if(Q)\r\n                        return _.multiply(__.integration.poly_integrate(a), Q);\r\n                }\r\n            },\r\n            //simple integration of a single polynomial x^(n+1)/(n+1)\r\n            poly_integrate: function (x) {\r\n                var p = x.power.toString(),\r\n                        m = x.multiplier.toDecimal(),\r\n                        s = x.toUnitMultiplier().toLinear();\r\n                if(Number(p) === -1) {\r\n                    return _.multiply(new Symbol(m), _.symfunction(LOG, [s]));\r\n                }\r\n                return _.parse(format('({0})*({1})^(({2})+1)/(({2})+1)', m, s, p));\r\n            },\r\n            //If we're just spinning wheels we want to stop. This is why we \r\n            //wrap integration in a try catch block and call this to stop.\r\n            stop: function (msg) {\r\n                msg = msg || 'Unable to compute integral!';\r\n                core.Utils.warn(msg);\r\n                throw new NoIntegralFound(msg);\r\n            },\r\n            partial_fraction: function (input, dx, depth, opt) {\r\n                //TODO: This whole thing needs to be rolled into one but for now I'll leave it as two separate parts\r\n                if(!isSymbol(dx))\r\n                    dx = _.parse(dx);\r\n\r\n                var result, partial_fractions;\r\n                result = new Symbol(0);\r\n                partial_fractions = core.Algebra.PartFrac.partfrac(input, dx);\r\n\r\n                if(partial_fractions.group === CB && partial_fractions.isLinear()) {\r\n                    //perform a quick check to make sure that all partial fractions are linear\r\n                    partial_fractions.each(function (x) {\r\n                        if(!x.isLinear())\r\n                            __.integration.stop();\r\n                    });\r\n                    partial_fractions.each(function (x) {\r\n                        result = _.add(result, __.integrate(x, dx, depth, opt));\r\n                    });\r\n                }\r\n                else {\r\n                    result = _.add(result, __.integrate(partial_fractions, dx, depth, opt));\r\n                }\r\n                return result;\r\n            },\r\n            get_udv: function (symbol) {\r\n                var parts = [[/*L*/], [/*I*/], [/*A*/], [/*T*/], [/*E*/]];\r\n                //first we sort them \r\n                var setSymbol = function (x) {\r\n                    var g = x.group;\r\n                    if(g === FN) {\r\n                        var fname = x.fname;\r\n                        if(core.Utils.in_trig(fname) || core.Utils.in_htrig(fname))\r\n                            parts[3].push(x);\r\n                        else if(core.Utils.in_inverse_trig(fname))\r\n                            parts[1].push(x);\r\n                        else if(fname === LOG)\r\n                            parts[0].push(x);\r\n                        else {\r\n                            __.integration.stop();\r\n                        }\r\n                    }\r\n                    else if(g === S || x.isComposite() && x.isLinear() || g === CB && x.isLinear()) {\r\n                        parts[2].push(x);\r\n                    }\r\n                    else if(g === EX || x.isComposite() && !x.isLinear())\r\n                        parts[4].push(x);\r\n                    else\r\n                        __.integration.stop();\r\n                };\r\n\r\n                if(symbol.group === CB)\r\n                    symbol.each(function (x) {\r\n                        setSymbol(Symbol.unwrapSQRT(x, true));\r\n                    });\r\n                else\r\n                    setSymbol(symbol);\r\n                var u, dv = new Symbol(1);\r\n                //compile u and dv\r\n                for(var i = 0; i < 5; i++) {\r\n                    var part = parts[i], t,\r\n                            l = part.length;\r\n                    if(l > 0) {\r\n                        if(l > 1) {\r\n                            t = new Symbol(1);\r\n                            for(var j = 0; j < l; j++)\r\n                                t = _.multiply(t, part[j].clone());\r\n                        }\r\n                        else\r\n                            t = part[0].clone();\r\n\r\n                        if(!u) {\r\n                            u = t;//the first u encountered gets chosen\r\n                            u.multiplier = u.multiplier.multiply(symbol.multiplier); //the first one gets the mutliplier\r\n                        }\r\n                        else\r\n                            dv = _.multiply(dv, t); //everything else belongs to dv\r\n                    }\r\n                }\r\n\r\n                return [u, dv];\r\n            },\r\n\r\n            trig_sub: function (symbol, dx, depth, opt, parts, symbols) {\r\n                parts = parts || __.integration.decompose_arg(symbol.clone().toLinear(), dx);\r\n                var b = parts[3],\r\n                        ax = parts[2],\r\n                        a = parts[0],\r\n                        x = parts[1];\r\n                if(x.power.equals(2) && a.greaterThan(0)) {\r\n                    //use tan(x)\r\n                    var t = core.Utils.getU(symbol), //get an appropriate u\r\n                            u = _.parse(TAN + inBrackets(t)), //u\r\n                            du = _.parse(SEC + inBrackets(t) + '^2'), //du\r\n                            f = _.multiply(symbol.sub(x, u), du);\r\n                    var integral = __.integrate(f, t, depth, opt).sub(u, x);\r\n                    core.Utils.clearU(u);\r\n                    return integral;\r\n                }\r\n            },\r\n\r\n            by_parts: function (symbol, dx, depth, o) {\r\n                o.previous = o.previous || [];\r\n                var udv, u, dv, du, v, vdu, uv, retval, integral_vdu, m, c, vdu_s;\r\n                //first LIATE\r\n                udv = __.integration.get_udv(symbol);\r\n                u = udv[0];\r\n                dv = udv[1];\r\n                du = Symbol.unwrapSQRT(_.expand(__.diff(u.clone(), dx)), true);\r\n                c = du.clone().stripVar(dx);\r\n                //strip any coefficients\r\n                du = _.divide(du, c.clone());\r\n                v = __.integrate(dv.clone(), dx, depth || 0);\r\n                vdu = _.multiply(v.clone(), du);\r\n                vdu_s = vdu.toString();\r\n                //currently only supports e^x*(some trig)\r\n                if(o.previous.indexOf(vdu_s) !== -1 && (core.Utils.in_trig(u.fname)) && dv.isE()) {\r\n                    //We're going to exploit the fact that vdu can never be constant\r\n                    //to work out way out of this cycle. We'll return the length of\r\n                    //the this.previous array until we're back at level one\r\n                    o.is_cyclic = true;\r\n                    //return the integral. \r\n                    return new Symbol(1);\r\n                }\r\n                else\r\n                    o.previous.push(vdu_s);\r\n\r\n                uv = _.multiply(u, v);\r\n                //clear the multiplier so we're dealing with a bare integral\r\n                m = vdu.multiplier.clone();\r\n                vdu.toUnitMultiplier();\r\n                integral_vdu = _.multiply(__.integrate(vdu.clone(), dx, depth, o), c);\r\n                integral_vdu.multiplier = integral_vdu.multiplier.multiply(m);\r\n                retval = _.subtract(uv, integral_vdu);\r\n                //we know that there cannot be constants so they're a holdover from a cyclic integral\r\n                if(o.is_cyclic) {\r\n                    //start popping the previous stack so we know how deep in we are\r\n                    o.previous.pop();\r\n                    if(o.previous.length === 0) {\r\n                        retval = _.expand(retval);\r\n                        var rem = new Symbol(0);\r\n                        retval.each(function (x) {\r\n                            if(!x.contains(dx))\r\n                                rem = _.add(rem, x.clone());\r\n                        });\r\n                        //get the actual uv\r\n                        retval = _.divide(_.subtract(retval, rem.clone()), _.subtract(new Symbol(1), rem));\r\n                    }\r\n                }\r\n\r\n                return retval;\r\n            },\r\n            /*\r\n             * dependents: [Solve, integrate]\r\n             */\r\n            decompose_arg: core.Utils.decompose_fn\r\n        },\r\n        //TODO: nerdamer.integrate('-e^(-a*t)*sin(t)', 't') -> gives incorrect output\r\n        integrate: function (original_symbol, dt, depth, opt) {\r\n            //assume integration wrt independent variable if expression only has one variable\r\n            if(!dt) {\r\n                var vars = core.Utils.variables(original_symbol);\r\n                if(vars.length === 1)\r\n                    dt = vars[0];\r\n                //defaults to x\r\n                dt = dt || 'x';\r\n            }\r\n            //add support for integrating vectors\r\n            if(core.Utils.isVector(original_symbol)) {\r\n                var vector = new core.Vector([]);\r\n                original_symbol.each(function (x) {\r\n                    vector.elements.push(__.integrate(x, dt));\r\n                });\r\n                return vector;\r\n            }\r\n            if(!isNaN(dt))\r\n                _.error('variable expected but received ' + dt);\r\n            //get rid of constants right away\r\n            if(original_symbol.isConstant(true))\r\n                return _.multiply(original_symbol.clone(), _.parse(dt));\r\n\r\n            //configurations options for integral. This is needed for tracking extra options\r\n            //e.g. cyclic integrals or additional settings\r\n            opt = opt || {};\r\n            return core.Utils.block('PARSE2NUMBER', function () {\r\n                //make a note of the original symbol. Set only if undefined\r\n                depth = depth || 0;\r\n                var dx = isSymbol(dt) ? dt.toString() : dt,\r\n                        //we don't want the symbol in sqrt form. x^(1/2) is prefererred\r\n                        symbol = Symbol.unwrapSQRT(original_symbol.clone(), true),\r\n                        g = symbol.group,\r\n                        retval;\r\n\r\n                try {\r\n                    //We stop integration after x amount of recursive calls\r\n                    if(++depth > core.Settings.integration_depth)\r\n                        __.integration.stop('Maximum depth reached. Exiting!');\r\n\r\n                    //constants. We first eliminate anything that doesn't have dx. Everything after this has \r\n                    //to have dx or else it would have been taken care of below\r\n                    if(!symbol.contains(dx, true)) {\r\n                        retval = _.multiply(symbol.clone(), _.parse(dx));\r\n                    }\r\n                    //e.g. 2*x\r\n                    else if(g === S) {\r\n                        retval = __.integration.poly_integrate(symbol, dx, depth);\r\n                    }\r\n                    else if(g === EX) {\r\n                        if(symbol.previousGroup === FN && !(symbol.fname === 'sqrt' || symbol.fname === Settings.PARENTHESIS))\r\n                            __.integration.stop();\r\n                        //check the base\r\n                        if(symbol.contains(dx) && symbol.previousGroup !== FN) {\r\n                            //if the symbol also contains dx then we stop since we currently \r\n                            //don't know what to do with it e.g. x^x\r\n                            if(symbol.power.contains(dx))\r\n                                __.integration.stop();\r\n                            else {\r\n                                var t = __.diff(symbol.clone().toLinear(), dx);\r\n                                if(t.contains(dx))\r\n                                    __.integration.stop();\r\n                                //since at this point it's the base only then we do standard single poly integration\r\n                                //e.g. x^y\r\n                                retval = __.integration.poly_integrate(symbol, dx, depth);\r\n                            }\r\n                        }\r\n                        //e.g. a^x or 9^x\r\n                        else {\r\n                            var a = __.diff(symbol.power.clone(), dx);\r\n                            if(a.contains(dx)) {\r\n                                var aa = a.stripVar(dx),\r\n                                        x = _.divide(a.clone(), aa.clone());\r\n                                if(x.group === S && x.isLinear()) {\r\n                                    aa.multiplier = aa.multiplier.divide(new Frac(2));\r\n                                    return _.parse(format('({2})*(sqrt(pi)*erf(sqrt(-{0})*{1}))/(2*sqrt(-{0}))', aa, dx, symbol.multiplier));\r\n                                }\r\n                                else\r\n                                    __.integration.stop();\r\n                            }\r\n                            if(symbol.isE()) {\r\n                                if(a.isLinear())\r\n                                    retval = symbol;\r\n                                else {\r\n                                    if(a.isE() && a.power.group === S && a.power.power.equals(1))\r\n                                        retval = _.multiply(_.symfunction('Ei', [symbol.power.clone()]), symbol.power);\r\n                                    else\r\n                                        __.integration.stop();\r\n                                }\r\n                            }\r\n                            else {\r\n                                var d = _.symfunction(LOG, [_.parse(symbol.value)]);\r\n                                retval = _.divide(symbol, d);\r\n                            }\r\n                            retval = _.divide(retval, a);\r\n                        }\r\n                    }\r\n                    else if(symbol.isComposite() && symbol.isLinear()) {\r\n                        var m = _.parse(symbol.multiplier);\r\n                        symbol.toUnitMultiplier();\r\n                        retval = new Symbol(0);\r\n                        symbol.each(function (x) {\r\n                            retval = _.add(retval, __.integrate(x, dx, depth));\r\n                        });\r\n                        retval = _.multiply(m, retval);\r\n                    }\r\n                    else if(g === CP) {\r\n                        if(symbol.power.greaterThan(1))\r\n                            symbol = _.expand(symbol);\r\n                        if(symbol.power.equals(1)) {\r\n                            retval = new Symbol(0);\r\n                            symbol.each(function (x) {\r\n                                retval = _.add(retval, __.integrate(x, dx, depth));\r\n                            }, true);\r\n                        }\r\n                        else {\r\n                            var p = Number(symbol.power),\r\n                                    m = symbol.multiplier.clone();//temporarily remove the multiplier\r\n                            symbol.toUnitMultiplier();\r\n                            var //below we consider the form ax+b\r\n                                    fn = symbol.clone().toLinear(), //get just the pure function without the power\r\n                                    decomp = __.integration.decompose_arg(fn, dx),\r\n                                    //I have no idea why I used bx+a and not ax+b. TODO change this to something that makes sense\r\n                                    b = decomp[3],\r\n                                    ax = decomp[2],\r\n                                    a = decomp[0],\r\n                                    x = decomp[1];\r\n                            if(p === -1 && x.group !== PL && x.power.equals(2)) {\r\n                                var b_is_positive = isInt(b) ? b > 0 : true;\r\n                                //we can now check for atan\r\n                                if(x.group === S && x.power.equals(2) && b_is_positive) {\r\n                                    ////then we have atan\r\n                                    //abs is redundants since the sign appears in both denom and num.\r\n                                    var unwrapAbs = function (s) {\r\n                                        var result = new Symbol(1);\r\n                                        s.each(function (x) {\r\n                                            result = _.multiply(result, x.fname === 'abs' ? x.args[0] : x);\r\n                                        });\r\n                                        return result;\r\n                                    };\r\n                                    var A = a.clone(),\r\n                                            B = b.clone();\r\n                                    A = _.pow(A, new Symbol(1 / 2));\r\n                                    B = _.pow(B, new Symbol(1 / 2));\r\n                                    //unwrap abs\r\n\r\n                                    var d = _.multiply(unwrapAbs(B), unwrapAbs(A)),\r\n                                            f = _.symfunction(ATAN, [_.divide(_.multiply(a, x.toLinear()), d.clone())]);\r\n                                    retval = _.divide(f, d);\r\n                                }\r\n                                else if(x.group === S && x.isLinear()) {\r\n                                    retval = _.divide(__.integration.poly_integrate(symbol), a);\r\n                                }\r\n                                else {\r\n                                    //1/(x^4+1)\r\n                                    if(x.power.equals(4)) {\r\n                                        //https://www.freemathhelp.com/forum/threads/55678-difficult-integration-int-1-(1-x-4)-dx\r\n                                        var A, B, C, D, E, F, f1, f2, f3, f4, L1, L2;\r\n                                        var br = inBrackets;\r\n                                        //apply rule: ax^4+b = (√ax^2+√2∜a∜bx+√b)(√ax^2-√2∜a∜bx+√b)\r\n                                        //get quadratic factors\r\n                                        A = _.parse(SQRT + br(a) + '*' + dx + '^2');\r\n                                        B = _.parse(SQRT + br(2) + '*' + br(a) + '^' + br('1/4') + '*' + br(b) + '^' + br('1/4') + '*' + dx);\r\n                                        C = _.parse(SQRT + br(b));\r\n                                        f1 = _.add(_.add(A.clone(), B.clone()), C.clone());\r\n                                        f2 = _.add(_.subtract(A, B), C);\r\n                                        //calculate numerators: [D+E, D-E] -> [√2*b^(3/4)+√b∜ax, √2*b^(3/4)-√b∜ax]\r\n                                        D = _.parse(SQRT + br(2) + '*' + br(b) + '^' + br('3/4'));\r\n                                        E = _.parse(SQRT + br(b) + '*' + br(b) + '^' + br('1/4') + '*' + dx);\r\n                                        //let F = 2b√2∜b\r\n                                        F = _.parse(2 + '*' + br(b) + '*' + SQRT + br(2) + '*' + br(b) + '^' + br('1/4'));\r\n                                        //calculate the factors\r\n                                        L1 = _.divide(_.subtract(D.clone(), E.clone()), _.multiply(F.clone(), f2));\r\n                                        L2 = _.divide(_.add(D, E), _.multiply(F, f1.clone()));\r\n                                        retval = _.add(\r\n                                                __.integrate(L1, dx, depth, opt),\r\n                                                __.integrate(L2, dx, depth, opt)\r\n                                                );\r\n                                    }\r\n                                    else\r\n                                        //let's try partial fractions\r\n                                        retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                }\r\n                            }\r\n                            else if(p === -1 / 2) {\r\n                                //detect asin and atan\r\n                                if(x.group === S && x.power.equals(2)) {\r\n                                    if(ax.multiplier.lessThan(0) && !b.multiplier.lessThan(0)) {\r\n                                        a.negate();\r\n                                        //it's asin\r\n                                        if(b.isConstant() && a.isConstant()) {\r\n                                            var d = _.symfunction(SQRT, [a.clone()]),\r\n                                                    d2 = _.symfunction(SQRT, [_.multiply(a.clone(), b)]);\r\n                                            retval = _.divide(_.symfunction(ASIN, [_.divide(ax.toLinear(), d2)]), d);\r\n                                        }\r\n                                        //I'm not sure about this one. I'm trusting Wolfram Alpha here\r\n                                        else {\r\n                                            var sqrt_a = _.symfunction(SQRT, [a]),\r\n                                                    sqrt_ax = _.multiply(sqrt_a.clone(), x.clone().toLinear());\r\n                                            retval = _.divide(_.symfunction(ATAN, [_.divide(sqrt_ax, _.symfunction(SQRT, [fn.clone()]))]), sqrt_a);\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        /*WHAT HAPPENS HERE???? e.g. integrate(3/sqrt(-a+b*x^2),x) or integrate(3/sqrt(a+b*x^2),x)*/\r\n                                        __.integration.stop();\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    //This would be a case like 1/(sqrt(1-x^3) or 1/(1-(x+1)^2)\r\n                                    __.integration.stop();\r\n                                }\r\n                            }\r\n                            else if(p === 1/2 && x.power.equals(2) && a.greaterThan(0)) {\r\n                                // TODO: Revisit\r\n                                __.integration.stop();\r\n                            }\r\n                            else {\r\n                                if(x.isLinear() && x.group !== PL)\r\n                                    retval = _.divide(__.integration.poly_integrate(symbol), a);\r\n                                else if(x.power.equals(2) && a.greaterThan(0)) {\r\n                                    var sqa, sqb, aob, bsqi, n, integral, u, v, uv;\r\n                                    //1/(a*x^2+b^2)^n\r\n                                    //strip the value of b so b = 1\r\n                                    sqa = _.parse(SQRT + inBrackets(a)); //strip a so b = 1\r\n                                    sqb = _.parse(SQRT + inBrackets(b));\r\n                                    aob = _.multiply(sqa.clone(), sqb.clone()).invert();\r\n                                    bsqi = _.pow(b, new Symbol(symbol.power));\r\n                                    uv = core.Utils.getU(symbol);\r\n                                    u = _.multiply(aob, x.clone().toLinear());\r\n                                    v = _.parse(ATAN + inBrackets(u));\r\n                                    //the conversion will be 1+tan(x)^2 -> sec(x)^2\r\n                                    //since the denominator is now (sec(x)^2)^n and the numerator is sec(x)^2 \r\n                                    //then the remaining sec will be (n-1)*2;\r\n                                    var n = (Math.abs(symbol.power) - 1) * 2;\r\n                                    //1/sec(x)^n can now be converted to cos(x)^n and we can pull the integral of that\r\n                                    var integral = __.integrate(_.parse(COS + inBrackets(uv) + '^' + n));\r\n                                    core.Utils.clearU(uv);\r\n                                    return _.multiply(integral.sub(uv, v), bsqi);\r\n                                }\r\n                                else {\r\n                                    if(symbol.group !== CB && !symbol.power.lessThan(0)) {\r\n                                        retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                    }\r\n                                    else {\r\n                                        var f = symbol.clone().toLinear();\r\n                                        var factored = core.Algebra.Factor.factor(f);\r\n                                        var was_factored = factored.toString() !== f.toString();\r\n                                        if(core.Algebra.degree(f, _.parse(dx)).equals(2) && !was_factored) {\r\n                                            try {\r\n                                                var f1, fx, u, sq;\r\n                                                sq = core.Algebra.sqComplete(f, dx);\r\n                                                u = core.Utils.getU(f);\r\n                                                f1 = sq.f.sub(sq.a, u);\r\n                                                fx = _.pow(f1, _.parse(symbol.power));\r\n                                                retval = __.integrate(fx, u).sub(u, sq.a);\r\n                                            }\r\n                                            catch(e) {\r\n                                                __.integration.stop();\r\n                                            }\r\n                                        }\r\n                                        else\r\n                                            retval = __.integration.partial_fraction(symbol, dx, depth, opt);\r\n                                    }\r\n                                }\r\n                            }\r\n                            retval.multiplier = retval.multiplier.multiply(m);\r\n                        }\r\n                    }\r\n                    else if(g === FN) {\r\n                        var arg = symbol.args[0],\r\n                                m = symbol.multiplier.clone();\r\n                        symbol.toUnitMultiplier();\r\n                        var decomp = __.integration.decompose_arg(arg, dx);\r\n                        //easies way I can think of to get the coefficient and to make sure\r\n                        //that the symbol is linear wrt dx. I'm not actually trying to get the \r\n                        //derivative\r\n                        var a = decomp[0],\r\n                                x = decomp[1],\r\n                                fname = symbol.fname;\r\n                        //log is a special case that can be handled with integration by parts\r\n                        if(fname === LOG || (fname === ASIN || fname === ACOS || fname === ATAN && x.isLinear())) {\r\n                            /*integration by parts */\r\n                            var p = symbol.power.toString();\r\n                            if(isInt(p))\r\n                                depth = depth - p; //it needs more room to find the integral\r\n\r\n                            if(!arg.isComposite())\r\n                                retval = _.multiply(_.parse(m), __.integration.by_parts(symbol, dx, depth, opt));\r\n                            else {\r\n                                //integral u du\r\n                                var u = core.Utils.getU(symbol);\r\n                                var f = _.pow(_.parse(LOG + inBrackets(u)), new Symbol(p));\r\n                                var du = __.diff(arg, dx);\r\n                                var u_du = _.multiply(f, du);\r\n                                var integral = __.integrate(u_du, u, depth, opt);\r\n                                retval = _.multiply(_.parse(m), integral.sub(u, arg));\r\n                            }\r\n\r\n                        }\r\n                        else if(fname === TAN && symbol.power.lessThan(0)) {\r\n                            //convert to cotangent\r\n                            var sym = symbol.clone();\r\n                            sym.power.negate();\r\n                            sym.fname = COT;\r\n                            return _.multiply(_.parse(m), __.integrate(sym, dx, depth));\r\n                        }\r\n                        else {\r\n                            if(!a.contains(dx, true) && symbol.isLinear()) { //perform a deep search for safety\r\n                                //first handle the special cases \r\n                                if(fname === ABS) {\r\n                                    //REVISIT **TODO**\r\n                                    var x = _.divide(arg.clone(), a.clone());\r\n                                    if(x.group === S && !x.power.lessThan(0)) {\r\n                                        if(core.Utils.even(x.power)) {\r\n                                            retval = __.integrate(arg, dx, depth);\r\n                                        }\r\n                                        else {\r\n                                            var integrated = __.integrate(x, dx, depth);\r\n                                            integrated.power = integrated.power.subtract(new Frac(1));\r\n                                            retval = _.multiply(_.multiply(_.symfunction(ABS, [x.toLinear()]), integrated), a);\r\n                                        }\r\n                                    }\r\n                                    else\r\n                                        __.integration.stop();\r\n                                }\r\n                                else {\r\n                                    var ag = symbol.args[0].group,\r\n                                            decomposed = __.integration.decompose_arg(arg, dx);\r\n\r\n                                    if(!(ag === CP || ag === S || ag === CB) || !decomposed[1].power.equals(1) || arg.hasFunc())\r\n                                        __.integration.stop();\r\n                                    /**TODO**/ //ASIN, ACOS, ATAN\r\n                                    switch(fname) {\r\n                                        case COS:\r\n                                            retval = _.symfunction(SIN, [arg]);\r\n                                            break;\r\n                                        case SIN:\r\n                                            retval = _.symfunction(COS, [arg]);\r\n                                            retval.negate();\r\n                                            break;\r\n                                        case TAN:\r\n                                            retval = _.parse(format(Settings.LOG + '(sec({0}))', arg));\r\n                                            break;\r\n                                        case SEC:\r\n                                            retval = _.parse(format(Settings.LOG + '(tan({0})+sec({0}))', arg));\r\n                                            break;\r\n                                        case CSC:\r\n                                            retval = _.parse(format('-' + Settings.LOG + '(csc({0})+cot({0}))', arg));\r\n                                            break;\r\n                                        case COT:\r\n                                            retval = _.parse(format(Settings.LOG + '(sin({0}))', arg));\r\n                                            break;\r\n                                        case SINH:\r\n                                            retval = _.symfunction(COSH, [arg]);\r\n                                            break;\r\n                                        case COSH:\r\n                                            retval = _.symfunction(SINH, [arg]);\r\n                                            break;\r\n                                        case TANH:\r\n                                            retval = _.parse(format(Settings.LOG + '(cosh({0}))', arg));\r\n                                            break;\r\n                                        case ASEC:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        case ACSC:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        case ACOT:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                            //inverse htrig\r\n                                        case ASECH:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        case ACSCH:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                        case ACOTH:\r\n                                            retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            break;\r\n                                            //end inverse htrig\r\n                                            //htrigh\r\n                                        case SECH:\r\n                                            retval = _.parse(format('atan(sinh({0}))', arg));\r\n                                            break;\r\n                                        case CSCH:\r\n                                            retval = _.parse(format(Settings.LOG + '(tanh(({0})/2))', arg));\r\n                                            break;\r\n                                        case COTH:\r\n                                            retval = _.parse(format(Settings.LOG + '(sinh({0}))', arg));\r\n                                            break;\r\n                                            //end htrig\r\n                                        case EXP:\r\n                                            retval = __.integrate(_.parse(format('e^({0})', arg)), dx, depth);\r\n                                            break;\r\n                                        case 'S':\r\n                                            var arg = symbol.args[0].clone(),\r\n                                                    dc = __.integration.decompose_arg(arg, dx),\r\n                                                    x_ = dc[1],\r\n                                                    a_ = dc[0];\r\n                                            var b_ = dc[3];\r\n                                            retval = _.parse(format('(cos((1/2)*pi*(({1})+({0})*({2}))^2)+pi*(({1})+({0})*({2}))*S(({1})+({0})*({2})))/(({0})*pi)', a_, b_, x));\r\n                                            break;\r\n                                        case 'C':\r\n                                            var arg = symbol.args[0].clone(),\r\n                                                    dc = __.integration.decompose_arg(arg, dx),\r\n                                                    x_ = dc[1],\r\n                                                    a_ = dc[0];\r\n                                            var b_ = dc[3];\r\n                                            retval = _.parse(format('(pi*(({1})+({0})*({2}))*C(({1})+({0})*({2}))-sin((1/2)*pi*(({1})+({0})*({2}))^2))/(({0})*pi)', a_, b_, x_));\r\n                                            break;\r\n                                        case 'erf':\r\n                                            var arg = symbol.args[0].clone(),\r\n                                                    dc = __.integration.decompose_arg(arg, dx),\r\n                                                    x_ = dc[1],\r\n                                                    a_ = dc[0];\r\n                                            retval = _.parse(format('e^(-(({2}))^2)/(({0})*sqrt(pi))+(1/({0})+({1}))*erf(({2}))', a_, x_, arg));\r\n                                            break;\r\n                                        case 'sign':\r\n                                            retval = _.multiply(symbol.clone(), arg.clone());\r\n                                            break;\r\n                                        default:\r\n                                            __.integration.stop();\r\n                                    }\r\n\r\n                                    retval = _.divide(retval, a);\r\n                                }\r\n                            }\r\n                            else if(x.isLinear()) {\r\n                                if(fname === COS || fname === SIN) {\r\n                                    var p = Number(symbol.power);\r\n                                    //check to see if it's negative and then just transform it to sec or csc\r\n                                    if(p < 0) {\r\n                                        symbol.fname = fname === SIN ? CSC : SEC;\r\n                                        symbol.invert().updateHash();\r\n                                        retval = __.integrate(symbol, dx, depth);\r\n                                    }\r\n                                    else {\r\n                                        var arg = symbol.args[0],\r\n                                                rd = symbol.clone(), //cos^(n-1)\r\n                                                rd2 = symbol.clone(), //cos^(n-2)\r\n                                                q = new Symbol((p - 1) / p), //\r\n                                                na = _.multiply(a.clone(), new Symbol(p)).invert(); //1/(n*a)\r\n                                        rd.power = rd.power.subtract(new Frac(1));\r\n                                        rd2.power = rd2.power.subtract(new Frac(2));\r\n\r\n                                        var t = _.symfunction(fname === COS ? SIN : COS, [arg.clone()]);\r\n                                        if(fname === SIN)\r\n                                            t.negate();\r\n                                        retval = _.add(_.multiply(_.multiply(na, rd), t), _.multiply(q, __.integrate(_.parse(rd2), dx, depth)));\r\n                                    }\r\n                                }\r\n                                //tan(x)^n or cot(x)^n\r\n                                else if(fname === TAN || fname === COT) {\r\n                                    //http://www.sosmath.com/calculus/integration/moretrigpower/moretrigpower.html\r\n                                    if(symbol.args[0].isLinear(dx)) {\r\n                                        var n = symbol.power.subtract(new Frac(1)).toString(),\r\n                                                r = symbol.clone().toUnitMultiplier(),\r\n                                                w = _.parse(format((fname === COT ? '-' : '') + '1/({2}*{0})*{3}({1})^({0})', n, arg, a, fname));\r\n                                        r.power = r.power.subtract(new Frac(2));\r\n                                        if(r.power.equals(0))\r\n                                            r = _.parse(r);\r\n                                        retval = _.subtract(w, __.integrate(r, dx, depth));\r\n                                    }\r\n                                }\r\n                                //sec(x)^n or csc(x)^n\r\n                                else if(fname === SEC || fname === CSC) {\r\n                                    //http://www.sosmath.com/calculus/integration/moretrigpower/moretrigpower.html\r\n                                    var n1 = symbol.power.subtract(new Frac(1)).toString(),\r\n                                            n2 = symbol.power.subtract(new Frac(2)).toString(),\r\n                                            f2 = fname === SEC ? TAN : COT,\r\n                                            r = symbol.clone().toUnitMultiplier(),\r\n                                            parse_str = format((fname === CSC ? '-' : '') + '1/({0}*{1})*{4}({3})^({2})*{5}({3})', a, n1, n2, arg, fname, f2),\r\n                                            w = _.parse(parse_str);\r\n                                    r.power = r.power.subtract(new Frac(2));\r\n                                    if(r.power.equals(0))\r\n                                        r = _.parse(r);\r\n                                    retval = _.add(w, _.multiply(new Symbol(n2 / n1), __.integrate(r, dx, depth)));\r\n                                }\r\n                                else if((fname === COSH || fname === SINH) && symbol.power.equals(2)) {\r\n                                    retval = __.integrate(symbol.fnTransform(), dx, depth);\r\n                                }\r\n                                else\r\n                                    __.integration.stop();\r\n                            }\r\n                            else\r\n                                __.integration.stop();\r\n\r\n                            retval.multiplier = retval.multiplier.multiply(m);\r\n                        }\r\n                    }\r\n                    else if(g === PL) {\r\n                        retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                    }\r\n                    else if(g === CB) {\r\n                        var den = symbol.getDenom();\r\n                        if(den.group === S)\r\n                            symbol = _.expand(symbol);\r\n\r\n                        //separate the coefficient since all we care about are symbols containing dx\r\n                        var coeff = symbol.stripVar(dx);\r\n                        //now get only those that apply\r\n                        var cfsymbol = _.divide(symbol.clone(), coeff.clone()); //a coeff free symbol\r\n                        //peform a correction for stripVar. This is a serious TODO!\r\n                        if(coeff.contains(dx)) {\r\n                            cfsymbol = _.multiply(cfsymbol, coeff);\r\n                            coeff = new Symbol(1);\r\n                        }\r\n\r\n                        //if we only have one symbol left then let's not waste time. Just pull the integral\r\n                        //and let the chips fall where they may\r\n                        if(cfsymbol.group !== CB) {\r\n                            if(cfsymbol.equals(1)) {\r\n                                return __.integrate(_.expand(symbol), dx, depth);\r\n                            }\r\n\r\n                            //only factor for multivariate which are polynomials\r\n                            if(cfsymbol.clone().toLinear().isPoly(true) && core.Utils.variables(cfsymbol).length > 1) {\r\n                                cfsymbol = core.Algebra.Factor.factor(cfsymbol);\r\n                            }\r\n\r\n                            retval = __.integrate(cfsymbol, dx, depth);\r\n                        }\r\n                        else {\r\n                            //we collect the symbols and sort them descending group, descending power, descending alpabethically\r\n                            var symbols = cfsymbol.collectSymbols().sort(function (a, b) {\r\n                                if(a.group === b.group) {\r\n                                    if(Number(a.power) === Number(b.power))\r\n                                        if(a < b)\r\n                                            return 1; //I want sin first\r\n                                        else\r\n                                            return -1;\r\n                                    return b.power - a.power; //descending power\r\n                                }\r\n                                return b.group - a.group; //descending groups\r\n                            }).map(function (x) {\r\n                                var unwrapped = Symbol.unwrapSQRT(x, true);\r\n                                if(unwrapped.fname === EXP) {\r\n                                    return _.parse(format('({1})*e^({0})', unwrapped.args[0], unwrapped.multiplier));\r\n                                }\r\n                                return unwrapped;\r\n                            });\r\n                            var l = symbols.length;\r\n                            if(symbol.power < 0) {\r\n                                if(l === 2) {\r\n                                    return __.integrate(_.expand(symbol), dx, depth, opt);\r\n                                }\r\n                            }\r\n                            //otherwise the denominator is one lumped together symbol \r\n                            else {\r\n                                //generate an image for \r\n                                if(l === 2) {\r\n                                    //try u substitution\r\n                                    try {\r\n                                        retval = __.integration.u_substitution(symbols, dx);\r\n                                    }\r\n                                    catch(e) {/* failed :`(*/\r\n                                        ;\r\n                                    }\r\n\r\n                                    if(!retval) {\r\n                                        //no success with u substitution so let's try known combinations\r\n                                        //are they two functions\r\n                                        var g1 = symbols[0].group,\r\n                                                g2 = symbols[1].group,\r\n                                                sym1 = symbols[0],\r\n                                                sym2 = symbols[1],\r\n                                                fn1 = sym1.fname,\r\n                                                fn2 = sym2.fname;\r\n                                        //reset the symbol minus the coeff\r\n                                        symbol = _.multiply(sym1.clone(), sym2.clone());\r\n                                        if(g1 === FN && g2 === FN) {\r\n                                            if(fn1 === LOG || fn2 === LOG) {\r\n                                                retval = __.integration.by_parts(symbol.clone(), dx, depth, opt);\r\n                                            }\r\n                                            else {\r\n                                                symbols.sort(function (a, b) {\r\n                                                    return b.fname > a.fname;\r\n                                                });\r\n                                                var arg1 = sym1.args[0];\r\n                                                //make sure the arguments are suitable. We don't know how to integrate non-linear arguments\r\n                                                if(!arg1.isLinear() || !(arg1.group === CP || arg1.group === CB || arg1.group === S))\r\n                                                    __.integration.stop();\r\n\r\n                                                var decomp = __.integration.decompose_arg(arg1, dx);\r\n                                                x = decomp[1],\r\n                                                        a = decomp[0];\r\n                                                if(!x.isLinear()) //again... linear arguments only wrt x\r\n                                                    __.integration.stop();\r\n\r\n                                                //they have to have the same arguments and then we have cleared all the check to \r\n                                                //make sure we can integrate FN & FN\r\n                                                var arg2 = sym2.args[0];\r\n                                                //make sure that their argument matches\r\n                                                if(arg1.equals(arg2)) {\r\n                                                    if(fn1 === SIN && fn2 === COS || fn1 === COS && fn2 === SIN) {\r\n                                                        if(sym1.power.lessThan(0))\r\n                                                            __.integration.stop();//we don't know how to handle, sin(x)^n/cos(x)^m where m > n,  yet\r\n                                                        //if it's in the form sin(x)^n*cos(x)^n then we can just return tan(x)^n which we know how to integrate\r\n                                                        if(fn1 === SIN && sym1.power.add(sym2.power).equals(0)) {\r\n                                                            sym1.fname = TAN;\r\n                                                            sym1.updateHash();\r\n                                                            retval = __.integrate(sym1, dx, depth);\r\n                                                        }\r\n                                                        else {\r\n                                                            if(even(sym1.power) && fn2 === COS && sym2.power.lessThan(0)) {\r\n                                                                //transform sin^(2*n) to (1-cos^2)^n\r\n                                                                var n = Number(sym1.power) / 2,\r\n                                                                        new_sym = _.parse(format('(1-cos({0})^2)^({1})', sym1.args[0], n));\r\n                                                                retval = __.integrate(_.expand(_.multiply(new_sym, sym2.clone())), dx, depth, opt);\r\n                                                            }\r\n                                                            else if(even(sym1.power) && fn2 === SIN && sym2.power.lessThan(0)) {\r\n                                                                //transform cos^(2*n) to (1-sin^2)^n\r\n                                                                var n = Number(sym1.power) / 2,\r\n                                                                        new_sym = _.parse(format('(1-sin({0})^2)^({1})', sym1.args[0], n));\r\n                                                                retval = __.integrate(_.expand(_.multiply(new_sym, sym2.clone())), dx, depth, opt);\r\n                                                            }\r\n                                                            else {\r\n                                                                var p1_even = core.Utils.even(sym1.power),\r\n                                                                        p2_even = core.Utils.even(sym2.power);\r\n                                                                retval = new Symbol(0);\r\n                                                                if(!p1_even || !p2_even) {\r\n                                                                    var u, r, trans;\r\n                                                                    //since cos(x) is odd it carries du. If sin was odd then it would be the other way around\r\n                                                                    //know that p1 satifies the odd portion in this case. If p2 did than it would contain r\r\n                                                                    if(!p1_even) {\r\n                                                                        //u = sin(x)\r\n                                                                        u = sym2;\r\n                                                                        r = sym1;\r\n                                                                    }\r\n                                                                    else {\r\n                                                                        u = sym1;\r\n                                                                        r = sym2;\r\n                                                                    }\r\n                                                                    //get the sign of du. In this case r carries du as stated before and D(cos(x),x) = -sin(x)\r\n                                                                    var sign = u.fname === COS ? -1 : 1,\r\n                                                                            n = r.power,\r\n                                                                            //remove the du e.g. cos(x)^2*sin(x)^3 dx -> cos(x)^2*sin(x)^2*sin(x). We're left with two \r\n                                                                            //even powers afterwards which can be transformed\r\n                                                                            k = (n - 1) / 2,\r\n                                                                            //make the transformation cos(x)^2 = 1 - sin(x)^2\r\n                                                                            trans = _.parse('(1-' + u.fname + core.Utils.inBrackets(arg1) + '^2)^' + k),\r\n                                                                            sym = _.expand(_.multiply(new Symbol(sign), _.multiply(u.clone(), trans)));\r\n                                                                    //we can now just loop through and integrate each since it's now just a polynomial with functions\r\n                                                                    sym.each(function (x) {\r\n                                                                        retval = _.add(retval, __.integration.poly_integrate(x.clone()));\r\n                                                                    });\r\n                                                                }\r\n                                                                else {\r\n                                                                    //performs double angle transformation\r\n                                                                    var double_angle = function (symbol) {\r\n                                                                        var p = symbol.power,\r\n                                                                                k = p / 2, e;\r\n                                                                        if(symbol.fname === COS)\r\n                                                                            e = '((1/2)+(cos(2*(' + symbol.args[0] + '))/2))^' + k;\r\n                                                                        else\r\n                                                                            e = '((1/2)-(cos(2*(' + symbol.args[0] + '))/2))^' + k;\r\n\r\n                                                                        return _.parse(e);\r\n                                                                    };\r\n                                                                    //they're both even so transform both using double angle identities and we'll just\r\n                                                                    //be able to integrate by the sum of integrals\r\n                                                                    var a = double_angle(sym1),\r\n                                                                            b = double_angle(sym2),\r\n                                                                            t = _.multiply(a, b);\r\n                                                                    var sym = _.expand(t);\r\n                                                                    sym.each(function (x) {\r\n                                                                        retval = _.add(retval, __.integrate(x, dx, depth));\r\n                                                                    });\r\n                                                                    return _.multiply(retval, coeff);\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                    //tan(x)*sec(x)^n \r\n                                                    else if(fn1 === SEC && fn2 === TAN && x.isLinear() && sym2.isLinear()) {\r\n                                                        retval = _.parse(format('sec({0})^({1})/({1})', sym1.args[0], sym1.power));\r\n                                                    }\r\n                                                    else if(fn1 === TAN && fn2 === SEC && x.isLinear()) {\r\n                                                        //remaining: tan(x)^3*sec(x)^6\r\n                                                        if(sym1.isLinear() && sym2.isLinear()) {\r\n                                                            retval = _.divide(_.symfunction(SEC, [arg1.clone()]), a);\r\n                                                        }\r\n                                                        else if(even(sym1.power)) {\r\n                                                            var p = Number(sym1.power) / 2;\r\n                                                            //transform tangent\r\n                                                            var t = _.parse(format('(sec({0})^2-1)^({1})', sym1.args[0], p));\r\n                                                            retval = __.integrate(_.expand(_.multiply(t, sym2)), dx, depth);\r\n                                                        }\r\n                                                        else\r\n                                                            __.integration.stop();\r\n                                                    }\r\n                                                    else if(fn1 === SEC && fn2 === COS) {\r\n                                                        sym1.fname = COS;\r\n                                                        sym1.invert().updateHash();\r\n                                                        retval = __.integrate(_.multiply(sym1, sym2), dx, depth);\r\n                                                    }\r\n                                                    else if(fn1 === SIN && fn2 === CSC) {\r\n                                                        sym2.fname = SIN;\r\n                                                        sym2.invert().updateHash();\r\n                                                        retval = __.integrate(_.multiply(sym1, sym2), dx, depth);\r\n                                                    }\r\n                                                    //tan/cos\r\n                                                    else if(fn1 === TAN && (fn2 === COS || fn2 === SIN) && sym2.power.lessThan(0)) {\r\n                                                        var t = _.multiply(sym1.fnTransform(), sym2);\r\n                                                        retval = __.integrate(_.expand(t), dx, depth);\r\n                                                    }\r\n                                                    else {\r\n                                                        var t = _.multiply(sym1.fnTransform(), sym2.fnTransform());\r\n                                                        retval = __.integrate(_.expand(t), dx, depth);\r\n                                                    }\r\n                                                }\r\n                                                //TODO: In progress\r\n                                                else if((fn1 === SIN || fn1 === COS) && (fn2 === SIN || fn2 === COS)) {\r\n\r\n                                                    if(sym1.isLinear() && sym2.isLinear()) {\r\n                                                        //if in the form cos(a*x)*sin(b*x)\r\n                                                        if(sym1.args[0].isLinear() && sym2.args[0].isLinear()) {\r\n                                                            //use identity (sin(b*x+a*x)+sin(b*x-a*x))/2\r\n                                                            var ax, bx;\r\n                                                            if(fn2 === SIN) {\r\n                                                                ax = sym1.args[0];\r\n                                                                bx = sym2.args[0];\r\n                                                            }\r\n                                                            else {\r\n                                                                bx = sym1.args[0];\r\n                                                                ax = sym2.args[0];\r\n                                                            }\r\n\r\n                                                            //make the transformation\r\n                                                            f = _.parse(format('(sin(({1})+({0}))+sin(({1})-({0})))/2', ax.toString(), bx.toString()));\r\n\r\n                                                            //integrate it\r\n                                                            retval = __.integrate(f, dx, depth);\r\n                                                        }\r\n                                                        else {\r\n                                                            var transformed = trigTransform(symbols);\r\n                                                            retval = __.integrate(_.expand(transformed), dx, depth);\r\n                                                        }\r\n                                                    }\r\n                                                    else {\r\n                                                        var transformed = new Symbol(1);\r\n                                                        symbols.map(function (sym) {\r\n                                                            var s = sym.fnTransform();\r\n                                                            transformed = _.multiply(transformed, s);\r\n                                                        });\r\n                                                        var t = _.expand(transformed);\r\n\r\n                                                        retval = __.integrate(t, dx, depth);\r\n\r\n                                                        if(retval.hasIntegral()) {\r\n                                                            retval = __.integrate(trigTransform(transformed.collectSymbols()), dx, depth);\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                else {\r\n                                                    __.integration.stop();\r\n                                                }\r\n\r\n                                            }\r\n                                        }\r\n                                        else if(g1 === FN && g2 === S) {\r\n                                            var sym1_is_linear = sym1.isLinear();\r\n                                            if(sym1.fname === COS && sym1_is_linear && sym2.power.equals(-1))\r\n                                                retval = _.symfunction('Ci', [sym1.args[0]]);\r\n                                            else if(sym1.fname === COS && sym2.power.equals(-1)) {\r\n                                                retval = __.integrate(_.multiply(sym1.fnTransform(), sym2.clone()), dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === COSH && sym1_is_linear && sym2.power.equals(-1))\r\n                                                retval = _.symfunction('Chi', [sym1.args[0]]);\r\n                                            else if(sym1.fname === COSH && sym2.power.equals(-1)) {\r\n                                                retval = __.integrate(_.multiply(sym1.fnTransform(), sym2.clone()), dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === SIN && sym1_is_linear && sym2.power.equals(-1))\r\n                                                retval = _.symfunction('Si', [sym1.args[0]]);\r\n                                            else if(sym1.fname === SIN && sym2.power.equals(-1)) {\r\n                                                retval = __.integrate(_.multiply(sym1.fnTransform(), sym2.clone()), dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === SINH && sym1_is_linear && sym2.power.equals(-1))\r\n                                                retval = _.symfunction('Shi', [sym1.args[0]]);\r\n                                            else if(sym1.fname === SINH && sym2.power.equals(-1)) {\r\n                                                retval = __.integrate(_.multiply(sym1.fnTransform(), sym2.clone()), dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === LOG && sym2.power.equals(-1)) {\r\n                                                //log(x)^n/x = log(x)^(n+1)/(n+1)\r\n                                                retval = __.integration.poly_integrate(sym1, dx, depth);\r\n                                            }\r\n                                            else if(sym1.fname === 'erf') {\r\n                                                if(sym2.power.equals(1)) {\r\n                                                    var dc = __.integration.decompose_arg(sym1.args[0], dx),\r\n                                                            a_ = dc[0],\r\n                                                            x_ = dc[1],\r\n                                                            arg = sym1.args[0].toString();\r\n                                                    retval = _.parse(format('(e^(-(({2}))^2)*(sqrt(pi)*e^((({2}))^2)*(2*({0})^2*({1})^2-3)*erf(({2}))+2*({0})*({1})-2))/(4*sqrt(pi)*({0})^2)', a_, x_, arg))\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                //since group S is guaranteed convergence we need not worry about tracking depth of integration\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            }\r\n                                        }\r\n                                        else if(g1 === EX && g2 === S) {\r\n                                            var x = fn1 === LOG ? __.integration.decompose_arg(sym1.args[0], dx)[1] : null;\r\n                                            if(sym1.isE() && (sym1.power.group === S || sym1.power.group === CB) && sym2.power.equals(-1)) {\r\n                                                retval = _.symfunction('Ei', [sym1.power.clone()]);\r\n                                            }\r\n                                            else if(fn1 === LOG && x.value === sym2.value) {\r\n                                                retval = __.integration.poly_integrate(sym1, dx, depth);\r\n                                            }\r\n                                            else\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                        }\r\n                                        else if(g1 === PL && g2 === S) {\r\n                                            //first try to reduce the top\r\n                                            if(sym2.value === sym1.value && sym1.power.equals(-1)) {\r\n                                                //find the lowest power in the denominator\r\n                                                var pd = Math.min.apply(null, core.Utils.keys(sym1.symbols));\r\n                                                //get the lowest common value between denominator and numerator\r\n                                                var pc = Math.min(pd, sym2.power);\r\n                                                //reduce both denominator and numerator by that factor\r\n                                                var factor = sym2.clone();\r\n                                                factor.power = new Frac(pc);\r\n                                                sym2 = _.divide(sym2, factor.clone()); //reduce the denominator\r\n                                                var t = new Symbol(0);\r\n                                                sym1.each(function (x) {\r\n                                                    t = _.add(t, _.divide(x.clone(), factor.clone()));\r\n                                                });\r\n                                                t.multiplier = sym1.multiplier;\r\n                                                symbol = _.divide(sym2, t);\r\n                                            }\r\n                                            else {\r\n                                                symbol = _.expand(symbol);\r\n                                            }\r\n                                            retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                        }\r\n                                        else if(g1 === CP && g2 === S) {\r\n                                            var f = sym1.clone().toLinear(),\r\n                                                    f_is_linear = core.Algebra.degree(f, _.parse(dx)).equals(1);\r\n                                            //handle cases x^(2*n)/sqrt(1-x^2)\r\n                                            if(sym1.power.equals(-1 / 2)) {\r\n                                                var decomp = __.integration.decompose_arg(sym1.clone().toLinear(), dx);\r\n                                                var a = decomp[0].negate(),\r\n                                                        x = decomp[1],\r\n                                                        b = decomp[3],\r\n                                                        p1 = Number(sym1.power),\r\n                                                        p2 = Number(sym2.power);\r\n                                                if(isInt(p2) && core.Utils.even(p2) && x.power.equals(2)) {\r\n                                                    //if the substitution \r\n                                                    var c = _.divide(_.multiply(_.pow(b.clone(), new Symbol(2)),\r\n                                                            _.symfunction(SQRT, [_.divide(b.clone(), a.clone())])),\r\n                                                            _.pow(a.clone(), new Symbol(2)));\r\n                                                    c = _.multiply(c, _.symfunction(SQRT, [b]).invert());\r\n                                                    var dummy = _.parse('sin(u)');\r\n                                                    dummy.power = dummy.power.multiply(sym2.power);\r\n                                                    var integral = __.integrate(dummy, 'u', depth);\r\n                                                    var bksub = _.parse(ASIN + '(' + SQRT + '(' + a + '/' + b + ')*' + dx + ')');\r\n                                                    retval = _.multiply(c, integral.sub(new Symbol('u'), bksub));\r\n                                                }\r\n                                                else if(p1 === -1 / 2) {\r\n                                                    var u_transform = function (f, u) {\r\n                                                        var integral = _.parse(__.integrate(f, dx, depth, opt).sub(dx, format(u, dx)));\r\n                                                        if(!integral.hasIntegral())\r\n                                                            return integral;\r\n                                                    }\r\n                                                    if(p2 === -1) {\r\n                                                        retval = u_transform(\r\n                                                                _.expand(_.expand(_.pow(_.multiply(sym1.invert(), sym2.invert()), new Symbol(2)))).invert(),\r\n                                                                'sqrt(1-1/({0})^2)'\r\n                                                                );\r\n                                                    }\r\n                                                    else if(p2 === -2) {\r\n                                                        //apply transformation to see if it matches asin(x)\r\n                                                        retval = u_transform(\r\n                                                                _.sqrt(_.expand(_.divide(_.pow(symbol, new Symbol(2)).invert(), _.pow(new Symbol(dx), new Symbol(2))).negate())).invert(),\r\n                                                                'sqrt(1-1/({0})^2)'\r\n                                                                );\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            else if(sym1.power.equals(-1) && sym2.isLinear() && f_is_linear) {\r\n                                                retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                            }\r\n                                            else if(!sym1.power.lessThan(0) && isInt(sym1.power)) {\r\n                                                //sum of integrals\r\n                                                var expanded = _.expand(sym1);\r\n                                                retval = new Symbol(0);\r\n                                                expanded.each(function (x) {\r\n                                                    if(x.group === PL) {\r\n                                                        x.each(function (y) {\r\n                                                            retval = _.add(retval, __.integrate(_.multiply(sym2.clone(), y), dx, depth));\r\n                                                        });\r\n                                                    }\r\n                                                    else\r\n                                                        retval = _.add(retval, __.integrate(_.multiply(sym2.clone(), x), dx, depth));\r\n                                                });\r\n                                            }\r\n                                            else if(sym1.power.lessThan(-2)) {\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            }\r\n                                            else if(sym1.power.lessThan(0) && sym2.power.greaterThan(1)) {\r\n                                                var decomp = __.integration.decompose_arg(sym1.clone().toLinear(), dx),\r\n                                                        a = decomp[0].negate(),\r\n                                                        x = decomp[1],\r\n                                                        b = decomp[3],\r\n                                                        fn = sym1.clone().toLinear();\r\n\r\n                                                if(x.group !== PL && x.isLinear()) {\r\n                                                    var p = Number(sym2.power),\r\n                                                            du = '_u_',\r\n                                                            u = new Symbol(du),\r\n                                                            //pull the integral with the subsitution\r\n                                                            U = _.expand(_.divide(_.pow(_.subtract(u.clone(), b.clone()), new Symbol(p)), u.clone())),\r\n                                                            scope = {};\r\n\r\n                                                    //generate a scope for resubbing the symbol\r\n                                                    scope[du] = fn;\r\n                                                    var U2 = _.parse(U, scope);\r\n                                                    retval = __.integrate(U2, dx, 0);\r\n                                                }\r\n                                                else if(sym2.power.greaterThan(x.power) || sym2.power.equals(x.power)) {\r\n\r\n                                                    //factor out coefficients\r\n                                                    var factors = new core.Algebra.Classes.Factors();\r\n                                                    sym1 = core.Algebra.Factor.coeffFactor(sym1.invert(), factors);\r\n                                                    var div = core.Algebra.divide(sym2, sym1);\r\n                                                    //it assumed that the result will be of group CB\r\n                                                    if(div.group !== CB) {\r\n                                                        retval = new Symbol(0);\r\n                                                        div.each(function (t) {\r\n                                                            retval = _.add(retval, __.integrate(t, dx, depth));\r\n                                                        });\r\n                                                        //put back the factors\r\n                                                        factors.each(function (factor) {\r\n                                                            retval = _.divide(retval, factor);\r\n                                                        });\r\n\r\n                                                        retval = _.expand(retval);\r\n                                                    }\r\n                                                    else {\r\n                                                        //try something else\r\n                                                        retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                                    }\r\n                                                }\r\n                                                else\r\n                                                    retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                            }\r\n                                            else {\r\n                                                //handle cases such as (1-x^2)^(n/2)*x^(m) where n is odd ___ cracking knuckles... This can get a little hairy \r\n                                                if(sym1.power.den.equals(2)) {\r\n                                                    //assume the function is in the form (a^2-b*x^n)^(m/2)\r\n                                                    var dc = __.integration.decompose_arg(sym1.clone().toLinear(), dx),\r\n                                                            //using the above definition\r\n                                                            a = dc[3], x = dc[1], b = dc[0], bx = dc[2];\r\n                                                    if(x.power.equals(2) && b.lessThan(0)) { //if n is even && b is negative\r\n                                                        //make a equal 1 so we can do a trig sub\r\n                                                        if(!a.equals(1)) { //divide a out of everything\r\n                                                            //move a to the coeff\r\n                                                            coeff = _.multiply(coeff, _.pow(a, new Symbol(2)));\r\n                                                        }\r\n                                                        var u = dx;\r\n                                                        var c = _.divide(_.pow(b.clone().negate(), new Symbol(1 / 2)), _.pow(a, new Symbol(1 / 2))),\r\n                                                                du = _.symfunction(COS, [new Symbol(u)]),\r\n                                                                cosn = _.pow(_.symfunction(COS, [new Symbol(u)]), new Symbol(sym1.power.num)),\r\n                                                                X = _.pow(_.symfunction(SIN, [new Symbol(u)]), new Symbol(sym2.power)),\r\n                                                                val = _.multiply(_.multiply(cosn, du), X),\r\n                                                                integral = __.integrate(val, u, depth);\r\n                                                        //but remember that u = asin(sqrt(b)*a*x)\r\n                                                        retval = integral.sub(u, _.symfunction(ASIN, [_.multiply(new Symbol(dx), c)]));\r\n                                                    }\r\n                                                    else {\r\n                                                        retval = __.integration.partial_fraction(symbol, dx, depth, opt);\r\n                                                    }\r\n                                                }\r\n                                                else if(f_is_linear) {\r\n                                                    retval = __.integration.partial_fraction(symbol, dx, depth);\r\n                                                }\r\n                                            }\r\n\r\n                                        }\r\n                                        else if(sym1.isComposite() && sym2.isComposite()) {\r\n                                            //sum of integrals\r\n                                            retval = new Symbol(0);\r\n                                            if(sym1.power.greaterThan(0) && sym2.power.greaterThan(0)) {\r\n                                                //combine and pull the integral of each\r\n                                                var sym = _.expand(symbol);\r\n                                                sym.each(function (x) {\r\n                                                    retval = _.add(retval, __.integrate(x, dx, depth));\r\n                                                }, true);\r\n                                            }\r\n                                            else {\r\n                                                var p1 = Number(sym1.power),\r\n                                                        p2 = Number(sym2.power);\r\n                                                if(p1 < 0 && p2 > 0) {\r\n                                                    //swap\r\n                                                    var t = sym1;\r\n                                                    sym1 = sym2;\r\n                                                    sym2 = t;\r\n                                                }\r\n                                                if(p1 === -1 && p2 === -1) {\r\n                                                    retval = __.integration.partial_fraction(symbol, dx);\r\n                                                }\r\n                                                else {\r\n                                                    sym1.each(function (x) {\r\n                                                        var k = _.multiply(x, sym2.clone());\r\n                                                        var integral = __.integrate(k, dx, depth);\r\n                                                        retval = _.add(retval, integral);\r\n                                                    });\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        else if(g1 === CP && symbols[0].power.greaterThan(0)) {\r\n                                            sym1 = _.expand(sym1);\r\n                                            retval = new Symbol(0);\r\n                                            sym1.each(function (x) {\r\n                                                retval = _.add(retval, __.integrate(_.multiply(x, sym2.clone()), dx, depth));\r\n                                            }, true);\r\n                                        }\r\n                                        else if(g1 === FN && g2 === EX && core.Utils.in_htrig(sym1.fname)) {\r\n                                            sym1 = sym1.fnTransform();\r\n                                            retval = __.integrate(_.expand(_.multiply(sym1, sym2)), dx, depth);\r\n                                        }\r\n                                        else if(g1 === FN && g2 === CP || g2 === FN && g1 === CP) {\r\n                                            if(g2 === FN && g1 === CP) {\r\n                                                var t = sym1;\r\n                                                sym1 = sym2;\r\n                                                sym2 = t; //swap\r\n                                            }\r\n                                            var du, sym2_clone, p, q, sa, sb;\r\n                                            du = Symbol.unwrapSQRT(__.diff(sym1.clone(), dx), true);\r\n                                            sym2_clone = Symbol.unwrapSQRT(sym2, true);\r\n                                            if(du.power.equals(sym2_clone.power)) {\r\n                                                p = new Symbol(sym2.power);\r\n                                                sa = du.clone().toLinear();\r\n                                                sb = sym2.clone().toLinear();\r\n                                                q = core.Algebra.divide(sa.toLinear(), sb);\r\n                                                if(q.isConstant()) {\r\n                                                    var nq = _.pow(q, p.negate());\r\n                                                    retval = _.multiply(nq, __.integration.poly_integrate(sym1.clone()));\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            var syma = sym1.clone().toLinear();\r\n                                            var symb = sym2.clone().toLinear();\r\n                                            if(g1 === EX && g2 === EX && sym1.power.contains(dx) && sym2.power.contains(dx)\r\n                                                    && !syma.contains(dx) && !symb.contains(dx)) {\r\n                                                retval = _.parse(format('(({0})^(({2})*({4}))*({1})^(({3})*({4})))/(log(({0})^({2}))+log(({1})^({3})))',\r\n                                                        syma.toString(),\r\n                                                        symb.toString(),\r\n                                                        sym1.power.multiplier.toString(),\r\n                                                        sym2.power.multiplier.toString(),\r\n                                                        dx\r\n                                                        ));\r\n                                            }\r\n                                            else\r\n                                                retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else if(l === 3 && (symbols[2].group === S && symbols[2].power.lessThan(2) || symbols[0].group === CP)) {\r\n                                    var first = symbols[0];\r\n                                    if(first.group === CP) { //TODO {support higher powers of x in the future}\r\n                                        if(first.power.greaterThan(1))\r\n                                            first = _.expand(first);\r\n                                        var r = _.multiply(symbols[1], symbols[2]);\r\n                                        retval = new Symbol(0);\r\n                                        first.each(function (x) {\r\n                                            var t = _.multiply(x, r.clone());\r\n                                            var intg = __.integrate(t, dx, depth);\r\n                                            retval = _.add(retval, intg);\r\n                                        }, true);\r\n                                    }\r\n                                    else {\r\n                                        //try integration by parts although technically it will never work\r\n                                        retval = __.integration.by_parts(symbol, dx, depth, opt);\r\n                                    }\r\n\r\n                                }\r\n                                else if(all_functions(symbols)) {\r\n                                    var t = new Symbol(1);\r\n                                    for(var i = 0, l = symbols.length; i < l; i++) {\r\n                                        t = _.multiply(t, symbols[i].fnTransform());\r\n                                    }\r\n                                    t = _.expand(t);\r\n                                    retval = __.integrate(t, dx, depth);\r\n                                }\r\n                                else {\r\n                                    //one more go\r\n                                    var transformed = trigTransform(symbols);\r\n                                    retval = __.integrate(_.expand(transformed), dx, depth);\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                        retval = _.multiply(retval, coeff);\r\n                    }\r\n                    //if an integral was found then we return it\r\n                    if(retval)\r\n                        return retval;\r\n                }\r\n\r\n                catch(error) {\r\n                    //do nothing if it's a NoIntegralFound error otherwise let it bubble\r\n                    if(!(error instanceof NoIntegralFound || error instanceof core.exceptions.DivisionByZero))\r\n                        throw error;\r\n                }\r\n\r\n                //no symbol found so we return the integral again\r\n                return _.symfunction('integrate', [original_symbol, dt]);\r\n            }, false);\r\n        },\r\n        defint: function (symbol, from, to, dx) {\r\n            dx = dx || 'x'; //make x the default variable of integration\r\n            var get_value = function (integral, vars, point) {\r\n                try {\r\n                    return _.parse(integral, vars);\r\n                }\r\n                catch(e) {\r\n                    //it failed for some reason so return the limit\r\n                    var lim = __.Limit.limit(integral, dx, point);\r\n                    return lim;\r\n                }\r\n            };\r\n\r\n            var vars = core.Utils.variables(symbol),\r\n                    hasTrig = symbol.hasTrig();\r\n            var retval, integral;\r\n\r\n            // Fix #593 - Only assume the first variable if dx is not defined.\r\n            if(vars.length === 1 && !dx)\r\n                dx = vars[0];\r\n\r\n            if(!hasTrig) {\r\n                integral = __.integrate(symbol, dx);\r\n            }\r\n\r\n            if(!hasTrig && !integral.hasIntegral()) {\r\n                var upper = {},\r\n                        lower = {},\r\n                        a, b;\r\n                upper[dx] = to;\r\n                lower[dx] = from;\r\n\r\n                a = get_value(integral, upper, to, dx);\r\n                b = get_value(integral, lower, from, dx);\r\n                retval = _.subtract(a, b);\r\n            }\r\n            else if(vars.length === 1 && from.isConstant() && to.isConstant()) {\r\n\r\n                var f = core.Utils.build(symbol);\r\n                retval = new Symbol(core.Math2.num_integrate(f, Number(from), Number(to)));\r\n            }\r\n            else\r\n                retval = _.symfunction('defint', [symbol, from, to, dx]);\r\n            return retval;\r\n        },\r\n\r\n        Limit: {\r\n            interval: function (start, end) {\r\n                return _.parse(format('[{0}, {1}]', start, end));\r\n            },\r\n            diverges: function () {\r\n                return __.Limit.interval('-Infinity', 'Infinity');\r\n            },\r\n            divide: function (f, g, x, lim, depth) {\r\n                if(depth++ > Settings.max_lim_depth) {\r\n                    return;\r\n                }\r\n\r\n                var fin = f.clone(), gin = g.clone();\r\n\r\n                //But first a little \"cheating\". x/|x| ends up in an infinite loop since the d/dx |x| -> x/|x|\r\n                //To break this loop we simply provide the answer. Keep in mind that currently limit only provides\r\n                //the two-sided limit.\r\n                //Known limit\r\n                if(g.fname === ABS) {\r\n                    var sign = f.sign();\r\n                    var lim_sign = lim.sign();\r\n\r\n                    if(lim.isInfinity)\r\n                        return _.multiply(new Symbol(sign), new Symbol(lim_sign));\r\n\r\n                    else if(lim.equals(0)) {\r\n                        var fm = _.parse(f.multiplier);\r\n                        var gm = _.parse(g.multiplier);\r\n                        return _.divide(_.multiply(fm, __.Limit.interval('-1', '1')), gm);\r\n                    }\r\n                    else {\r\n                        //TODO: Support more limits\r\n                        __.Limit.diverges();\r\n                    }\r\n                }\r\n\r\n                var isInfinity = function (L) {\r\n                    if(core.Utils.isVector(L)) {\r\n                        for(var i = 0; i < L.elements.length; i++)\r\n                            if(!L.elements[i].isInfinity)\r\n                                return false;\r\n                        return true;\r\n                    }\r\n                    return L.isInfinity;\r\n                };\r\n\r\n                var equals = function (L, v) {\r\n                    if(core.Utils.isVector(L)) {\r\n                        return false;\r\n                    }\r\n                    return L.equals(v);\r\n                };\r\n\r\n                var retval;\r\n                do {\r\n                    var lim1 = evaluate(__.Limit.limit(f.clone(), x, lim, depth));\r\n                    var lim2 = evaluate(__.Limit.limit(g.clone(), x, lim, depth));\r\n\r\n                    //if it's in indeterminate form apply L'Hospital's rule\r\n                    var indeterminate = isInfinity(lim1) && isInfinity(lim2) || equals(lim1, 0) && equals(lim2, 0);\r\n                    //pull the derivatives\r\n                    if(indeterminate) {\r\n                        var ft = __.diff(f.clone(), x);\r\n                        var gt = __.diff(g.clone(), x);\r\n\r\n                        var t_symbol = _.expand(_.divide(ft, gt));\r\n                        f = t_symbol.getNum();\r\n                        g = t_symbol.getDenom();\r\n\r\n                    }\r\n                }\r\n                while(indeterminate)\r\n\r\n                //REMEMBER: \r\n                //- 1/cos(x)\r\n                //n/0 is still possible since we only checked for 0/0\r\n                var den_is_zero = lim2.equals(0);\r\n                var p = Number(gin.power);\r\n\r\n                if(lim.isConstant(true) && den_is_zero) {\r\n                    retval = Symbol.infinity(core.Utils.even(p) && lim1.lessThan(0) ? -1 : undefined);\r\n                }\r\n                else if(den_is_zero) {\r\n                    retval = __.Limit.diverges();\r\n                }\r\n                else {\r\n                    retval = _.divide(lim1, lim2);\r\n                }\r\n\r\n                return retval;\r\n            },\r\n            rewriteToLog: function (symbol) {\r\n                var p = symbol.power.clone();\r\n                symbol.toLinear();\r\n                return _.pow(new Symbol('e'), _.multiply(p, _.symfunction(Settings.LOG + '', [symbol])));\r\n            },\r\n            getSubbed: function (f, x, lim) {\r\n                var retval;\r\n                //1. rewrite EX with base e\r\n                if(f.group === EX) {\r\n                    f = __.rewriteToLog(f);\r\n                }\r\n                //2. try simple substitution\r\n                try {\r\n                    retval = f.sub(x, lim);\r\n                }\r\n                catch(e) {\r\n                    //Nope. No go, so just return the unsubbed function so we can test the limit instead.\r\n                    retval = f;\r\n                }\r\n\r\n                return retval;\r\n            },\r\n            isInterval: function (limit) {\r\n                return core.Utils.isVector(limit);\r\n            },\r\n            isConvergent: function (limit) {\r\n                //it's not convergent if it lies on the interval -Infinity to Infinity\r\n                if(\r\n                        //It lies on the interval -Infinity to Infinity\r\n                        __.Limit.isInterval(limit) && limit.elements[0].isInfinity && limit.elements[1].isInfinity ||\r\n                        //We weren't able to calculate the limit\r\n                        limit.containsFunction('limit')\r\n                        ) {\r\n                    return false; //Then no\r\n                }\r\n                return true; //It is\r\n            },\r\n            limit: function (symbol, x, lim, depth) {\r\n                //Simplify the symbol\r\n                if(symbol.isLinear() && symbol.isComposite()) {\r\n\r\n                    //Apply sum of limits\r\n                    var limit = new Symbol(0);\r\n                    symbol.each(function (s) {\r\n                        limit = _.add(limit, __.Limit.limit(s, x, lim, depth));\r\n                    }, true);\r\n\r\n                    return limit;\r\n                }\r\n                ;\r\n\r\n                symbol = core.Algebra.Simplify.simplify(symbol);\r\n\r\n                depth = depth || 1;\r\n\r\n                if(depth++ > Settings.max_lim_depth) {\r\n                    return;\r\n                }\r\n\r\n                //store the multiplier\r\n                var m = _.parse(symbol.multiplier);\r\n                //strip the multiplier\r\n                symbol.toUnitMultiplier();\r\n                try {\r\n                    //https://en.wikipedia.org/wiki/List_of_limits\r\n                    var retval;\r\n                    //we try the simplest option first where c is some limit\r\n                    //lim a as x->c = a where c \r\n                    if(symbol.isConstant(true)) {\r\n                        retval = symbol;\r\n                    }\r\n                    else {\r\n                        var point = {};\r\n                        point[x] = lim;\r\n                        //lim x as x->c = c where c\r\n\r\n                        try {\r\n\r\n                            //evaluate the function at the given limit\r\n                            var t = _.parse(symbol.sub(x, lim), point);\r\n\r\n                            //a constant or infinity is known so we're done\r\n                            if(t.isConstant(true) || t.isInfinity)\r\n                                retval = t;\r\n\r\n                        }\r\n                        catch(e) { /*Nothing. Maybe we tried to divide by zero.*/\r\n                        }\r\n                        ;\r\n\r\n                        if(!retval) {\r\n                            //split the symbol in the numerator and the denominator\r\n                            var num = symbol.getNum();\r\n                            var den = symbol.getDenom();\r\n\r\n                            if(den.isConstant(true)) {\r\n                                //We still don't have a limit so we generate tests.\r\n                                if(symbol.group === EX) {\r\n                                    //https://en.wikipedia.org/wiki/List_of_limits\r\n                                    //Speed boost for exponentials by detecting patterns\r\n                                    var f = symbol.clone().toLinear();\r\n                                    var p = symbol.power.clone();\r\n                                    var _num = f.getNum();\r\n                                    var _den = f.getDenom();\r\n                                    var fn = core.Utils.decompose_fn(_den, x, true);\r\n                                    //start detection of pattern (x/(x+1))^x\r\n                                    if(_num.group === S && _num.multiplier.isOne() && fn.ax.group === S && fn.b.isConstant(true) && fn.a.isOne() && fn.b.isConstant(true)) {\r\n                                        retval = _.parse(format('(1/e^({0}))', fn.b));\r\n                                    }\r\n                                    else {\r\n                                        var symbol_ = __.Limit.rewriteToLog(symbol.clone());\r\n                                        //get the base\r\n                                        var pow = symbol_.power.clone();\r\n                                        var base = symbol_.clone().toLinear();\r\n                                        var lim_base = __.Limit.limit(base, x, lim, depth);\r\n                                        var lim_pow = __.Limit.limit(pow, x, lim, depth);\r\n                                        retval = _.pow(lim_base, lim_pow);\r\n                                    }\r\n                                }\r\n                                else if(symbol.group === FN && symbol.args.length === 1) {\r\n                                    var evaluates;\r\n                                    //Squeeze theorem lim f(g(x)) = lim f(lim g))\r\n                                    var arg = __.Limit.limit(symbol.args[0], x, lim, depth);\r\n                                    if(core.Utils.isVector(arg)) {\r\n                                        //get the limit over that interval\r\n                                        retval = arg.map(function (e) {\r\n                                            var clone = symbol.clone();\r\n                                            clone.args[0] = e;\r\n                                            return __.Limit.limit(_.symfunction(symbol.fname, [e]), x, lim, depth);\r\n                                        });\r\n\r\n                                        return _.multiply(m, retval);\r\n                                    }\r\n                                    //if the argument is constant then we're done\r\n                                    else if(arg.isConstant(true)) {\r\n\r\n                                        //double check that it evaluates\r\n                                        var trial = _.symfunction(symbol.fname, [arg]);\r\n                                        //trial evaluation\r\n                                        try {\r\n                                            evaluate(trial);\r\n                                            evaluates = true;\r\n                                        }\r\n                                        catch(e) {\r\n\r\n                                            evaluates = false;\r\n                                        }\r\n                                    }\r\n                                    if(evaluates) {\r\n                                        retval = trial;\r\n                                    }\r\n                                    else {\r\n                                        //if the limit converges. We'll deal with non-convergent ones later\r\n                                        if(__.Limit.isConvergent(arg)) {\r\n                                            if(symbol.fname === LOG) {\r\n                                                switch(arg.toString()) {\r\n                                                    //lim -> 0\r\n                                                    case '0':\r\n                                                        retval = Symbol.infinity().negate();\r\n                                                        break;\r\n                                                    case 'Infinity':\r\n                                                        retval = Symbol.infinity();\r\n                                                        break;\r\n                                                    case '-Infinity':\r\n                                                        retval = Symbol.infinity();\r\n                                                        break;\r\n                                                }\r\n                                            }\r\n                                            else if((symbol.fname === COS || symbol.fname === SIN) && lim.isInfinity) {\r\n                                                retval = __.Limit.interval(-1, 1);\r\n                                            }\r\n                                            else if((symbol.fname === TAN)) {\r\n                                                var s_arg = symbol.args[0];\r\n                                                var n = s_arg.getNum();\r\n                                                var d = s_arg.getDenom();\r\n                                                var pi = n.toUnitMultiplier();\r\n                                                if(lim.isInfinity || pi.equals('pi') && d.equals(2)) {\r\n                                                    retval = divergent();\r\n                                                }\r\n                                            }\r\n                                            else if(symbol.fname === Settings.FACTORIAL) {\r\n                                                if(arg.isInfinity)\r\n                                                    return Symbol.infinity();\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else if(symbol.group === S) {\r\n                                    if(symbol.power > 0)\r\n                                        //these functions always converge to the limit\r\n                                        return _.parse(symbol, point);\r\n                                    else {\r\n                                        //we're dealing with 1/x^n but remember that infinity has already been dealt\r\n                                        //with by substitution\r\n                                        if(core.Utils.even(symbol.power)) {\r\n                                            //even powers converge to infinity\r\n                                            retval = Symbol.infinity();\r\n                                        }\r\n                                        else {\r\n                                            //odd ones don't\r\n                                            retval = __.Limit.diverges();\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else if(symbol.group === CB) {\r\n\r\n                                    var lim1, lim2;\r\n                                    //loop through all the symbols\r\n                                    //thus => lim f*g*h = lim (f*g)*h = (lim f*g)*(lim h)\r\n                                    //symbols of lower groups are generally easier to differentiatee so get them to the right by first sorting\r\n                                    var symbols = symbol.collectSymbols().sort(function (a, b) {\r\n                                        return a.group - b.group;\r\n                                    });\r\n\r\n                                    var f = symbols.pop();\r\n                                    //calculate the first limit so we can keep going down the list\r\n                                    lim1 = evaluate(__.Limit.limit(f, x, lim, depth));\r\n\r\n                                    //reduces all the limits one at a time\r\n                                    while(symbols.length) {\r\n                                        //get the second limit\r\n                                        var g = symbols.pop();\r\n                                        //get the limit of g\r\n                                        lim2 = evaluate(__.Limit.limit(g, x, lim, depth));\r\n\r\n                                        //if the limit is in indeterminate form aplly L'Hospital by inverting g and then f/(1/g)\r\n                                        if((lim1.isInfinity || !__.Limit.isConvergent(lim1) && lim2.equals(0) || lim1.equals(0) && __.Limit.isConvergent(lim2))) {\r\n                                            if(g.containsFunction(LOG)) {\r\n                                                //swap them\r\n                                                g = [f, f = g][0];\r\n                                            }\r\n                                            //invert the symbol\r\n                                            g.invert();\r\n\r\n                                            // Product of infinities\r\n                                            if(lim1.isInfinity && lim2.isInfinity) {\r\n                                                lim1 = Symbol.infinity()\r\n                                            }\r\n                                            else {\r\n                                                lim1 = __.Limit.divide(f, g, x, lim, depth);\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            //lim f*g = (lim f)*(lim g)\r\n                                            lim1 = _.multiply(lim1, lim2);\r\n                                            //let f*g equal f and h equal g \r\n                                            f = _.multiply(f, g);\r\n                                        }\r\n                                    }\r\n\r\n                                    //Done, lim1 is the limit we're looking for     \r\n                                    retval = lim1;\r\n                                }\r\n                                else if(symbol.isComposite()) {\r\n                                    var _lim;\r\n                                    if(!symbol.isLinear())\r\n                                        symbol = _.expand(symbol);\r\n                                    //Apply lim f+g = (lim f)+(lim g)\r\n                                    retval = new Symbol(0);\r\n\r\n                                    var symbols = symbol.collectSymbols().sort(function (a, b) {\r\n                                        return b.group - a.group;\r\n                                    });\r\n\r\n                                    var _symbols = [];\r\n                                    //Analyze the functions first\r\n                                    var fns = new Symbol(0);\r\n                                    for(var i = 0, l = symbols.length; i < l; i++) {\r\n                                        var sym = symbols[i].clone();\r\n                                        if(sym.group === FN || sym.group === CB && sym.hasFunc()) {\r\n                                            fns = _.add(fns, sym);\r\n                                        }\r\n                                        else\r\n                                            _symbols.push(sym);\r\n                                    }\r\n                                    _symbols.unshift(fns);\r\n\r\n                                    //make sure that we didn't just repackage the exact same symbol\r\n                                    if(_symbols.length !== 1) {\r\n                                        symbols = _symbols;\r\n                                    }\r\n\r\n                                    for(var i = 0, l = symbols.length; i < l; i++) {\r\n                                        var sym = symbols[i];\r\n                                        //If the addition of the limits is undefined then the limit diverges so return -infinity to infinity\r\n                                        try {\r\n                                            _lim = __.Limit.limit(sym, x, lim, depth);\r\n                                        }\r\n                                        catch(e) {\r\n                                            _lim = __.Limit.diverges();\r\n                                        }\r\n\r\n                                        try {\r\n                                            retval = _.add(retval, _lim);\r\n                                        }\r\n                                        catch(e) {\r\n                                            if(depth++ > Settings.max_lim_depth) {\r\n                                                return;\r\n                                            }\r\n                                            ;\r\n                                            retval = __.Limit.limit(__.diff(symbol, x), x, lim, depth);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                retval = __.Limit.divide(num, den, x, lim, depth);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //if we still don't have a solution\r\n                    if(!retval)\r\n                        //return it symbolically\r\n                        retval = _.symfunction('limit', [symbol, x, lim]);\r\n                }\r\n                catch(e) {\r\n                    //if all else fails return the symbolic function\r\n                    retval = _.symfunction('limit', [symbol, x, lim]);\r\n                }\r\n\r\n                return _.multiply(m, retval);\r\n            }\r\n        },\r\n        Fresnel: {\r\n            S: function (x) {\r\n                if(x.isConstant(true)) {\r\n                    return __.defint(_.parse('sin(pi*x^2/2)'), Symbol(0), x, 'x');\r\n                }\r\n                return _.symfunction('S', arguments);\r\n            },\r\n            C: function (x) {\r\n                if(x.isConstant(true)) {\r\n                    return __.defint(_.parse('cos(pi*x^2/2)'), Symbol(0), x, 'x');\r\n                }\r\n                return _.symfunction('C', arguments);\r\n            }\r\n        }\r\n    };\r\n\r\n    nerdamer.register([\r\n        {\r\n            name: 'diff',\r\n            visible: true,\r\n            numargs: [1, 3],\r\n            build: function () {\r\n                return __.diff;\r\n            }\r\n        },\r\n        {\r\n            name: 'sum',\r\n            visible: true,\r\n            numargs: 4,\r\n            build: function () {\r\n                return __.sum;\r\n            }\r\n        },\r\n        {\r\n            name: 'product',\r\n            visible: true,\r\n            numargs: 4,\r\n            build: function () {\r\n                return __.product;\r\n            }\r\n        },\r\n        {\r\n            name: 'integrate',\r\n            visible: true,\r\n            numargs: [1, 2],\r\n            build: function () {\r\n                return __.integrate;\r\n            }\r\n        },\r\n        {\r\n            name: 'defint',\r\n            visible: true,\r\n            numargs: [3, 4],\r\n            build: function () {\r\n                return __.defint;\r\n            }\r\n        },\r\n        {\r\n            name: 'S',\r\n            visible: true,\r\n            numargs: 1,\r\n            build: function () {\r\n                return __.Fresnel.S;\r\n            }\r\n        },\r\n        {\r\n            name: 'C',\r\n            visible: true,\r\n            numargs: 1,\r\n            build: function () {\r\n                return __.Fresnel.C;\r\n            }\r\n        },\r\n        {\r\n            name: 'limit',\r\n            visible: true,\r\n            numargs: [3, 4],\r\n            build: function () {\r\n                return __.Limit.limit;\r\n            }\r\n        }\r\n    ]);\r\n    //link registered functions externally\r\n    nerdamer.updateAPI();\r\n\r\n})();","var nerdamer=function(e){\"use strict\";var d=new P,S=e.bigInt,k=e.bigDec;k.set({precision:250});var t={},o=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083],M={},D={callPeekers:!1,init_primes:1e3,exclude:[],suppress_errors:!1,PARSE2NUMBER:!1,SAFE:!1,IMAGINARY:\"i\",FUNCTION_MODULES:[Math],ALLOW_CHARS:[\"π\"],USE_MULTICHARACTER_VARS:!0,POWER_OPERATOR:\"^\",VALIDATION_REGEX:/^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,IMPLIED_MULTIPLICATION_REGEX:/([\\+\\-\\/\\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\\+\\-\\/\\*]*)/gi,ALIASES:{\"π\":\"pi\",\"∞\":\"Infinity\"},POSITIVE_MULTIPLIERS:!1,CACHE:{},SILENCE_WARNINGS:!1,PRECISION:21,EXPRESSION_DECP:19,DEFAULT_DECP:16,VECTOR:\"vector\",PARENTHESIS:\"parens\",SQRT:\"sqrt\",ABS:\"abs\",FACTORIAL:\"factorial\",DOUBLEFACTORIAL:\"dfactorial\",LONG_PI:\"3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196\",LONG_E:\"2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901\",PI:Math.PI,E:Math.E,LOG:\"log\",LOG10:\"log10\",LOG10_LATEX:\"log_{10}\",MAX_EXP:2e5,SCIENTIFIC_MAX_DECIMAL_PLACES:14,SCIENTIFIC_IGNORE_ZERO_EXPONENTS:!0};!function(){D.CACHE.roots={};for(var e=2;e<=40;e++)for(var t=2;t<=40;t++){var n=S(e).pow(t);D.CACHE.roots[n+\"-\"+t]=e}}();function n(t){function e(e){this.name=t,this.message=void 0!==e?e:\"\",(e=new Error(this.message)).name=this.name,this.stack=e.stack}return e.prototype=Object.create(Error.prototype),e}function r(e){return-1!==f.indexOf(e)}function i(e){return e instanceof R}function A(e){return(e=ne(e)?e.multiplier:e).lessThan(0)}function c(e){return Math.min.apply(void 0,e)}function s(e,t){if(ae(e))for(var n=e.length,r=0;r<n;r++)t.call(e,r);else for(var i in e)e.hasOwnProperty(i)&&t.call(e,i)}function a(e){for(var t=e.length,n=[],r=0;r<t;r++){var i=e[r];-1===n.indexOf(i)&&n.push(i)}return n}function u(e){for(var t=o[o.length-1]||2;t<e;t++)g(t)&&o.push(t)}var F=t.N=1,B=t.P=2,G=t.S=3,V=t.EX=4,H=t.FN=5,j=t.PL=6,X=t.CB=7,$=t.CP=8,l=D.CONST_HASH=\"#\",Z=D.PARENTHESIS,z=D.SQRT,Q=D.ABS,Y=D.FACTORIAL,W=D.DOUBLEFACTORIAL,p=[],J={},f=[],h=[],K=function(e,t){if(!D.suppress_errors)throw new(t||Error)(e)},w=function(e){for(var t=e[0],n=1,r=e.length;n<r;n++)if(!e[n].equals(t))return!1;return!0},ee=function(e){h.push(e),D.SHOW_WARNINGS&&console&&console.warn&&console.warn(e)},m=function(e,t){if((t=t||\"variable\",-1===D.ALLOW_CHARS.indexOf(e))&&!D.VALIDATION_REGEX.test(e))throw new U(e+\" is not a valid \"+t+\" name\")},y=function(e){var t,n,r,i=Math.sign(e);return e=Math.abs(e),/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(e)&&(r=(r=(n=String(e).toLowerCase().split(\"e\")).pop())/(t=Math.abs(r)),n=n[0].split(\".\"),e=-1==r?(t-=n[0].length)<0?n[0].slice(0,t)+\".\"+n[0].slice(t)+(2===n.length?n[1]:\"\"):\"0.\"+new Array(t+1).join(\"0\")+n.join(\"\"):((r=n[1])&&(t-=r.length),t<0?n[0]+r.slice(0,t)+\".\"+r.slice(t):n.join(\"\")+new Array(t+1).join(\"0\"))),i<0?\"-\"+e:e},g=function(e){for(var t=Math.floor(Math.sqrt(e)),n=2;n<=t;n++)if(e%n==0)return!1;return!0},te=function(e){return/^\\d+\\.?\\d*$/.test(e)},v=function(e){return ne(e)?v(e.multiplier.toDecimal()):e%1!=0},ne=function(e){return e instanceof Fe},b=function(e,t,n){if(n=n||{c:[],add:function(e){-1===this.c.indexOf(e)&&isNaN(e)&&this.c.push(e)}},ne(e)){var r=e.group,i=e.previousGroup;if(r===V&&b(e.power,t,n),r===$||r===X||i===$||i===X)for(var s in e.symbols)b(e.symbols[s],t,n);else if(r===G||i===G)\"e\"!==e.value&&\"pi\"!==e.value&&e.value!==D.IMAGINARY&&n.add(e.value);else if(r===j||i===j)b(pe(e.symbols),t,n);else if(r===V)isNaN(e.value)||n.add(e.value),b(e.power,t,n);else if(r===H&&!t)for(var o=0;o<e.args.length;o++)b(e.args[o],t,n)}return n.c.sort()},N=function(e,n){e=d.expand(e),n=n||{};function t(e,t){n[e]||(n[e]=new Fe(0)),n[e]=d.add(n[e],t.clone())}return e.each(function(e){if(e.isConstant(\"all\"))t(\"constants\",e);else if(e.group===G)t(e.value,e);else if(e.group!==H||e.fname!==Q&&\"\"!==e.fname){if(e.group===V||e.group===H)throw new Error(\"Unable to separate. Term cannot be a function!\");t(b(e).join(\" \"),e)}else N(e.args[0])}),n},re=function(e){return e instanceof Ve},ie=function(e){return e instanceof He},se=function(e){return e instanceof je},oe=function(e){return e.group===F||e.group===B},ae=function(e){return Array.isArray(e)},ue=function(e){return/^[-+]?\\d+e?\\+?\\d*$/gim.test(e.toString())},le=function(e){return e&&String(e)},E=function(e){return\"(\"+e+\")\"},ce=function(){var n=[].slice.call(arguments);return n.shift().replace(/{(\\d+)}/g,function(e,t){t=n[t];return\"function\"==typeof t?t():t})},q=Object.keys,pe=function(e,t,n){for(var r in e)break;return t?r:n?{key:r,obj:e[r]}:e[r]},fe=function(e,t,n){return m(e),r(e)?null:(t=t||b(d.parse(n)),d.functions[e]=[d.mapped_function,t.length,{name:e,params:t,body:n}],n)},he=function(e,t,n){var r,i;return t=String(t),e.group===$?(i=d.expand(e.clone()).stripVar(t),r=d.subtract(e.clone(),i.clone()),i=i):r=e.clone(),e=r.stripVar(t),t=d.divide(r.clone(),e.clone()),i=i||new Fe(0),n?{a:e,x:t,ax:r,b:i}:[e,t,r,i]},me=function(e,t){return ue(e)?e>=Number.MAX_VALUE?e.toString():Number(e):(t=void 0===t?14:t,Math.round(e*Math.pow(10,t))/Math.pow(10,t))},ge=function(e){return e%2==0},de=function(e){return 1/(e%1)%2==0},ve=function(e,t){var n=typeof t;\"function\"==n&&\"undefined\"!=n||(t=function(e,t){return e===t});for(var r=[];e.length;){var i=e[0];if(1===e.length){r.push(i);break}var s=[];r.push(i);for(var o=1;o<e.length;o++){var a=e[o];t(i,a)||s.push(a)}e=s}return r},x=function(e){function t(e){-1===f.indexOf(e)&&f.push(e)}\"string\"==typeof e?t(e):s(e,function(e){t(e)})},we=function(e,t){var n;return ae(e)?n=e.splice(t,1)[0]:(n=e[t],delete e[t]),n},ye=function(e,t,n,r){var i=D[e];D[e]=void 0===n||!!n;r=t.call(r);return D[e]=i,r},be=function(e){return[].slice.call(e)},Se=function(e,t){return ye(\"PARSE2NUMBER\",function(){return d.parse(e,t)},!0)},C=function(e){if(ae(e)){for(var t=new Ve([]),n=0;n<e.length;n++)t.elements.push(C(e[n]));return t}return ne(e)?e:d.parse(e)},Me=function(e){for(var t=0;t<e.length;t++)if(e[t].group!==F)return!1;return!0},Ne=function(e){for(var t=0;t<e.length;t++)if(!e[t].isPi()&&!e[t].isE()&&!e[t].isConstant(!0))return!1;return!0},Ee=function(e,n,r){(n.isComposite()&&!e.isComposite()||n.isLinear()&&!e.isLinear())&&([e,n]=[n,e]);var i=new Fe(0);return e.isLinear()?e.each(function(t){var e;n.isComposite()?n.isLinear()?n.each(function(e){e=d.multiply(d.parse(t),d.parse(e)),e=d.expand(d.parse(e),r);i=d.add(i,e)},!0):i=d.add(i,d.multiply(t,d.parse(n))):(e=d.multiply(d.parse(t),d.parse(n)),i=d.add(i,d.expand(e,r)))},!0):i=d.multiply(e,n),i},qe=n(\"DivisionByZero\"),xe=n(\"ParseError\"),Ae=n(\"UndefinedError\"),Ce=n(\"OutOfFunctionDomainError\"),L=n(\"MaximumIterationsReached\"),I=n(\"NerdamerTypeError\"),Le=n(\"ParityError\"),Ie=n(\"OperatorError\"),Ue=n(\"OutOfRangeError\"),_e=n(\"DimensionError\"),U=n(\"InvalidVariableNameError\"),_=n(\"ValueLimitExceededError\"),Oe=n(\"NerdamerValueError\"),O=n(\"SolveError\"),e=n(\"InfiniteLoopError\"),Re=n(\"UnexpectedTokenError\"),e={DivisionByZero:qe,ParseError:xe,OutOfFunctionDomainError:Ce,UndefinedError:Ae,MaximumIterationsReached:L,NerdamerTypeError:I,ParityError:Le,OperatorError:Ie,OutOfRangeError:Ue,DimensionError:_e,InvalidVariableNameError:U,ValueLimitExceededError:_,NerdamerValueError:Oe,SolveError:O,InfiniteLoopError:e,UnexpectedTokenError:Re},Te={csc:function(e){return 1/Math.sin(e)},sec:function(e){return 1/Math.cos(e)},cot:function(e){return 1/Math.tan(e)},acsc:function(e){return Math.asin(1/e)},asec:function(e){return Math.acos(1/e)},acot:function(e){return Math.PI/2-Math.atan(e)},erf:function(e){var t=1/(1+.5*Math.abs(e)),t=1-t*Math.exp(-e*e-1.26551223+t*(1.00002368+t*(.37409196+t*(.09678418+t*(t*(.27886807+t*(t*(1.48851587+t*(.17087277*t-.82215223))-1.13520398))-.18628806)))));return 0<=e?t:-t},diff:function(t){return function(e){return(t(e+.001)-t(e-.001))/.002}},median:function(...e){e.sort(function(e,t){return e-t});var t=Math.floor(e.length/2);return e.length%2?e[t]:(e[t-1]+e[t])/2},fromContinued:function(e){for(var t=e.fractions.slice(),n=1/t.pop(),r=0,i=t.length;r<i;r++)n=1/(t.pop()+n);return e.sign*(e.whole+n)},continuedFraction:function(e,t){t=t||20;for(var n=Math.sign(e),r=Math.abs(e),i=Math.floor(r),s=r-i,o=0,a=!1,u={whole:i,sign:n,fractions:[]};!a&&0!==s;){var l=1/s,c=Math.floor(l);if(1e7<c)if(Te.fromContinued(u)-e<=Number.EPSILON)break;u.fractions.push(c),((s=l-c)<=1e-14||t-1<=o)&&(a=!0),o++}n=u.fractions.length-1;return 1===u.fractions[n]&&(u.fractions.pop(),u.fractions[--n]++),u},bigpow:function(e,t){e instanceof De||(e=De.create(e)),t instanceof De||(t=De.create(t));var n,r=new De(0);return t.isInteger()?(r.num=e.num.pow(t.toString()),r.den=e.den.pow(t.toString())):(n=De.create(Math.pow(e.num,t.num)),e=De.create(Math.pow(e.den,t.num)),r.num=Te.nthroot(n,t.den.toString()),r.den=Te.nthroot(e,t.den)),r},gamma:function(e){var t=[.9999999999998099,676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,1.5056327351493116e-7];if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*Te.gamma(1-e));--e;for(var n=t[0],r=1;r<9;r++)n+=t[r]/(e+r);var i=e+7+.5;return Math.sqrt(2*Math.PI)*Math.pow(i,e+.5)*Math.exp(-i)*n},bigfactorial:function(e){for(var t=new S(1),n=2;n<=e;n++)t=t.times(n);return new De(t)},bigLog:function(e){var t=[\"-253631954333118718762629409109262279926288908775918712466601196032/39970093576053625963957478139049824030906352922262642968060706375\",\"0\",\"24553090145869607172412918483124184864289170814122579923404694986469653261608528681589949629750677407356463601998534945057511664951799678336/35422621391945757431676178435630229283255250779216421054188228659061954317501699707236864189383591478024245495110561124597124995986978302375\",\"369017335340917140706044240090243368728616279239227943871048759140274862131699550043150713059889196223917527172547/335894053932612728969975338549993764554481173661218585876475837409922537622385232776657791604345125227005476864000\",\"24606853025626737903121303930100462245506322607985779603220820323211395607931699126390918477501325805513849611930008427268176602460462988972957593458726734897129954728102144/17750092415977639787139561330326170936321452137635322313122938207611787444311735251389066106937796085669460151963285086542745859461943369606018450213014148175716400146484375\",\"399073568781976806715759409052286641738926636328983929439450824555613704676637191564699164303012247386095942144825603522401740680808466858044/247958349743620302021733249049411604982786755454514947379317600613433680222511897950658049325685140346169718465773927872179874971908848116625\",\"1468102989495846944084741146947295378041808701256909016224309866143294556551407470861354311593351276612463858816796714569499021375899793849136855085849133702029337910502448189055357182595424959360/819363879309286303497217527375463120404739098260200279520788950777458900438307356738082930586032462601215802636320993648007907724899611296693997216938989854861043298494990214825163523387600982777\",\"5896704855274661767824574093605344871722790278354431422729640950821239030785642943033153793245906863203822369276271050164634206965056233097479117980782641839669/3030306850569309344013726745100070601277982132543905537366562638553198167007159067544789592089960911065181606283478843359856123992707598685058297067179343872000\",\"76631772943534985713873427262830314617912556928476573358548256872141516989538374761909611879922349479420014771499018155447198112155515453671128814488139633810493264352294560043912066253026059140653027326566801398784/36852092933388988649396042883218509607503204211148493545892849595498822817623842579026942621098851631842754395231561679671400197056377380063233740202370686144673585955581403046886083948450136247134308381940165804875\",\"3159076083816399509754948610929467278257473888282947311280653574634802580912280940686954763313882823327077171624015737719617373932318151594325834524000275847475866299387913048/1437757485694188822758304467756419845842037623148461107362957994816554782989250555362514354661961482939226272309026092009962414616417412938087494467254146002233028411865234375\",\"22266067259907364984531611601870291368272674573653403965630628996687370994139884833897773468149149664829922302484782423514167405397665098388400450149078982462318781750661005833037235183394221496186539779712428265837926417581952/9670030144664428565128962309657100138096047028794689249320859276197340398920725569428532293373676415359965773460364494998334259893079003125373872108770534788283842907318071170285038777091588292539102269617376180390982915567375\",\"14604654564989239958569331443385369522850975185358647132770022716433280072271007767111036877803328768910274400515590151934676819262085211828028638417329558229123989556376108454497813055/6090614019162516693013973409650613208227889078878781039105047015752493519149314227721984436973374032279421344818329285207124280297611253861173835238379831004010748379874393292231671808\",\"1901241885407696031217292877862925220917660047127261026827869027159993239567933534052663335498281439239753018507182016153657409777749792228538380379703411298411623469292891476969894084838876001545818141543890273256985768690847587711270930688/765116019778838839812655402103512685695769161212360553099732689795578904762091216998790589926057819838537805856579109910198553330075924857419395160755642371550113347465300208422126945265887065434116781678702741657275181694851670325469434625\",\"139459806786604751793737926146840623607010208216289543036026206208962059593900745886202214788747453279179283344350478734275973878932538430194363355795823581315329311220701640235653288975569812161436/54371368534412517053056101353618694718215711767266376573138772968257303578467926450212293233332401067673270853953399269852376592855992724934941173346260129257754416412476202526978443681584633116375\",\"1045669091124493070709683241190022970908640501171378776604126771144008324358233819560649021940145166254659028524319517244711645162132513416238958170819347361185944945680269442845829390112062101255500836072082817820950448463314034677353723256969344/396228259004446234921310936915931611736815598535963504660076315228798989932959459406702091180060429080345146735173591749448509810270759531977278642135591672189002006272326131885315743181289970885337574780897529347356567086535505950450897216796875\",\"9912919238915437302006264477931031611447467070103973106567538528951878797932559935860738745374437522819124347510590800370471910492338584284092534264608801221235029062881964101996762011296996851893455828946521/3660537472668264151218961634689665210933936249986285290553357254224360417386515311493310199319523687171757653216994741150377508234317025158302057758196429623723072084157928224798322861732880034847243894784000\",\"9263710175433181746575186369318246002919895649622127410824041370079225200282403368319370743363303164313395723904510539050157032684710468364067204876434546848634842333436957245275217583248805993142227630297924119330553308466662488683624783307023014909360640/3341177182697517248552428837661919299725031035849865632511882688786226888137634168024976033652753689210700218163621739078534353578510364301481093730054725078138658805025014615651043313990684347632166030359086885561104034510990826655289288319840595753002771\",\"5116082230713622171832327542439052727465114322479570603905499496221224653983960598946033081212909066917137546065542953865612718836914393275681318667667521726785633638189373998191090501201427906618075889744489190209584/1805752553736060443820406101277706970767657006346276183748749630179442318063568286372320188433843729960294965366346522303898609655762491623098453269916163621089005711823488749297418113474056676109581110715068124438875\",\"246569125619713282434448566970352231845414317018379160824176638351574938993535464763890962336882760882398479702237564384291290459961036068916857265499633061660562532011248501476114401629839742058389195725393702000011860799793778295606988057303225493814005789533570432/85307063020836305797178273029353623060860009152114361453434032434699636078115114412588719432277441055049132559782203988387794711585368296817222565434951256788867244687081233632650953850383220864394261763844194948389861147622944651546912394593164406926489862036343375\",\"133672026303452911046163998480860917119290576658330909785707604886881155606725822685088929236266583416708668502760907677019598002175122453170574729028452721476464728566191464897928696630979863154661704374206171469014225143/45398130975270785045482567762871405072140548998125471025451666500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"6041693953360002800224091673336562508913199995987479264605216252220579740134601435770085920869376641180763419907442721705887169884230643795126568815123647603047739799302562095542459344811429882053086550900803768964612193941424128649976704727183797495759082741166938351872/2016766992122395667828553277997478570503475626107286343497917705446132017125079612756035254750822860815515899557855166824523851779156336235294914777307802256439645525835223691751931866188957324792276149549076500784191791380803500156776088683900346065830066370370083309875\",\"705868391597244582764749229356331441978820024796066870551110486625729826111158236686696326058778874201639006234449557592353247542995871491078308187261304930042019640830629526023972693107193897009168955674240659026247094657679060/231848642748474339277532000336338632910990823562381469441716922006107433404523316252618490265927265734670539384485699132080062215196462178933963957679882342083893417545858074378754089719547920901917516016346211301054206383643383\",\"101832160604157943093944673541651013907278188571533075311673249923948856034633446617630054761681006062910980371900782781226979391765818325065031889334563981235894369036439929651260587335544056975715076598739977065390678221999918899003881778449092038750712969437519295878491018112/32944277910571666002449086492515464541550138004002141571670657643770713783329063548790202120805341989608877739811787937782240802963962520261844114327432160788193314874913687387269408387417806176202979244637915812905426565263196954203487934225589622864145960079736633434831996625\",\"10655703119271468913597640479490594180964700448340778168715956712130636958373270202484276402718566314881119559090842449610957974112230306343486091910217340665146602598568991520563987490686996746558858366002301982443029430290679385551/3398412687366638541233365137084722368200311117891192348532156645374786104142009695796409107380345795998400850838706661851176885183144928701608654514812261697598380070746520197171576610572921007069104300695592751543563472456384512000\",\"1903039332876763837419920240543738799531131775028971323439870868730321221615515008394327723508670975623498588291298064320786970626232668956372004004897872810230178526101184611242511193415796638694370503100219710864543168952682617801833318493436174387568067811938490953495819438108686336/598806534367503338307287246320963280558134937382149405305466709787179429317914803617527827862441615350396864359976273212272586892074799651088317544101755361439294687323233086696182687664637422796995789967075271448560870681210580691574924544896656175563265378514188341796398162841796875\",\"525573915563826130963525826191411949262846916750432019596028344808298471293378917508549164993368392834023782480702893643486699787870059946429810070222126260200026332874480239090370088123833491499400991181659445914352500247596757005142623368/163278727324937389095822405034435687776345799835442022795533783889356344755225815267819508608559076191292900367982490827396869405536484846115955581043091229202052407483776587687967125885665493681707461345895999542381476164157058393971431375\",\"9263815657177858787273494705338516861045771674838057329170239610953039987023429736752079544014780707408666628475997291124805562998227296677616204140605356257712022384368492575381355563976330347792504605666631512343447560301417325154003481040250148561839861837778597346623630046623751094400/2843321709948499955095590862256744532227698001408929142548057792217790532624003190447363578048562448168721539177458065482170148482375585867230123873178100117094533143052886527452665480614620123764036974180917207421482431983407742154634391264619615289225747664532332469783301704643254076601\",\"407959339726114455622180187758753007349209016396248763075759257357925636039752474207685682218422721827857994768023399625060206708378433960993946156803948655098667156937949174400873748557248801874735834957795040139401560494087476967548060208243867/123780218751812156744401121690996305978134694678934447237402511116731459214498784497436358160964198336874043702652746834763131444030185151143987331404604087778514863973633941401826334750268416015224906056576641018962863645043976537664227639296000\",\"2547676391598917379516698439971914695230548782904479778605691338364453606537643088857116141939170899135026552016969320061900926954008522781162186995856580955090548471448276736878300717869625651893741316530109438876067419826217901657017506157997588944233677467357220316084583383623602865379325184/764562034757392298786420374672266498815021229519853724850874576419885380830752931701831256959159800764672605004880389358601658343203513177084389490286723240185146570925957286083025676875197029662038213216541352875570101363668917766225709569356861275434470568767077844675593176178611021135573625\",\"186545352286463730559933346565311535598243666022232037054735807289501173444103692309735768703898330430135399033529355360391658728987379385732098960609744313878477967971557204207043802935782878745271859468248704012618254203101767841517569443555143252/55399179641621656233589820996143825959365789093262978988289445625153099592463372579496245442338653053662134699646413817866770218574795378644415019944304868289119443774932782235638737888469746745621382139263856603239588594078668393194675445556640625\",\"664884440164786473344854955309049113269357314957985265728106924238588705533437169796551912202931185746193155801905841712503407258166135075966280435780812714252670362202091663287095423712596462690753468682634261029392794173636943978404002804413009590005984736612421172979101972556772005594499779860608/195485517776407145286424460448995460754674039560651791192647586550615878988380153730602665795647187884543361218962125172808792176382956599256188706636727418572541254480798303566840010217729386905041217793614214518363859058348249961790104618910877813067510758225302884815410347238200133693756493703875\",\"2614957283934314904315471338485451166053664494383241929385424599389309215073267052860464009981063483440201193771607520572077231889699858482582363845275452280606276949653970992719332472370351170732899676316967244504534154616036371979031399425846100527685/761493664432749089312665480773496290658029971027686543404885407644062485746072719559288231362060149626237939029641098328278650939665665969011529293869562636656650999759724704272743235210867676873525147820749560155294022488994426729939894753293900972032\",\"124843380518493746761140367283007507854364503961156704095198010255465940085534099747297600085903814014415830785663764373057896014399822131175202342399536439284123918855893825207202244831315575594886675813256448846863723093240955901916229136393454605455444105444987028391748121054399538064686074523506176/36022228212051654395480210378626648518430280334458144892889271272122662467638331091863215146548048144675657239846337165813938424387499358852301016926312083940212100001220180762189978024821166744964908871443681332664798940660421469519997746775275873085770018269706847741064037876137315001228315806659875\",\"827992369063043155578730871896750570951766628472810506926098505028264552046829097082095665194000002802661600196840639204300804225352337632259980703832713031790922485730615305441309917696044954289187837653933158950774246017223571461858939407386087081525130831392/236805932823686534991153393869288530368011574665859226704279685567723830696754821658770176385138917722808377962346690757191122309876922069867472518117628639913077442806147910884267694879089753138429767401700283014143248445966474839193628309668702223994071394625\",\"17347276886878323736540051321582548724378497839789943634071026331001588645519865992773157565595886250230140452154269197770615097377486013097979087647774513500701793885978192218455687078883766086309728287172567466406449372659680040183273634701092561727514713494914793425407149186041796935055187281744386432/4919325621804683623339606849970832094714371903709195539440424738973575902329797546592497378000858196173718145883783709223158260700365224756081275272021856393735663399552166737690038832550853145831185979094979556715294990257315369124065787473707136464772247917156232366320267601622617803514003753662109375\",\"137984231830526866236186357461458917020538108058615632801298091031540729111527734872044790487396302545910108285921421417358113055522725197998483383380192391312304647004240060970929072498293210057120617332323445379424867965764749534125081131327565507524502163460761/38810445792642817561168950890315210470940006613819790543653745327778579787694809782601777514116858514049585074667085399925278459138508514838268321349069481334967221455722811414399738756151414906092225265355449011152267068726417045644222323488445626292574879744000\",\"746567120547823334914136339633766098626636643449144032626270358619125402826113269699709721071135471625588981126637674402048519990010499180844665151971356149292818375448504122545400227696621572263621729512461528550588108384619064912224884465737417596190735966915167530332762203074440688676123756162572829692160/208334337057923929636884170505570363171441147899816815785150954417598643614152856767186132467069365605496210036171429712485182162940460120834349006784956522600679357307849981862006710239311750261522832996877712350330290831638640913932265004107623954913155144975252743257846945609734368518424172846119306643431\",\"64649371728330695076928013661001819989330953381731372450140483779536126948957993261299287753791770622512248630224724990234903928056275080682537641377393210728546364176267034339221558641084730052304770498929958838997239635790469536857863963589118888238069738647239076/17903951498200212327802847425913723358452100686246224008745414214690047078122925247086521362329833307849817944645647750649290248110509395628305970523384831671737569872597295947593410067364379687588919135621621162007748635920864926867870502568935739725312687094047375\",\"2454918942158003099688922026016393688092399295166304634317616773083386087532869193458590448918958337530406410803840837646465522656670050113548208618655070231274778592766244282964463702354872753657766121825196898916725498553882689210280080206627916046484942827487726300822318764058084323314109595329304407466188383616/674880185931325925966586583820010578979699141814417326552629206140252348822939845006845669570885271576698771404162512001549922909048916000017837898649100825976232784446638776021483802989797501705685620612986771521390439936066527738682396560462899753657942715306792783283782238662155922082005591512296007820682995125\",\"74018558041066162916454010680594042518462756234254788158141115244349044958441521749277686851928706433556285971088455226217644009628399441967508838553345152310730562224910795446341601049647392069373970101491741830623078126344928804029524181578945586663110848142571149861/20204153620006780689923328634586091101021423979622170579036140596085566172775051595588438592742563923428900864000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"2127032036758045513335690185608563023954009095206088224487365541995326714285119384743928987635752931664240752323937321097955456543854943206092931247498833001499955456190701695430459583885125382086777607021670447795321669948733328973350279846928613949120929250312666393359442423066212311060931469017737106028339882830848/576612418511902928757340062840968526862381326698309578771238715462180282212422302261044980131594522407066369222998903808960617461164985318633518680304995784614308979881735537678182134128319596636920719106506829571072447362052319438091347699720147003209417806230149598345068078717948025207635448205253184540936478445125\",\"35289653975561083576641954928762116897061274899517309102784750384002335187117263273488751066569234386120759866204372398611196356888479036949053282301027789530999737306501029700128744408015642211359442183943916106790666114870974212159410284751571905275610921784716184508440/9503006066880728386808143045924119024212377150217533250562188228062174064693375135306438120385877320162710918716613546077156389583384656340709638430674364232343609717735574035535102953482366914421205216675248471695111720986346092738728929878538430662191272737183832556131\",\"102633551023964794485575491065909467125458972250222581133681080524371507544152979467328048718122409841060527545925136196267751819689935599599321090571687632103850847605493223603751038996548520557330016046032671961857623066292962260173840972332108111505971231021442896036760967107060309991355545554631003681544611731245475968/27459658121882266328752886605529964804078316737648012166874496015808620265471203512606463219297059547428855195782384236337998738233668399173746663289852416697917397644234441300570212555870401420579737973722145663287124151049692290432756231390864184491891697469874600345958989433125942336757049639797225309327019275689074625\",\"10034393558388390065766795008210457368713365491566387292163814915435906649268119060550511145023450790393353937124495488860451123302412204483570913557762460385297770427946219119911920640306914453207097103853766023934602534502476962159682750262143380527529536498215384467975023/2667919902603322771586358077760621955455470781865624844984169443739075976572061827709528710108877015489050369589117491611045518221354793418884447632063538994046714401229510497599783726376490260140723032102883617341970952663947646017489439179953454964374887388652792446976000\",\"248528145263843375390386172800048509380966183384567983242213959113927668429802237067505890436957693495616107089384741585283620097982859345081736730899912519273262934785992235852866637878831878448348444611412764161078458068549719800733237024285525816723480868704742804077255242682077291713092790250511567621735004237450946304/65676865669148624809340872151906045781446981664561196686217551358486802274698228825404698950974939545099727242259547145392352658637333562345477931951890984276718673618736565926663528625796412420753961231404680876558659735251469326707567479071881966875336951133475135427640218972722939427821842173216282390058040618896484375\",\"7805448718805635696495809414501206964843262114470109146341305656318015059743127114324245035489577134938579856003956861881125856595981500593426840968087618241785931128978516340812066502964561231235073012672356530509663384739132686548934288703179479011016719045530855033205271548/2050525178024039744126592505352202216905491833360272553169520915020715464206141942151086176509423406413311520838568324134077402841030113427309725873344806030836314500267104070131451720947531994814710189000076651895520222646974590481497382830325485174899169093049299764813276375\",\"3355325071293197839434119105039673324264765809771192815982246040415580387729382404624613875653005261578877047405365032178619450963731719777167015959920645055600439987161800547901539269321100559393048973255388860193948274255340335876890491746900991668165565729269698196233805991206691196045182214641935483083662356666996922240/876402579119117579582569839757462461050855174353108858954282915644790659429341853404829661899850841645529640454766173209897510988090318303454542547519850473808789222552969933222203420847859171250332350076509996295844203965564448154484566493395403967626596213792922784509892086361572955175655987334882030766001799867659814117\",\"218871061991045868372866381545267589365410350294028138778572466235486397478028823720846191998825628156716190463263492304639890659254282445466806224943413446008645087186307985343574807361972238230520975439736199291019544576443791916302825193643774360055545186783819367378492631806297/56849560726416896431557940314760680962653658127458002233782028041537121216487790008085876994020812492987733987414743604239935223783349870516284048368761617736127892160849065895223288023531930411718807065209903593668117085505482007061969339237404945180379460053180570404846043136000\",\"5008685108365226931582937964451700746853986170633433728409171904803795018146152804690759530990140552460596075588463394200510044617816085275660078502126507209302951286606953039953843685800941558212440519542602092919776366067720586295390886070120828199562643208637974347390938772070049344991272621102622931576339988103674070876518912/1293888539680354282541277646947380627241979967611883341823378331667976045287311988103163380651334828012840330710760757271860219584371109472132211215957402251594055009937397184768184517621978947384029376766290498101728971145633139541827544539988344772578184316843734267915665730981857376872622787627370859411909330227080697966353375\",\"15388340113525711660227566446101909585796746979396093776960989868457211684028149502578116456785221720682202816140911944661051001675127262774824593420825587319436537346311831003212424497488485098543512314062112948777572038731823948224734505930748371522309451168088057190162878224801232/3954220582960831691377435160890656173654063611768428458807273708040518769541211737927975894584024448193835165167801976423275767590502552964407494549049777006346189436817215329891530811451811864579644894987864267389290848598289794977382504890216219362031324635609053075313568115234375\",\"5099039333987561374222193551155323470675617979816941646196895589439391685938046865391119484510329634015275893520725135141878751153360264368353595348921951280561029028912953500944814771064409611917475818956659775131751121312316084465321917769679881052144364834485866477379437705913911371481828140817759401117780199246301705600020671104/1303503600297679371136943454060319958680553228879031326679449263682048703103464872914972900105569835004878963701599765030590097739639045890060548760692125546754294514068052902543220382104483822438283040090444827980927544440984823535260277595466339403795403200720622852069244768910603820007632395190204569927612348189089161551951106625\",\"4902837141334073026145827027361937996261324349722726869116185158777439337041263482852376194988371853413467559557923410949898048139830183335197992754748294810838187068126867611615800383834975563313220497573778480109264178673389149671194149749735833378557143135481387904961537942569904075/1247045310545991266291285730016853118981099516935251861146038369985109288084420528171217942065832292739130145780833406014673689119563698528225048800794718789218267628507713621235056538202070171596177775095071513194885568843375526804796016261173388452184505503341132236719484809714335744\",\"38114743522716832107917466438257616720476488812538316101658139632867788464381862291240727309611460187159930652186486096300862388591521625093237019662273764387591494074792574929490381910446287947994150655077877204446864004067956087975012773988833339521775463977233068498404144221045837190392670308437391686081418318624745039402145439223552/9647001083383999453668111809775451078976046488746916070976218645431946648087171586252172936600115032316383427265217993193444199863138429602138841976586190525451324093772097241349417938578878934577091671046050326087898259692917931230974174799815198493279413438192301437068820185757869608523761456160341754512329264442115351926967120404125\",\"573695055225225727008803730767518906490704995929177617646275646884555707960986625481944101622708415415988844740028718027554452662358957933526173824325955904005404113684003841990198157072540659184995738719040024647370869010473254071681533880576462368600901824622431045529064651675640055917092/144509482511118816399089096021290587489594541280398871255876563615464628718527634679330291741479135415168539765887291789615790513527330600394937614433502341116068305347468133950204152174094704092402978083370792135432486240914953928188835819767755172666693219213868545854371103120604946200875\",\"23876960329653589647925126180903391687666378233201794403339630995420215267415575142266707357255726330536094448314199602616026935251126469221925945960901748679919435908556550271504767784553484434363646489174587463466333864577705745452492395785557425904735048180164697040313528831173448025400634629163795223739061661461986923675833880378496/5986312408594306954013526197465608559068621248896320652512228238115589875514604632230098997609482248000888567135685167138762172475788060284232459813998201719590208742091697294562538265829954186149162974972471533202880368317237508987477069872431064075005305838801862900501819963793062041081601844759452202282545840716920793056488037109375\",\"58168289917567723171226992383559866214094157894992327555495441698028867727845766488121900626912848698952863438654895252811583144479300382761129433911280049009362667380001406579175563745824368613319103673817094498117944856004415812877213722455299491145649879676787079744410765053845551958756701/14517067289347903655500020160671113450349743650636953726251191692074385521975132268313263723831804150872238173602847065423463131917373356798750100313145228608894881457107689499956903046984443545789053438946050974567665049237414588435796381674590098629779384355275820782532479708807512981504000\",\"728621890568281859295409481422447012528302594365693410763821707074444799793690738137592101239862736313347273167450056625929591960610208335290882047413011571781161008296084630072829079783328937418641417642857196346026366370059522990813537731394823630207433267854616768658990289454635793326766697884798538576055949457122067828153655416688640/181030730759516991863708593747964787874073354051675597050399087612142539517308720603687322924426591889179726492403913356461908748733972707460063017057809060190437917851790767968877215795679844983288935075688219234885360839984681619084834228226744165610073685719017596630302462070188937998558312507638434329299017584329479516410907786681093\",\"86855946923438322218622470067224691860808273886184997065663554841573982963995340977083049132518812923329423480393306918856650577072525633920456721265953575424233701929892019410099166322511413146891121248381648145391642571638857576890568882512129960291171866772665863159474602604647289052079991768/21485753507365901947528588896402264670781310878547726104482740647554738151100954835784115119035980523529677083504495839730499664052882400915208251594384038810917282207449860876251558307288700200910747338758723324686939379138206117634546981163355060740270734146780942696291669461182599512320099625\",\"2158989152301022938148680102142188531448821359505188055264665167313418619665693092337665573150374231484840948447637297247277576415460889296724813940128955070240137590073233263168835678714131062764247434144994737610229909964847568491446606012581370840699582055341626266533733744293929658949697805855362114229666626620766245630122333733703618176/531794915405164005613733454597931482878479882704956110685223892325074211694837836221759995948610212818642789132749082430059593652854659130217225506942675608692701447738732031302987802196501895840510235161825501235133794449421919927396142470196961877376701957829921152848178076410141813926924749057304222282687697297216661687583257901415465125\",\"139432548574396829074586704387656697097760057897628994548358619815052936481650396157428747411173567801047221928593253479330480454469358220685854351236980383914223693722868233819483137401339800304943891968050399345430243790898955416907228948287367356990263740207046902209563417267686591994743547621/34201151688775214071963206765436083445901621442002061707492082843232231754829227303539041286301398668437202547003300396162741375435703188500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"11008517174872833286150985180322584448162884832099344969609291070844193524816852920942383850580217443209402836100467940651581092350600329145627967515818684442171571156446321228596914355704205623857871497315955269266498229823278800717909321269179839084452384509142712677235552103459737790674103994445173074670347080506698168482564009465276165824768/2689223396936080856855299215659204161946704205931885125148201643087176556822542895325191478283706585400237901215485150928036895428721912118467760766508162631903585126377676412573187912443878232521444786090510891599171741773242011017926658231638022943018461086517502584854390836347781674626615709751386455292026775663545470794167629144456268750125\",\"16108638074211260588800537540680707641986073914251424878121255234668558067988171568946079848860335948991834525552515669040163026131919804987340113244760738846884911038097907756220945883750502673899084880578229601870882631165510396775126850307838505063922101682333806284668762825609556049426829531780/3919363961344261777100658318137884299575193089462944554282218278496298610828757650104922583359642384253066896538203596057302203635134833545580869871333892935330950583664400555463557735723364497947986885146043017010159347046389604172186788902608216894094289769850517098027486468084407618748895626853\",\"34420755849180279597302103726180110022640946692592540634353734157479505420320000324260530767186132260970572450489530034440214259559325114511265075416512316229177952140217732655405289808326341696986755141965043719344169685611217958619102774617224847284122901023774956887687026904767714958090256282893003000752947427857703259704682455375442735857024/8342030311716679826889917494957593165464748884572298173556257652389845294530325764837124998293398445804458613956489096007564811101361266196542129764287084823604897187311540561857741285793447174119667215803837719660675298308873496219385226998078648428368061868944322478384684509466965129972030932418920415308276430355882329457342937549162000252625\",\"345888075261020004071220843714060353763382280664960929903544964118831237876694384053904571498830068831026644303797377762345709976595360421502594656308937649239978525713471393570536680412814805076323426256584504251728507416368609420882442293831684681071553766603478479006495757222912500012444787804577811/83505703731469734628961395063481893801938371516752417759131774530720075262459158384433785006689548434701904106312038822969658455364219435022841597243178757423598248565463985786213156556523685666430799283870548238467817226915680747412191245046634279766450629886904716776719219698922088211154187845632000\",\"1061717830619177527082296723099890392273896386613997004874669053445943252046748251883532634529759169500795452576392700472771365240996842610207274128102329096619028487369622001737128463631016494371635687841733644339636164570819431573829173533941056258744442930643735587780907310433371453992062647737259587563398111688659657406089003293576961475848704/255359631537215747979895955806995352799574790340218399351168178555478073997876110889483456972687438702262017800167048243754141722496276537685853311434069991222324039005160057724073156957530106623908696241268268096879569794431919729620178375212905203484165745866913773304319069321426245521467122472046370356725530914587807274074293673038482666015625\",\"274122944106300296738399632684955400761495830361663966466225652918683099779465438024846903286816813856490888796372134557295699980528187779624865098445756013563535339056233912394908544185885547842235097677765325396255649207317018754967666450708249125316192200151505568416495274671679500594656671785202496/65687592621976546250581560102201535533608158256953087745856906437400149205693427285162333502528793675585022025602144243543064185647792948495372442630333800126269123531636800213405254045262127593759539706750242430153456891792533267948231185296091297979933562727112487057234422009426868531651634706262125\",\"7842680480716516803148821198697967237136721860017131244266974996267074742248599085253569637183007740566941125452215834642683053334607896723447140851344501084122965014242091312411884985569341166545074688756440728922408743841592658677792796881188604773469108807869960161395759837407978596679911066586626885830991556090978327508459276025943279064965688960/1872528612245648675720382138045071131304652050696842872529163720558126655075937845539792108048310219395746259570506175902206215101518698490144716531697689534559827422735649881381597761684154409796315455445459537515308174919488497154409643876490472215352056502193150125644288086294418253309947229151074464928874881827227706992859640236086417889990541889\",\"5300824422251242070074569186825929119848111723012841627275830216301188228660779008353049603527567784119877706984722171178137272986345560485784907345500893648715341273841147320288851034078863843374665850852481747000237834238703248634174397792745914847774297223176674917912406659831206869442510948965571661/1261140476013707338477604677428573831791396352814802149994640617701773078174882455512668089072441176857892331468691160991310474734143842336092636848492066592397892638052212250229129355009939118431643425836944282456647571558383755315238500832868535816144280088644939696339160092963629012001958205063168000\",\"2220223718762215584659309059880106334425515875615107369399767892051551634000614327272260081056973863669004224981561870246078120862256383581012183852291444462730018546753183156982897386563561418424093883164027305254176874653780425452987066512563140531367766900610414277825262239199580925879453806414860409441845631158680721091621460775043562065815179617536/526383206607841251253861841374779803798480623722760367843070466043030228662340154304405180907941079883976168609082254331465595267209149963786388600028701073430773581228212441424400748220833542964971495005714483235359479470452593264280645360131482713147116366500300066771223383007216182988263355451923333319170174755334598973202740108032097242475554128875\",\"521891797109626296684891455959263713257353500867652268541535940159815152120871142196535233326890353914761242025931373491906127275561002910157909306979093246574207104081108188995072105948138299097848175016082947174156278439986705241571619793059501724269644447572323501261424770743329858038040685313621446524/123310256826873923765604825413207481739886340225713108649758575106598510022338480189649787216845041382860899099250547657534972156328080736149239332330143771138115695598493059325064119176038137294863053148618656356436332991079150723235214278848602671333076219529535123842212129829931654967367649078369140625\",\"66086044538329677372986118727999622900471937619891337714357792768200341519193500393739322894033303245376225584865369486696276607060432449792893028061817203932068085863800494054274423512956136695211796751845295921015953538329385253280866669403169919614982155350899648626481405781514434761541281229159396787287553493046927448595964103589100429722948913403008/15562137339474350565671240515273666798063901504051979980452491653975250630723677279081058884163396938548780856293034775459223871281049026140999055923743471466471830572672766633086347312178711643724485955576579988182546105048041649947277672869613992334541438784737993706482731696809943027528882927942967419447250586964258807454003775693567366165507144866375\",\"335377615394100148751647837967017467711612297170079949298328061159559939969228226474615711044891085626519877634842694983669611974807129333052471799687426665556738316626171408219730853872410792831871526174987402129691897433888027072807302411474690613948951673562473758814664346259109886876538510453475290967835/78715592752271462306588358880337347638000605031000575876214116610339827495261512281635361568951675037834544811575026718101166562072917855004822606752296233435017284127594847656529606648345533195437635894948829857913798336356647286032372695130461573940500785137424365840081503133157308796505622439791698116608\",\"20090879701618729602554170716780970848925039917987945471322994867171660307998603515745066411687983450400412739285577269751603921163835619296822801840348319742203974023505186187060251544248644338412667631232247108675504629538319425769464277309915502144443973397371136256151336255138506001292355330875114245901820438821732843540725116728866301271466614762497024/4700223519410528857298732096729483544820841497820611795617923063440946097326817340637303431283005509904481323205480729806879570430868897342398783028649633951362398196137429076844504529051072393709154483678349272930361110568616112723747726853614661953537957117231900032044221535502745676310313569997665352252492568100075191900969170979460298189170486601502625\",\"2904778979985524171206573028445379872240558084236464200857594814631031581387804621371822074061289363372523364167184697785570324832815972970658633551879143187709707164796663015180877412717910872234647704536817108676736661804878068078543241390828229923424191204586313620612539678930999769543756218765870513049986792/677408099044823641581658869221044375312077929976719183424865834811543737800956896926637625166844372424044003929341361734886232742770909683021563822987505236295727478159938135467975522336774471915167606673489722102077041330652185811196423400701795791669780695158730756241178262962515917389382302757366325768069625\",\"31270155809329751863885224732454397292230969002004953832354065319735530624996254695453061851449600345977646455072512400760539747054003851289540339425848681804190284451253462663731135337775088379954403740058084949675460445909826322297817535400604180338201322667139062500269285493417563095365899631360901732684124930296643108551710704785906431324876072470231424/7269578038000504017073007978844992319987411732848567116655821196644382777088703228960020894756722675887473977480537577509061256138261063926845643360849217556370868752909531088361229374467207196928745673402380473721018157327193509586295879051411183657185176812738231456253321187419224704301236205478184115996135940848503487199394612616742961108684539794921875\",\"432538822079707760382094121020421735679118830363764570640789368235407853152380328891350816400541189148550353337874309885334920995713154225799660601389784410911658967499100610376065640785585342035058364676314084595283850213942576431310823836792440218271879354669291052589804956435743500204185107215929849054782893113/100246574739326291035824954677502591279343311051719151327066341370995390423713403739043396503785261917771859220535505691760472395306543276314938287868734009582906895763073519374099272340577921671298878837400921045252035507925021904954445172372479744465666760762909731237634082051855588025732494461939980856983552000\",\"1914333673689206389116942789116917579088664511118582610293383428712902211612554212779880638065888518488492298586641997844141510832940409501694726851666478650414191249534733087933879981733561565249818572204932715347752949087800778646065986244657260832234479202201129845117955957242616947361016603702640821256099895469088229339240402478576285854783063612307200/442333801076281757298117784528962837115323835962460661601905131618341609371649347131724700192551574625400701487125984359494804828935577124602622582550626336986871791407398609915208114339012374456785705161994343348351473385887949809051796407340988735853810174589261300681030826392672282630613354461927208579993042968520650313621522933214063366558703422757071\",\"5704691626402072213006354545292364761246893919997531024861408248746241619817955824682639582830486790618668221530365426203424888737658778881721063941495350237419723855000515747725926735319471480027293210991869255971365522170749568996651406002311020883635577590045650037569906001924971041810547543163363976464780729932/1314240362076792592671773873754757443276256223533339004339330559325754574023619698171225777585408160438834449576526997055649849875516310105297894855264038450585295422343454458568152668980131977005808840141079502436391909349182185596381509091427752151860204235071122788499996991078935216686010888734471173124487937875\",\"451219364084386208718456142329444023337343409261545444643031014769484085278440612677813682892926852469540118625738238137458321112005189595703619178533263706811689687213128887082197330137502064260105387500552856851972124172206996205919556553246133218441769325133725631665593372188755090094541462474970525820334385058333756591222492801647110594428922046641945259392/103648250172203340865458115839764297558925693061798169434516001775068769911768281084188883278842546791612199025413573394167639925287068809631958006622842716869211374513136766899877504136929177267362862319748507372147243911522667591375015611312165464514308451222180272935398828092646393830572838772085366567154646425598388620105539619174837489536378605144891769625\",\"1591076564577634575701791393842535460875733974464805197283632670013516183281542903377750304419996681222758401497321278555686661981435637461350320471258386388843198706277657208526372100698700615835733712519332548607115875288787602084336341594576426630670911478276101702119972195558314357975365863803265163991961173/364433108410193393847203348728981296285742202617988970384277162225847256295865554341611171460436362780497179090329831885853324392923449579538286804729856000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"5307507148709435807261229345132535134848030343901300324623409721698217134932866488937772986386501538026693956121121771089740095760486362654754229904633476234090792827930433598453200536551779789049352131005222659995845427680686677324963223653949277037520711609343166926627713758990384011274777087968799793410506391884872456420041494598273703914689586637995139580794368/1212244290381524115082005575105703496583315188540177702780216570265159923654197746388568151706509243638302707511238539845531608313334248788980188054651601536067740709977678222790481348003085034888244447626347312094586389347535167903408519024105748523384932942441843118813819781347089702286481924493361058339731949844620763272778960860509570622673048786968660129650125\",\"3046577098843580578619955603029073328361298436129791931304665777036152915858575282362742008136721284817899542475666054101957899858138590963789072530710775790433466847100422875906866496318804986202089528198912098377828580031852152997907433335176267300286466072997014023120087988748396598176622765923059385876855303940720/693911859077752895978833241338902695755528613729508555938416419864772385336777924892434701804078893822446727762077537955240605927550548046309823051841326355655848406646248595628715185413852040295631448250459076043816328082561248420925930431777502622148019371383254316636979070731427737764160145097293260938978413488819\",\"155310926743873343426312607182060072939030765297630534544899230213054714482456829198485999782086944271490229412707980997432528653509945301574794242118433868747172279224118534460563400440670015323324602117517342201640016853927923976796453577048995243600967202462466681112804476672348206491490513419336308575442086511015101999847896197546900512764233674747415844045184/35278162986589659300679088538176070649273991865663041616088851923111175518405117391134863644540911005782372831496121355954470744169969774540892096320978686548284501139861783292226140413769665461494668479430833892857992401391262903582109993838728281915806394747833588629467613308837196269424421131934859079260185052081536487462257809987002198437182539441349474426375\",\"46729591025621874782758519074451728476386657576036360734358719976400940301493939192083339293779149127132651616972817165172116269307276487158069293114860391502484125554406945249728802484128756924044633825692779783425628292959170597009935305429239702926898931975023598456207165067568919757902764815108751735753431153581849/10585868084079030838651390738371141142245086465033459640458366146849314274285871375459898014414833295804139979016362796357043372316321872357817727821559232353993714062535883074661734509440994664726425399880995133711038483607773782532430879196405793694658185175583691180757783597895616920432527125993118171361116684288000\",\"3736372348124144720852190769710129461145889011598636925228657393934132828633132357232883470466940330848177425542748100211498184494252714616379450272611850068867816250209867530921278645286769418080018709947826876461419654782341309127709703626401211996255743831998918894661053669189312375159058718767082163156988766821194002596331826150321864927832618126580509732359424/844176851007504003627016945212023239308348428094023437269532743221937069345682900884618378849283002998220513307273333096775669556093005637615012750733216460458689282791632437851364674879152695438589692227159038555722539345972833161146108367329370564838671791241431125003401861887477969954740544092178721327724620450947646209914621007186497081420384347438812255859375\",\"1258774755828991281578968023382624723772927642002016270484090409043454336040857926581316994594109169123354553321469500848146015719851609220423736153365139804086413284787598253618361769125996755159571523632747129480387254164008968993734442164892486441152227433281625391753702577143985047832519062595123255569172968685060844/283659859661671181526547833415653453506477950678651675193210969173130116121017723360258249430884213011988678011357458727603413521688184521573094783291496368005697481333739504490647194454695504722542014845706216224432373442438242355188461951883454664693262684873988061018976711201351382163527093784753398257094429403691625\",\"84932063355292829988908961192574710493098897148701473172754949846455626381329456661808566365329266898990829247446356970454502007127269708487563279536825277374133681167235811080298134899629580318813382668399644553111080625918213250223197440426147821225593304993621451053135332451997633132772608233430131400186571793929377129211228689703376067763625568623535588709576320/19089978133324852910950469658566458037096027722326716800113107848115231563787455584278193954518442601810776347091253561956877155673550458955562102935555510392954425196165785410319126098393353878286400877305164869548380670204577544630353859009177051698096136470072137579698473017257397949994722015089768745013713383769765609613514021200888647472804720456494757423299627\",\"802638881530832431828249604040579750916118423833791608589560402449036920165704012070349537114920882938466635598602387718300074733476150548724726460209016834416094317724261857969955414000155807312852092720310159572547644569797512233899495300028159721348599816083166712365215075728968005941610056018023633235372936903015771583/179951197386119079732438617407921535065140503043429174394605652913879982486051627760652197484142547447000508189455126493868229565647284332735552462525598465192073558793335913005459266977086104359621022691931002488052727597513413492393525660272900161375677499228252863529934576881596384036401784035248649026076581302370304000\",\"25208742399375362881099811032135575360109715964024747212026245529087599633280142314962581193303683759605084995818253124445773115574470717199218828756449187055537877478033129862600982068782249943150019637186466260707552416433010545437321814115233841687700051830170191107127799355485920046505591193770164750886037885397478191534797655616745528343172318318678405576430544896/5637713398995569614196397857525646325234056219513202928587580534159596897880731043336790273040813044077153051260989730372846713618900145444802234629922717464041261370803598799826604841654608724727320798324006129524610666235998113655193642594744544226880944882342204407750193512869672849910003246504052298022468012594459974209940607450480609190841893267203392880360823875\",\"732332637178584560220688900268566130246820235956768724845747830959547501950765063982943061181526237061809052444110437930100210105274824607344902764184151030827266142225894655531497849161692760385938786736436977268616029862577293984376170905024712952813234949508186306774257035535805330366742322777611063402455261391021097128/163377988152179636922409938163005948596822656868040662831003991395905185823836089887990201522673196719628247106777881741843786365701135555917263285268753605514812568258179391272113405920369587922702002732667842511108732068683407168090725712401954314293193572654347237716691784386690948494003094992876867763698101043701171875\",\"22391374854299462107923583267570593886002658786775211597896252879708753450794332301142909715845151746786016535157797023153041007263258732991465037648536702217273897876864351559736449481285518249846264600935543582562018874574655740660800634883403597181876364712521253650744197321080655028374602772696770227741610874399454362583980465225235674816785988164157351243193265401728/4983275997188967758382167867656806681565521964135131710678447245984239733544941881418957694612909599261843693554043504855207170782744518943778096768859337980470219783210191765678908537645270392500777411134164918803949155037581108678968701961544979451081836872425574123683574475790997414488641534074873248802450108535183413970057319247033379016606809226547805269752123746375\",\"21252344995592269775107236774689012760750850598567799560343535731251766780016530978663079386453430272698006977668063208502408607227544322945446079708000304179073184745623740466334127867464883762843346619853325415963062181018736410570113171387891518398846617197097407612852037905687899800932343156979591740310928257766081697645/4718515378484509142377558412184183991357747235892194234377932213613746008373918923611236346330189287336493794499188640380975364991548794341177060325509698404571318037298112293926833877103554546466055612498927474225619680186119313129604319096374924037870803554153458104225741255753314955115645304948564151765516183663634546688\",\"76703085666560609319365659209445044957052359500745196718269665234646121134787807938680787341023203786904308047981099228357850016602203539979246579454229078497537148799349353250167621935384193502383187510928609818011142642954550330069991570983902841318203794113898871515702445720207144863877026526025447819537396146822201819435536435835285098485990260677737192230985069824/16989892821104122916312992616665764943723222199277412857053896319814438961475117951904867066845412639236790762432996309717924037467863024360211163971190006272168845197000304328480920483651558672879967350982199768255256753110375467976246339260326422891913564151453729285191351273342206198366624882195135056176502724912849575385576554208844814085228696838834665339811027625\",\"40153831166521391225489894857551838468150576827129133168972859441122728710165233865309084872159583787083130713473702296122465319276461991457173085312407612757280915853584698420083436946976844240063731333638150599017886937783470942007376523947840104246927580254612991191040951001539641947153847776050138532219595746056076776809812/8873576113581065493273519627544307418139908640325227196912114520903505426722086265723900326735989771660987609604507503750212298754414472822477243293638486047313990878348820573874809636084574108909615044524663712495422565151340037564156235745628465172219286664653343193162657374410926171153516871765680561505768223660055617934625\",\"200736374277835272485186523480177159453030082779872429648449412313247640312479214261681899286513818912991945046297334418102711629933437654377760028476767482162031641781499114859553677502002901248124750539270235098492377826240319766677856465093871367817683734079621359186477306173620331748496369122143019303740252461824523590096923561928354020960176605008889579578495073283712/44259440065125442964014453739391594153290923937737136823355312892557975399035370631521014554980129291582486968083228888083079118116286312583989433037097397252506140224404130371160608365777625538148303917306340620019882928744151294738308047800711028158277500317134537540772759486365658024194428796846364486187105343266398338060080611643110071184992193593643605709075927734375\",\"488459049325494693259159444507437983381645757291858092983371672334043029615965882574409808932509285079401239403272414271652617474184321852388397021836909585659327974611273820676128650810907598106588433939541654215766888212287311943387232664417347883717203611092450971786083806323404432266197250919880225892099146722474124874256523/107455855466267410923480140898552598306699341366032095904938430084768624148829473848763761936703072253841751966906142283640379336131083461646777390874405323298406517250231389493084918065243079819898691146841695350589992171102939046740169198394671965069747042621265775948217054519855346617967866614303497258042439052681849864192000\",\"8430374068596413768975326329313648683222744787097373111477788794692418932056901235174019333392845529821722488982447683794746518712070635063397464904489452840169472596494433874412726723065560358405027764015273789053064830528919091414531400589850704395887250756457780868677553068164933299802944396576360356896758745030955907258232257358056931680617626606715393885378887657377280/1850480358582748412767893656294669486390769246349349706200869446679212812264400876685764762211659843658541567071977813110496329850010288179702589501255367345935389050373021591572539260951149696801665953123597521983257852207280970577287472932167362521740230973547070264273850381896786822127290397075758780174083415923482640313277341120938690594859118603017930500014640169211239\",\"58273615882491925540881784328370957720539797010816130007322211512070634295154626813477498607761260613353633996451797686143131893884559909668805628269959901044961666535533876340116728982072626875010391195372759135469446048394835148654407846242721443845351855234347422256700864370273092971804207514736924787577569355949601385705517152/12763172138328432984573837529764902730448666594097466544652830703737195804747682450548488162227364538052585484418491914323658215406327363805353540266048943197822838925184942600367647278764952826664684839953902567694832690683467635727409976388280092262839126779730168889686628630302519063225007497707028600865624133968363921915016625\",\"2685278694947152969468407055109959900160804835228466214479525891103128459065131221736713585038130737099067040196326815283171857977706979990467444622550497565521863441617001097354649972660183038850033950647594754644997436624623325003537308428828750008305464174443210079059253920383411910911594636045517662796811001285984447671371943267419151220518726940455756833040934506414133888/586864816044968996825907488721678304211296267371936463272955488077666796280028127333229453342355554450708284934221461946991556216095213627059047984199091625921432110913096253352065238765240063555347292393427726758010888546427415276046238297382474708612526770055488323003698641493939145624184943388159614111350839555141202024991876221874110644879676602924730506882384603409121625\",\"27700345710264347957758638741952394530538598225904772664391173119594616680996031886665218221392453628824570256438960349220263575741495285780845399187013582169907518462437966962923592601721119258663490655013419675469864809004562272799012227293974254329929404036071055528766397079743200179924243479370594973626764330855493789112414191/6040997839051213541001279276287478343874107660287651711609067205111574718442229224212245187655300348484144001298428958025052162253854676210451657425437588244676589965820312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"80160269787574270953020489212619791839643207793889009503234879683494928396231769167082355143564723274576166638869430572977442020236299319718643894871736539109822173538266278165276591962215927816541165548699380129014840956895931285215480350321259054359835472320394089646764361802445068798451796525897304221529850133401768027469126408090577121172238802281079916258951770135485696/17444957084936455555074876721808241311651668802091828589911310253709517226715880722948267977560381436307152342821304525073651379763144281678911047276389231713860392794975453518107055568765009486973017341479560154792340888780337029481646046233967923289468141293699236815196553819373828280398488966665994092877680860643266914861837639322607761804740256920429518434353839878280875\",\"2352816897072623416220002134476921108405735955266703519252095150412419264317091785317803024028565851487861978477208755211589867803009700996828082850796103789009194767813611798769297617674631277847910238088040257037678126316866517601388289837575778165301828137259948173292658462765645645868094197736382683775415645307647043205988394700/510973411316690313485681833991645423802776865720580280058344111363363091616558230182669376841383375321912553771027107891991318313938505988903735114191313214327683449514676737796942389784957658395806951715454372568523597420866050825822028817422805046287798054682484158011143949412956697442991898914560191411624040490122951328364833797\",\"6403295584873165688372907494046202150046769667837790834896334486679541887567517050446119511695248926941383207478170182650927368177009669717288184903306689332746127845953193587519575304974203099873732502605739219028995266139383163062837007982999189114810534856227848568800302527760100163350814120545587074865568436789021082619398126713943637898657861949091545516403987546145915409024/1387794272010111535893205703999712437783041553900341112488641528986385462810448493444968969845352401058333929711237978223214186693177251566069419805757440174840170213159651962686467523533938145629444468366235554597245713128812532716616087753947246800626006504878203666972651384731498770435755225220796872155249202960801768048854869001310722927230237083418017482134588865244642658875\",\"82993247683514419570466529457059660634483860665557779709153549045427987672829778520201315148149878525274005978368939092115193636113741972236218502664881450367443614971109677363668874484696543982239492409231870942414193419634675024621942196087473557914167832058111113476295926250739099284241826553737074679953551191767148712684157318697/17950946423927357725787689855263532224005643859095168852729513034456208872420513601894508438640531171097082516559962755244698695622824386001219435651555513795509616906355363573638916895074349491513539093024980575852693293474288638209680085037286354050958859425647536735341886663074581909148323105020337857959651624760873736590065664000\",\"584891611376763781852144397260140844977346305541197362434227194779766612939978629636198589818106137319267243431810481928639442343946346034433828599323416877248326356345631611148749005937144684862502198147087702668524450709118588741606955966569427636630159793409544653944608958808602551061186799401212712216156799273254257486955348236914237644151956226336750212957092204830385441792/126256710861549838395499078249922986417488985866522660521294610280820007499099176190820291214370699289977888813109514854178180265382471972583921477022411657285850911270389720508719377071949050253246021921916685716353393018411683757067093259101151481189635423399611625009617884983318141463140199839724797412514785751549277231259345923662499623640886881048572831787168979644775390625\",\"4743054867460856425399742072925732465660626340183690464743217147109403130730445842673866624947360862438925194786600531200056131309608642363389833474026007798643235346104937733349791667694862514383520689594596660275306247615314272223660862212527346572811422915223417783887717426641317921972456913534338708745549252254865615725859881457906376/1021840037832289788284691535543138164288462770384961802287250236519983887262771944174557087207566030730743075334169628971336358708580124427857321953981475719503574867471090607795242192417162791762511940848493176847925838738242153177311649130718886794249673254183907621449520415060660496225939963471753122766421338241291756892571824984344625\",\"3784664074155769467702999785016514468281913375341134899878893061325465790589101335015569840325786070795267055386681356241209412947116340524588831510768864231937929260236754881829005065056310226407358204278658699999612596866156294195316867934035877283950841910726224355461522065773816109849107487214275801829843762482082803559183694631856772777313673086715631547326400170962722842240/813783281473223559981291694175087508812520505931454895884442580280342455516154674683217348039336712901850738745276445107477919518905155156380620466135946654952837573797479076027688866326359448543065305071605591497778941561986579230698384305536224430794233462949056326864499827444363206162251104552740175503996670997705423888382328014210171324376593090187604268086334796245552762333\",\"1946671258536842642381655747294621776070051525209940130115769153666368932042152311477746728678182920842238801763565726086459485050237860693394471644023999467670017470376746609892484192072297938254898880354014176373253875722410186683852253828299669530022166361304397631667133689128358365296701757782382475692465977794960109690362462330857/417774039698408581013003883929127512062321623871486379101498968145670269174833505080260389860863417408848209525427705249526516766731427603641806256289098209429110794311660844125377702016056984573671024035213045475132134896835814746425864304907974005950155657789157496389234919107772201305672421982198984613601511388413381215220924416000\",\"328578487723377153600821813410631465225159589727320893988991729306688663770697528156625398176929288628930496338036815910669579019719633124832162035588583242320537435554101841406566009219059042888412893352417446437227440076869427577701706713564212185163005644118869496869980925214424591264870388237079776503547314587137721633918824664946974571838634860386893404364499977966899068777016064/70382695927096628347637455030970644630942872888311870124896575877585692281624151103204551947776906510366521972834357031777287506848887607457751667816514216907338309372900327919413372044625602555866294337672022362865161523684052940126509854895320132828009551012639156341878073682501185688461720664801829933689280752623773789373199210473995823367199793407048741191786377993390965297664875\",\"2617201476921368517857942326432090876874414269689140439151907982631768946799200744678055980827789859579196832718849393046147656447672531861353456343821196812881882023188898815179947651274131166835133965629115749368441605680383605331300030886676081418867305170012032824011912531673468215561506423833911621270680104083533917562622600478548/559567121085534865189976875600841717161617153776904752351231210970240323460800785728739412474960421770806162360125774000625035522428160837855944215417821324758873127567654244465281354654299068546570789547691342609793050301258532586131013585959164719533123826201937801986942606844854123769532447570107525081084531848318874835968017578125\",\"636225736038986537559880265988431731529837451289737542395494683393492040808565905376235074534207026537145408562785279823547657299565440309510931336394031904920056464959974743525662459433889398003683078967642651812081450227654478095420306880762753401111260630654049389197602389949892636943971690212484981672010398108426002137114819838399222096538921225458913266993881960732663394566024064/135776510176793971074115131648637508758953050390591773574951317807919051619690313331192027871176160424663811116849856489187562728496099757910540362703888937768555824513740118941387831822900198029266206334350448626733139136083404404120210893986654422850183837974770675600952078956326317698998103770833069712616832650406225828969036781514645731022616236082175582937900731419575337473384125\",\"266695771933124633677367149389643417608461366874310588884377151539325854547826373711099517873721616543570605935954334944030816383858485296542260152894035979141266909050267414072982042090341712035518685997484257326212454742816979806460287972757626105526907510197321350895873473656215941034605746494172316089636216915825022339855304925515685/56811706665210352283362623728191218698295056176625217939528332247537278605113496147630185544004654583441448319260578659922931798845493756189402805173037491645434052737405379674607517658118427614090338938517963215812444779184193933749520313676564187507594274551791388039139409235056119788261689087831209441779870873305232021728002651979776\",\"3511806683161697708497547617957719390189982761002154386881580160856792742952365159764830433511949678304281539875366378131195670004345568047690216126001067194904446295336734931691743477531830892015690816210752795806120303198745685394015161323982229908105397857791180342330098240702332072396030780386362735967021055250450666535422528637737695053315137238368787607412459874094164027214953984/746741569878639983491390741637813989978804202898438708743258000150996080386381281307609038830698579358879333079215327202911977568726258527646560497079622703052765164031089590965199628534477381843079892123440214378949632707668935001371616475282883095939750704292616758568964786737752325652839226013335092148777788733453702438432279149298482004122593243860829060557386699231448957232420125\",\"499543951252504651717279461487337168721376180441322735807713499521878076780205427598086756686061009718016175215146305489885835839673419698751530207404115002383180054704927695269921072232395828258826213554806570423602966743337801741633869267620843626804016742412046844770601322513184123515405692795346790813502805238635003099976693786012816/106032986203682550514602969462803214831559442358811656484036951559991322084935692953211120289352600484987931812632505499612220494311324679562152078883141464406938524087376964935494245010636163705698220308243980789514815579319533341929989455211613890905485981353837321342730307819060825125980500975023479813757024395422041501208805339176375\",\"8540849722242122835873311629952985285477986765819584558233324868363310302206006773828897816547299245727087876984857726652932481899766510637403577175623031467933486823994040576431755172220921921877192006685053572215922347418846423419683723609799729359551828522978186208983138345476801247634773975311405913274552616037005854836040162212761099347518242200807692224460514057530656658616850816/1809694575992816440924165741094996511361288430727981159314194000585536832192004274726651828760263522962868944612215633976203596150606503849595633388319338251977160257979846235995654357082321611719654136058257458753105122024859078420173515189641515736029725847315662215778251370398007468665986604529263071981040014321717598469319370651877296085250322599247141397427185438573360443115234375\",\"51377057693118720457387330519321684810411289582445982078756989158447711080414032055843805733348558621949380554029375294451303430269197115810494758213980833379214402452992657502777067850631862453239349835215260705131864911194740832694498014048717871429797341104227759557199716944554347879767916801106279081864127192611546757627038037780244683/10867246748205139797826516105458406878398263495890048637741584969144406206902037615496936724683237700974333817527350121106320991054058406504571347680049945745432432384570515723033245430148177097144850158758462968940525568041926860856763884474605057056550146491001458649244094211354153171337463406192651150028767064600270112838159624568832000\",\"2517199821548153657910904242290029026229621935918771922146425373057248090467388430999870036608278542449661971830076845113363443421757278612394167195431759807908413353743377586893872930828548256216510734912027450642648789925142482023713336937258932978503310551945630359646777080073329099268529064437120002567758664419443374110941824106727218341795100740316967386497091058915066147604481280/531524260324016969370728057738851340792702640911631807178654723224511108065633433027773388768889035083734041289308124943130099580765995149865288328550751289346866467755881013217287175392101334538392596956248952430438673292186779006015549928829953979591250274457658042926539541422697852390294886719770034058916886894408015624288115732154492554105512936468520265305162358665491880968652687\",\"937159485027553069020805864547349554547661693803137696125140510201297417077233061462068930061915381468160677500445535971818609631674361074587732183297775728389124966713749450996643183965795829780345678634356741756033039293590264355732129789110416943789326482663579413229893878422643110852069225671783017610387570935863228248464396615988222968188/197552642195166614912991396771845374656891854357948006221100585931656016640982345159207601253599235265353060942313995345483862152489766993442419668492877390774016299878943454249209917002169480134131612530977452579520564400124908392339263545911443803619972765231094502745980083350567509014991735227390978850048088378721210219321877150756855372125\",\"5119346675109082499980756672052066247676641510661024682574296075659671743397880591881419516307292610449161239233139088348510165442597278965718490070997173182184417648987611422446347235659085092530927312760229499083348217392125906851921500360553758600756698605047197529446594606336369425040236883171542367713951500007600355406492128741649090501989105696576697387613035366083536629358444229248/1077349190930018641197987339365056771667455373500846354778079878558146320193384166982231171317419356136237346389570422332278447217033773023556383420372685049620361481309067017697564760747047839930422553324681218253359586320952896352245366885171583221864112040038531116947187482413031483309534553461613717398523132176948321964066833901215878133594739833910960843185464241840039390204295097875\",\"58469980853327028628854378052548435225264353747414624620847476036979290604604988637469977624105451959796142112200285366199247075503424204044884512269071061176877225315884188402954249683107639777479663275428465242905314418930053869461904934138752031124685541853599407727446896558064252696813370692668496452783003306386669962110734257851955001481/12284458784412533668960387046583440199646081362484321078872891438551639470826582933879934711861551014258493898870867541349962531447724393381011633785884743889445407749238183080941846528000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"632694338036291086868292541736272151517212971647680989553388199374739841494700315711180961760384484042159533979873604395621016272772109619401112452105475906812313548587880899058905419220497456502543971131226430775692744506047039958551641270070996110661036371362526401525207493270590999387476275629412687473362310414634469788979236895300129227082421021999210841384596617452097273320509348159488/132710874087075221626157136110978536488168313127228703025408943153782802265472978945703742152954881438058373686972477195846162708986982742647038014147903817539418442869011995988024638278746664230046452545499722614320284478925059527086663455478374200352375121910000967044366831275681254530914306064535110528723482282501358749001657608122307686482720926189537227492041135055090784059994118192625\",\"2022422468242151190347511883185841333968390991430363660248687284021524206079162212007263606819387821055183192871951076644707111802972354128011904720586729919826758651167984507804867954970064938022106484656560866447290934136610214175516487579122328055482392137619829739560923807880779865442016530712986750711199998190148885726144596663143651240/423528009127070458603837580844559347493775236970253513203186912091140251858605354218715508091394564000304400858761758838182654201653901408046974668599216804223721114331085507752600832390227068985693006017591304916519540245902645712532993889000048992026931475754508248265356181099817467608863068068953756055334213584649136541490530849577363647\",\"150542201776735231618709653388506394887777837646651406023174643241783006776019388336318216053045300417086929061565868663031237502137150880313922488106751241006715449458736723129545400133450376339156062387859536289694727635468338235084533552501618659272047966040838509286942825414463511175531001410923014751124732748099355476332649458471135027773371541572374016038525336728276024676601778299264/31475618522527975728853391146702172347290819252268551219771201846701658848754300838383637247014705706066050673096278897933831272607774110183488615338021656923433335661890414740664480671162459271850877855521869741833030384682549648626038314686632195158507693321505500888988183270276134667071014075017317692121986144742473139078857816578133693776368882596780120407949076129685719314703426278875\",\"162664351499283182546788129866259011542529017155637405328005084357078048074065548349602626724265307733005745244338982661090506394708170105916177679714664432754153795772811389612700051002336719842784098507498286260450939289109123759859710248621544296008356071415713931721102824434964336667980062728653562369697289761913925215639430496443820411811651/33956433298509232632327667206936379248172049619640091186698677954874297837764235300806836350019565970550533206216590639008637925266405524715041372407701947953283803854153876844320283735281209725651036513491246238622967031979233265136280687995181375582844780830517825595245506321879177965868747546127685256867456319112247572348416655367667187712000\",\"27228583713734183629451808889147559240254570554044667607519238865891084165382075658707675405673276615039702916443152954157535195508033284355580742761569101934821088036084480297442018005972653124248838420021440899368869744141698556359295489470499243402799483082406238128875386939389123336303631993557844565927960009744780823166462314116039469622216263221278402673028225214534859076857413557466368/5675134787340359276387085910732530678163604187009567576895331134521132071092293139167824957253050637085885426100206370974479279292804959049999647539684766632278449357893560561608633329561385765035738071726214510832066885156767060324427330401967034889966727638276371320401053302413136551142103678412692111973028587922399670456670380189570979581674699102934733563330382821732200682163238525390625\",\"1340937726818688387636018677960518622106989311577445614347061615417831160296369500704524022869612973331444242000788110133157689786976834913297544087249593601420972111789552905846168933014570399562460789075871112224533723259660967481288525220689577290386781169316008987012566216235876842757183233207943071523447855623001920854571597886491163165150556/279054368814522483241446594911968519760869180429079780837994812436395792594449929617293503975169489945136244602350941695478861584261665582123038340824700224583170270427163469762789603657025958695551448477050958557681299495041994050951692916032501884523150972841782658389836059236040091605838583126400660344344601879969354053137568588338096589095875\",\"8910951660339249479517731530773509037034977353457185453617569046885132434552771722727442649095007828468878374139001808825741829728375370140505088133244952288239619141544661695065318568074863317054989982620944602245967155400712702259180443238473885690297281525960618905625084639870407113029712510345262279507055197024677292523214467306898573956604928730377318210588837126450942086527893437954864000/1851573255256476362977604759655284263358595254392797078730401113550522214182030016660458780180636930591149034499142464357511158868625309442843792189394292787657774627425816694628839987456477799348874853555586931850788645677998004186437300173080088839930384424797706381282430208961565555953254145002318893188197561315855286173276564036402546798318351229978103276843822345004757661005876638005274037\",\"84997663352987536417038496128111159210386455419431137931308301989414462311135708114322046234708053448098538629166672456703651524480738219822858469100454933583774404032968304328859365484249897913676382909050450855222567147661842184538302991526635974158862033287154321908483007506326807469239745851379559259262425675035790574846229470041596801343087041/17634687575122715507915388096857069366146981156897230620371714518707518105157483283253374797127075689236298114335734874553183291806268149747826050838089931351158483980735336772879045027213982661634865556129548356487722537193914986994283729746578044621115589195066212043187229606921062007047940293972381121200723292297716621231320254309060321476608000\",\"1648849257486312935416274009474520589799750757877252390543329851029437452988499485179026845292068377957697884739052491455807688429630524210823560524122596610276957537756142278585091315141096146341773982302888007751632401090642472506538817998043326415693840862261701364114923327286462650797963969289743571514890723145251583881752876340628073395708716735192690808352188867334842743895738955762067968/341580411902962140529547622267381834425264893226447658723654120920549166416114849731588552578626041597847002946105459812230979900480135423787717825697955152193526724029890829615845314765605770060975538542976523177976182401820926854406945392167140347444433885786340415437006775075196031433365827874254477351374236932624514469241634422312990555534789607377023339236417434574755566856489013828206625\",\"4899626659231633406569362199187192352933567344960498139854460545644210119722856870634652562532083546344965166340063297647520613455037240144734014575196764021102614748218834054157165781057405100578668000290493431869797883155764963238760612333048336953434663867580862692267574574465371615023999531030446250351305046572267686566999209229202587258144318592/1013522377571209303732207048597964555261512342860326827024786500686692475697570284120359840724596444209277948648863014479460188496587721578075151793081823795161404110811480269106846359964436993190293615381593756076515012514100289406862487971220020752628653845345780766244842386136740768474703009091552043945843632199999007070800871588289737701416015625\",\"362903847358088423032098939589019598036593525722040887883164115981767777873860799955715587436566233010543937498922435963385091400670303956612881974450548904906949032005878241638546734597308786514086678561900713741746905742866635779432216761799371793260025549698865319760786921444505323758235164807966277024031605673481480590193724980659448692487108892154809490199414370023696404259691299614147712/74959603173756091922435708504751461448318819548943586676159545028063979695880930926805574951275602951047845904770828900645717477098988124553474616764040938121171776556999069351772286262529729056288451037717198273521810585868307402693261479298923209587143468206907278220909447483738730657438961435587752873879244136801168836767273934997417156543866722171766794171623224855358640156858606843576125\",\"8521348154958613550574095745596657249924328336262127244827955886474742319277424381360677655239017583606851483318951440691757875270001283229585075137091617073509041644097526047127618954293881264113694362598157456878784814696577083997902588926421675843291157049153701100218784481406086810264243143337016042301806376864424632290226377881206765051896745/1757584673254145109614914862134217345456065873908262753169404848658913774363650863904627183104777337461445063704655164325930891269843669860409763569362863600932267319335889540453302785099532688264425988677082044905948179153286276609910158854349711054144968131934713419772852663860893241364433872853338630216232313607969790083448433666334742108176384\",\"1802461420562646993856730082999823508145602238125054717836501201545920604020389361370931345491160549787411668288359013059160331370751496329806488246135100776263777863399096485894306306621852596694700845918608199329091852956315870664531614358379176680326508877329862713333336188556181470928613423972314983964578645688876556351433429494008513812136152576866650152623510296911708111085518974142728903424/371238439252064016214448115231139360835481920731625321084601566992497057371416121407293286027832357816257507287295719261141426130159269433199862002841433235955835172774430690352481806933860390015899973299268361513643524088242973968537595085600335021120523852420135081643310663869327371821064862449426404044951571585406092523478861879148545678639697679215289523234342337347529225543852787599016265125\",\"88795280670112240977945082069219541902481768504536167808816453021962616596410396813316064685579412429940019071114917828928080181638058444302439626425155946562362550070187433083541414569447612195370911498321149367969974762244140788494955146280201020345849385865084095189982291190135293114489407801749533448443222584092575861096946605418438181411489276/18262596223069549313969288693970246663726147886364354584825624311486557881239003216971630599389642752648815377795018130449384513824927138566203714891090017787258920529990523519479383032564209629983810866231367438270859421572641494420831435563580050954867101292568399107965982704216434467243223964964535464624988344342084084237484262612100980519602625\",\"752911409358158070688133336918078236438086521781731735123294741731669530734909563155732092406099003582749182967246236657021875488130304108082404134004381196925042617909108654109138702993903561036987511410396567636331465803949049946947888490287210013788802287247422993384874670368649616782837096233384279817294778916419067404863458318451722971117669642134894906235066332205740872938406767767019265664/154635332883086377656813458754577288834216641577439356891585125701020579768315520324293435008561626926046988056302745604248220408154454267643222328696606367409715369481567213640103076112146615938180089303294709009813772509602954514391675152597458428326644988225555987883250642389550531163153338541870029415077982539614784206119074702022117790679351778993541426110436276530890609137713909149169921875\",\"15286089077439918584953144558775765002061832952090847117286473868694909713791678395221438112006475047633028543501632631679316850512797978594476229228325228403849089079675681042224057234415951253954044235099139983386056610384489202589484570852048157272551098909455253037561994944665563291526597323199530997923272894119350512727802414680772513760081360291/3135161418037836259442831302977219750614726139657718770206960776514822107155928800694375522572523712277389679035632531727155957120566617736817225541673148354829212969778664144907503411589126111888917929495106029890532891919001138770210977012708107496187227751496980000137223047079127096028939624830654227758737339725345681745847598157538483308068864000\",\"17723482381737693269787076798246423310802126092500438681864673375704464394105734049099094818738115345706100191580982712146882034618103161268453808819471603805345990162762722549964406042295355916458624836894291267553138041035528315839108252422478610879301656207772491548742981990469454529537049123948604931661837539943536878260665617524824604291547373872716194154198824107266275716083848262625068958720/3630091565725887087605600771358216927099748013831912080380983545872077197366172619225751217619097657405660172801849926220948413919823038425519006413005998509677472226729295278652284861834178791332630676772284971762683579047508016687969040658592436230062049051143001484384767836353233324570686249824980508520186643477313941054900197268584495128610811273834192099099592687485176400539748616360799518357\",\"39160514032490258389003214587901781721548011632821053230881239001436341012396166857515197251499460842954863342641015306304854226194551189224721257664420778416733889030680295206179109679627522113592373938602737416822981698362363553492610842201005420727750505681358595340127099855823746410663750133019743170700888375554918213182862789028531284364877435896/8009919337434786244380818390213546866794958389603666737562053423775386173149395943310276429895991903753441584557917565343673605019989336264748588735390182130334278887642569515202100870042209261561001627386525182096090194076839370589780431326097965428311786635366819094633651297179987340498215947144870164066409654464551017761658775207392803825996394875\",\"18188388167811476762477659006849121912679763597132233588170406666718758511478154418948855160838212151370453213943784067796172102916618102024199200086478021533171984254799008541948973652219533819511807681148179806051835318645591102296256347927018942348574774821478499092054497390790734798143983945096982240517058861467440217558586822663985584775920517755909444876443211404222400335500608733284461685888/3715278241795087610941547133490827711133909145414878217965273061493740719983191775105550559905283733134189195190321643965858771461560130864714477448011225816210219450040558581571206711791272284197614810026220745160693898421068168630870850392739817340370146186703867097982858560347971281142766235850971837330222970900661653800041795020382847588362774677568059355238174402415384788280852059532958121625\",\"46353430636874284402376008361176880938798775506236714098123916668545331718677407145199311191108199195405139575147933283523305343027297808443653460575141799729554209181454676876263582758919969948546918471128299522715691694855904535448703118221685887195383025133924852224568922999317583667985459047407473419196367812949579858081181660610155317911318937349/9455890179897829052705408931064120820559254220394152447502395298827357144081378513080398823188243663943177539817982481713456798757563952162598464929784370305696420245648035222083207596797327498500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"13607414211126412689435920170832779523235279308039712294681570127241403406455725064605210473923965685858012114332021572088551127762628892611459785625407107300355287623761046438724706918300976102581928643740596336865698485838431972050267114940079353996100620311097561405192365496385584164725035842307146351211183443267583872067352881387294766804298681841402861626441205037637282007810811602289501477350144/2772205947240095684743358245950494400934136973845543049938212403703005150954425087866758842625041409060217562878157900197951382737615822655863548356735553650755342108183641353142157728364469706919993519071329069805875834057743793434164720370026073143626055293058601124362130539040404491770346043977106988100969901297669523170508321703496903672333781306743488573086901583022550356345156457496396749797875\",\"23264350093315690507131500726914401771633259602904894387312742275462601574788485574913195967854009886824436237740789910851843045306673524324611130536719802717912615609109285261163220007241492964833933975789257681755002054890453747803418465119567389315754801791950553304034666399677630030683759466627797123971742061866928213780452325847848901682792886840980/4733430508316851445525799359992627142007028326865116523033957869609125212251136452396410236930025876982265915963089597825393317909648054808274488356887197933393799241941120691826916741647173843634076299630884655997401370400734954098249519111198509015387869462198674657171808841005212058822254513429836457539629035675822719720295352508916898476137111981397\",\"538960934807826161927564251064896730663918579817797131801326848839524373936888402762331254883505157846659830555799909822861853145306547699817986010353774500545305596630924815657016569444824389893996399550343022444937690798126189162954188680257730893424775303801562327757655350002001080811866451425665301674688928515041429654624970707803336800125648742168380676815769457467038849213225206824671025803392/109517448833211208909213522579666376007937648875042608355810687327424621469323788799169718267715808580775296460944943658428295481347915131091297305260674731651980547668762317138753250458639043477453950774629862540017034566407286963562574188172753764978963685535201028286359818524519980885827473904574840285411260037264057197155527809916623487144493019982419606308144576939532055057697567269576800542875\",\"24451481554350251656598350124163983489544445991992661049829014268366250968046589127810466483349378560701491445658725080497078590986743512397927747885285095846398852574219367580068049729894667374214861939897557930527646930793431512683750733092448862551580494245486308114129295467976874843852138144539250235632985676953662288536669286915983261820949386845806781/4962240683851186225340479316959605207278948397833849899236383273145853045488131674290332609876751222112917095096150531825255611911377071887145019702433883343849119017643117746273523770961304609989779231048095665388209125939879595509516490230961558353074751312876252070889983946768175488341370453053495319823381943793679003096504200440997908071027962806272000\",\"166591964685609920525429719961758335887941461052357297159523350448241484106515158310298216150030768812873781356326923214637847449893575074813991141092681107583183275003570804134461187213143832123628701876041315736048451374824101256980832991214945762266748755723551899001458245164317581617731332466039757786839492869211248064662857987111284518155462148044812626055842061283907063784492325693994911811072/33765943466859756347231737285768516240749714264564410814839966011490233598006227246396923594069488496368994857718734549787000213944990695920130591750377483911116845697231074543526982580529937081378303555262933800375576494067959129682770065443667091668104132884375840812635624862495548888467575848428463895756394050252457592540570490061561616914443009224917652440212112452400106121785938739776611328125\",\"142464729519206642943985715465196065680101634264787375740459792619754842396453535646509170066091478069799080172299369994438836484938378991283020978342879057271045033903518255546705211647900945143546293360496661466657600494787228476009216508124736254967761901224547269496682078470378676865981855568197705507111970901389105723589666709580851611656838285777566736/28839643075889294346635430272525349651555039807615358795334663734940126053968249608601725991946342449660829847322517564370606746964714098508298705743689729306507554363954348780144675937510900983622836770223945538844314468550644543502501484521561567788992156632892028591678742014134130878101553633195551605796158103033794695984958987367799607407626319024034625\",\"380457154857422076784416625436182734840012277442496600178664323821064977485271288502806124740204295811759917468598315932331219906040253463960961995849761235911145436552991677050565022181516596464968316292789048809559129516930574340710998611088996508613850407294743457197519091160170604426002924022923388338999324182261954685794522778833029950214443271526469607532589775916381786492089432407550224137344640/76922142291839859196033215395526448408989799722090330866256930898223012427332209054699494033511478050536463051459450844520020426942553107946282832072826069342120835351421637970462054707566481086202287686453371483126873188020538661871147778312986131920021929455276187425940666580158173676284545586944833678819622895550345083175685846944633982680908505900099388037050135210936852210263717185637166725605577\",\"79999800708369666670693340813609265988600461251844239982904928629083975986385235816587497657678297663151298709076884516168798694292862559083730259839524968813932151813233366175091317046758260934357096757322369138747731224414176608247605314668045838769433811781490030635374856042786947109101585097035794969502111354126773165391577217071956928171336060247633607/16154850265413610119312596299635391433380319311682208755390341659152160578366244774029302281068833963848811596545791104919556346810193385001196395489740571188884873246131813864782581356887110499639544662322008824704830818136660544673293865921754569356583698951612797219776290835161780326945625621758204931298948625885081325268123344406261740843197232316416000\",\"26517014004241498798848003208133111307300592620947908933072661812816683085261359696887064436611747292468717739609776825664344064024535028242737616786238200200498291226984541942836459188328346609549239724653950302145388877472274074665166631509490297630344351573245265440164082334092997307729007429218385933622623935704482371360985836659823269511115937443161532987660855490906546130131716829909388620539153152/5348257529530073524280989257577050878033239486885664777340947102417077875628238501791711336803418503616042922880218860266611595594400020206192599559925169589023339295256084579966533260861249529670141854632965231468533448709363477120437277477668173149958267956654411822360053335695956270719680086524322530514249891157439878407417971839744392044064720476417844056346174795601710447583861127956455406902139625\",\"71197348290771978405602732839537012310626009318133570890482364371056186523989330157966045289127980687764218363064941391483781008265266963537623770685390148810455244349859354857421474277963009857011653865476081389968122418691934354122230780300833008753686234433642072919923583176333668289998661499146617277981691372057042930131717336250309680764289256080895092/14342680993892886303954853579883363225921109635079605392320944523109187641283117181461662846411912306480691901515655220490850586434947504504317080144378185989596578890875561336496479576651516902048606328604696610314441229321219627021610788398730173161473456954861916116391687748151443335513249810808309201830214153565966339609616397865465842187404632568359375\",\"342401018754023891059352629509715357053454506037284788725127073168445189422181540408896452651232759821766616850264122591225331120588918865882061344322996688880669665450231982002597398732201789017495427566260651180470635467002453249479483900268320570004293679361696197905823690145326531180324429318916092471863347575533714871355651558610515931373080997536792242278529575700808878786732127630024064418468916608/68894647682461956089382461406499759613691148650738957016015844830333168307020284281532026442272618372290646283794122772122665531108484704223311663270836645399554940741928358317884620420886609705267248656765357348477857852684140561714900614303731786621656041881975328169543884661780531057279582784036689401206706069028229798913082362331334839997133771880514515972024899408556517159759907883793675672065360125\",\"190286571838805495686895463752492174798162827967490343625540320679760700551286395956241059969689020885714190883323266375067607282890063444652926151862650426323339187596278760962390404656342309737428214493422028545912504503974763216230927196187743439226243880933947417760147785405444976177822143722569696182520826218120595298059020305548681823408268556482981325/38242608291912408815838081993045123864617058390583394828737640036167893859507494091864963383596867701436244007905770284939991912884465101575490548813894148831966132970730263562113961685364216989999844961688441914455435934703797359360780356482629495214859917249465567846934284121032247250332634283689409883499295469118485912489058982596725212975311140618764288\",\"15345379701153714436938289567639102307887273898834051456693981514956329731572600026866162286097662958712922836383881840211072389867463987895894067288699955858337488812343674818565432780224654423872618380928462939482247900055572079914753652915184313685270722583926261499687728814560680092231526501970431280783177357735398580700300402036873780385926225005561766822479878280891130232036389707452005183370152749056/3080426623087819678602049171756961824196425548529619576972793653585089380165862889092832375934535464160425580449193072125955685099151500755278763306599307218302635233595329082702148677300945556130106197481236122437978375963261172524503625593066102601042060541617791008722569799735202779005407381267021641545644264334109052258081225159748043792288699674153722046659880085850980843460715080965607434114275256125\",\"36443601662144279337033484452272105547257065463167427418525882851507989449375452076227652634440476502702584889057376829320548464677623038648843251719168810701744338735202853412651160681259533015293997501525430222870696235141468274274064390273214484922080219643095978640300874086585386991338440415203863901714217818222666715642467237183267303214471854472286478344/7307237990148312451155090506264642657872224684879860008436735430879314349554023096366846856470375025555139219961666754780864835035902856314981482268319886395881809659368275720375576152008289949085453326722156553603358879420820012964006978808113307340321824660484441618487292138631579616351777191144073820686595597986548374588839763719082323114663844043046087375\",\"1575294930860663922843149113097927168024893739962464327016763741314068438447271326302129681931564068796631337571133444163024224071270063174829664848259482066723104251718808936762938249028582992557822551950212098797718627418782376027133576209718376784834456568694813577764300716139817031545408608110880973380162736536313173329973171844528083756524804574267826691156368696436273087171467254161930265910972517504/315498546654512047637461608750018349421492986465373840347519942494904200733840189483934245529561231604050629653992944140351106887747105945984325466452136415067807666316202346895657914393512001212656936450425268507235863153258769360296536050028695266363553141327896064944506216017933135251875087069031098099192325817395958019524956320840925176589616439477134480262100237057953933117460110224783420562744140625\",\"7692057599553133417225997786980128299372439542315125030077404519679450372805989755158000864378924877036225189784045171045139667691524763609840822628706422918926410377185494048355128046783294954373197082851501927410350313585640237550107070936498164597231431242858771457898152684298047446530220873884022213114819556822050178579707210264243087257050468000092842761/1538814487241112760739561704846381585063002784795057066438330325566843108114787083741788078680861495340026117682606689156065008672344707615420501964123121620401073675430690541617930520947170306763541251152854304975131871537939618684186766168376514664494488691311397307418298556185724993104760692216619178358268934740746932420562664234738576394742559349407744000\",\"15190836470550557926140012263310230378455340797095100474720776113765300081463960235506950799869073894127884189857505951314428810423734978025409205413789025720642609035117121385453856877706229778165533034683130064865256448444765902482146676668197546098809055341050873494446231793312407516463576380102073171090898973046611572020564659042146465345334273595086941562425006763960197801018796906114925005810069684480/3035556598829526968124942916297025416522606357010637652635799096498208643970273828496655227572100159414352020909846298817521082538898702393916708804775798552206401718323929157863173504795127180177622667376867235806208021329981136637175570409791442328468473111768140746895005561471574356889047981458002257872092408771959478275534098789982899056118498417649167444480913552548249005268380838457505944462494874581\",\"2923754549090941424546974281011770689534961442264350984393235983189168024079617848190236639328676436485460311093391982825027512234467853098757486086492333410753919927528867817406389678461354257841007722472106464785557179844602277350411593959136520732862935740433163383885526249897183805981219416420390137516812715245569037561966929572448247077578419534651990827044/583599691615378545100950777601104007812792435102945248411439102112424251478512952087517463400054567832353967731887062349496616445419782499817548928078665212077449420216892583997505908858360011413290038645573504472422610780073975450391707084016931661068694024023083417126286468909117254531307085545768412513447197205482285022417611018126886491416133665625891075125\",\"441922815213568908489589193556560586318864326425397702047965372289295962228254658331201274291697626694859414786292266008476137667843874780506886929181835469302142365772763129838217316953835831059616268288399119642314758261677639945004547833810080700127847214666763863338091523753898362699222880772298183760217731228628442782431573977490761665091005756534420789258276075174436091798475838370152192077494553263232/88113527373573049332749294663402406454524640221866407165839162576979477138694653404281889227416977618913249275712917582743426231744980461918772793673202077716234026090308791893409200158969108910565467273725064769890443408324386897017825489615600787634985397885230455168591240328585041836771921929567914891379235573982442311269392541694564675053636078990836491104116280492254795616055818375774141667319774630875\",\"91197133767962483852278456285591810579974783077874307589555559715577599604626819245000672929518645004771085106770784762994476973842713035791487204122653245797126906189270204029735872508462106527240320932458036231707311992868347221176460407003487373754014365881209649632547685657666691589606571865740595829983849941049450471212387808617247938941417000965198123059467/18163679611214677813643455199979098261849405189805364986036911945012016248297645596270602508015864371788974684317239728239847888960155365342460843559658233069613218442910226128113196984801126248862273503232000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"733396724434554481470656964167233690851279923085197144879644750437402627936723531635898542414136943003236478432848965516925891956615111678444586384493883113385335463639674699443808084827715994137410743992130712903997815471369201406683862985677774155704267039224546352414417632475628136460919900347977754644214725932476856018335195927604771408949980634142255497812566866795799230501026066145434755838336990365184/145912495644159810313026420025053989609942265686388630266226856650796088768164358961644113076809511566125145395699271530802891523741636707532676065833327082092521989958971154798465784847092870457944857590623097781956884297103961713362268264159015928554707158239398721416218953003215109202771651993622244788505649098445109438104466256408060944298437033058380804126574878377874459371251056800895394904459469832875\",\"167606423853658713615749101123336326908381619586838606922565378505211386185130407423587264776519589295420758009764678759213587906216543160801059029133457062067529468464636376639307690657945597847080706144898920305379653754920571797771178341550808041652360635584401789901525709166172283390177673009483341826911179861584213314395893323035527116283758445038413646757280/33310364848744488727470761889861069993071965180756187311178124887286133554324042422503263994717993129539448310743598138364172889305532401505890384806078790034557049074169245078416704866867380089103064821732673967120808611636618526737138435792818828990403374766228037003927569643972203993263329403469747342204808360947840103843317533210523853631711601450617095736473\",\"22466735478643771803624909352181817912387732117378538284107485621001246177152644141853604633676939694208131243081227668237716194316732125445041260568403752325416203858329469477774720998849334961751541191761521224644520742691981372782009394826739249604257098248751626957528543558542443122470657230835176462612530464044652140581367666271771882198747182114685116336512604038833327707163107207664705120728068987996560512/4460342260599110071819142535903990817893424192972341872394014748315090430999224107274777695306032783105944721337053156074851240201179902835353097683269298594190456286888326067932777720561181760369783486872666974623910515795208353605697065447942804414120030678603538761538385793829787734830129764152263691296719726909633580318897787729004972323599773548689272008712427926734258913271101899780538635213826239542884125\",\"1972862002066252798837977155272535342727415329632252213508267781390870646909686724955861608046325765650407340102472833428905279473185818898693854344138403744757857928883601637909604082588338869612221777263582365745419719805587946558326048087138197694016224613118304623864709183681172362693106460535117459192992832969130895829916210933710820035479169562970982784580861/391262854245936198649509275719624152305206807261382621390946060636032376057385723427601113233050260359684153963520782285097664628279596618521963444574543409076428660874564026651742234728997339844161514273669735686516761239076529088145208958938384732800586298943281728435207452253170935715239392534815683367114290676180839217919539381651841151674859715992309727232000\",\"25408691426286653276004556426513401767718328640048945917745783225459709487487356095164164652218100925888847689099153320777389381851598236046402124684511968385325107497047025485302333503075085562533472482645023963717347867696861885363417595298751490212495932766872748125111115039311507374363000062513977436921772096443948159289707996749061007112458126301618769295162649600673247799961118662602756889448152517364992/5033870770817104909025512331238419776407331281944565644457345507262881100618908405924951559853352841154730802006750688581603270849880756026262217651685813584900300357685874044482329601894134443542753690048962260914642678445058891387041919581376195543193199307524572671344323361282633828144708683536721118910549933336800461248338059209853766305058943888965279863852107507075916981165164543199352920055389404296875\",\"616565940481577765011174617619124841631603944267256178093555235591208387588894068005162766513720546626399308168923904625210748051788652328072241494243040185611373035059619136712559505023703153194815611268503291295059648269772663939137446253437248541496631852986499688052678961495116210133458596866684413931188348798244969797973846568160999564540652111599082181871436/122025682149627484528651507368051367620578469392233875493556828623437869650284356703295836998178256875766319508797903923638967073687991229708051285605187358616531926112736402511567721889845693991963610192161413692928378708223712791930113386840109729368772998347036090902364801014045328348830748307179590755723160142468563977011700764517880467116766150322736003147125\",\"979882056834583241477188686550561625289337025747787132773853690143359657519481397575561812727394470125172272246774578404543257210124412718725081536309818383310896102958167337333430555168671327992395916735022711297435263157670501117734412587691271084981140167017421900852550822579410636184333142944411060788723653596377015359036101170054828623669169047118551010102258802465554033173968468183492058271365801755986560/193732066620504775981759812703028757608600125742477178751189607602983198559778039141192492589734277739017909889924488699372940787977794555519474807920198944109549023547259912324279741006975129518191081373554817584214941629021088206977532599055014150433581544599721903881284581257812850697423350805715586436114842183295730680490110793225514602133304729484547181740290534056445482186430729398701311563285494964645419\",\"1138059441890428903336718712159907364975959482163004276901676063186939296217569849990951930955270849692775077813359573394435924934540269310629731801376134549169322946310756738187834128956671195358413024062230774111935109203207768898525882417078119314003162592087920755572050993355843681931139257303484526223461840939880759908449181135029327442039666513325916729112853/224777393704985303260433439401503507705148576727364388720387174977154204629336985298082893443205223017966145098064861566754244624732671470935725326043491911142467178027013112527668183783450932992534517827863293825061296257420183669383719043873666284378647952385401303733274771042385666436214517205678674213118374889121542369996042313879258622144464565403138392064000\",\"614262617634904509410555695398092190166323289787703954329113412647342230855826568873946233136303566178604275296873234926652080462259552775254755109931312516616838091852915397846984381183732773411263828600108443070778861986849272794442105107285234729077818614332155890946804257724112143631642663084660012362691100872465148864413343598067567142977134846266425075195546265101720326272502009234689388355365794889444257557504/121200854655310345878069155190734381476914416893031941761756379148622591310152793328910334357724762079139509813381997287954319983165971628429295803162563856219211627796200599196263868781937234015821367575512548522790158101892507996780675863234181700253545912643548466256938936835469646114659598727592390628209362096738343417775009361678599075671154405137663077798419897932404104579113056038271753988669813988076515476125\",\"106893445531995430131837569895703697604978445859412739331042151546083234373443601923983714252801103551874986033841637079479794895452077803182698291822629713500021995241940133037200268381793282318691568234728329378829301282121562652452936297422136961147432559766896143081059518238234777055931999714973999553456547746825617168005650221542417216291412324174772893635832/21070287546583154895102927029203125577385528350171457634203261197137238923923245382493868134869009844094435068284335909266152042903157700510534904847257436666980671067329084409346149729385625108233234542133838924281113454526471855573271066865534480974484196644173270141056470857666632902827625475719738076524047736123182255306429677688129231682978570461273193359375\",\"1112742798776748551928744983308584493817112400536084744850969025063360679785378789764875076529575583792571198510306186417773101346425704969671256564494135750783642910394213727189639661184379341961737135764570942961692159177189753139209638929302928699705042832922774012622017270172331722295881412111812933593370743210214549038212395941675257558442878012136484052827439007483777859391215222647499741572327725689840850048/219121905514652575155579185322367175400669386131891843382447432851122462422992147756333729893028362013318264155489537138133372703295804002840920402482110260590055749843170064921843460498824128274420925357547023876488939786863662801268798987685503391058250902634999352652063668663245829496836853509616873246554292796823779397317819134891873583857621623143253788854530146303641400986028503534408870194989478421253057625\",\"983995170259637497940121707857673268620603982844439610076334749792119502557380361624096960070148627663305171311646851566811683351232268240169848810658089698606409195744471343416197434926513684882439596141368794175162315633192028977211909698595778839497844847281262559899914504080092844816319298286511436690429175757804604673752838786852277255064434365401871903307643705/193579499709739777577893639665643417521924510242119561765932078835121983190401762561436208758210519231103767232899529457440602166918701550386152070813526760823513884391055054076485295945972185402977095815609448651316824455250005505410192101148149284756928250258632031981439345164037318129987999546683113483700660879431801728391911161900686707231543216283304182063038464\",\"30691013076836380319652884848585431917439358375118437035944950498156836885409110087616602043242747413728866747975631727566613593257623099549583001362246649928075859944695060947434885707102684568632559339383409378997568182445019183928058902445738702610436187907199482604867148445903921474846103586253320950728989228898324829144701782792767763794895137313050381112872972806712570559942583906619373159053654481250809168128/6031936190594376585238407905469035598668211679521553144958053099463931217856780171872253258738635531385711702176347575597387389685526098889278278029314982721284691198967204664771178761416891317672705719303088746953644978471289001577698554025410820041497108311270431130911021653860874238212040640737171103823631718483572464361276703378587106311153455557896527384426327053165214814954154328483257657424873929502112904625\",\"33633002641218571027682690377239300567277297301791434890431645909447040830457253186262970747405514897340315490970846553666201190386457221846694126637998462873786334837901001833771510353365825087187582807843940479192544772559118293851131234910638705258664901225494129023244916125545283621607920983287799648992632814461828998517949449887522866259724675318233522060729654796/6603800575190864815125307817934327053530311915572323544225173935830559756077637251538096164499112411672913910767032482188570876526606118068929913515497400397562722669603861813453418621246538114872330536044519242663538662076583511078523573320035084744399535581216815034837553165853576616422592790103728141443697362408727056813977234078214386771115586436985105038873998875\",\"9090550743395453237608373761422705922989356346696677314277463900103283296889488490217663400349361962695279888433677856471792856853109469433355422802663947305503479561493033851081993247556828544308258821557994512133708656174864544457143793106703578476914924328960109390350040954158797845288786321215010324565010420734044059968931558099077932776525974187717655105951506223649947806568984848883258144616897526257038550656/1783219994432430133950472014582130883873515063182143523712063859964133099770763874744121895885645346884371273930727450069430704145915261127061538288702855011220545530326588799412076879985026006593893648911637986337776174555198865379578424838210466703683642106934154603710587408512357351455891557594977191641529451749437270208258072920514602243985184744955476557012910446023911358037761232253615162335336208343505859375\",\"396226087129511787616470716244996965529391571019620342657409150252952330537366537352182763477820160355931003174946109480036915624974500187179367618457008802667089004678925595775249725629495848146669773574395699032785024522882892752987825063933573399691764866816284097232869198405981830106568826923407996367321353003569052419999880089180418759265274331299787468134974811/77651132902382550540201641628906752945078964002822585000619340261128555048628863996784740469908853602590877726845475670110127527874088625214912598995012971630852593597027649154487264595100300180591016581254965295280089902497540043916128232871685159131211213497239568483141031137909208031392464815187505714066235868748950184065923236670418822911614780061752905170944000\",\"1288523130900767412477856952035690867153496584747510253984686336382980221603917538996138294311274357713893956725672062832264871415025750136690143411884111580335458539824573239771267043414225271729141508235839982033182605445173050590151912297720800168687369852280323356691345317649445843078291369394324862039143247087442309135074453265658730028145500871559458519282433012494054724678302957276371418936282902434203225600/252284450515080370603949213084529993395050575951188044032908270470514999880554862449223347761507020354321422785760279154913310488296485989979706208254206974075438570521939826124860483842758137231373182496438568202110337751291106165654945352183167578675508602832478752400011567482434301614269579368882858973850914513870297071866544875650189106576672289734326492492059816669288907018095832842249738081022227281715919357\",\"559506782175368748187145067236900803925823792088293851453005882621173124590368101213652371965740365119375069053747415415684193092607523211636912074219215053809881814859129515591479780669511533619258835199715146655774919418434080807837587396115955105126806762961292429904380132116986984435528307613054828929294602185927322238461491059740342387266084431988727321711184308176/109446188216864405154936682374609448082436347600301765944233278303643744736544109262794383069197271409398615846380701459882784547857821831816863216080069944818453908760476475874319791512782445408136169878207358663250499628002971644430164185578966399908622640732411885568638054229180673755690889471388585521113862492432946110902070139679164884208988489955874131206343597375\",\"365842109776085256207829452385781129402656684569922320812625438296958174120084800064669048017227033185969596458778213306152397766619692644694641677223213185977626940193107608138827771259334379895020377700759789774994800008933137569543592829220611543060189849601828342989023692876182148818363689293009174358168826340010491728715549904988196347316703985894355217235339548078187164176255405596310602921647203428200269666176/71497266937783826306774367225149833789788300609530680399994804704196212252148324552193149332755057982662844988588678159610516634667597707204818296457616315484973288944637139939912166034691155272078609876888919170894915224022982785138928008133003473320018151370486895637936102520353951511525996197267572355782608352075229547764732602557133494648237258900273354364050662921889937355682486287799239363976556848320046933875\",\"59378684894605773397070783936113244261297966863668546282887298999811950599772732377979382620766180662159460666220894896896564357533604962977968843474062092083279165837424210591042655271577974272394203253875965589611493384384257117088518521598379301169916060951350650621757237206805037261878212424267780312614942173870651684587166691539909068452932891649554575072205080763/11593916877920131260484148322810317629326850763057953025674154928920977965095141485536566217873796019006709247938019404840440511433467040918770165456925609124166970862430104329357419669175323763143377917913760028500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"440706629842402075137926797732405268015915199334341565218443748798479563505125605478061664327658137598204192554352688830679475840386882350034150077506804799859586772904929402683276898098601814091430598259347980573084686932949502809068565420937301632494387691284902026088950093888426872222813857928092871267130505744095697172494119689779474840037266295586359244899477781345249657455186847452249040895151288114085352974933708544/85971876318334010542313048056773419567285701852816309711738644074302467763075671531248793080425349570584102078764464196653843973936119037322000695949209283327606280423406302517302874806092835694196353778161663338667091195199032831587897410329509487165187753418615356836636352319310103639079123698118997500068644500893282438137614420288839230827096109835206605385673197123994357393257304049093683934224826006704198171592304125\",\"13220371178312284248107863849287558696210741535280184003301555188086761767176560823174196915070378763091889333203635784037294769747641959860810039816533609140662043493962707445564057197150603226797446933532133956054671103942520142568674339411250001585991743608723150284270101326419464088290151483823061613403673956918458456165552482913079283537536214967294211244361353060/2576683013797055224377707713704899315377379548630511095136568220145808780162671473907260623503552385384482723173913562423316997528913651044277418227616447815609873991028073011738113927961824632868956802271260292075825561646156680740323686126811928372672670917332613490241615850953660246271541592056143611581223295045062157404996958100136358649109693659623847024011265147\",\"1538372578072246705266078247950089219881197139399081643650271348770110178217959856819170325400476655944115553238940541695152110949081675985299189913515975242840473616169775880272489805123124548256666658584129873597192213080038937409046114908719298170078476325423466734429870048697383304265342125425087105698152643145531760853127801123272389134514333752173173161562273487752064850461823726948588221913540799816489566883798912/299566102446745552813544808169323270315327122249327394279467999308669285416179486075255023523726449428151807672528368606071047812907935426406886253284580296349349558797128593446316786243666290649442956134448480598303527795996222703837663605600624271807461605295956674925277658331760000117761013381199880905748188151556184620779667670278558839116983636972680749836497346863752662521197700717702790359162307617024566689271625\",\"281696937222363685333688097915539146272117417024070728031063821781398985795813333650547982965341298894634762289669256129805545549280355643122501181852136332529515756074502902204877664395456278205770206019663082511098956468724829475220996427130295010430751942126263620206886404244432409164651524408198286831329682605959881993845189585640874220032515465014097345759490750307207/54806274927935495596891312029173862473687610099325998583092091915101265393157631244775387832621032230434007486602816972765210205596482942091518459849775458089575743699797096697542306049628939919466378189656065461708686421130956996965004776108499273871055615413566043083634090083096967567965373203683231171594922347812966905149873265654962896456451681332216735396249206784000\",\"228506238533410805238253122961471637501498406104430046727793420497895852412513560203475440156216063574654372726194215013407325207763369075250819386897086702757125418327084312933061738392406321003231853349865003322697360659712771167066453430309997639548320673279964210730701373707765051246595806673865646607841876463608039111252607452843372970797479959213447237540830563469297144446069689149549515457318899981763489792/44418759813188470246596822974281932219088697005123285598909329328419879212164564561558656547678211265529803086702843380128457744445765859393426675396393053094588240457569380155526179040891009717323059641035189017918495485630657360525410506453554255734005459614858972904374739673834145083512160883402151636664208253116362089211658645312778404886460203600762546810897889629330022309705583438699250109493732452392578125\",\"2396110297187570506257836426251930521245117960980667897194680897478996322590925380310917400763581787981992131769075961259393685331523600287377841990678117113566991100720996059187144934569703045966210306282348527729533806882408323961336166190162075154579344185244957673138372347997134388801085788353482276257401005734929059700346687783400772331280644647089520646562669857652648/465370154262863030800729180763091967573522779260407615567563274096037297593764955820626213827962697601334935773802201919483657310282236100250543992334865461800976838791035335861420892967699843608855185710753433852279737724446294443337363478679601049432404435672469098850676302728116369979460222148206944323730586138087862719386327396334468302608499235112520318322763857676375\",\"1188272888075247520453568790651819187486389546755745961952033150576243575862120569399808467067800830890874391487822723879717525264875722720416173276963170672622214121308038530968291758445510982186014289745026439477197148445087614813262170975056866881909056450023324743409114115141145340480846088869807540798073417035168139476153897066325127540609756310068558610112731607522096096821938163134080426356894899245575410494080/230586762395914863625709048789913840511134004337945700368117795195769576856434588144361459740833007125516905017415184787078710001969815416281381427387949263792200577791644278234661952852149216540491852757174842146376788280677956350901082838474705227642420261641783722891948710833898248566893322144435457967452449965772543077421407816225704952270697016152452032506898311260979594550143344971416786595888053149375287120733\",\"1072184299258468249004114536023934869518152618369895613271618698908405514630154819453979477077738526673716264830106745031385951736108376866253955319711026042389282009348594845497252059906901748860111986811345742998968284077119165082435598381810306691078037018432766116865792677955520465319184311529667642995217214507658693259694586107847099911341219913576038605872218680562047/207882129535607118520818565811162643811811563516006836924341123976848022970024793004700710992938987476728640943834012473687892481059618823520721737479364352887178017866425027953255856440099446112508663603319745066750522936408781591578321031173620445865113295407603090322283539974563690157418931060565698315406021569491751612761888641141446406531645379264720684248398299136000\",\"158094023904374464057702010126993231151433474361820266584020400101533651587072432728050776506672527718975042616651177034635188178967462982926261516748842073587981953038445977514446838733557926696939591069712397947055261777416704028506441173540338327591514650398349069348381309688677335132100441905603664282735310299686268721634369502296867409514777359935022301425165750780988231639828675424239931533849896744198012747670272/30626384366513923671063955469537776291182594080083494737341604579575446319190916924682809546024369330706012653799783122328775875399363759308193432327358837772825609356553955350401725689682838701996446404559005896479618311357573203081153855961484398360670837599853294627153740224543175497655414585918231215639906924313779933211774291565425360415684556655021031131349317390382320286092667852173815259422737956767922154798375\",\"12216278924286401897470540169822542417611356797676160128176706721343511598951866107858729405615631246003458062949723290192242594609994613705183460814797527214549142043573863947658832694800184691222426521703728394203722420336773310908687071670107794543022567943478843065246011544888390757810534211554666736239506503613750756246364621509359804902243487113673014588325806249988332/2364584127734680580481708368927921125934330000162935118371174269642831409084634375654239735054363928748162229294829526339927907778510530444646754603322373712788147193691037688552857183116332292048731726305451516954679277320777955342295564000586923227775208580772868590742136150431152495718132142742153643081187691849828217592954519485869135930755646768375299870967864990234375\",\"578939195017447864385837341975558679292903716580114421030538728778491606282153588930983966100514147976321305616196463174070345884292672842497715966933722088536619333912687108737657068701352918582656105418491672377271304970407730786932913490869797471081081431072836814581099271832696990064828717287258860166842791984158634684078346453202928137987930328826212011774670396356151265781053547412633310327737900786639842674288716416/111966291649651600701875186827360807558960817589719096407887999108024557254221008849510152469119211567152616745769256123968832250104006560061907741567034087109512483357851919402017950812795426393415409198268246337542639470834168040295134130657073201020340432236723824670803498949071870597039309004562024033656488150406105175401372709011082725359382691270659245312133919518760328422827067578306005644825927050994860723405473375\",\"8041514821545833865350873212853873042112343327573364523948780030849543753072688526717886590013028227714585965095216381829914996539132359247488639692828639170075726301411777307168737667077730792892326979446426349813642680537699905651125068091362135055902152994216233622733424128982011248923051410141033146604688083721413402395290842738021365861670415833356403364696759583009635/1553937833499559104910551811592138833189892464446761247731330672284191313590708439680460540329836344767557599746234213006493842842879398684745864919973051635127080738612248150108793397855113122368507483429209127035263504194847798809612278864438287815470711036548695032421148125849669175729331459149833945183228413961985381338162155596008680906676498435954178226973272371625984\",\"12059659399309169167301353842123191409306995788633965680414620302285606896146667751472818541537183787935352700725982053536032930866708413010971856856768384974849695774437178790890015242323873769697407411558706626105140596160049735605389301414460825674631122462760014451298494875244754354054447697502521388381253293175367558014453865905104467382184997528879171136492277222127399012368677604910497789360212571238146627048080568400384/2328494054002703067219004484782931471919751585969487160602269605916676223315055450845942763690581877771159615428854802721943114463834992106300185328876910271612375509166975628540839858771078495267566008071532876816826751069408153323840515037497664871689085370699991860738368371510578076683395101062439493831773194498579620513073693022191702398601471237166387045790480861932005012807234071429628725981935147069738988682858417182625\",\"683009426705008850682549700382901603742691705123356866338951397347368059105140826655486518416578697931244347554322654428162554903861783227680935341690740579867651545205562690172425016836559678937794312287639193745517811234257062356826622207475918293015140472942579713388671782202262396642735640315948612572908444501108579457520714632371056288874351015666995549139003946314085696/131769214246522869780429817236150406548549044658474416909806179734873399109656411633488099249198882165279745627038984487365589625562901914030850178330133080409420340227179447548044572594184601425691821617928130423410997853384425373999967759499571890326740433081063424903098252502791477854302204200941376983295622430177445507316706609802292121282957519571162158620971952084486375\",\"1418116259749091420309271913909337143756589314597557128553117870573928055109322864794169592355058370891251425125187770724828108988587888087023982451205475980371440423992838481547236638456717520835668859093413956339261802305597694403381021863258753441889536361061407579332570493634254542013337999844407181346815549594836374497512447969751514466481466717590255369810506813543577735080228718660747940956248427356785784199073569408/273368882980516556922532339653303822104510203916024760371844491705599093435133738774975538364241630079468712981056336655766117378160822393876348755370711942273876284944422610974149712212944211513462921649872232656449940987552227525504529710373144228818606127541937831103642415534318303187393593236209298242574677293352798419428712873685798636474667204083938875672934235816396371477146089168375198141802684403955936431884765625\",\"546411077581845999248238069684194831621691193366466972898628141511422317954477211865167402284211971296286346492698354214043840080181702652132835681239302798339667835439189275457116051279366194551632712819028177402221815140045210690908631767786711675029194359998826252332434573121740830827417293557234891406021102083555472155479148332697839972702631641910213821827820374586459319/105246945889799140338072754365901705544530661781295362563214285953881890233987516230568663143342952799036341701952267011236663118111226623815975847494372076420199418712941018288738590264475520229651370015377608638075866459684692488079223686296541020897904588347083045723167762682959422858996673894180805702299907478685374065593161226849447131100462022089783265346597553176576000\",\"2398330640958841474772606439916070050977544535580605737383995160447105736276950196885906408317628083110923322157113892928963237845914017845444295040924101784423382681801754191301860383927129006953354739240926643562987838836997453985855576402628166875869041032631651591871962852884189548538272285387092843044669499688035134181859376665409767886188304314888753894905317929877238322615838524354191263502347881033855441181420399360/461588070868590122892265681879734295007029130965626060552783760068897000195207878227714842617470320231527222074701444349530952699708435668339712860464533455345665068841333232359698449088497137068713309811942968433868609329301082001752617420002377892756821532220676085014874112083615054550278903960627185675459015343606391094523511117705747842645927349130302549554534056269331809016770715819934970200483161548527932617036185253\",\"6041015879424725383006424536130409209607854044642113747266098198777011981328765528361630516108680392500990580908509403483891763219659726090675140672989657743882183951954294745396417829943469201306594018454995862321821016087416840247422350906412007336103086620396467456181771583200365740253389107968122850063607085957109965406634738740996318415514360956028575560979203447735121436/1161752799109428422288020947061281540989708937450568100764830251908850596717606701047413407636907934320789870175907792017513896999208892282137299070761467096211814586909598705615312819596495636017728313513520193786266452836805291464826226833593878504804389728477191170027729963773716267868284479768397603444919008915279522376004326398403851684761808785381609370767169521034383625\",\"13240077436443988749179508462267267187169441948722358165090554769250505713747934643200804819418670147225695324432684266924694524337920816452346599774452681831320005286326986675907899608537972384924882996757503264622991355949039882526389342174307168805166215838138277557052303430492669193939212362638263582899713198716541723383138016564027766560215944409353427176135895982596327685665844815618402881202645610620284792793420780517248/2544223084468158291883698813309541801455311468982232546872485444308211415529998472787377800559884210837213042932180479090277285630234238711851480232520137856848809986631784843528381778520727465146661792797924458540957133423665746229799675650290296217658444899605236550972043549278128087645211909479009099766619355677984218929672461506691980442071860591767266913041147587815452007726513853820116629482732060593116624596368806566625\",\"1953999166296955830935495158735359200362904181792947794529339487489730042568305997099959302322956898299616194932283060554261566410988618045107398092345476532371402134206635235570281738377188438407703089325315446371127042537576093536896282955524842632708645655481028161471313608974238110718242273935956977555610147714316158486553633871312187084618154014921190595222799283957140353/375191165084882521037046014569185165885459082629136124177286500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"];if(t[e])return De.quick.apply(null,t[e].split(\"/\"));e=new De(e);for(var n=new De(0),r=e.subtract(new De(1)),i=e.add(new De(1)),s=0;s<80;s++)var o=new De(2*s+1),a=Te.bigpow(r.divide(i),o),a=o.clone().invert().multiply(a),n=n.add(a);return n.multiply(new De(2))},factorial:function(e){var t=e%1==0;if(t&&e<0)return NaN;if(!t)return Te.gamma(e+1);for(var n=1,r=2;r<=e;r++)n*=r;return n},dfactorial:function(e){if(ue(e)){var t=e%2==0,n=t?e/2:(e+1)/2,r=new De(1);if(t)for(var i=1;i<=n;i++)r=r.multiply(new De(2).multiply(new De(i)));else for(i=1;i<=n;i++)r=r.multiply(new De(2).multiply(new De(i)).subtract(new De(1)))}else r=Math.pow(2,(1+2*e-Math.cos(Math.PI*e))/4)*Math.pow(Math.PI,(Math.cos(Math.PI*e)-1)/4)*Te.gamma(1+e/2);return r},GCD:function(){for(var e=a([].slice.call(arguments).map(function(e){return Math.abs(e)})).sort(),t=Math.abs(e.shift()),n=e.length;0<n--;)for(var r=Math.abs(e.shift());;){if(0===(t%=r)){t=r;break}if(0===(r%=t))break}return t},QGCD:function(){for(var e=[].slice.call(arguments),t=e[0],n=1;n<e.length;n++){var r=e[n],i=t.isNegative()&&r.isNegative()?-1:1,t=r.gcd(t);i<0&&t.negate()}return t},LCM:function(e,t){return e*t/Te.GCD(e,t)},pow:function(e,t){return e<0&&Math.abs(t)<1?1/t%2==0?NaN:-Math.pow(Math.abs(e),t):Math.pow(e,t)},factor:function(e){e=Number(e);var t=Math.sign(e);e=Math.abs(e);var n,r=Te.ifactor(e),i=new Fe;for(n in i.symbols={},i.group=X,r){var s=new Fe(1);s.group=B,s.value=n,s.power=new Fe(r[n]),i.symbols[n]=s}return i.updateHash(),1===e&&(i=new Fe(e)),t<0&&i.negate(),i},sfactor:function(e,t){t=t||{};var n=Math.floor(Math.sqrt(e));o[o.length-1]<n&&e<1e6&&u(n);for(var r=o.length,i=0;i<r;i++)for(var s=o[i];e%s==0;)e/=s,t[s]=(t[s]||0)+1;return 1<e&&(t[e]=1),t},ifactor:function(a){var t=new S(a);if(\"0\"===(a=String(a)))return{0:1};var e=(a=new S(a)).sign?-1:1;a=a.abs();var n={};if(a.lt(\"65536\"))n=Te.sfactor(a,n);else{var r=function(e){e.isPrime()?n[e]=(n[e]||0)+1:n=Te.sfactor(e,n)};try{for(var u=1e3,l=0;!a.abs().equals(1);){if(a.isPrime()){r(a);break}var i=function e(t){for(var n=new S(t),r=2,i=new S(t),s=new S(1);s.equals(1);){for(var o=0;o<=r&&s.equals(1);o++){if(l++>u)throw new Error(\"stopping\");i=i.pow(2).add(1).mod(a),s=S.gcd(i.minus(n).abs(),a)}r*=2,n=i}return s.equals(a)?e(t+1):s}(2);r(i),a=a.divide(i)}}catch(e){n={},r(t)}}return-1==e&&(e=c(q(n)),n[\"-\"+e]=n[e],delete n[e]),n},boxfactor:function(e,t){t=t||200;for(var n,r,i=Math.floor(5/12*e),s=0,o=!1;n=Math.floor(e/i),0!=(r=e%i);){if(o)return[e,1];i=Math.max(r,i-r),o=t<++s}return[n,i,s]},fib:function(e){var t=Math.sign(e);e=Math.abs(e);for(var t=ge(e)?t:Math.abs(t),n=0,r=1,i=1,s=2;s<=e;s++)i=n+r,n=r,r=i;return i*t},mod:function(e,t){return e%t},integer_part:function(e){return Math.sign(e)*Math.floor(Math.abs(e))},simpson:function(e,t,n,r){function i(e,t,n){var r=e(t);return r=isNaN(r)?e(1===n?t+1e-12:t-1e-12):r}r=r||1e-4;var s=Math.abs(Math.floor((n-t)/r));s%2!=0&&s++;for(var o=(n-t)/s,a=i(e,t,1),u=!1,l=t+o,c=1;c<s;c++)a+=(u?2:4)*i(e,l,1),u=!u,l+=o;return(a+i(e,l,2))*(o/3)},num_integrate:function(t,n,r,e,i){if(i<0)throw new Error(\"max depth cannot be negative\");function s(e,t,n,r,i){var s={maxDepthCount:0,nanEncountered:!1};void 0===r&&(r=1e-9),void 0===i&&(i=45);var o=e(t),a=e(.5*(t+n)),u=e(n),r=function e(t,n,r,i,s,o,a,u,l,c,p){if(p.nanEncountered)return NaN;var f,h,m,g=r-n,d=t(n+.25*g),v=t(r-.25*g);if(isNaN(d))p.nanEncountered=!0;else if(isNaN(v))p.nanEncountered=!0;else if(a=((h=(m=g*(i+4*d+s)/12)+(f=g*(s+4*v+o)/12))-a)/15,!(p.maxDepthCount>1e3*l))return l<c?(p.maxDepthCount++,h+a):Math.abs(a)<u?h+a:(m=e(t,n,g=n+.5*g,i,d,s,m,.5*u,l,c+1,p),isNaN(m)?(p.nanEncountered=!0,NaN):(c=e(t,g,r,s,v,o,f,.5*u,l,c+1,p),isNaN(c)?(p.nanEncountered=!0,NaN):m+c))}(e,t,n,o,a,u,(o+4*a+u)*(n-t)/6,r,i,1,s);if(0<s.maxDepthCount&&ee(\"integrate-adaptive-simpson: Warning: maximum recursion depth (\"+i+\") reached \"+s.maxDepthCount+\" times\"),s.nanEncountered)throw new Error(\"Function does not converge over interval!\");return r}var o;try{o=s(t,n,r,e,i)}catch(e){return Te.simpson(t,n,r)}return me(o,12)},Ci:function(e){for(var t=0,n=1;n<20;n++){var r=2*n;t+=Math.pow(-1,n)*Math.pow(e,r)/(r*Te.factorial(r))}return Math.log(e)+.5772156649015329+t},Si:function(e){for(var t=0,n=0;n<20;n++){var r=2*n;t+=Math.pow(-1,n)*Math.pow(e,1+r)/((1+r)*Te.factorial(1+r))}return t},Ei:function(e){if(0===Number(e))return-1/0;for(var t=0,n=1;n<30;n++)t+=Math.pow(e,n)/(n*Te.factorial(n));return.5772156649015329+Math.abs(Math.log(e))+t},Shi:function(e){for(var t,n,r=0,i=0;i<30;i++)n=1+(t=2*i),r+=Math.pow(e,n)/(n*n*Te.factorial(t));return r},Chi:function(e){var t=function(e){return(Math.cosh(e)-1)/e};return Math.log(e)+.5772156649015329+Te.num_integrate(t,.002,e,.001)},Li:function(e){return Te.Ei(Te.bigLog(e))},gamma_incomplete:function(e,t){for(var n=e-1,r=0,t=t||0,i=0;i<n;i++)r+=Math.pow(t,i)/Te.factorial(i);return Te.factorial(n)*Math.exp(-t)*r},step:function(e){return 0<e?1:e<0?0:.5},rect:function(e){return.5===(e=Math.abs(e))?e:.5<e?0:1},sinc:function(e){return e.equals(0)?1:Math.sin(e)/e},tri:function(e){return 1<=(e=Math.abs(e))?0:1-e},nthroot:function(e,t){if(e instanceof De||(e=new De(e.toString())),(t=!(t instanceof De)?new De(t.toString()):t).equals(1))return e;var n=e.divide(new De(2)),r=new De(1e-15),i=t.clone().invert(),s=t.subtract(new De(1));do{var o=Te.bigpow(n,s),a=i.multiply(e.divide(o).subtract(n)).toDecimal(25),o=De.create(a);if(u)break;var n=n.add(o),a=o.toDecimal(),u=!!l&&l===a,l=a}while(o.abs().gte(r));return n},sqrt:function(e){var t,n,r;e instanceof De||(e=new De(e));var i=0,s=!1,o=new De(1e-20),a=e.divide(new De(2));do{if(1e3<i)throw new Error(\"Unable to calculate square root for \"+e)}while(a=a.add(e.divide(a)).divide(new De(2)),a=new De(a.decimal(30)),t=e.subtract(a.multiply(a)),r=!!n&&n.equals(t),(t.clone().abs().lessThan(o)||r)&&(s=!0),n=t,i++,!s);return a}};function Pe(e,m,t,n){var r=\"hash\"===m,g=void 0,i=r?void 0:m,s=\"decimal\"===i||\"decimals\"===i;function o(e){switch(m){case\"decimals\":case\"decimal\":return g=g||function(e){return!1},e.valueOf();case\"recurring\":g=g||function(e){return-1!==e.indexOf(\"'\")};var t=e.toString();if(0===(f=/^-?\\d+(?:\\/\\d+)?$/.exec(t)).length)return t;var n=f[0].split(\"/\"),r=!1,i=Number(n[0]);i<0&&(i=-i,r=!0);var s=(s=Number(n[1]))||1,o=10*(i-(h=Math.floor(i/s))*s);for(h=h.toString()+\".\";o&&o<s;)o*=10,h+=\"0\";for(var a=\"\",u=[],l=0;;){if(void 0!==u[o])return(r?\"-\":\"\")+(h+a.slice(0,u[o])+\"'\"+a.slice(u[o])+\"'\").replace(\"'0'\",\"\").replace(/\\.$/,\"\");var c=Math.floor(o/s),p=o-c*s;u[o]=l,a+=c.toString(),l+=1,o=10*p}case\"mixed\":g=g||function(e){return-1!==e.indexOf(\"/\")};t=e.toString();if(0===(f=/^-?\\d+(?:\\/\\d+)?$/.exec(t)).length)return t;var n=f[0].split(\"/\"),t=new S(n[0]),f=new S(n[1]);f.equals(0)&&(f=new S(1));var t=t.divmod(f),h=t.quotient,f=t.remainder,t=\"-\"===n[0][0]||h.equals(0)||f.equals(0)?\"\":\"+\";return(h.equals(0)?\"\":h.toString())+t+(f.equals(0)?\"\":f.toString()+\"/\"+n[1]);case\"scientific\":return g=g||function(e){return!1},new T(e.valueOf()).toString(D.SCIENTIFIC_MAX_DECIMAL_PLACES);default:return g=g||function(e){return-1!==e.indexOf(\"/\")},e.toString()}}if(s&&void 0===n&&(n=D.DEFAULT_DECP),ne(e)){var a,u,l=\"\",c=\"\",p=\"\",f=e.group||t,h=e.value;switch(r||(\"-1\"==(a=o(e.multiplier))&&\"-1\"===String(e.multiplier)&&(p=\"-\",a=\"1\"),\"1\"!=a&&(l=a),\"1\"!=(u=e.power?o(e.power):\"\")&&(c=ne(u)?Pe(u,i):u)),f){case F:var l=\"\",d=n&&s?e.multiplier.toDecimal(n):o(e.multiplier),h=\"-1\"==String(e.multiplier)?\"1\":d,c=\"\";break;case j:h=e.collectSymbols().map(function(e){e=Pe(e,i,t,n);return e=\"0\"==e?\"\":e}).sort().join(\"+\").replace(/\\+\\-/g,\"-\");break;case $:h=e.collectSymbols().map(function(e){e=Pe(e,i,t,n);return e=\"0\"==e?\"\":e}).sort().join(\"+\").replace(/\\+\\-/g,\"-\");break;case X:h=e.collectSymbols(function(e){var t=e.group;return(t===j||t===$)&&e.power.equals(1)&&e.multiplier.equals(1)?E(Pe(e,i)):Pe(e,i)}).join(\"*\");break;case V:var v=e.previousGroup,d=e.power.group;v===j&&(h=e.collectSymbols(Pe,i).join(\"+\").replace(\"+-\",\"-\")),v===F||v===G||v===H||r||(h=E(h)),d!==$&&d!==X&&d!==j&&\"1\"==e.power.multiplier.toString()||!c||(c=E(c))}f===H&&(h=e.fname+E(e.args.map(function(e){return Pe(e,i)}).join(\",\"))),f===H&&e.fname in M&&(a=Pe(e.args[0]),u=Pe(e.args[1]),e.args[0].isComposite()&&(a=E(a)),e.args[1].isComposite()&&(u=E(u)),h=a+M[e.fname]+u),c&&f!==V&&g(c)&&(c=E(c)),((f===$||f===j)&&(l&&\"1\"!=l||\"-\"===p)||(f===X||f===$||f===j)&&c&&\"1\"!=c||!r&&f===B&&-1==h||e.fname===Z)&&(h=E(h));var w=p+(l=n&&(\"decimal\"===m||\"decimals\"===m&&l)?me(l,n):l);if(l&&g(l)&&(w=E(w)),l&&(w+=\"*\"),c=c<0?E(c):c){if(\"e\"===h&&D.E_TO_EXP)return w+\"exp\"+E(c);c=D.POWER_OPERATOR+c}f=w+(h=f===V&&\"-\"===h.charAt(0)?E(h):h);return(f=e.parens?E(f):f)+c}if(re(e)){for(var y=e.elements.length,w=[],b=0;b<y;b++)w.push(e.elements[b].text(m));return\"[\"+w.join(\",\")+\"]\"}try{return e.toString()}catch(e){return\"\"}}function ke(e){if(g(e))return[e];for(var t=e,n=1,r=[];n<t;){var i=e/n,s=Math.floor(i);if(i-s<=2220446049250313e-31&&1<n){if(g(n)&&(-1===o.indexOf(n)&&o.push(n),r.push(n)),g(s)){r.push(s);break}t=s}n++}return r.sort(function(e,t){return e-t})}function R(e){this.symbol=e}function T(e){return this instanceof T?((e=String(void 0===e?0:e)).startsWith(\"-\")?(this.sign=-1,e=e.substr(1,e.length)):this.sign=1,T.isScientific(e)?this.fromScientific(e):this.convert(e),this):new T(e)}function De(t){if(t instanceof De)return t;if(void 0===t)return this;try{if(ue(t))try{this.num=S(t),this.den=S(1)}catch(e){return De.simple(t)}else{var e=t instanceof k?Be.quickConversion(t):Be.convert(t);this.num=new S(e[0]),this.den=new S(e[1])}}catch(e){return De.simple(t)}}function Fe(e){var t=\"Infinity\"===e;return this instanceof Fe?(e instanceof k&&(e=e.toString()),/^(\\-?\\+?\\d+)\\.?\\d*e?\\-?\\+?\\d*/i.test(e)||e instanceof k?(this.group=F,this.value=l,this.multiplier=new De(e)):(this.group=G,m(e),this.value=e,this.multiplier=new De(1),this.imaginary=e===D.IMAGINARY,this.isInfinity=t),this.power=new De(1),this):new Fe(e)}function P(){var C=this,n={},o={names:[],actions:[]};function x(e,t){this.start=e,this.end=t}function L(){this.elements=[]}function A(e,t,n){if(this.type=t,this.value=e,void 0!==n&&(this.column=n+1),t===A.OPERATOR){var r,i=E[e];for(r in i)this[r]=i[r]}else t===A.FUNCTION&&(this.precedence=A.MAX_PRECEDENCE,this.leftAssoc=!1)}x.prototype.isConstant=function(){return this.start.isConstant()&&this.end.isConstant()},x.prototype.text=function(){return Pe(this.start)+\":\"+Pe(this.end)},L.prototype.append=function(e){this.elements.push(e)},L.prototype.getItems=function(){return this.elements},L.prototype.toString=function(){return C.pretty_print(this.elements)},L.create=function(e){var t=new L;return e&&t.append(e),t},A.prototype.toString=function(){return this.value},A.prototype.toString=function(){return this.is_prefix?\"`\"+this.value:this.value},A.OPERATOR=\"OPERATOR\",A.VARIABLE_OR_LITERAL=\"VARIABLE_OR_LITERAL\",A.FUNCTION=\"FUNCTION\",A.UNIT=\"UNIT\",A.KEYWORD=\"KEYWORD\",A.MAX_PRECEDENCE=999,this.classes={Collection:L,Slice:x,Token:A};var b={prec:void 0,cos:function(e,t){var n=C.parse(Math.cos(e)*Math.cosh(t)),t=C.parse(Math.sin(e)*Math.sinh(t));return C.subtract(n,C.multiply(t,Fe.imaginary()))},sin:function(e,t){var n=C.parse(Math.sin(e)*Math.cosh(t)),t=C.parse(Math.cos(e)*Math.sinh(t));return C.subtract(n,C.multiply(t,Fe.imaginary()))},tan:function(e,t){var n=C.parse(Math.sin(2*e)/(Math.cos(2*e)+Math.cosh(2*t))),t=C.parse(Math.sinh(2*t)/(Math.cos(2*e)+Math.cosh(2*t)));return C.add(n,C.multiply(t,Fe.imaginary()))},sec:function(e,t){t=this.removeDen(this.cos(e,t));return C.subtract(t[0],C.multiply(t[1],Fe.imaginary()))},csc:function(e,t){t=this.removeDen(this.sin(e,t));return C.add(t[0],C.multiply(t[1],Fe.imaginary()))},cot:function(e,t){t=this.removeDen(this.tan(e,t));return C.subtract(t[0],C.multiply(t[1],Fe.imaginary()))},acos:function(e,t){var e=this.fromArray([e,t]),t=C.pow(e.clone(),new Fe(2)),t=C.expand(t),t=C.multiply(O(C.subtract(new Fe(1),t)),Fe.imaginary()),t=R(C.expand(C.add(e.clone(),t)));return C.expand(C.multiply(Fe.imaginary().negate(),t))},asin:function(e,t){return C.subtract(C.parse(\"pi/2\"),this.acos(e,t))},atan:function(e,t){if(e.equals(0)&&(t.equals(1)||t.equals(-1)))return C.parse(`${Fe.infinity()}*${D.IMAGINARY}*${t}`);var e=b.fromArray([e,t]),t=C.expand(C.multiply(Fe.imaginary(),e.clone())),e=R(C.expand(C.subtract(new Fe(1),t.clone()))),t=R(C.expand(C.add(new Fe(1),t.clone())));return C.expand(C.multiply(C.divide(Fe.imaginary(),new Fe(2)),C.subtract(e,t)))},asec:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.acos.apply(this,t)},acsc:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.asin.apply(this,t)},acot:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.atan.apply(this,t)},cosh:function(e,t){var n=C.parse(Math.cosh(e)*Math.cos(t)),t=C.parse(Math.sinh(e)*Math.sin(t));return C.add(n,C.multiply(t,Fe.imaginary()))},sinh:function(e,t){var n=C.parse(Math.sinh(e)*Math.cos(t)),t=C.parse(Math.cosh(e)*Math.sin(t));return C.add(n,C.multiply(t,Fe.imaginary()))},tanh:function(e,t){var n=C.parse(Math.sinh(2*e)/(Math.cos(2*t)+Math.cosh(2*e))),e=C.parse(Math.sin(2*t)/(Math.cos(2*t)+Math.cosh(2*e)));return C.subtract(n,C.multiply(e,Fe.imaginary()))},sech:function(e,t){t=this.removeDen(this.cosh(e,t));return C.subtract(t[0],C.multiply(t[1],Fe.imaginary()))},csch:function(e,t){t=this.removeDen(this.sinh(e,t));return C.subtract(t[0],C.multiply(t[1],Fe.imaginary()))},coth:function(e,t){t=this.removeDen(this.tanh(e,t));return C.add(t[0],C.multiply(t[1],Fe.imaginary()))},acosh:function(e,t){var n=this.fromArray([e,t]),e=O(C.add(n.clone(),new Fe(1))),t=O(C.subtract(n.clone(),new Fe(1)));return C.expand(R(C.add(n,C.expand(C.multiply(e,t)))))},asinh:function(e,t){e=this.fromArray([e,t]),t=O(C.add(new Fe(1),C.expand(C.pow(e.clone(),new Fe(2)))));return C.expand(R(C.add(e,t)))},atanh:function(e,t){var e=this.fromArray([e,t]),t=R(C.add(e.clone(),new Fe(1))),e=R(C.subtract(new Fe(1),e));return C.expand(C.divide(C.subtract(t,e),new Fe(2)))},asech:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.acosh.apply(this,t)},acsch:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.asinh.apply(this,t)},acoth:function(e,t){t=this.removeDen([e,t]);return t[1].negate(),this.atanh.apply(this,t)},sqrt:function(e){var t=e.realpart(),n=e.imagpart(),e=Fe.hyp(t,n),t=C.add(t.clone(),e),e=O(C.multiply(new Fe(2),t.clone()));return C.add(C.divide(t.clone(),e.clone()),C.multiply(C.divide(n,e),Fe.imaginary()))},log:function(e,t){var n=R(Fe.hyp(e,t)),e=D.USE_BIG?Fe(k.atan2(t.multiplier.toDecimal(),e.multiplier.toDecimal())):Math.atan2(t,e),e=C.parse(e);return C.add(n,C.multiply(Fe.imaginary(),e))},erf(e,t){return C.symfunction(\"erf\",[e])},removeDen:function(e){var t,n=ae(e)?(t=e[0],e[1]):(t=e.realpart(),e.imagpart()),e=Math.pow(t,2)+Math.pow(n,2);return[C.parse(t/e),C.parse(n/e)]},fromArray:function(e){return C.add(e[0],C.multiply(Fe.imaginary(),e[1]))},evaluate:function(e,t){var n,r,i=e.power.sign();return e.power=e.power.abs(),e.power.greaterThan(1)&&(e=C.expand(e)),r=i<0?(n=(r=this.removeDen(e))[0],r[1]):(n=e.realpart(),e.imagpart()),n.isConstant(\"all\")&&r.isConstant(\"all\")?this[t].call(this,n,r):C.symfunction(t,[e])}},I=this.trig={cos:function(e){if(e.equals(\"pi\")&&e.multiplier.den.equals(2))return new Fe(0);if(D.PARSE2NUMBER){if(e.equals(new Fe(D.PI/2)))return new Fe(0);if(e.isConstant())return D.USE_BIG?new Fe(k.cos(e.multiplier.toDecimal())):new Fe(Math.cos(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"cos\")}if(e.equals(0))return new Fe(1);var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier.abs();return e.multiplier=i,e.isPi()&&e.isLinear()&&(ue(i)?t=new Fe(ge(i)?1:-1):(Number(i.num),2===(i=Number(i.den))?t=new Fe(0):3===i?(t=C.parse(\"1/2\"),n=!0):4===i?(t=C.parse(\"1/sqrt(2)\"),n=!0):6===i?(t=C.parse(\"sqrt(3)/2\"),n=!0):t=C.symfunction(\"cos\",[e]))),!n||2!==r&&3!==r||t.negate(),t=t||C.symfunction(\"cos\",[e])},sin:function(e){if(D.PARSE2NUMBER){if(e.isConstant())return e%Math.PI==0?new Fe(0):D.USE_BIG?new Fe(k.sin(e.multiplier.toDecimal())):new Fe(Math.sin(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"sin\")}if(e.equals(0))return new Fe(0);var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier.sign(),s=e.multiplier.abs();return e.multiplier=s,e.equals(\"pi\")?t=new Fe(0):e.isPi()&&e.isLinear()&&(ue(s)?t=new Fe(0):(s.num,2==(s=s.den)?(t=new Fe(1),n=!0):3==s?(t=C.parse(\"sqrt(3)/2\"),n=!0):4==s?(t=C.parse(\"1/sqrt(2)\"),n=!0):6==s?(t=C.parse(\"1/2\"),n=!0):t=C.multiply(new Fe(i),C.symfunction(\"sin\",[e])))),t=t||C.multiply(new Fe(i),C.symfunction(\"sin\",[e])),!n||3!==r&&4!==r||t.negate(),t},tan:function(e){if(D.PARSE2NUMBER){if(e%Math.PI==0&&e.isLinear())return new Fe(0);if(e.isConstant())return D.USE_BIG?new Fe(k.tan(e.multiplier.toDecimal())):new Fe(Math.tan(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"tan\")}var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier;if(e.multiplier=i,e.isPi()&&e.isLinear())if(ue(i))t=new Fe(0);else{i.num;i=i.den;if(2==i)throw new Ae(\"tan is undefined for \"+e.toString());3==i?(t=C.parse(\"sqrt(3)\"),n=!0):4==i?(t=new Fe(1),n=!0):6==i?(t=C.parse(\"1/sqrt(3)\"),n=!0):t=C.symfunction(\"tan\",[e])}return t=t||C.symfunction(\"tan\",[e]),!n||2!==r&&4!==r||t.negate(),t},sec:function(e){if(D.PARSE2NUMBER)return e.isConstant()?D.USE_BIG?new Fe(new k(1).dividedBy(k.cos(e.multiplier.toDecimal()))):new Fe(Te.sec(e.valueOf())):e.isImaginary()?b.evaluate(e,\"sec\"):C.parse(ce(\"1/cos({0})\",e));var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier.abs();if(e.multiplier=i,e.isPi()&&e.isLinear())if(ue(i))t=new Fe(ge(i)?1:-1);else{i.num;i=i.den;if(2==i)throw new Ae(\"sec is undefined for \"+e.toString());3==i?(t=new Fe(2),n=!0):4==i?(t=C.parse(\"sqrt(2)\"),n=!0):6==i?(t=C.parse(\"2/sqrt(3)\"),n=!0):t=C.symfunction(\"sec\",[e])}return!n||2!==r&&3!==r||t.negate(),t=t||C.symfunction(\"sec\",[e])},csc:function(e){if(D.PARSE2NUMBER)return e.isConstant()?D.USE_BIG?new Fe(new k(1).dividedBy(k.sin(e.multiplier.toDecimal()))):new Fe(Te.csc(e.valueOf())):e.isImaginary()?b.evaluate(e,\"csc\"):C.parse(ce(\"1/sin({0})\",e));var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier.sign(),s=e.multiplier.abs();if(e.multiplier=s,e.isPi()&&e.isLinear()){if(ue(s))throw new Ae(\"csc is undefined for \"+e.toString());s.num;s=s.den;2==s?(t=new Fe(1),n=!0):3==s?(t=C.parse(\"2/sqrt(3)\"),n=!0):4==s?(t=C.parse(\"sqrt(2)\"),n=!0):6==s?(t=new Fe(2),n=!0):t=C.multiply(new Fe(i),C.symfunction(\"csc\",[e]))}return t=t||C.multiply(new Fe(i),C.symfunction(\"csc\",[e])),!n||3!==r&&4!==r||t.negate(),t},cot:function(e){if(D.PARSE2NUMBER)return e%(Math.PI/2)==0?new Fe(0):e.isConstant()?D.USE_BIG?new Fe(new k(1).dividedBy(k.tan(e.multiplier.toDecimal()))):new Fe(Te.cot(e.valueOf())):e.isImaginary()?b.evaluate(e,\"cot\"):C.parse(ce(\"1/tan({0})\",e));var t,n=!1,r=g(e.multiplier.toDecimal()),i=e.multiplier;if(e.multiplier=i,e.isPi()&&e.isLinear()){if(ue(i))throw new Ae(\"cot is undefined for \"+e.toString());i.num;i=i.den;2==i?t=new Fe(0):3==i?(t=C.parse(\"1/sqrt(3)\"),n=!0):4==i?(t=new Fe(1),n=!0):6==i?(t=C.parse(\"sqrt(3)\"),n=!0):t=C.symfunction(\"cot\",[e])}return t=t||C.symfunction(\"cot\",[e]),!n||2!==r&&4!==r||t.negate(),t},acos:function(e){if(D.PARSE2NUMBER){if(e.isConstant()){if(e.gt(1)||e.lt(-1)){var t=e.toString();return T(Se(`pi/2-asin(${t})`))}return D.USE_BIG?new Fe(k.acos(e.multiplier.toDecimal())):new Fe(Math.acos(e.valueOf()))}if(e.isImaginary())return b.evaluate(e,\"acos\")}return C.symfunction(\"acos\",arguments)},asin:function(e){if(D.PARSE2NUMBER){if(e.isConstant()){if(e.gt(1)||e.lt(-1)){var t=D.IMAGINARY,n=e.multiplier.toDecimal();return T(Se(`${t}*log(sqrt(1-${n}^2)-${t}*${n})`))}return D.USE_BIG?new Fe(k.asin(e.multiplier.toDecimal())):new Fe(Math.asin(e.valueOf()))}if(e.isImaginary())return b.evaluate(e,\"asin\")}return C.symfunction(\"asin\",arguments)},atan:function(e){var t;if(e.equals(0))t=new Fe(0);else{if(D.PARSE2NUMBER)return e.isConstant()?D.USE_BIG?new Fe(k.atan(e.multiplier.toDecimal())):new Fe(Math.atan(e.valueOf())):e.isImaginary()?b.evaluate(e,\"atan\"):C.symfunction(\"atan\",arguments);t=e.equals(-1)?C.parse(\"-pi/4\"):C.symfunction(\"atan\",arguments)}return t},asec:function(e){if(D.PARSE2NUMBER){if(e.equals(0))throw new Ce(\"Input is out of the domain of sec!\");if(e.isConstant())return I.acos(e.invert());if(e.isImaginary())return b.evaluate(e,\"asec\")}return C.symfunction(\"asec\",arguments)},acsc:function(e){if(D.PARSE2NUMBER){if(e.isConstant())return I.asin(e.invert());if(e.isImaginary())return b.evaluate(e,\"acsc\")}return C.symfunction(\"acsc\",arguments)},acot:function(e){if(D.PARSE2NUMBER){if(e.isConstant())return new C.add(C.parse(\"pi/2\"),I.atan(e).negate());if(e.isImaginary())return b.evaluate(e,\"acot\")}return C.symfunction(\"acot\",arguments)},atan2:function(e,t){if(e.equals(0)&&t.equals(0))throw new Ae(\"atan2 is undefined for 0, 0\");return D.PARSE2NUMBER&&e.isConstant()&&t.isConstant()?new Fe(Math.atan2(e,t)):C.symfunction(\"atan2\",arguments)}},e=this.trigh={cosh:function(e){if(D.PARSE2NUMBER){if(e.isConstant())return new Fe(Math.cosh(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"cosh\")}return C.symfunction(\"cosh\",arguments)},sinh:function(e){if(D.PARSE2NUMBER){if(e.isConstant())return new Fe(Math.sinh(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"sinh\")}return C.symfunction(\"sinh\",arguments)},tanh:function(e){if(D.PARSE2NUMBER){if(e.isConstant())return new Fe(Math.tanh(e.valueOf()));if(e.isImaginary())return b.evaluate(e,\"tanh\")}return C.symfunction(\"tanh\",arguments)},sech:function(e){return D.PARSE2NUMBER?e.isConstant()?new Fe(Math.sech(e.valueOf())):e.isImaginary()?b.evaluate(e,\"sech\"):C.parse(ce(\"1/cosh({0})\",e)):C.symfunction(\"sech\",arguments)},csch:function(e){return D.PARSE2NUMBER?e.isConstant()?new Fe(Math.csch(e.valueOf())):e.isImaginary()?b.evaluate(e,\"csch\"):C.parse(ce(\"1/sinh({0})\",e)):C.symfunction(\"csch\",arguments)},coth:function(e){return D.PARSE2NUMBER?e.isConstant()?new Fe(Math.coth(e.valueOf())):e.isImaginary()?b.evaluate(e,\"coth\"):C.parse(ce(\"1/tanh({0})\",e)):C.symfunction(\"coth\",arguments)},acosh:function(e){e=D.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"acosh\"):D.PARSE2NUMBER?Se(C.parse(ce(D.LOG+\"(({0})+sqrt(({0})^2-1))\",e.toString()))):C.symfunction(\"acosh\",arguments);return e},asinh:function(e){e=D.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"asinh\"):D.PARSE2NUMBER?Se(C.parse(ce(D.LOG+\"(({0})+sqrt(({0})^2+1))\",e.toString()))):C.symfunction(\"asinh\",arguments);return e},atanh:function(e){e=D.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"atanh\"):D.PARSE2NUMBER?Se(C.parse(ce(\"(1/2)*\"+D.LOG+\"((1+({0}))/(1-({0})))\",e.toString()))):C.symfunction(\"atanh\",arguments);return e},asech:function(e){e=D.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"asech\"):D.PARSE2NUMBER?Se(R(C.add(e.clone().invert(),O(C.subtract(C.pow(e,new Fe(-2)),new Fe(1)))))):C.symfunction(\"asech\",arguments);return e},acsch:function(e){e=D.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"acsch\"):D.PARSE2NUMBER?Se(C.parse(ce(D.LOG+\"((1+sqrt(1+({0})^2))/({0}))\",e.toString()))):C.symfunction(\"acsch\",arguments);return e},acoth:function(e){e=D.PARSE2NUMBER&&e.isImaginary()?b.evaluate(e,\"acoth\"):D.PARSE2NUMBER?e.equals(1)?Fe.infinity():Se(C.divide(R(C.divide(C.add(e.clone(),new Fe(1)),C.subtract(e.clone(),new Fe(1)))),new Fe(2))):C.symfunction(\"acoth\",arguments);return e}},E={\"\\\\\":{precedence:8,operator:\"\\\\\",action:\"slash\",prefix:!0,postfix:!(this.units={}),leftAssoc:!0,operation:function(e){return e}},\"!!\":{precedence:7,operator:\"!!\",action:\"dfactorial\",prefix:!1,postfix:!0,leftAssoc:!0,operation:function(e){return C.symfunction(D.DOUBLEFACTORIAL,[e])}},\"!\":{precedence:7,operator:\"!\",action:\"factorial\",prefix:!1,postfix:!0,leftAssoc:!0,operation:u},\"^\":{precedence:6,operator:\"^\",action:\"pow\",prefix:!1,postfix:!1,leftAssoc:!0},\"**\":{precedence:6,operator:\"**\",action:\"pow\",prefix:!1,postfix:!1,leftAssoc:!0},\"%\":{precedence:4,operator:\"%\",action:\"percent\",prefix:!1,postfix:!0,leftAssoc:!0,overloaded:!0,overloadAction:\"mod\",overloadLeftAssoc:!1,operation:function(e){return C.divide(e,new Fe(100))}},\"*\":{precedence:4,operator:\"*\",action:\"multiply\",prefix:!1,postfix:!1,leftAssoc:!1},\"/\":{precedence:4,operator:\"/\",action:\"divide\",prefix:!1,postfix:!1,leftAssoc:!1},\"+\":{precedence:3,operator:\"+\",action:\"add\",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e}},plus:{precedence:3,operator:\"plus\",action:\"add\",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e}},\"-\":{precedence:3,operator:\"-\",action:\"subtract\",prefix:!0,postfix:!1,leftAssoc:!1,operation:function(e){return e.negate()}},\"=\":{precedence:2,operator:\"=\",action:\"equals\",prefix:!1,postfix:!1,leftAssoc:!1},\"==\":{precedence:1,operator:\"==\",action:\"eq\",prefix:!1,postfix:!1,leftAssoc:!1},\"<\":{precedence:1,operator:\"<\",action:\"lt\",prefix:!1,postfix:!1,leftAssoc:!1},\"<=\":{precedence:1,operator:\"<=\",action:\"lte\",prefix:!1,postfix:!1,leftAssoc:!1},\">\":{precedence:1,operator:\">\",action:\"gt\",prefix:!1,postfix:!1,leftAssoc:!1},\"=>\":{precedence:1,operator:\"=>\",action:\"gte\",prefix:!1,postfix:!1,leftAssoc:!1},\",\":{precedence:0,operator:\",\",action:\"comma\",prefix:!1,postfix:!1,leftAssoc:!1},\":\":{precedence:0,operator:\",\",action:\"assign\",prefix:!1,postfix:!1,leftAssoc:!1,vectorFn:\"slice\"},\":=\":{precedence:0,operator:\",\",action:\"function_assign\",prefix:!1,postfix:!1,leftAssoc:!0}},q={\"(\":{type:\"round\",id:1,is_open:!0,is_close:!1},\")\":{type:\"round\",id:2,is_open:!1,is_close:!0},\"[\":{type:\"square\",id:3,is_open:!0,is_close:!1,maps_to:\"vector\"},\"]\":{type:\"square\",id:4,is_open:!1,is_close:!0},\"{\":{type:\"curly\",id:5,is_open:!0,is_close:!1,maps_to:\"Set\"},\"}\":{type:\"curly\",id:6,is_open:!1,is_close:!0}},U=this.functions={cos:[I.cos,1],sin:[I.sin,1],tan:[I.tan,1],sec:[I.sec,1],csc:[I.csc,1],cot:[I.cot,1],acos:[I.acos,1],asin:[I.asin,1],atan:[I.atan,1],arccos:[I.acos,1],arcsin:[I.asin,1],arctan:[I.atan,1],asec:[I.asec,1],acsc:[I.acsc,1],acot:[I.acot,1],atan2:[I.atan2,2],acoth:[e.acoth,1],asech:[e.asech,1],acsch:[e.acsch,1],sinh:[e.sinh,1],cosh:[e.cosh,1],tanh:[e.tanh,1],asinh:[e.asinh,1],sech:[e.sech,1],csch:[e.csch,1],coth:[e.coth,1],acosh:[e.acosh,1],atanh:[e.atanh,1],log10:[,1],exp:[function(e){if(e.fname===D.LOG&&e.isLinear())return C.pow(e.args[0],Fe.create(e.multiplier));return C.parse(ce(\"e^({0})\",e))},1],radians:[function(e){return C.parse(ce(\"({0})*pi/180\",e))},1],degrees:[function(e){return C.parse(ce(\"({0})*180/pi\",e))},1],min:[function(){var e=[].slice.call(arguments);return w(e)?e[0]:Me(e)?new Fe(Math.min.apply(null,e)):D.SYMBOLIC_MIN_MAX&&Ne(e)?h(\"min\",e):C.symfunction(\"min\",e)},-1],max:[function(){var e=[].slice.call(arguments);return w(e)?e[0]:Me(e)?new Fe(Math.max.apply(null,e)):D.SYMBOLIC_MIN_MAX&&Ne(e)?h(\"max\",e):C.symfunction(\"max\",e)},-1],erf:[,1],floor:[,1],ceil:[,1],trunc:[,1],Si:[,1],step:[,1],rect:[,1],sinc:[function(e){if(D.PARSE2NUMBER)return e.isConstant()?new Fe(Te.sinc(e)):C.parse(ce(\"sin({0})/({0})\",e));return C.symfunction(\"sinc\",[e])},1],tri:[,1],sign:[function(e){return e.isConstant(!0)?new Fe(Math.sign(Se(e))):C.symfunction(\"sign\",arguments)},1],Ci:[,1],Ei:[,1],Shi:[,1],Chi:[,1],Li:[,1],fib:[,1],fact:[u,1],factorial:[u,1],continued_fraction:[function(e,t){e=Se(e);if(e.isConstant()){e=Te.continuedFraction(e,t),t=Ve.fromArray(e.fractions.map(function(e){return new Fe(e)}));return Ve.fromArray([new Fe(e.sign),new Fe(e.whole),t])}return C.symfunction(\"continued_fraction\",arguments)},[1,2]],dfactorial:[,1],gamma_incomplete:[,[1,2]],round:[m,[1,2]],scientific:[function(e,t){return e.scientific=t||10,e},[1,2]],mod:[t,2],pfactor:[N,1],vector:[function(){return new Ve([].slice.call(arguments))},-1],matrix:[function(){return He.fromArray(arguments)},-1],Set:[function(){return je.fromArray(arguments)},-1],imatrix:[function(e){return He.identity(e)},-1],parens:[function(e){if(D.PARSE2NUMBER)return e;return C.symfunction(\"parens\",[e])},-1],sqrt:[O,1],cbrt:[i,1],nthroot:[s,2],log:[R,[1,2]],expand:[function(e,t){return T(e,t=t||{expand_denominator:!0,expand_functions:!0})},1],abs:[_,1],invert:[function(e){if(ie(e))return e.invert();K(\"invert expects a matrix\")},1],determinant:[function(e){if(ie(e))return e.determinant();return e},1],size:[function(e){var t;ie(e)?t=[new Fe(e.cols()),new Fe(e.rows())]:re(e)||se(e)?t=new Fe(e.elements.length):K(\"size expects a matrix or a vector\");return t},1],transpose:[function(e){if(ie(e))return e.transpose();K(\"function transpose expects a matrix\")},1],dot:[function(e,t){if(re(e)&&re(t))return e.dot(t);K(\"function dot expects 2 vectors\")},2],cross:[function(e,t){if(re(e)&&re(t))return e.cross(t);K(\"function cross expects 2 vectors\")},2],vecget:[function(e,t){return t.isConstant()&&ue(t)?e.elements[t]:C.symfunction(\"vecget\",arguments)},2],vecset:[function(e,t,n){return t.isConstant?(e.elements[t]=n,e):C.symfunction(\"vecset\",arguments)},3],vectrim:[function(e,n){return n=void 0===n?1e-14:n,e=e.clone(),n=Number(n),e.elements.sort(function(e,t){return t.group-e.group}),e.elements=ve(e.elements,function(e,t){return Number(C.subtract(Se(e),Se(t)).abs())<=n}),e},[1,2]],matget:[function(e,t,n){return t.isConstant()&&n.isConstant()?e.elements[t][n]:C.symfunction(\"matget\",arguments)},3],matset:[function(e,t,n,r){return e.elements[t][n]=r,e},4],matgetrow:[function(e,t){return t.isConstant()?new He(e.elements[t]):C.symfunction(\"matgetrow\",arguments)},2],matsetrow:[function(e,t,n){if(!t.isConstant())return C.symfunction(\"matsetrow\",arguments);if(e.elements[t].length!==n.elements.length)throw new _e(\"Matrix row must match row dimensions!\");e=e.clone();return e.elements[t]=n.clone().elements,e},3],matgetcol:[function(e,r){if(!r.isConstant())return C.symfunction(\"matgetcol\",arguments);r=Number(r);var i=He.fromArray([]);return e.each(function(e,t,n){n===r&&i.elements.push([e.clone()])}),i},2],matsetcol:[function(n,r,e){if(!r.isConstant())return C.symfunction(\"matsetcol\",arguments);if(r=Number(r),n.rows()!==e.elements.length)throw new _e(\"Matrix columns must match number of columns!\");return e.each(function(e,t){n.set(t-1,r,e.elements[0].clone())}),n},3],rationalize:[r,1],IF:[function(e,t,n){\"boolean\"!=typeof e&&oe(e)&&(e=!!Number(e));return e?t:n},3],is_in:[function(e,t){if(ie(e)){for(var n=0,r=e.rows();n<r;n++)for(var i=0,s=e.cols();i<s;i++)if(e.elements[n][i].equals(t))return new Fe(1)}else if(e.elements)for(n=0,r=e.elements.length;n<r;n++)if(e.elements[n].equals(t))return new Fe(1);return new Fe(0)},2],realpart:[l,1],imagpart:[c,1],conjugate:[p,1],arg:[f,1],polarform:[function(e){var t;return t=Fe.toPolarFormArray(e),e=t[1],t=t[0],e=C.parse(ce(\"e^({0}*({1}))\",D.IMAGINARY,e)),C.multiply(t,e)},1],rectform:[function(e){var t,n,r,i,s,o=e.clone();try{return t=he(e,\"e\",!0),n=C.divide(t.x.power,Fe.imaginary()),r=Se(I.tan(n)),C.pow(t.a,new Fe(2)),i=r.getDenom(!0),s=r.getNum(),Fe.hyp(s,i).equals(t.a)?C.add(i,C.multiply(Fe.imaginary(),s)):o}catch(e){return o}},1],sort:[function(e,n){n=n?n.toString():\"asc\";var r=function(e){return e.group===F?e.multiplier:e.group===H?\"\"===e.fname?r(e.args[0]):e.fname:e.group===G?e.power:e.value};return new Ve((re(e)?e.elements:e.collectSymbols()).sort(function(e,t){e=r(e),t=r(t);return\"desc\"===n?t-e:e-t}))},[1,2]],integer_part:[,1],union:[function(e,t){return e.union(t)},2],contains:[function(e,t){return e.contains(t)},2],intersection:[function(e,t){return e.intersection(t)},2],difference:[function(e,t){return e.difference(t)},2],intersects:[function(e,t){return new Fe(Number(e.intersects(t)))},2],is_subset:[function(e,t){return new Fe(Number(e.is_subset(t)))},2],print:[function(){be(arguments).map(function(e){console.log(e.toString())})},-1]};this.error=K;this.override=function(e,t){n[e]||(n[e]=[]),n[e].push(this[e]),this[e]=t},this.restore=function(e){this[e]&&(this[e]=n[e].pop())},this.extend=function(e,n,r){var i,s=this;\"function\"==typeof this[e]&&\"function\"==typeof n&&(i=this[e],this[e]=function(e,t){return ne(e)&&ne(t)&&!r?i.call(s,e,t):n.call(s,e,t,i)})},this.symfunction=function(e,t){var n=new Fe(e);return n.group=H,\"object\"==typeof t&&(t=[].slice.call(t)),n.args=t,n.fname=e===Z?\"\":e,n.updateHash(),n},this.callfunction=function(e,t,n){var r=U[e];r||K(\"Nerdamer currently does not support the function \"+e);var i,s=r[1]||n,o=r[0];t instanceof Array||(t=void 0!==t?[t]:[]),-1!==s&&(i=(a=ae(s))?s[0]:s,n=a?s[1]:s,s=e+\" requires a {0} of {1} arguments. {2} provided!\",(a=t.length)<i&&K(ce(s,\"minimum\",i,a)),n<a&&K(ce(s,\"maximum\",n,a)));var a=Me(t);return o?o.apply(r[2],t):(o=function(e){for(var t=D.FUNCTION_MODULES,n=t.length,r=0;r<n;r++){var i=t[r];if(e in i)return i[e]}K(\"The function \"+e+\" is undefined!\")}(e),D.PARSE2NUMBER&&a?d(o.apply(o,t)):C.symfunction(e,t))},this.operator_filter_regex=(e=\"^\\\\\"+Object.keys(E).filter(function(e){if(1===e.length)return e}).join(\"\\\\\"),new RegExp(\"([\"+e+\"])\\\\s+([\"+e+\"])\")),this.setOperator=function(e,t,n){var r=e.operator;if(E[r]=e,t&&(this[e.action]=t),C[r]=e.operation,e.action||e.prefix||e.postif||(e.action=r),\"over\"===n||\"under\"===n){var i,s=e.precedence;for(i in E){var o=E[i];(\"over\"===n?o.precedence>=s:o.precedence>s)&&o.precedence++}}},this.getOperator=function(e){return E[e]},this.aliasOperator=function(e,t){var n,r={},i=E[e];for(n in i)r[n]=i[n];r.operator=t,this.setOperator(r)},this.getOperators=function(){return E},this.getBrackets=function(){return q};function a(e){this.type=e.type,this.value=e.value,this.left=e.left,this.right=e.right}this.initConstants=function(){this.CONSTANTS={E:new Fe(D.E),PI:new Fe(D.PI)}},this.pretty_print=function(e){if(Array.isArray(e)){var t=e.map(e=>C.pretty_print(e)).join(\", \");return\"vector\"===e.type?\"vector<\"+t+\">\":\"(\"+t+\")\"}return e.toString()},this.peekers={pre_operator:[],post_operator:[],pre_function:[],post_function:[]},this.callPeekers=function(e){if(D.callPeekers)for(var t=this.peekers[e],n=be(arguments).slice(1).map(le),r=0;r<t.length;r++)t[r].apply(null,n)},this.tokenize=function(n){for(var e in n=(n=String(n)).trim().replace(/\\s+/g,\" \"),q){var t=new RegExp(q[e].is_close?\"\\\\s+\\\\\"+e:\"\\\\\"+e+\"\\\\s+\",\"g\");n=n.replace(t,e)}for(var u=0,r=n.length,i=0,s=[],o=[s],a=o[0],l=0,c=[],p=!1,f=function(e,t){var n=[];void 0!==e&&(n.type=e),n.column=t,o.push(n),a.push(n),a=n,l++},h=function(){o.pop(),a=o[--l]},m=function(e,t){(t=void 0===t?n.substring(i,e):t)in C.units?a.push(new A(t,A.UNIT,i)):\"\"!==t&&a.push(new A(t,A.VARIABLE_OR_LITERAL,i))},g=function(e){a.push(new A(e,A.FUNCTION,i))},d=function(e){i=e+1};u<r;u++){var v=n.charAt(u);if(v in E){m(u);var w=a[0]&&te(a[0]);p&&i<u&&\",\"!==v&&!(w&&\"*\"===v)&&(p=!1,h()),d(u+1);var y=function(e){for(var t=(e=void 0!==e?e:u)+1;n.charAt(t++)in E;);return n.substring(e,t-1)}(u),u=(i=i+y.length-2)-1;a.push.apply(a,function(e){for(var t=u-e.length,n=[],r=e.charAt(0),i=1,s=e.length;i<s;i++)var o=e.charAt(i),a=r+o,r=(a in E?a:(n.push(new A(r,A.OPERATOR,t+i)),o));return n.push(new A(r,A.OPERATOR,t+i)),n}(y))}else if(v in q){var b,S=q[v];if(S.is_open)c.push([S,i]),(b=n.substring(i,u))in U?g(b):\"\"!==b&&a.push(new A(b,A.VARIABLE_OR_LITERAL,i)),f(S.maps_to,u);else if(S.is_close){var M=c.pop();if(!M)throw new Le(\"Missing open bracket for bracket at: \"+(u+1));if(M[0].id!==S.id-1)throw new Le(\"Parity error\");m(u),h()}d(u)}else\" \"===v&&(M=n.substring(i,u),S=n.charAt(u+1),p?(M in E?a.push(new A(M,A.OPERATOR,u)):(m(void 0,M),h(),((v=S in E)&&\"-\"===E[S].value||!v)&&a.push(new A(\"*\",A.OPERATOR,u))),p=!1):(b=n.substring(i,u))in U?(p=!0,g(b),f()):b in E?a.push(new A(b,A.OPERATOR,u)):(m(void 0,b),S=n.charAt(u+1),\"\"===M||\"\"===S||M in E||S in E||a.push(new A(\"*\",A.OPERATOR,u))),d(u))}if(c.length){var N=c.pop();throw new Le(\"Missing closed bracket for bracket at \"+(N[1]+1))}return m(u),s},this.toRPN=function(e){for(var t=e.type,n=e.length,r=[],i=[],s=[],o=function(e,t){for(;e.length;)t.push(e.pop())},a=0;a<n;a++){var u=e[a];if(u.type!==A.OPERATOR)break;if(!u.prefix)throw new Ie(\"Not a prefix operator\");u.is_prefix=!0,i.push(u)}for(;a<n;a++){var l=e[a];if(l.type===A.OPERATOR){var c=l;for(c.overloaded&&(h=e[a+1])&&h.type===A.VARIABLE_OR_LITERAL&&(c.postfix=!1,c.action=c.overloadAction,c.leftAssoc=c.overloadLeftAssoc);i.length;){var p=i[i.length-1];if(!(p.precedence>c.precedence||!c.leftAssoc&&p.precedence===c.precedence))break;r.push(i.pop())}if((\"vector\"===t||\"set\"===t)&&\"vectorFn\"in c&&(c.action=c.vectorFn),c.postfix){var f=e[a-1];if(!f)throw new Ie(\"Unexpected prefix operator '\"+l.value+\"'! at \"+l.column);if(f.type===A.OPERATOR&&!f.postfix)throw new Ie(\"Unexpected prefix operator '\"+f.value+\"'! at \"+f.column)}else do{var h,m=!!(h=e[a+1])&&h.type===A.OPERATOR;if(m){if(!h.prefix)throw new Ie(\"A prefix operator was expected at \"+h.column);h.is_prefix=!0,s.push(h),a++}}while(m);for((c.is_prefix?s:i).push(c);s.length&&(c.leftAssoc||!c.leftAssoc&&s[s.length-1].precedence>=c.precedence);)i.push(s.pop())}else l.type===A.VARIABLE_OR_LITERAL?(0===r.length&&o(s,i),r.push(l),(f=i[i.length-1])&&f.leftAssoc||o(s,r)):l.type===A.FUNCTION?i.push(l):l.type===A.UNIT&&r.push(l);Array.isArray(l)&&(r.push(this.toRPN(l)),l.type&&r.push(new A(l.type,A.FUNCTION,l.column)))}return o(i,r),o(s,r),r},this.parseRPN=function(e,t){try{for(var n in t=t||{})t[n]=C.parse(t[n],{});D.PARSE2NUMBER&&(\"e\"in t||(t.e=new Fe(D.E)),\"pi\"in t||(t.pi=new Fe(D.PI)));for(var r=[],i=0,s=e.length;i<s;i++){var o=e[i];if(o=Array.isArray(o)?this.parseRPN(o,t):o)if(o.type===A.OPERATOR)if(o.is_prefix||o.postfix)r.push(o.operation(r.pop()));else{var a=r.pop(),u=r.pop();if(void 0===u)throw new Ie(o+\" is not a valid postfix operator at \"+o.column);var l=\"comma\"===o.action;u instanceof je&&!l&&(u=Ve.fromSet(u)),a instanceof je&&!l&&(a=Ve.fromSet(a)),this.callPeekers(\"pre_operator\",u,a,o);var c=C[o.action](u,a);this.callPeekers(\"post_operator\",c,u,a,o),r.push(c)}else if(o.type===A.FUNCTION){var p=r.pop(),f=p.parent;p instanceof L||(p=L.create(p));var h=o.value,m=p.getItems();this.callPeekers(\"pre_function\",h,m);var g=C.callfunction(h,m);this.callPeekers(\"post_function\",g,h,m);var d=r[r.length-1],v=e[i+1];if(!(v&&v.type===A.OPERATOR&&\",\"===v.value)&&g instanceof Ve&&d&&d.elements&&!(d instanceof L)){var w=r.pop(),y=g.elements[0];if(y.isConstant())if(y instanceof x)r.push(Ve.fromArray(w.elements.slice(y.start,y.end)));else{var b=Number(y),S=w.elements.length;if((b=b<0?S+b:b)<0||S<=b)throw new Ue(\"Index out of range \"+(o.column+1));var M=w.elements[b];w.getter=b,M.parent=w,r.push(M)}else w.getter=y,r.push(w),r.push(g)}else f&&(g.parent=f),r.push(g)}else{var N,E=o.value;E in D.ALIASES?o=C.parse(D.ALIASES[o]):o.type===A.VARIABLE_OR_LITERAL?o=new Fe(E):o.type===A.UNIT&&((o=new Fe(E)).isUnit=!0),E in C.CONSTANTS?(N=o,o=new Fe(C.CONSTANTS[E])):E in t&&E!==t[E].toString()?(N=o,o=t[E].clone()):E in J&&(N=o,o=J[E].clone()),N&&(o.subbed=N),r.push(o)}}var q=r[0];if(-1!==[\"undefined\",\"string\",\"number\"].indexOf(typeof q))throw new Re(\"Unexpected token!\");return q}catch(t){throw[Ce].forEach(function(e){if(t instanceof e)throw new e(t.message+\": \"+o.column)}),new xe(t.message+\": \"+o.column)}},a.prototype.toString=function(){var e=this.left?this.left.toString()+\"---\":\"\",t=this.right?\"---\"+this.right.toString():\"\";return e+\"(\"+this.value+\")\"+t},a.prototype.toHTML=function(e,t){e=e||0,t=void 0===t?4:t;function n(e){return\" \".repeat(t*e)}var r=\"\",i=this.left?n(e+1)+\"<li>\\n\"+this.left.toHTML(e+2,t)+n(e+1)+\"</li> \\n\":\"\",s=this.right?n(e+1)+\"<li>\\n\"+this.right.toHTML(e+2,t)+n(e+1)+\"</li>\\n\":\"\",r=n(e)+'<div class=\"'+this.type.toLowerCase()+'\"><span>'+this.value+\"</span></div>\"+n(e)+\"\\n\";return(i||s)&&(r+=n(e)+\"<ul>\\n\"+i+s+n(e)+\"</ul>\\n\"),r+=\"\"},this.tree=function(e){for(var t=[],n=0;n<e.length;n++){var r=e[n];if(Array.isArray(r))r=this.tree(r),t.push(r);else if(r.type===A.OPERATOR)r.is_prefix||r.postfix?(s=r.is_prefix?\"left\":\"right\",i=t.pop(),(r=new a(r))[s]=i):((r=new a(r)).right=t.pop(),r.left=t.pop()),t.push(r);else if(r.type===A.FUNCTION){r=new a(r);var i,s=t.pop();if(r.right=s,\"object\"===r.value)if(i=t[t.length-1]){for(;i.right;)i=i.right;i.right=r;continue}t.push(r)}else t.push(new a(r))}return t[0]},this.parse=function(e,t){e=function(e){e=String(e);for(var t=0;t<o.actions.length;t++)e=o.actions[t].call(this,e);for(e=e.replace(/\\s+/g,\" \"),e=(e=/e/gi.test(e)?e.replace(/\\-*\\d+\\.*\\d*e\\+?\\-?\\d+/gi,function(e){return y(e)}):e).replace(D.IMPLIED_MULTIPLICATION_REGEX,function(){var e=arguments[4],t=arguments[1],n=arguments[2],r=arguments[3],i=\"\",s=\"*\";return t+(s=(i=!e.charAt(r).match(/[\\+\\-\\/\\*]/)?e.charAt(r-1):i).match(/[a-z]/i)?\"\":s)+n}).replace(/([a-z0-9_]+)/gi,function(e,t){return!(!1!==D.USE_MULTICHARACTER_VARS||t in U)&&isNaN(t)?t.split(\"\").join(\"*\"):t}).replace(/\\)\\(/g,\")*(\")||\"0\";;)if(e===(e=e.replace(/([a-z0-9_]+)(\\()|(\\))([a-z0-9]+)/gi,function(e,t,n,r,i){r=t||r,i=n||i;return r in U?r+i:r+\"*\"+i})))break;return e}(e),t=t||{};e=this.tokenize(e),e=this.toRPN(e);return this.parseRPN(e,t)},this.toObject=function(e){var a=function(e){for(var t=[],n=0,r=e.length;n<r;n++){var i,s=e[n],o=s.value;s.type===A.VARIABLE_OR_LITERAL?t.push(new Fe(o)):s.type===A.FUNCTION?(n++,(i=C.symfunction(o,a(e[n]))).isConversion=!0,t.push(i)):s.type===A.OPERATOR?t.push(o):t.push(a(s))}return t};return a(C.tokenize(e))};function S(e){for(var t=0,n=[[]],r=0,i=e.length;r<i;r++)\",\"===e[r]?n[++t]=[]:n[t].push(e[r]);return n}function M(e){return e.replace(/^\\\\left\\((.+)\\\\right\\)$/g,function(e,t){return t||e})}function _(e){if(e.isInfinity)return Fe.infinity();if(e.multiplier.lessThan(0)&&e.multiplier.negate(),e.isImaginary()){var t=e.realpart(),n=e.imagpart();if(t.isConstant()&&n.isConstant())return O(C.add(C.pow(t,new Fe(2)),C.pow(n,new Fe(2))))}else if(oe(e)||ge(e.power))return e;var r;e.isComposite()&&(r=[],e.each(function(e){r.push(e.multiplier)}),Te.QGCD.apply(null,r).lessThan(0)&&(e.multiplier=e.multiplier.multiply(new De(-1)),e.distributeMultiplier()));n=C.parse(e.multiplier);return e.toUnitMultiplier(),C.multiply(n,C.symfunction(Q,[e]))}function u(e){if(re(e)){var n=new Ve;return e.each(function(e,t){n.set(t-1,u(e))}),n}if(ie(e)){var r=new He;return e.each(function(e,t,n){r.set(t,n,u(e))}),r}if(D.PARSE2NUMBER&&e.isConstant())return d(ue(e)?Te.bigfactorial(e):Te.gamma(e.multiplier.add(new De(1)).toDecimal()));if(e.isConstant()&&e.getDenom().equals(2)){var t,i=e.getNum(),s=e.multiplier.isNegative()?(s=C.subtract(i.negate(),new Fe(1)).multiplier.divide(new De(2)),t=C.pow(new Fe(-4),new Fe(s)).multiplier.multiply(Te.bigfactorial(s)),Te.bigfactorial(new De(2).multiply(s))):(s=C.add(i,new Fe(1)).multiplier.divide(new De(2)),t=Te.bigfactorial(new De(2).multiply(s)),C.pow(new Fe(4),new Fe(s)).multiplier.multiply(Te.bigfactorial(s))),s=t.divide(s);return C.multiply(C.parse(\"sqrt(pi)\"),new Fe(s))}return C.symfunction(Y,[e])}function t(e,t){if(e.isConstant()&&t.isConstant()){var n=new Fe(1);return n.multiplier=n.multiplier.multiply(e.multiplier.mod(t.multiplier)),n}n=C.divide(e.clone(),t.clone());return ue(n)?new Fe(0):C.symfunction(\"mod\",[e,t])}function r(e){if(e.isComposite()){var t,n,r,i,s=new Fe(0);return e.each(function(e){r=e.getNum(),i=e.getDenom(),n=s.getNum(),t=s.getDenom(),n=C.multiply(i,n),r=C.multiply(r,t),r=C.expand(C.add(n,r)),i=C.multiply(t,i),s=C.divide(r,i)},!0),s}return e}function O(e){if((e=!ne(e)?C.parse(e):e).group===V)return C.symfunction(z,[e]);var t=(e=\"\"===e.fname&&e.power.equals(1)?e.args[0]:e).multiplier.sign()<0;if(D.PARSE2NUMBER){if(e.isConstant()&&!t)return new Fe(k.sqrt(e.multiplier.toDecimal()));if(e.isImaginary())return b.sqrt(e);if(e.group===G)return C.symfunction(\"sqrt\",[e])}var n,r=e.isConstant();if(e.group===X&&e.isLinear()){var i=O(Fe(e.multiplier));for(o in e.symbols){var s=e.symbols[o];i=C.multiply(i,O(s))}l=i}else if(e.fname===z){var o=e.args[0],a=e.multiplier;o.setPower(e.power.multiply(new De(.25))),l=o,a.equals(1)||(l=C.multiply(O(C.parse(a)),l))}else if(e.power.isInteger())if(e.multiplier<0&&e.group===G)var u=C.parse(e.multiplier).negate(),a=C.parse(e).toUnitMultiplier().negate(),l=C.multiply(C.symfunction(D.SQRT,[a]),O(u));else{u=e.power.sign();e.power=e.power.abs(),r&&e.multiplier.lessThan(0)&&(n=Fe.imaginary(),e.multiplier=e.multiplier.abs());var c=e.multiplier.toDecimal(),r=Math.abs(c),r=Math.sqrt(r);if(ue(r))i=new Fe(r);else if(ue(c)){var p=Te.ifactor(c),f=1;for(s in p){var h,m=(g=p[s])-g%2;m&&(h=Math.pow(s,m),f*=Math.pow(s,m/2),c/=h)}i=C.multiply(C.symfunction(z,[new Fe(c)]),new Fe(f))}else{for(var g,d=[new Fe(e.multiplier.num),new Fe(e.multiplier.den)],v=[new Fe(1),new Fe(1)],w=[new Fe(1),new Fe(1)],y=0;y<2;y++)N(g=d[y]).each(function(e){var t=(e=Fe.unwrapPARENS(e)).clone().toLinear(),n=Number(e.power),e=n%2;v[y]=C.multiply(v[y],C.pow(t,new Fe((n-e)/2))),w[y]=C.multiply(w[y],O(C.pow(t,new Fe(e))))});i=C.divide(C.multiply(v[0],w[0]),C.multiply(v[1],w[1]))}l=(e=e.toUnitMultiplier(!0)).isOne()?e:ge(e.power.toString())?C.pow(e.clone(),new Fe(.5)):C.symfunction(z,[e]),u<0&&l.power.negate(),i&&(l=C.multiply(i,l)),n&&(l=C.multiply(n,l))}else e.setPower(e.power.multiply(new De(.5))),l=e;return t&&D.PARSE2NUMBER?C.parse(l):l}function i(e){if(e.isConstant(!0))return s(e,new Fe(3));var t,n=e.power/3,r=C.pow(C.parse(e.multiplier),new Fe(1/3)),e=e.toUnitMultiplier();return ue(n)?t=C.pow(e.toLinear(),C.parse(n)):e.group===X?(t=new Fe(1),e.each(function(e){t=C.multiply(t,i(e))})):t=C.symfunction(\"cbrt\",[e]),C.multiply(r,t)}function s(e,t,n,r){if((t=Se(C.parse(t))).equals(0))throw new Ae(\"Unable to calculate nthroots of zero\");if(e<0&&ge(t))throw new Error(\"Cannot calculate nthroot of negative number for even powers\");if(!e.isConstant(!0))return C.symfunction(\"nthroot\",arguments);void 0===r&&(r=!0),n=n||25;var i=(e=e.group!==F?Se(e):e).sign();if(i<0&&(e=_(e)),ue(e)&&t.isConstant()){var s,t=e<0x10000000000000000?De.create(Math.pow(e,1/t)):Te.nthroot(e,t);return r&&(s=new Fe(t)),s=new Fe(t.toDecimal(n)),C.multiply(new Fe(i),s)}}function N(e){if(e.greaterThan(9999999999998891e26)||e.equals(-1))return e;if(e.equals(Math.PI))return new Fe(Math.PI);if((e=Se(e.clone())).isConstant()){var t=new Fe(1),n=e.toString();if(ue(n)){var r,i=Te.ifactor(n);for(r in i)var s=i[r],t=C.multiply(t,C.symfunction(\"parens\",[new Fe(r).setPower(new De(s))]))}else{n=N(new Fe(e.multiplier.num)),e=N(new Fe(e.multiplier.den));t=C.multiply(C.symfunction(\"parens\",[n]),C.symfunction(\"parens\",[e]).invert())}}else t=C.symfunction(\"pfactor\",arguments);return t}function l(e){return e.realpart()}function c(e){return e.imagpart()}function p(e){var t=e.realpart(),e=e.imagpart();return C.add(t,C.multiply(e.negate(),Fe.imaginary()))}function f(e){var t=e.realpart(),e=e.imagpart();return t.isConstant()&&e.isConstant()?new Fe(Math.atan2(e,t)):C.symfunction(\"atan2\",[e,t])}function f(e){var t=e.realpart(),e=e.imagpart();return t.isConstant()&&e.isConstant()?e.equals(0)&&t.equals(-1)?C.parse(\"pi\"):e.equals(1)&&t.equals(0)?C.parse(\"pi/2\"):e.equals(1)&&t.equals(1)?C.parse(\"pi/4\"):new Fe(Math.atan2(e,t)):C.symfunction(\"atan2\",[e,t])}function h(e,t){var n,r;for(t.map(function(e){e.numVal=Se(e).multiplier});;){if((r=t.length)<2)return t[0];n=t.pop(),r=t[r-2],(\"min\"===e?n.numVal<r.numVal:n.numVal>r.numVal)&&(t.pop(),t.push(n))}}function R(e,t){if(e.equals(1))return new Fe(0);var n,r,i;if(e.fname===z&&e.multiplier.equals(1))return n=C.divide(R(e.args[0]),new Fe(2)),e.power.sign()<0&&n.negate(),n;if(e.equals(0))throw new Ae(D.LOG+\"(0) is undefined!\");return e.isImaginary()?b.evaluate(e,D.LOG):(e.isConstant()&&void 0!==t&&t.isConstant()?n=new Fe(Math.log(e)/Math.log(t)):e.group===V&&e.power.multiplier.lessThan(0)||\"-1\"===e.power.toString()?(e.power.negate(),n=R(e).negate()):\"e\"===e.value&&e.multiplier.equals(1)?(t=e.power,n=ne(t)?t:new Fe(t)):e.group===H&&\"exp\"===e.fname?(i=e.args[0],n=e.multiplier.equals(1)?C.multiply(i,new Fe(e.power)):C.symfunction(D.LOG,[e])):D.PARSE2NUMBER&&oe(e)?((e=C.parse(e)).multiplier.lessThan(0)&&(e.negate(),r=C.multiply(new Fe(Math.PI),new Fe(\"i\"))),n=new Fe(Math.log(e.multiplier.toDecimal())),r&&(n=C.add(n,r))):(e.power.equals(1)||e.contains(\"e\")||(i=e.group===V?e.power:new Fe(e.power),e.toLinear()),n=1<arguments.length&&w(arguments)?new Fe(1):C.symfunction(D.LOG,arguments),i&&(n=C.multiply(i,n))),n)}function m(e,t){var n=t&&t.isConstant()||void 0===t;if(e.isConstant()&&n){var r,n=e;return t&&t.lessThan(0)&&(t=_(t),n=(r=Number(e).toExponential().toString().split(\"e\"))[0],r=r[1]),t=new Fe(me(n,Number(t||0))),C.multiply(t,C.pow(new Fe(10),new Fe(r||0)))}return C.symfunction(\"round\",arguments)}function g(e){e%=2;return 0<=(e=e<0?2+e:e)&&e<=.5?1:.5<e&&e<=1?2:1<e&&e<=1.5?3:4}function d(t){if(!isFinite(t)){var e=Math.sign(t),n=new Fe(String(Math.abs(t)));return n.multiplier=n.multiplier.multiply(new De(e)),n}if(ne(t))return t;if(\"number\"==typeof t)try{t=De.simple(t)}catch(e){t=new De(t)}n=new Fe(0);return n.multiplier=t,n}function T(e,t){if(Array.isArray(e))return e.map(function(e){return T(e,t)});if(t=t||{},e.group===H&&\"\"===e.fname){var n=T(e.args[0],t),r=T(C.pow(n,C.parse(e.power)),t);return C.multiply(C.parse(e.multiplier),r).distributeMultiplier()}if(-1!==[F,B,G].indexOf(e.group))return e;r=e.clone();try{var i,s,o,a=e.multiplier.toString(),u=Number(e.power),l=e;if(e.isComposite()&&ue(e.power)&&0<e.power){var c=u-1,n=new Fe(0);e.each(function(e){n=C.add(n,T(C.parse(e),t))});for(var p=C.parse(n),f=0;f<c;f++)p=Ee(p,n,t);l=C.multiply(C.parse(a),p).distributeMultiplier()}else e.group===H&&!0===t.expand_functions?(i=[],e.args.forEach(function(e){i.push(T(e,t))}),l=C.pow(C.symfunction(e.fname,i),C.parse(e.power)),l=C.multiply(l,C.parse(e.multiplier))):e.isComposite()&&ue(e.power)&&e.power<0&&!0===t.expand_denominator?(e=e.invert(),(l=T(e,t)).invert()):e.group===X?(s=function(e){switch(e.group){case $:return 0;case j:return 1;case X:return 2;case H:return 3;default:return 4}},o=e.collectSymbols().sort(function(e,t){return s(t)-s(e)}).map(function(e){return T(C.pow(e,C.parse(u)),t)}),n=o.pop(),(l=n.isComposite()&&n.isLinear()?(o.forEach(function(e){n=Ee(n,e,t)}),n.isComposite()?(1<n.power&&(n=T(C.pow(n,C.parse(n.power)),t)),C.multiply(C.parse(a),n).distributeMultiplier()):n):(l=n,o.forEach(function(e){l=C.multiply(l,e)}),C.multiply(l,C.parse(a)).distributeMultiplier())).group===X&&(l=C.parse(l))):l=e;return l}catch(e){return r}return r}function P(e){if(ne(e.power)||!e.power.absEquals(.5))return e;var t=e.power.sign(),e=O(e.group===B?new Fe(e.value):e.toLinear());return t<0&&e.invert(),e}this.toTeX=function(e,t){var n=!0===(t=t||{}).decimals?\"decimals\":void 0,r=\"string\"==typeof e?this.toObject(e):e,i=[],s=void 0===t.cdot?\"\\\\cdot\":t.cdot,r=function(e){for(var t=[];e.length;){var n,r,i=e.shift(),s=e[0],o=ae(s),a=\"-\"===s;\"^\"===i&&(\"+\"===s?e.shift():o&&\"+\"===s[0]&&s.shift(),o&&1===s.length&&e.unshift(e.shift()[0])),\"^\"===i&&(o&&\"-\"===s[0]||a)?(n=t.pop(),r=\"1\",\"*\"===(a=t[t.length-1])?(t.pop(),r=t.pop()):ae(a)&&(r=t.pop()),t.push(r,\"/\",n,i),(o?s:e).shift(),o&&1===s.length&&t.push(e.shift()[0])):t.push(i)}return t}(r);if(ae(r)){for(var o,a,u=[],l=0;l<r.length;l++)o=r[l],\"^\"===r[l+1]?(a=r[l+2],u.push(Ge.braces(this.toTeX([o]))+\"^\"+Ge.braces(this.toTeX([a]))),l+=2):u.push(o);r=u}for(var l=0,c=r.length;l<c;l++){var p=r[l];if(ne(p=\"*\"===p?s:p))if(p.group===H){var f,h=p.fname;if(h===z)g=\"\\\\sqrt\"+Ge.braces(this.toTeX(p.args));else if(h===Q)g=Ge.brackets(this.toTeX(p.args),\"abs\");else if(h===Z)g=Ge.brackets(this.toTeX(p.args),\"parens\");else if(h===D.LOG10)g=\"\\\\\"+D.LOG10_LATEX+\"\\\\left( \"+this.toTeX(p.args)+\"\\\\right)\";else if(\"integrate\"===h)var m=S(p.args),g=\"\\\\int \"+(d=Ge.braces(this.toTeX(m[0])))+\"\\\\, d\"+(v=this.toTeX(m[1]));else if(\"defint\"===h){var m=S(p.args),d=Ge.braces(this.toTeX(m[0])),v=this.toTeX(m[3]);g=\"\\\\int\\\\limits_{\"+this.toTeX(m[1])+\"}^{\"+this.toTeX(m[2])+\"} \"+d+\"\\\\, d\"+v}else if(\"diff\"===h){m=S(p.args),v=\"\",d=Ge.braces(this.toTeX(m[0]));if(1===m.length){for(var w=[],y=0;y<m[0].length;y++)3===m[0][y].group&&w.push(m[0][y].value);w.sort(),v=0<w.length?\"\\\\frac{d}{d \"+w[0]+\"}\":\"\\\\frac{d}{d x}\"}else v=2===m.length?\"\\\\frac{d}{d \"+m[1]+\"}\":\"\\\\frac{d^{\"+m[2]+\"}}{d \"+this.toTeX(m[1])+\"^{\"+m[2]+\"}}\";g=v+\"\\\\left(\"+d+\"\\\\right)\"}else if(\"sum\"===h||\"product\"===h){var b=[[],[],[],[]],y=0;for(l=0;l<p.args.length;l++)\",\"!==p.args[l]?b[y].push(p.args[l]):y++;g=(\"sum\"===h?\"\\\\sum_\":\"\\\\prod_\")+Ge.braces(this.toTeX(b[1])+\" = \"+this.toTeX(b[2])),g+=\"^\"+Ge.braces(this.toTeX(b[3]))+Ge.braces(this.toTeX(b[0]))}else g=\"limit\"===h?(f=S(p.args).map(function(e){return Array.isArray(e)?C.toTeX(e.join(\"\")):C.toTeX(String(e))}),\"\\\\lim_\"+Ge.braces(f[1]+\"\\\\to \"+f[2])+\" \"+Ge.braces(f[0])):h===Y||h===W?this.toTeX(p.args)+(h===Y?\"!\":\"!!\"):Ge.latex(p,n);i.push(g)}else i.push(Ge.latex(p,n));else ae(p)?i.push(Ge.brackets(this.toTeX(p))):\"/\"===p?i.push(Ge.frac(M(i.pop()),M(this.toTeX([r[++l]])))):i.push(p)}return i.join(\" \")},this.expand=T,this.round=m,this.clean=function t(e){var n,r,i,s,o,a,u,l=e.group;return l===$?(r=e.getNum(),i=e.getDenom()||new Fe(1),s=Number(e.power),o=new Fe(1),1===Math.abs(s)&&(i.each(function(e){e.group===X?o=C.multiply(o,t(e.getDenom())):e.power.lessThan(0)&&(o=C.multiply(o,t(e.clone().toUnitMultiplier())))}),a=new Fe(0),i.each(function(e){a=C.add(C.divide(e,o.clone()),a)}),o.invert(),r.isComposite()?(u=new Fe(0),r.each(function(e){u=C.add(C.multiply(t(e),o.clone()),u)})):u=C.multiply(o,r),n=C.divide(u,a))):l===X?(n=new Fe(1),e.each(function(e){n=C.multiply(n,C.clean(e))})):l===H&&1===e.args.length&&e.args[0].isConstant()&&(n=ye(\"PARSE2NUMBER\",function(){return C.parse(e)},!0)),n=n||e},this.sqrt=O,this.cbrt=i,this.abs=_,this.log=R,this.rationalize=r,this.nthroot=s,this.arg=f,this.conjugate=p,this.imagpart=c,this.realpart=l,this.getFunction=function(e){return U[e][0]},this.addPreprocessor=function(e,t,n,r){var i=o.names,s=o.actions;if(\"function\"!=typeof t)throw new PreprocessorError(\"Incorrect parameters. Function expected!\");n?r?(i.splice(n,0,e),s.splice(n,0,t)):(i[n]=e,s[n]=t):(i.push(e),s.push(t))},this.getPreprocessors=function(){for(var e={},t=0,n=e.names.length;t<n;t++)e[e.names[t]]={order:t,action:e.actions[t]};return e},this.removePreprocessor=function(e,t){e=o.names.indexOf(e);t?(we(o.names,e),we(o.actions,e)):(o.names[e]=void 0,o.actions[e]=void 0)},this.mapped_function=function(){for(var e={},t=this.params,n=0;n<t.length;n++)e[t[n]]=String(arguments[n]);return C.parse(this.body,e)},this.add=function(i,n){var e=ne(i),t=ne(n);if(e&&t){if(i.unit||n.unit)return C.Unit.add(i,n);if(i.isInfinity||n.isInfinity){var r=i.multiplier.lessThan(0),s=n.multiplier.lessThan(0);if(i.isInfinity&&n.isInfinity&&r!==s)throw new Ae(\"(\"+i+\")+(\"+n+\") is not defined!\");var o=Fe.infinity();return s&&o.negate(),o}if(i.isComposite()&&i.isLinear()&&n.isComposite()&&n.isLinear()&&(i.distributeMultiplier(),n.distributeMultiplier(),n.length>i.length&&i.group===n.group&&([i,n]=[n,i])),i.multiplier.equals(0))return n;if(n.multiplier.equals(0))return i;if(i.isConstant()&&n.isConstant()&&D.PARSE2NUMBER)return h=new Fe(i.multiplier.add(n.multiplier).toDecimal(D.PRECISION));var a=i.group,u=n.group,l=i.power.toString(),c=n.power.toString();if(a<u||a===u&&c<l&&0<c)return this.add(n,i);a===X&&u===j&&i.value===n.value&&(w=i,a=(i=n).group,u=(n=w).group,l=i.power.toString(),c=n.power.toString());var p,f,h,m=l===c,r=i.value,s=n.value,o=i.isComposite(),l=n.isComposite();if(o&&(p=Pe(i,\"hash\")),l&&(f=Pe(n,\"hash\")),a===$&&u===$&&n.isLinear()&&!i.isLinear()&&p!==f)return this.add(n,i);a===j&&u===j&&(r=p,s=f);var g,c=a===B&&u===F,l=i.value===n.multiplier.toString(),l=r===s||p===f&&void 0!==p||c&&l;if(l&&m&&a===u)if(c&&(n=n.convert(B)),a!==j||u!==G&&u!==B)if((h=i).multiplier.isOne()&&n.multiplier.isOne()&&a===$&&i.isLinear()&&n.isLinear())for(var d in n.symbols){var v=n.symbols[d];h.attach(v)}else h.multiplier=h.multiplier.add(n.multiplier);else i.distributeMultiplier(),h=i.attach(n);else if(l&&a!==j)a===$&&u===j?(n.insert(i,\"add\"),h=n):(h=Fe.shell(j).attach([i,n])).value=a===j?p:r;else if(o&&i.isLinear()){r=a===u,o=a===j&&u===j;if(o&&(r=i.value===n.value),i.distributeMultiplier(),n.isComposite()&&n.isLinear()&&r){for(var d in n.distributeMultiplier(),n.symbols){v=n.symbols[d];i.attach(v)}h=i}else o&&i.value!==f||a===j&&!l?(h=Fe.shell($).attach([i,n])).updateHash():h=i.attach(n)}else a===H&&i.fname===z&&u!==V&&n.power.equals(.5)&&(g=n.multiplier.clone(),(n=O(n.toUnitMultiplier().toLinear())).multiplier=g),2===i.length&&2===n.length&&ge(i.power)&&ge(n.power)?h=C.add(T(i),T(n)):(h=Fe.shell($).attach([i,n])).updateHash();return 1===(h=h.multiplier.equals(0)?new Fe(0):h).length&&(g=h.multiplier,(h=pe(h.symbols)).multiplier=h.multiplier.multiply(g)),h}t&&!e&&(w=i,i=n,n=w,w=t,t=e,e=w);var w=ie(n);if(e&&w){var y=new He;n.eachElement(function(e,t,n){y.set(t,n,C.add(i.clone(),e))}),n=y}else if(ie(i)&&w)n=i.add(n);else if(e&&re(n))n.each(function(e,t){n.elements[--t]=C.add(i.clone(),n.elements[t])});else if(re(i)&&re(n))n.each(function(e,t){n.elements[--t]=C.add(i.elements[t],n.elements[t])});else{if(re(i)&&ie(n))return C.add(n,i);if(ie(i)&&re(n)){if(n.elements.length===i.rows()){var y=new He,b=i.cols();return n.each(function(e,t){for(var n=[],r=0;r<b;r++)n.push(C.add(i.elements[t-1][r].clone(),e.clone()));y.elements.push(n)}),y}K(\"Dimensions must match!\")}}return n},this.subtract=function(i,r){var e=ne(i),t=ne(r);if(e&&t)return i.unit||r.unit?C.Unit.subtract(i,r):this.add(i,r.negate());if(t&&re(i))r=i.map(function(e){return C.subtract(e,r.clone())});else if(e&&re(r))r=r.map(function(e){return C.subtract(i.clone(),e)});else if(re(i)&&re(r))i.dimensions()===r.dimensions()?r=i.subtract(r):C.error(\"Unable to subtract vectors. Dimensions do not match.\");else if(ie(i)&&re(r)){if(r.elements.length===i.rows()){var s=new He,o=i.cols();return r.each(function(e,t){for(var n=[],r=0;r<o;r++)n.push(C.subtract(i.elements[t-1][r].clone(),e.clone()));s.elements.push(n)}),s}K(\"Dimensions must match!\")}else{if(re(i)&&ie(r)){var s=r.clone().negate();return C.add(s,i)}ie(i)&&ie(r)?r=i.subtract(r):ie(i)&&t?(s=new He,i.each(function(e,t,n){s.set(t,n,C.subtract(e,r.clone()))}),r=s):e&&ie(r)&&(s=new He,r.each(function(e,t,n){s.set(t,n,C.subtract(i.clone(),e))}),r=s)}return r},this.multiply=function(i,n){var e=ne(i),t=ne(n);if(e&&n instanceof L)return n.elements.push(i),n;if(e&&t){if(n.isUnit){var r=i.clone();return i.unit=n,r}if(i.unit||n.unit)return C.Unit.multiply(i,n);if(i.isInfinity||n.isInfinity){if(i.equals(0)||n.equals(0))throw new Ae(i+\"*\"+n+\" is undefined!\");if(n.power.lessThan(0)){if(i.isInfinity)throw new Ae(\"Infinity/Infinity is not defined!\");return new Fe(0)}var s=i.multiplier.multiply(n.multiplier).sign(),o=Fe.infinity();if(i.isConstant()||n.isConstant()||i.isInfinity&&n.isInfinity)return s<0&&o.negate(),o}if(i.isConstant()&&n.isConstant()&&D.PARSE2NUMBER)return new Fe(p=new k(i.multiplier.toDecimal()).times(new k(n.multiplier.toDecimal())).toFixed());if(i.isOne())return n.clone();if(n.isOne())return i.clone();if(i.multiplier.equals(0)||n.multiplier.equals(0))return new Fe(0);if(n.group>i.group&&n.group!==$)return this.multiply(n,i);i.group===X&&n.group===j&&i.value===n.value&&(p=i,i=n,n=p);var a=i.group,u=n.group,l=n.multiplier.num,c=n.multiplier.den;a!==H||i.fname!==z||n.isConstant()||i.args[0].value!==n.value||i.args[0].multiplier.lessThan(0)?a===H&&i.fname===z&&i.multiplier.equals(1)&&i.power.equals(-1)&&n.isConstant()&&i.args[0].equals(n)&&(i=C.symfunction(z,[n.clone()]),n=new Fe(1)):(m=i.power,h=C.parse(i.multiplier),(i=C.multiply(h,i.args[0].clone())).setPower(new De(.5).multiply(m)),a=i.group);var p,f=i.value,o=n.value,s=new De(i.sign()),h=a===B&&u===F&&n.multiplier.equals(i.value),m=(h?new De(1).multiply(i.multiplier):i.multiplier.multiply(n.multiplier)).abs(),r=i.clone().toUnitMultiplier();if(n=n.clone().toUnitMultiplier(!0),a===H&&u===H){var g=i.args[0].clone(),d=n.args[0].clone();if(i.fname===z&&n.fname===z&&i.isLinear()&&n.isLinear()){var v=C.divide(g,d).invert();v.gt(1)&&ue(v)&&(r=C.multiply(i.args[0].clone(),O(v.clone())),n=new Fe(1))}else if(i.fname===Y&&n.fname===Y&&!g.isConstant()&&!d.isConstant()&&n.power<0){v=C.subtract(g.clone(),d.clone());if(v.isConstant())if(p=new Fe(1),v<0){for(var w=0,y=Math.abs(v);w<=y;w++){var b=C.add(g.clone(),new Fe(w));p=C.multiply(p,b)}r=C.multiply(C.pow(g,new Fe(i.power)),C.pow(p,new Fe(n.power))),n=new Fe(1)}else{for(w=0,y=Math.abs(v);w<=y;w++){b=C.add(d.clone(),new Fe(w));p=C.multiply(p,b)}r=C.multiply(C.pow(p,new Fe(i.power)),C.pow(d,new Fe(n.power))),n=new Fe(1)}}}if(f===o&&a===j&&a===u&&(f=i.text(\"hash\"),o=n.text(\"hash\")),(f=u===V&&n.previousGroup===j&&a===j?Pe(i,\"hash\",V):f)!==o&&!h||a===j&&(u===G||u===B||u===H)||a===j&&u===X)if(a===X&&i.isLinear())if(u===X&&n.distributeExponent(),u===X&&n.isLinear()){for(var b in n.symbols){var S=n.symbols[b];r=r.combine(S)}r.multiplier=r.multiplier.multiply(n.multiplier)}else r.combine(n);else a!==F?a===X?(r.distributeExponent(),r.combine(n)):n.isOne()||(E=n.multiplier.clone(),n.toUnitMultiplier(),(r=Fe.shell(X).combine([r,n])).multiplier=r.multiplier.multiply(E)):r=n.clone().toUnitMultiplier();else{var M=i.power,N=n.power,E=ne(M),q=ne(N),q=E||q;a===j&&u!==j&&n.previousGroup!==j&&M.equals(1)?(r=new Fe(0),i.each(function(e){r=C.add(r,C.multiply(e,n.clone()))},!0)):(r.power=q?C.add(ne(M)?M:new Fe(M),ne(N)?N:new Fe(N)):a===F?M:M.add(N),r.power.equals(0)&&(r=r.convert(F)),q&&r.convert(V),i.imaginary&&n.imaginary&&ge(r.power%2)&&(r=new Fe(1),m.negate()),r.group!==V&&r.previousGroup&&(r.previousGroup=void 0),r.multiplier=r.multiplier.multiply(n.multiplier))}r.group===B&&(a=Math.log(r.value),M=Math.log(l)/a,N=Math.log(c)/a,q=m.num/l,a=m.den/c,0!=M&&ue(M)&&ue(q)&&(r.power=r.power.add(new De(M)),m.num/=l),0!=N&&ue(N)&&ue(a)&&(r.power=r.power.subtract(new De(N)),m.den/=c)),1===r.length&&(p=r.multiplier,(r=pe(r.symbols)).multiplier=r.multiplier.multiply(p));c=r.power.toString();return ge(c)&&r.fname===z?(s*=r.sign(),c=r.power,r=r.args[0],r=C.multiply(new Fe(m),C.pow(r,new Fe(c.divide(new De(2))))),s<0&&r.negate()):(r.multiplier=r.multiplier.multiply(m).multiply(s),r.group===$&&r.isImaginary()&&r.distributeMultiplier()),r=r.group===B&&ue(r.power.toDecimal())?r.convert(F):r}t&&!e&&(p=i,i=n,n=p,p=t,t=e,e=p);s=ie(n),t=ie(i);if(e&&s){var x=new He;n.eachElement(function(e,t,n){x.set(t,n,C.multiply(i.clone(),e))}),n=x}else if(t&&s)n=i.multiply(n);else if(e&&re(n))n.each(function(e,t){n.elements[--t]=C.multiply(i.clone(),n.elements[t])});else if(re(i)&&re(n))n.each(function(e,t){n.elements[--t]=C.multiply(i.elements[t],n.elements[t])});else{if(re(i)&&ie(n))return this.multiply(n,i);if(ie(i)&&re(n)){if(n.elements.length===i.rows()){var x=new He,A=i.cols();return n.each(function(e,t){for(var n=[],r=0;r<A;r++)n.push(C.multiply(i.elements[t-1][r].clone(),e.clone()));x.elements.push(n)}),x}K(\"Dimensions must match!\")}}return n},this.divide=function(r,i){var e=ne(r),t=ne(i);if(e&&t){if(r.unit||i.unit)return C.Unit.divide(r,i);if(i.equals(0))throw new qe(\"Division by zero not allowed!\");return r.isConstant()&&i.isConstant()?(n=r.clone()).multiplier=n.multiplier.divide(i.multiplier):(i.invert(),n=C.multiply(r,i)),n}var n,s,o=re(r),a=re(i);return e&&a?i=i.map(function(e){return C.divide(r.clone(),e)}):o&&t?i=r.map(function(e){return C.divide(e,i.clone())}):o&&a?r.dimensions()===i.dimensions()?i=i.map(function(e,t){return C.divide(r.elements[--t],e)}):C.error(\"Cannot divide vectors. Dimensions do not match!\"):(n=ie(r),o=ie(i),n&&t?(s=new He,r.eachElement(function(e,t,n){s.set(t,n,C.divide(e,i.clone()))}),i=s):e&&o?(s=new He,i.eachElement(function(e,t,n){s.set(t,n,C.divide(r.clone(),e))}),i=s):n&&o?(s=new He,r.rows()===i.rows()&&r.cols()===i.cols()?(r.eachElement(function(e,t,n){s.set(t,n,C.divide(e,i.elements[t][n]))}),i=s):C.error(\"Dimensions do not match!\")):n&&a&&(r.cols()===i.dimensions()?(s=new He,r.eachElement(function(e,t,n){s.set(t,n,C.divide(e,i.elements[t].clone()))}),i=s):C.error(\"Unable to divide matrix by vector.\"))),i},this.pow=function(r,i){var s,e=ne(r),t=ne(i);if(e&&t){if(r.unit||i.unit)return C.Unit.pow(r,i);if(r.group===H&&r.fname===Q&&ge(i)){var n=r.multiplier.clone(),o=C.pow(r.args[0],i);return o.multiplier=n,o}if(r.isInfinity||i.isInfinity){if(r.isInfinity&&i.isInfinity)throw new Ae(\"(\"+r+\")^(\"+i+\") is undefined!\");if(r.isConstant()&&i.isInfinity){if(r.equals(0)){if(i.lessThan(0))throw new Ae(\"0^Infinity is undefined!\");return new Fe(0)}if(r.equals(1))throw new Ae(\"1^\"+i.toString()+\" is undefined!\");if(i.lessThan(0))return new Fe(0);if(!r.lessThan(0))return Fe.infinity()}if(r.isInfinity&&i.isConstant()){if(i.equals(0))throw new Ae(r+\"^0 is undefined!\");return i.lessThan(0)?new Fe(0):C.multiply(Fe.infinity(),C.pow(new Fe(r.sign()),i.clone()))}}var a=r.equals(0),u=i.equals(0);if(a&&u)throw new Ae(\"0^0 is undefined!\");if(a&&i.isConstant()&&i.multiplier.greaterThan(0))return new Fe(0);if(u)return new Fe(1);var l,c=i.isConstant(),p=r.isConstant(),o=i.isInteger(),n=r.multiplier,a=r.clone();if(p&&c&&r.equals(0)&&i.lessThan(0))throw new Ae(\"Division by zero is not allowed!\");if(D.PARSE2NUMBER&&p&&c&&r.sign()<0&&de(i)){var f=Math.PI*i;return b=new Fe(Math.cos(f)),v=C.multiply(Fe.imaginary(),new Fe(Math.sin(f))),C.add(b,v)}if(D.PARSE2NUMBER&&r.isImaginary()&&c&&ue(i)&&!i.lessThan(0))if(b=r.realpart(),v=r.imagpart(),b.isConstant(\"all\")&&v.isConstant(\"all\"))return u=D.USE_BIG?Fe(k.atan2(d.multiplier.toDecimal(),y.multiplier.toDecimal()).times(i.toString())):Math.atan2(v,b)*i,l=new Fe(u),y=C.pow(Fe.hyp(b,v),i),f=C.multiply(y.clone(),C.trig.cos(l.clone())),u=C.multiply(y,C.trig.sin(l)),C.add(f,C.multiply(Fe.imaginary(),u));if(a.toUnitMultiplier(),a.group!==H||a.fname!==z||c?(A=n.sign(),de(i)&&A<0&&(a.negate(),(a=C.symfunction(Z,[a])).negate()),a.multiplyPower(i)):((N=a.args[0]).multiplyPower(new Fe(.5)),N.multiplier.multiply(a.multiplier),N.multiplyPower(i),a=N),p&&c&&D.PARSE2NUMBER)A<0&&(r.negate(),m=i.multiplier.den.equals(2)?new Fe(D.IMAGINARY):ue(i.multiplier)?ge(i.multiplier)?new Fe(1):new Fe(-1):ge(i.multiplier.den)?C.pow(C.symfunction(Z,[new Fe(A)]),i.clone()):new Fe(Math.pow(A,i.multiplier.num))),a=new Fe(Math.pow(r.multiplier.toDecimal(),i.multiplier.toDecimal())),m&&(a=C.multiply(a,m));else if(o&&!n.equals(1)){if(i.abs().gt(D.MAX_EXP))return i.sign()<0?new Fe(0):Fe.infinity();var h=i.multiplier.toDecimal(),m=Math.sign(h);h=Math.abs(h);var g=new De(1);g.num=n.num.pow(h),g.den=n.den.pow(h),m<0&&g.invert(),a.multiplier=a.multiplier.multiply(g)}else{var d,v,w,y,b,S,M,N,E,q,x,A=r.sign();i.isConstant()&&r.isConstant()&&!i.multiplier.den.equals(1)&&A<0?a=i.multiplier.den.equals(2)?(d=new Fe(D.IMAGINARY),r.negate(),i.lessThan(0)&&(d.negate(),i.negate()),C.multiply(C.pow(r,i),d)):((w=r.clone()).multiplier.negate(),a=C.pow(C.symfunction(Z,[new Fe(A)]),i.clone()),g=C.pow(new Fe(w.multiplier.num),i.clone()),d=C.pow(new Fe(w.multiplier.den),i.clone()),y=C.divide(g,d),C.multiply(a,y)):D.PARSE2NUMBER&&i.isImaginary()?(b=i.realpart(),v=i.imagpart(),w=r.clone().toLinear(),y=C.pow(w.clone(),b),E=R(w.clone()),b=I.cos(C.multiply(v.clone(),E)),E=C.multiply(I.sin(C.multiply(v,R(w))),Fe.imaginary()),a=C.multiply(y,C.add(b,E)),a=C.expand(C.parse(a))):(S=P(new Fe((E=r.group===F&&A<0)?n.num:Math.abs(n.num)).setPower(i.clone())),M=P(new Fe(n.den).setPower(i.clone()).invert()),r.imaginary&&(o?(N=Math.sign(i),h=_(i),a=new Fe(ge(q=h%4)?-1:D.IMAGINARY),(0===q||N<0&&1===q||0<N&&3===q)&&a.negate()):(o=i.multiplier.multiply(De.quick(1,2)),N=Math.pow(-1,o.num),a=ge(o.den)?new Fe(-1).setPower(o,!0):new Fe(N))),A<0&&!E&&a.negate(),c&&r.group!==V&&(A=ge(i.multiplier.den),E=ge(r.power),q=a.power.toDecimal(),c=ge(q),A&&E&&!c&&(a=1===q?C.symfunction(Q,[a]):ue(q)?C.multiply(C.symfunction(Q,[a.clone().toLinear()]),a.clone().setPower(new De(q-1))):(h=a.power,C.symfunction(Q,[a.toLinear()]).setPower(h)),D.POSITIVE_MULTIPLIERS&&a.fname===Q&&(a=a.args[0]))),i.equals(2)&&a.group===X&&(x=new Fe(1),a.each(function(e){x=C.multiply(x,C.pow(e,i))}),a=x))}return a=P(a),(a=S&&M?C.multiply(a,function(e){if(e.group===B){var t=e.value,n=ke(t)[0];if(!n)return ee(\"Unable to compute prime factors. This should not happen. Please review and report.\"),e;t=new De(Math.log(t)/Math.log(n)).multiply(e.power);if(t.den>e.power.den)return e;e=ue(t)?Fe(Math.pow(n,t)):new Fe(n).setPower(t)}return e}(C.multiply(S,M))):a).fname===z?(M=((S=a.group===V)?a.power.multiplier:a.power).toString(),ge(M)&&(S=S?C.divide(a.power,new Fe(2)):new Fe(a.power.divide(new De(2))),n=a.multiplier,(a=C.pow(a.args[0],S)).multiplier=a.multiplier.multiply(n))):!D.IGNORE_E&&a.isE()&&a.group===V&&a.power.contains(\"pi\")&&a.power.contains(D.IMAGINARY)&&i.group===X&&(l=i.stripVar(D.IMAGINARY),a=C.add(I.cos(l),C.multiply(Fe.imaginary(),I.sin(l)))),a}return re(r)&&t?r=r.map(function(e){return C.pow(e,i.clone())}):ie(r)&&t?(s=new He,r.eachElement(function(e,t,n){s.set(t,n,C.pow(e,i.clone()))}),r=s):e&&ie(i)&&(s=new He,i.eachElement(function(e,t,n){s.set(t,n,C.pow(r.clone(),e))}),r=s),r},this.comma=function(e,t){return(e=!(e instanceof L)?L.create(e):e).append(t),e},this.mod=t,this.slice=function(e,t){return new x(e,t)},this.equals=function(e,t){return e.group===G||e.isLinear()||K(\"Cannot set equality for \"+e.toString()),J[e.value]=t.clone(),t},this.percent=function(e){return C.divide(e,new Fe(100))},this.assign=function(e,n){if(e instanceof L&&n instanceof L)return e.elements.map(function(e,t){return C.assign(e,n.elements[t])}),Ve.fromArray(n.elements);if(e.parent){var t=e.parent;return t.elements[t.getter]=n,delete t.getter,t}if(e.group!==G)throw new Oe(\"Cannot complete operation. Incorrect LH value for \"+e);return J[e.value]=n},this.function_assign=function(e,t){var n=e.elements.pop();return fe(n,e.elements,t)};function v(e){return new Fe(!0===e?1:0)}this.eq=function(e,t){return v(e.equals(t))},this.gt=function(e,t){return v(e.gt(t))},this.gte=function(e,t){return v(e.gte(t))},this.lt=function(e,t){return v(e.lt(t))},this.lte=function(e,t){return v(e.lte(t))},this.factorial=function(e){return this.symfunction(Y,[e])},this.dfactorial=function(e){return this.symfunction(W,[e])}}D.FUNCTION_MODULES.push(Te),x(Te),Math.sign=Math.sign||function(e){return 0===(e=+e)||isNaN(e)?e:0<e?1:-1},Math.cosh=Math.cosh||function(e){e=Math.exp(e);return(e+1/e)/2},Math.sech=Math.sech||function(e){return 1/Math.cosh(e)},Math.csch=Math.csch||function(e){return 1/Math.sinh(e)},Math.coth=Math.coth||function(e){return 1/Math.tanh(e)},Math.sinh=Math.sinh||function(e){e=Math.exp(e);return(e-1/e)/2},Math.tanh=Math.tanh||function(e){if(e===1/0)return 1;if(e===-1/0)return-1;e=Math.exp(2*e);return(e-1)/(e+1)},Math.asinh=Math.asinh||function(e){return e===-1/0?e:Math.log(e+Math.sqrt(e*e+1))},Math.acosh=Math.acosh||function(e){return Math.log(e+Math.sqrt(e*e-1))},Math.atanh=Math.atanh||function(e){return Math.log((1+e)/(1-e))/2},Math.log10=Math.log10||function(e){return Math.log(e)*Math.LOG10E},Math.trunc=Math.trunc||function(e){return isNaN(e)?NaN:0<e?Math.floor(e):Math.ceil(e)},ke(314146179365),R.getExpression=function(e,t){\"last\"!==e&&e||(e=p.length);e=p[(e=\"first\"===e?1:e)-1];return e&&new R(e)},(R.prototype={text:function(e,t){return t=t||D.EXPRESSION_DECP,e=e||\"decimals\",this.symbol.text_?this.symbol.text_(e):Pe(this.symbol,e,void 0,t)},latex:function(e){return this.symbol.latex?this.symbol.latex(e):Ge.latex(this.symbol,e)},valueOf:function(){return this.symbol.valueOf()},evaluate:function(){if(re(this.symbol)&&0===this.symbol.dimensions())return this;var e,t=arguments[0],n=1;\"string\"==typeof t?e=\"%\"===t.charAt(0)?R.getExpression(t.substr(1)).text():t:t instanceof R||ne(t)?e=t.text():(e=this.symbol.text(),n--);var r=arguments[n]||{};return new R(ye(\"PARSE2NUMBER\",function(){return d.parse(e,r)},!0))},buildFunction:function(e){return Xe.build(this.symbol,e)},isNumber:function(){return oe(this.symbol)},isInfinity:function(){return Math.abs(this.symbol.multiplier)===1/0},isImaginary:function(){return Se(d.parse(this.symbol)).isImaginary()},variables:function(){return b(this.symbol)},toString:function(){try{return ae(this.symbol)?\"[\"+this.symbol.toString()+\"]\":this.symbol.toString()}catch(e){return\"\"}},toDecimal:function(e){D.precision=e;e=Pe(this.symbol,\"decimals\");return D.precision=void 0,e},isFraction:function(){return v(this.symbol)},isPolynomial:function(){return this.symbol.isPoly()},sub:function(e,t){return new R(this.symbol.sub(d.parse(e),d.parse(t)))},operation:function(e,t){return i(t)?t=t.symbol:ne(t)||(t=d.parse(t)),new R(d[e](this.symbol.clone(),t.clone()))},add:function(e){return this.operation(\"add\",e)},subtract:function(e){return this.operation(\"subtract\",e)},multiply:function(e){return this.operation(\"multiply\",e)},divide:function(e){return this.operation(\"divide\",e)},pow:function(e){return this.operation(\"pow\",e)},expand:function(){return new R(d.expand(this.symbol))},each:function(e,t){if(this.symbol.each)this.symbol.each(e,t);else if(ae(this.symbol))for(t=0;t<this.symbol.length;t++)e.call(this.symbol,this.symbol[t],t);else e.call(this.symbol)},eq:function(e){ne(e)||(e=d.parse(e));try{return d.subtract(this.symbol.clone(),e).equals(0)}catch(e){return!1}},lt:function(e){ne(e)||(e=d.parse(e));try{return Se(d.subtract(this.symbol.clone(),e)).lessThan(0)}catch(e){return!1}},gt:function(e){ne(e)||(e=d.parse(e));try{return Se(d.subtract(this.symbol.clone(),e)).greaterThan(0)}catch(e){return!1}},gte:function(e){return this.gt(e)||this.eq(e)},lte:function(e){return this.lt(e)||this.eq(e)},numerator:function(){return new R(this.symbol.getNum())},denominator:function(){return new R(this.symbol.getDenom())},hasFunction:function(e){return this.symbol.containsFunction(e)},contains:function(e){return this.symbol.contains(e)}}).toTeX=R.prototype.latex,T.prototype={fromScientific:function(e){e=String(e).toLowerCase().split(\"e\");return this.coeff=e[0],this.exponent=e[1],this},convert:function(e){var t=e.split(\".\"),n=t[0]||\"\",r=t[1]||\"\",n=T.removeLeadingZeroes(n),r=T.removeTrailingZeroes(r),i=n.length,e=n+r,t=T.leadingZeroes(e).length;this.exponent=i-(t+1);e=T.removeLeadingZeroes(e);this.coeff=e.charAt(0)+\".\"+(e.substr(1,e.length)||\"0\");e=this.coeff.split(\".\")[1]||\"\";return this.decp=\"0\"===e?0:e.length,this.dec=r,this.wholes=n,this},round:function(e){var t,n,r=this.copy();return 0===(e=Number(e))?r.coeff=r.coeff.charAt(0):(t=this.coeff.substring(0,e+1),e=(n=this.coeff.substring(e+1,e+3)).charAt(0),4<n.charAt(1)&&e++,r.coeff=t+e),r},copy:function(){var e=new T(0);return e.coeff=this.coeff,e.exponent=this.exponent,e.sign=this.sign,e},toString:function(e){var t;return t=D.SCIENTIFIC_IGNORE_ZERO_EXPONENTS&&0===this.exponent&&this.decp<e?0===this.decp?this.wholes:this.coeff:(t=void 0===e?this.coeff:T.round(this.coeff,Math.min(e,this.decp||1)),0===this.exponent?t:t+\"e\"+this.exponent),(-1===this.sign?\"-\":\"\")+t}},T.isScientific=function(e){return/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(e)},T.leadingZeroes=function(e){e=e.match(/^(0*).*$/);return e?e[1]:\"\"},T.removeLeadingZeroes=function(e){e=e.match(/^0*(.*)$/);return e?e[1]:\"\"},T.removeTrailingZeroes=function(e){var t=e.match(/0*$/);return t?e.substring(0,e.length-t[0].length):\"\"},T.round=function(e,t){e=me(e,t),t-=String(e).split(\".\").pop().length;return 0<t&&(e+=new Array(1+t).join(0)),e},De.create=function(e){if(e instanceof De)return e;var t=\"-\"===(e=e.toString()).charAt(0),e=new De(e=t?e.substr(1,e.length-1):e);return t&&e.negate(),e},De.isFrac=function(e){return e instanceof De},De.quick=function(e,t){var n=new De;return n.num=new S(e),n.den=new S(t),n},De.simple=function(e){for(var t=String(y(e)).split(\".\"),e=t.join(\"\"),n=1,r=(t[1]||\"\").length,i=0;i<r;i++)n+=\"0\";return De.quick(e,n).simplify()},De.prototype={multiply:function(e){if(this.isOne())return e.clone();if(e.isOne())return this.clone();var t=this.clone();return t.num=t.num.multiply(e.num),t.den=t.den.multiply(e.den),t.simplify()},divide:function(e){if(e.equals(0))throw new qe(\"Division by zero not allowed!\");return this.clone().multiply(e.clone().invert()).simplify()},subtract:function(e){return this.clone().add(e.clone().neg())},neg:function(){return this.num=this.num.multiply(-1),this},add:function(e){var t=this.den,n=e.den,r=this.clone(),i=r.num,e=e.num;return t.equals(n)?r.num=i.add(e):(r.num=i.multiply(n).add(e.multiply(t)),r.den=t.multiply(n)),r.simplify()},mod:function(e){var t=this.clone(),e=e.clone();return t.num=t.num.multiply(e.den),t.den=t.den.multiply(e.den),e.num=e.num.multiply(this.den),e.den=e.den.multiply(this.den),t.num=t.num.mod(e.num),t.simplify()},simplify:function(){var e=S.gcd(this.num,this.den);return this.num=this.num.divide(e),this.den=this.den.divide(e),this},clone:function(){var e=new De;return e.num=new S(this.num),e.den=new S(this.den),e},decimal:function(e){var t=this.num.isNegative()?\"-\":\"\";if(this.num.equals(this.den))return\"1\";e=e||D.PRECISION,e++;for(var n=[],r=this.num.abs(),i=this.den,s=0;s<e;s++){var o=r.divide(i),a=r.subtract(o.multiply(i));if(n.push(o),a.equals(0))break;r=a.times(10)}var u=n.shift();if(0===n.length)return t+u.toString();if(s===e){for(var l=[],s=0;s<2;s++)l.unshift(n.pop());n.push(Math.round(l.join(\".\")))}return t+(u.toString()+\".\"+n.join(\"\"))},toDecimal:function(e){return(e=e||D.PRECISION)?this.decimal(e):this.num/this.den},qcompare:function(e){return[this.num.multiply(e.den),e.num.multiply(this.den)]},equals:function(e){isNaN(e)||(e=new De(e));e=this.qcompare(e);return e[0].equals(e[1])},absEquals:function(e){isNaN(e)||(e=new De(e));e=this.qcompare(e);return e[0].abs().equals(e[1])},greaterThan:function(e){isNaN(e)||(e=new De(e));e=this.qcompare(e);return e[0].gt(e[1])},gte:function(e){return this.greaterThan(e)||this.equals(e)},lte:function(e){return this.lessThan(e)||this.equals(e)},lessThan:function(e){isNaN(e)||(e=new De(e));e=this.qcompare(e);return e[0].lt(e[1])},isInteger:function(){return this.den.equals(1)},negate:function(){return this.num=this.num.multiply(-1),this},invert:function(){var e,t=this.den;return this.num.equals(0)||(e=this.num.isNegative(),this.den=this.num.abs(),this.num=t,e&&(this.num=this.num.multiply(-1))),this},isOne:function(){return this.num.equals(1)&&this.den.equals(1)},sign:function(){return this.num.isNegative()?-1:1},abs:function(){return this.num=this.num.abs(),this},gcd:function(e){return De.quick(S.gcd(e.num,this.num),S.lcm(e.den,this.den))},toString:function(){return this.den.equals(1)?this.num.toString():this.num.toString()+\"/\"+this.den.toString()},valueOf:function(){return D.USE_BIG?new k(this.num.toString()).div(new k(this.den.toString())):this.num/this.den},isNegative:function(){return this.toDecimal()<0}},Fe.imaginary=function(){var e=new Fe(D.IMAGINARY);return e.imaginary=!0,e},Fe.infinity=function(e){var t=new Fe(\"Infinity\");return-1===e&&t.negate(),t},Fe.shell=function(e,t){t=new Fe(t);return t.group=e,t.symbols={},t.length=0,t},Fe.unwrapSQRT=function(e,t){var n,r=e.power;return e.fname===z&&(e.isLinear()||t)&&((n=e.args[0].clone()).power=n.power.multiply(new De(.5)),n.multiplier=n.multiplier.multiply(e.multiplier),e=n,t&&(e.power=r.multiply(new De(.5)))),e},Fe.hyp=function(e,t){return e=e||new Fe(0),t=t||new Fe(0),d.sqrt(d.add(d.pow(e.clone(),new Fe(2)),d.pow(t.clone(),new Fe(2))))},Fe.toPolarFormArray=function(e){var t=e.realpart(),e=e.imagpart();return[Fe.hyp(t,e),t.equals(0)?d.parse(\"pi/2\"):d.trig.atan(d.divide(e,t))]},Fe.unwrapPARENS=function(e){if(\"\"!==e.fname)return e;var t=e.args[0];return t.power=t.power.multiply(e.power),t.multiplier=t.multiplier.multiply(e.multiplier),\"\"===e.fname?Fe.unwrapPARENS(t):t},Fe.create=function(e,t){return d.parse(\"(\"+e+\")^(\"+(t=void 0===t?1:t)+\")\")},Fe.prototype={getNth:function(e){var t=Se(d.pow(d.parse(this.multiplier),d.parse(e).invert())),n=d.parse(me(t));return Se(d.pow(n,d.parse(e))).equals(d.parse(this.multiplier))?n:t},isToNth:function(t){var n,e=this.getNth(t),e=ue(e);return this.group===X?(n=!0,this.each(function(e){e.isToNth(t)||(n=!1)})):n=this.group===F||ue(d.divide(d.parse(this.power),d.parse(t))),e&&n},isSquare:function(){return this.isToNth(2)},isCube:function(){return this.isToNth(3)},isSimple:function(){return this.power.equals(1)&&this.multiplier.equals(1)},powSimp:function(){if(this.group!==X)return this.clone();var t=[],e=this.multiplier.sign();this.each(function(e){e=e.power;if(ne(e)||e.equals(1))return this.clone();t.push(e)});var n,r=new De(c(t)),e=this.multiplier.sign(),i=this.multiplier.clone().abs(),s=Te.ifactor(i),o=new De(1),a=new De(1);for(n in s){var u=new De(s[n]);u.lessThan(r)||(u=u.divide(r).subtract(new De(1)),a=a.multiply(new De(n))),o=o.multiply(d.parse(E(n)+\"^\"+E(u)).multiplier)}var l=new Fe(a);this.each(function(e){(e=e.clone()).power=e.power.divide(r),l=d.multiply(l,e)});i=d.symfunction(Z,[l]);return i.power=r,i.multiplier=e<0?o.negate():o,i},equals:function(e){return ne(e)||(e=new Fe(e)),this.value===e.value&&this.power.equals(e.power)&&this.multiplier.equals(e.multiplier)&&this.group===e.group},abs:function(){var e=this.clone();return e.multiplier.abs(),e},gt:function(e){return ne(e)||(e=new Fe(e)),this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},gte:function(e){return ne(e)||(e=new Fe(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.greaterThan(e.multiplier)},lt:function(e){return ne(e)||(e=new Fe(e)),this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},lte:function(e){return ne(e)||(e=new Fe(e)),this.equals(e)||this.isConstant()&&e.isConstant()&&this.multiplier.lessThan(e.multiplier)},isPoly:function(e){var t=this.group,n=this.power;if(!ue(n)||n<0)return!1;if(t===F||t===G||this.isConstant(!0))return!0;n=b(this);if(t===X&&1===n.length){var r=n[0];if(!r)return!0;for(s in this.symbols){var i=this.symbols[s];if(i.group===H&&!i.args[0].isConstant())return!1;if(!i.contains(r)&&!i.isConstant(!0))return!1}return!0}if(this.isComposite()||t===X&&e){if(!e&&1<n.length)return!1;for(var s in this.symbols)if(!this.symbols[s].isPoly(e))return!1;return!0}return!1},stripVar:function(t,e){var n;return this.group!==j&&this.group!==G||this.value!==t?this.group===X&&this.isLinear()?(n=new Fe(1),this.each(function(e){e.contains(t,!0)||(n=d.multiply(n,e.clone()))}),n.multiplier=n.multiplier.multiply(this.multiplier)):this.group!==$||this.isLinear()?this.group===$&&this.isLinear()?(n=new Fe(0),this.each(function(e){e.contains(t)||((e=e.clone()).multiplier=e.multiplier.multiply(this.multiplier),n=d.add(n,e))}),n.equals(0)&&(n=new Fe(this.multiplier))):n=this.group===V&&this.power.contains(t,!0)||this.group===H&&this.contains(t)?new Fe(this.multiplier):this.clone():n=new Fe(this.multiplier):n=new Fe(e?0:this.multiplier),n},toArray:function(n,r){r=r||{arr:[],add:function(e,t){var n=this.arr[t];this.arr[t]=n?d.add(n,e):e}};var e=this.group;if(e===G&&this.contains(n))r.add(new Fe(this.multiplier),this.power);else if(e===X){var t=this.stripVar(n),i=d.divide(this.clone(),t.clone()),i=i.isConstant()?0:i.power;r.add(t,i)}else if(e===j&&this.value===n)this.each(function(e,t){r.add(e.stripVar(n),t)});else if(e===$)this.each(function(e){e.toArray(n,r)});else{if(this.contains(n))throw new I(\"Cannot convert to array! Exiting\");r.add(this.clone(),0)}r=r.arr;for(var s=0;s<r.length;s++)r[s]||(r[s]=new Fe(0));return r},hasFunc:function(e){var t=this.group===H||this.group===V;if(t&&!e||t&&this.contains(e))return!0;if(this.symbols)for(var n in this.symbols)if(this.symbols[n].hasFunc(e))return!0;return!1},sub:function(t,n){t=ne(t)?t.clone():d.parse(t),n=ne(n)?n.clone():d.parse(n),t.group!==F&&t.group!==B||K(\"Cannot substitute a number. Must be a variable\");var r,e=!1,i=t.multiplier.equals(1),s=this.multiplier.clone();if(this.value===t.value&&(this.group!==j&&t.group!==j||this.group===j&&t.group===j))(i||t.multiplier.equals(this.multiplier))&&(t.isLinear()?r=n:t.power.equals(this.power)&&(r=n,e=!0),t.multiplier.equals(this.multiplier)&&(s=new De(1)));else if(this.group===X||this.previousGroup===X)r=new Fe(1),this.each(function(e){e=d.parse(e.sub(t,n));r=d.multiply(r,e)});else if(this.isComposite()){var o=this.clone();if(t.isComposite()&&o.isComposite()&&o.isLinear()&&t.isLinear()){var a,u=function(e,t){for(var n in e.symbols){n=e.symbols[n];if(n.isComposite()&&u(n,t)||n.equals(t))return!0}return!1};for(a in t.symbols)if(!u(o,t.symbols[a]))return o.clone();r=d.add(d.subtract(o.clone(),t),n)}else r=new Fe(0),o.each(function(e){r=d.add(r,e.sub(t,n))})}else if(this.group===V)r=d.parse(this.value).sub(t,n);else if(this.group===H){for(var l=[],c=0;c<this.args.length;c++){var p=this.args[c];ne(p)||(p=d.parse(p)),l.push(p.sub(t,n))}r=d.symfunction(this.fname,l)}return r?(e||(e=this.group===V?this.power.sub(t,n):d.parse(this.power),r=d.pow(r,e)),r.multiplier=r.multiplier.multiply(s),r):this.clone()},isMonomial:function(){if(this.group===G)return!0;if(this.group!==X)return!1;for(var e in this.symbols)if(this.symbols[e].group!==G)return!1;return!0},isPi:function(){return this.group===G&&\"pi\"===this.value},sign:function(){return this.multiplier.sign()},isE:function(){return\"e\"===this.value},isSQRT:function(){return this.fname===z},isConstant:function(t,n){if(n&&this.group===X)for(var e in this.symbols)if(this.symbols[e].isConstant(!0))return!0;if(\"functions\"===t&&this.isComposite()){var r=!0;return this.each(function(e){e.isConstant(t,n)||(r=!1)},!0),r}if(\"all\"===t&&(this.isPi()||this.isE()))return!0;if(t&&this.group===H){for(var i=0;i<this.args.length;i++)if(!this.args[i].isConstant(t))return!1;return!0}return t?oe(this):this.value===l},isImaginary:function(){if(this.imaginary)return!0;if(this.symbols)for(var e in this.symbols)if(this.symbols[e].isImaginary())return!0;return!1},realpart:function(){if(this.isConstant())return this.clone();if(this.imaginary)return new Fe(0);if(this.isComposite()){var t=new Fe(0);return this.each(function(e){t=d.add(t,e.realpart())}),t}return this.isImaginary()?new Fe(0):this.clone()},imagpart:function(){if(this.group===G&&this.isImaginary())return new Fe(this.multiplier);if(this.isComposite()){var t=new Fe(0);return this.each(function(e){t=d.add(t,e.imagpart())}),t}return this.group===X?this.stripVar(D.IMAGINARY):new Fe(0)},isInteger:function(){return this.isConstant()&&this.multiplier.isInteger()},isLinear:function(e){if(e){if(this.isConstant())return!0;if(this.group===G)return this.value!==e||this.power.equals(1);if(this.isComposite()&&this.power.equals(1)){for(var t in this.symbols)if(!this.symbols[t].isLinear(e))return!1;return!0}return this.group===X&&this.symbols[e]?this.symbols[e].isLinear(e):!1}return this.power.equals(1)},containsFunction:function(e){if(\"string\"==typeof e&&(e=[e]),this.group===H&&-1!==e.indexOf(this.fname))return!0;if(this.symbols)for(var t in this.symbols)if(this.symbols[t].containsFunction(e))return!0;return!1},multiplyPower:function(e){if(this.group===F&&this.multiplier.equals(1))return this;var t,n=this.power;return this.group!==V&&e.group===F?(t=e.multiplier,this.group!==F||t.isInteger()||this.convert(B),this.power=n.equals(1)?t.clone():n.multiply(t),this.group===B&&ue(this.power)&&(this.value=Math.pow(this.value,this.power),this.toLinear(),this.convert(F))):(this.group!==V&&(n=new Fe(n),this.convert(V)),this.power=d.multiply(n,e)),this},setPower:function(e,t){return this.group===F&&this.multiplier.equals(1)||(this.group!==V||ne(e)?(n=!1,ne(e)&&(e.group===F?e=e.multiplier:n=!0),n=n?V:B,this.power=e,this.group===F&&n&&this.convert(n,t)):(this.group=this.previousGroup,delete this.previousGroup,this.group===F?(this.multiplier=new De(this.value),this.value=l):this.power=e)),this;var n},isInverse:function(){return this.group===V?this.power.multiplier.lessThan(0):this.power<0},clone:function(e){var t,n=e||new Fe(0),r=[\"value\",\"group\",\"length\",\"previousGroup\",\"imaginary\",\"fname\",\"args\",\"isInfinity\",\"scientific\"],i=r.length;if(this.symbols)for(var s in n.symbols={},this.symbols)n.symbols[s]=this.symbols[s].clone();for(t=0;t<i;t++)void 0!==this[r[t]]&&(n[r[t]]=this[r[t]]);return n.power=this.power.clone(),n.multiplier=this.multiplier.clone(),this.isConversion&&(n.isConversion=this.isConversion),this.isUnit&&(n.isUnit=this.isUnit),n},toUnitMultiplier:function(e){return this.multiplier.num=new S(this.multiplier.num.isNegative()&&e?-1:1),this.multiplier.den=new S(1),this},toLinear:function(){return this.power.equals(1)||this.setPower(new De(1)),this},each:function(e,t){if(this.symbols)for(var n in this.symbols){var r=this.symbols[n];if(r.group===j&&t)for(var i in r.symbols)e.call(n,r.symbols[i],i);else e.call(this,r,n)}else e.call(this,this,this.value)},valueOf:function(){return this.group===F?this.multiplier.valueOf():0===this.power?1:0===this.multiplier?0:Pe(this,\"decimals\")},contains:function(e,t){e=String(e);var n=this.group;if(this.value===e)return!0;if(this.symbols)for(var r in this.symbols)if(this.symbols[r].contains(e,t))return!0;if(n===H||this.previousGroup===H)for(var i=0;i<this.args.length;i++)if(this.args[i].contains(e,t))return!0;if(n===V){if(t&&this.power.contains(e,t))return!0;if(this.value===e)return!0}return this.value===e},negate:function(){return this.multiplier.negate(),this.group!==$&&this.group!==j||this.distributeMultiplier(),this},invert:function(e,t){return e||(this.multiplier=this.multiplier.invert()),ne(this.power)?this.power.negate():this.group===X&&t?this.each(function(e){return e.invert()}):this.power&&this.group!==F&&this.power.negate(),this},distributeMultiplier:function(e){e=e?this.power.absEquals(1):this.power.equals(1);if(this.symbols&&e&&this.group!==X&&!this.multiplier.equals(1)){for(var t in this.symbols){t=this.symbols[t];t.multiplier=t.multiplier.multiply(this.multiplier),t.distributeMultiplier()}this.toUnitMultiplier()}return this},distributeExponent:function(){if(!this.power.equals(1)){var e,t=this.power;for(e in this.symbols){var n=this.symbols[e];n.group===V?n.power=d.multiply(n.power,new Fe(t)):this.symbols[e].power=this.symbols[e].power.multiply(t)}this.toLinear()}return this},convert:function(e,t){var n;return H<e?(n=this.clone(),this.symbols={},(e===X?n:this).toUnitMultiplier(),this.group===H&&(n.args=this.args,delete this.args,delete this.fname),this.isImgSymbol&&delete this.isImgSymbol,this.toLinear(),this.symbols[n.keyForGroup(e)]=n,this.group=e,this.length=1):e===V?this.group===F&&this.multiplier.equals(1)||(this.group!==V&&(this.previousGroup=this.group),this.group===F?(this.value=this.multiplier.num.toString(),this.toUnitMultiplier()):this.value=Pe(this,\"hash\"),this.group=V):e===F?(n=this.multiplier.toDecimal(),this.symbols&&(this.symbols=void 0),new Fe(this.group===B?n*Math.pow(this.value,this.power):n).clone(this)):e===B&&this.group===F&&(this.value=t?this.multiplier.num.toString():Math.abs(this.multiplier.num.toString()),this.toUnitMultiplier(!t),this.group=B),this},insert:function(e,t){var n,r;return ne(e)||K(\"Object \"+e+\" is not of type Symbol!\"),this.symbols&&(r=this.group,H<r&&(r=(n=e.keyForGroup(r))in this.symbols&&this.symbols[n],\"add\"===t?(t=n,r?(this.symbols[t]=d.add(r,e),this.symbols[t].multiplier.equals(0)&&(delete this.symbols[t],this.length--,0===this.length&&(this.convert(F),this.multiplier=new De(0)))):(this.symbols[n]=e,this.length++)):(e.group===B&&ue(e.power)&&e.convert(F),e.group!==V?(this.multiplier=this.multiplier.multiply(e.multiplier),e.toUnitMultiplier()):(e.parens=e.multiplier.lessThan(0),this.multiplier=this.multiplier.multiply(e.multiplier.clone().abs()),e.toUnitMultiplier(!0)),r&&((e=d.multiply(we(this.symbols,n),e)).isConstant()&&(this.multiplier=this.multiplier.multiply(e.multiplier),e=new Fe(1)),this.length--),e.isOne(!0)?e.multiplier.lessThan(0)&&this.negate():(this.symbols[n]=e,this.length++)),0===this.length&&this.convert(F),this.group!==$&&this.group!==X||this.updateHash())),this},attach:function(e){if(ae(e)){for(var t=0;t<e.length;t++)this.insert(e[t],\"add\");return this}return this.insert(e,\"add\")},combine:function(e){if(ae(e)){for(var t=0;t<e.length;t++)this.insert(e[t],\"multiply\");return this}return this.insert(e,\"multiply\")},updateHash:function(){if(this.group!==F)if(this.group===H){for(var e=\"\",t=this.args,n=this.fname===Z,r=0;r<t.length;r++)e+=(0===r?\"\":\",\")+Pe(t[r]);var i=n?\"\":this.fname;this.value=i+(n?e:E(e))}else this.group!==G&&this.group!==j&&(this.value=Pe(this,\"hash\"))},keyForGroup:function(e){var t,n=this.group;if(n===F)t=this.value;else if(n===G||n===B)t=e===j?this.power.toDecimal():this.value;else if(n===H)t=e===j?this.power.toDecimal():Pe(this,\"hash\");else{if(n===j)return t=e===X?Pe(this,\"hash\"):e===$?this.power.equals(1)?this.value:E(Pe(this,\"hash\"))+D.POWER_OPERATOR+this.power.toDecimal():e===j?this.power.toString():this.value;n===$?(e===$&&(t=Pe(this,\"hash\")),t=e===j?this.power.toDecimal():this.value):n===X?t=e===j?this.power.toDecimal():Pe(this,\"hash\"):n===V&&(t=e===j?Pe(this.power):Pe(this,\"hash\"))}return t},collectSymbols:function(e,t,n,r){var i=[];if(this.symbols)for(var s in this.symbols){s=this.symbols[s];!r||s.group!==j&&s.group!==$?i.push(e?e(s,t):s):i=i.concat(s.collectSymbols())}else i.push(this);return i.sort(n=null===n?void 0:n)},latex:function(e){return Ge.latex(this,e)},text:function(e){return Pe(this,e)},isOne:function(e){return this.group===F?this.multiplier[e?\"absEquals\":\"equals\"](1):this.power.equals(0)},isComposite:function(){var e=this.group,t=this.previousGroup;return e===$||e===j||t===j||t===$},isCombination:function(){var e=this.group,t=this.previousGroup;return e===X||t===X},lessThan:function(e){return this.multiplier.lessThan(e)},greaterThan:function(e){return ne(e)||(e=new Fe(e)),!(!this.isConstant(!0)||!e.isConstant(!0))&&this.multiplier.greaterThan(e.multiplier)},getDenom:function(){var e=this.clone();if((e=this.group===X&&this.power.lessThan(0)?d.expand(e):e).power.lessThan(0)||e.group===V&&e.power.multiplier.lessThan(0)){var t,n=d.parse(e.multiplier.den);(t=e.toUnitMultiplier()).power.negate(),t=d.multiply(n,t)}else if(e.group===X)for(var r in t=d.parse(e.multiplier.den),e.symbols){var i=e.symbols[r];(i.power<0||i.group===V&&i.power.multiplier.lessThan(0))&&(t=d.multiply(t,e.symbols[r].clone().invert()))}else t=d.parse(e.multiplier.den);return t},getNum:function(){var t,e=this.clone();return(e=e.group===X&&e.power.lessThan(0)?d.expand(e):e).power.greaterThan(0)&&e.group!==X||e.group===V&&e.power.multiplier.greaterThan(0)?t=d.multiply(d.parse(e.multiplier.num),e.toUnitMultiplier()):e.group===X?(t=d.parse(e.multiplier.num),e.each(function(e){(0<e.power||e.group===V&&0<e.power.multiplier)&&(t=d.multiply(t,e.clone()))})):t=d.parse(e.multiplier.num),t},toString:function(){return this.text()}};var Be={convert:function(e,t){var n,r,i,s;return 0===e?s=[0,1]:e<1e-6||1e20<e?(n=this.quickConversion(Number(e)))[1]<=1e20?(i=e/(r=Math.abs(e)),(s=this.fullConversion(r.toFixed((n[1]+\"\").length-1)))[0]=s[0]*i):s=n:s=this.fullConversion(e),s},quickConversion:function(e){return function(e){T.isScientific(e)&&(e=y(e));var t=1===(n=(e=(n=\"\",\"-\"===(e=(t=\"string\"!=typeof(t=e)?t.toString():t).charAt(0))?(t=t.substr(1,t.length),n=\"-\"):\"+\"===e&&(t=t.substr(1,t.length)),{sign:n,value:t})).value.split(\".\")).length?n[0]:n[0]+n[1],n=n[1]?n[1].length:0,n=`1${\"0\".repeat(n)}`;return\"0\"!==t&&(t=t.replace(/^0+/,\"\")),[e.sign+t,n]}(e)},fullConversion:function(e){for(var t=!1,n=0,r=1,i=1,s=0,o=0,a=e;!t;){1e4<++o&&(t=!0);var u=Math.floor(a),l=n+u*i,c=r+u*s,u=a-u;u<1e-16&&(t=!0),a=1/u,n=i,r=s,i=l,s=c,(Math.abs(l/c-e)<1e-16||30<o)&&(t=!0)}return[l,c]}},Ge={parser:function(){var e,t=[\"classes\",\"setOperator\",\"getOperators\",\"getBrackets\",\"tokenize\",\"toRPN\",\"tree\",\"units\"],n=new P;for(e in n)-1===t.indexOf(e)&&delete n[e];return n.setOperator({precedence:8,operator:\"\\\\\",action:\"slash\",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}}),n.setOperator({precedence:8,operator:\"\\\\,\",action:\"slash_comma\",prefix:!0,postfix:!1,leftAssoc:!0,operation:function(e){return e}}),n.getBrackets()[\"{\"].maps_to=void 0,n}(),space:\"~\",dot:\" \\\\cdot \",latex:function(e,t){if((e=e.clone?e.clone():e)instanceof d.classes.Collection&&(e=e.elements),ae(e)){for(var n=[],r=0;r<e.length;r++){var i=e[r];ne(i)||(i=d.parse(i)),n.push(this.latex(i,t))}return this.brackets(n.join(\", \"),\"square\")}if(ie(e)){for(var s=\"\\\\begin{pmatrix}\\n\",r=0;r<e.elements.length;r++){for(var o=[],a=e.elements[r],u=0;u<a.length;u++)o.push(this.latex(a[u],t));s+=o.join(\" & \"),r<e.elements.length-1&&(s+=\"\\\\\\\\\\n\")}return s+=\"\\\\end{pmatrix}\"}if(re(e)){for(s=\"\\\\left[\",r=0;r<e.elements.length;r++)s+=this.latex(e.elements[r],t)+\" \"+(r!==e.elements.length-1?\",\\\\,\":\"\");return s+=\"\\\\right]\"}if(se(e)){for(s=\"\\\\{\",r=0;r<e.elements.length;r++)s+=this.latex(e.elements[r],t)+\" \"+(r!==e.elements.length-1?\",\\\\,\":\"\");return s+=\"\\\\}\"}var l,c=\"decimal\"===t||\"decimals\"===t,p=(e=e.clone()).power,f=A(p),h=e.multiplier.lessThan(0);if(e.group===B&&c)return String(e.multiplier.toDecimal()*Math.pow(e.value,e.power.toDecimal()));e.multiplier=e.multiplier.abs(),l=c?[String(e.multiplier.toDecimal()),\"\"]:[e.multiplier.num,e.multiplier.den];var m,g=this.value(e,f,t,h);f&&p.negate(),c?(m=ne(p)?Ge.latex(p,t):String(p.toDecimal()),\"1\"===String(m)&&(m=\"\")):m=ne(p)?this.latex(p,t):this.formatFrac(p,!0);p=[\"\",\"\"];return p[f?1:0]=m,((h?\"-\":\"\")+this.set(l,g,p,e.group===X)).replace(/\\+\\-/gi,\"-\")},greek:{alpha:\"\\\\alpha\",beta:\"\\\\beta\",gamma:\"\\\\gamma\",delta:\"\\\\delta\",epsilon:\"\\\\epsilon\",zeta:\"\\\\zeta\",eta:\"\\\\eta\",theta:\"\\\\theta\",iota:\"\\\\iota\",kappa:\"\\\\kappa\",lambda:\"\\\\lambda\",mu:\"\\\\mu\",nu:\"\\\\nu\",xi:\"\\\\xi\",omnikron:\"\\\\omnikron\",pi:\"\\\\pi\",rho:\"\\\\rho\",sigma:\"\\\\sigma\",tau:\"\\\\tau\",upsilon:\"\\\\upsilon\",phi:\"\\\\phi\",chi:\"\\\\chi\",psi:\"\\\\psi\",omega:\"\\\\omega\",Gamma:\"\\\\Gamma\",Delta:\"\\\\Delta\",Epsilon:\"\\\\Epsilon\",Theta:\"\\\\Theta\",Lambda:\"\\\\Lambda\",Xi:\"\\\\Xi\",Pi:\"\\\\Pi\",Sigma:\"\\\\Sigma\",Phi:\"\\\\Phi\",Psi:\"\\\\Psi\",Omega:\"\\\\Omega\"},symbols:{arccos:\"\\\\arccos\",cos:\"\\\\cos\",csc:\"\\\\csc\",exp:\"\\\\exp\",ker:\"\\\\ker\",limsup:\"\\\\limsup\",min:\"\\\\min\",sinh:\"\\\\sinh\",arcsin:\"\\\\arcsin\",cosh:\"\\\\cosh\",deg:\"\\\\deg\",gcd:\"\\\\gcd\",lg:\"\\\\lg\",ln:\"\\\\ln\",Pr:\"\\\\Pr\",sqrt:\"\\\\sqrt\",sup:\"\\\\sup\",arctan:\"\\\\arctan\",cot:\"\\\\cot\",det:\"\\\\det\",hom:\"\\\\hom\",lim:\"\\\\lim\",log:\"\\\\log\",LN:\"\\\\LN\",sec:\"\\\\sec\",tan:\"\\\\tan\",arg:\"\\\\arg\",coth:\"\\\\coth\",dim:\"\\\\dim\",inf:\"\\\\inf\",liminf:\"\\\\liminf\",max:\"\\\\max\",sin:\"\\\\sin\",tanh:\"\\\\tanh\"},value:function(n,e,r,t){var i,s,o,a,u,l,c=n.group,p=n.previousGroup,f=[\"\",\"\"],h=e?1:0;if(n.isInfinity)f[h]=\"\\\\infty\";else if(c===G||c===B||p===G||p===B||p===F){(x=this.formatSubscripts(n.value)).replace&&(x=x.replace(/(.+)_$/,\"$1\\\\_\"));var m=String(x).split(\"_\"),e=this.greek[m[0]];e&&(m[0]=e,x=m.join(\"_\")),(n=this.symbols[m[0]])&&(m[0]=n,x=m.join(\"_\")),f[h]=x}else if(c===H||p===H){for(var g,d,v,w,y=[],m=n.fname,b=0;b<n.args.length;b++){var S,M=\"string\"==typeof(S=n.args[b])?S:this.latex(S,r);y.push(M)}m===z?f[h]=\"\\\\sqrt\"+this.braces(y.join(\",\")):m===Q?f[h]=this.brackets(y.join(\",\"),\"abs\"):m===Z?f[h]=this.brackets(y.join(\",\"),\"parens\"):\"limit\"===m?f[h]=\" \\\\lim\\\\limits_{\"+y[1]+\" \\\\to \"+y[2]+\"} \"+y[0]:\"integrate\"===m?f[h]=\"\\\\int\"+this.braces(y[0])+this.braces(\"d\"+y[1]):\"defint\"===m?f[h]=\"\\\\int\\\\limits_\"+this.braces(y[1])+\"^\"+this.braces(y[2])+\" \"+y[0]+\" d\"+y[3]:m===Y||m===W?((S=n.args[0]).power.equals(1)&&(S.isComposite()||S.isCombination())&&(y[0]=this.brackets(y[0])),f[h]=y[0]+(m===Y?\"!\":\"!!\")):\"floor\"===m?f[h]=\"\\\\left \\\\lfloor\"+this.braces(y[0])+\"\\\\right \\\\rfloor\":\"ceil\"===m?f[h]=\"\\\\left \\\\lceil\"+this.braces(y[0])+\"\\\\right \\\\rceil\":m===D.LOG&&1<y.length?f[h]=\"\\\\mathrm\"+this.braces(D.LOG)+\"_\"+this.braces(y[1])+this.brackets(y[0]):m===D.LOG10?f[h]=\"\\\\mathrm\"+this.braces(D.LOG)+\"_\"+this.braces(10)+this.brackets(y[0]):\"sum\"===m?(g=y[0],d=y[1],v=y[2],w=y[3],f[h]=\"\\\\sum\\\\limits_{\"+this.braces(d)+\"=\"+this.braces(v)+\"}^\"+this.braces(w)+\" \"+this.braces(g)):\"product\"===m?(g=y[0],d=y[1],v=y[2],w=y[3],f[h]=\"\\\\prod\\\\limits_{\"+this.braces(d)+\"=\"+this.braces(v)+\"}^\"+this.braces(w)+\" \"+this.braces(g)):\"nthroot\"===m?f[h]=\"\\\\sqrt[\"+y[1]+\"]\"+this.braces(y[0]):\"mod\"===m?f[h]=y[0]+\" \\\\bmod \"+y[1]:\"realpart\"===m?f[h]=\"\\\\operatorname{Re}\"+this.brackets(y[0]):\"imagpart\"===m?f[h]=\"\\\\operatorname{Im}\"+this.brackets(y[0]):(m=\"\"!==m?\"\\\\mathrm\"+this.braces(m.replace(/_/g,\"\\\\_\")):\"\",n.isConversion?f[h]=m+this.brackets(y.join(\"\"),\"parens\"):f[h]=m+this.brackets(y.join(\",\"),\"parens\"))}else if(n.isComposite()){for(var N=n.collectSymbols().sort(c===$||p===$?function(e,t){return t.group-e.group}:function(e,t){e=ne(e.power)?-1:e.power;return(ne(t.power)?-1:t.power)-e}),E=[],q=N.length,b=0;b<q;b++)E.push(Ge.latex(N[b],r));var x=E.join(\"+\");f[h]=n.isLinear()&&n.multiplier.equals(1)&&!t?x:this.brackets(x,\"parens\")}else c!==X&&p!==V&&p!==X||(c===X&&n.distributeExponent(),i=[],s=[],o=[],a=[],l=u=0,c=function(e,t,n){if(1<n&&0<t.length)for(var r=t.length,i=0;i<r;i++){var s=t[i],o=e[s];/^\\\\left\\(.+\\\\right\\)\\^\\{.+\\}$/g.test(o)||/^\\\\left\\(.+\\\\right\\)$/g.test(o)||(e[s]=Ge.brackets(o,\"parens\"))}return e},n.each(function(e){var t;A(e.power)?(t=Ge.latex(e.invert(),r),l++,e.isComposite()&&(1!=n.multiplier.den&&1==Math.abs(e.power)&&(t=Ge.brackets(t,\"parens\")),o.push(i.length)),i.push(t)):(t=Ge.latex(e,r),u++,e.isComposite()&&(1!=n.multiplier.num&&1==Math.abs(e.power)&&(t=Ge.brackets(t,\"parens\")),a.push(s.length)),s.push(t))}),c(s,a,u),f[0]=s.join(this.dot),c(i,o,l),f[1]=i.join(this.dot));return f},set:function(e,t,n,r){function i(e){return/^\\\\left\\(.+\\\\right\\)$/.test(e)}var s;n=n&&this.formatP(n),r&&(s=n[0],n[0]=\"\"),t=this.merge(t,n);var o=e[0],n=e[1],e=t[0],t=t[1];e&&1===Number(o)&&(o=\"\"),1===Number(n)&&(n=\"\");e=this.join(o,e,i(e)?\"\":this.dot),t=this.join(n,t,i(t)?\"\":this.dot);if(e&&t){t=this.frac(e,t);return t=r&&s?this.brackets(t)+s:t}return e},merge:function(e,t){for(var n=[],r=0;r<2;r++)n[r]=e[r]+t[r];return n},join:function(e,t,n){return e||t?e&&!t?e:t&&!e?t:e+n+t:\"\"},formatSubscripts:function(e){for(var t=e.toString().split(\"_\"),n=\"\";1<t.length;)0<t.length&&(n=\"_\"+this.braces(t.pop()+n));return t[0]+n},formatP:function(e){for(var t=0;t<2;t++){var n=e[t];n&&(e[t]=\"^\"+this.braces(n))}return e},formatFrac:function(e,t){var n=e.num.toString(),e=e.den.toString();return t&&\"1\"===n&&\"1\"===e?\"\":\"1\"===e?n:this.frac(n,e)},frac:function(e,t){return\"\\\\frac\"+this.braces(e)+this.braces(t)},braces:function(e){return\"{\"+e+\"}\"},brackets:function(e,t){t={parens:[\"(\",\")\"],square:[\"[\",\"]\"],brace:[\"{\",\"}\"],abs:[\"|\",\"|\"],angle:[\"\\\\langle\",\"\\\\rangle\"]}[t=t||\"parens\"];return\"\\\\left\"+t[0]+e+\"\\\\right\"+t[1]},filterTokens:function(e){var t=[];ae(e)&&(t.type=e.type);for(var n=[\"\\\\\",\"left\",\"right\",\"big\",\"Big\",\"large\",\"Large\"],r=0,i=e.length;r<i;r++){var s=e[r],o=e[r+1];\"\\\\\"===s.value&&\"\\\\\"===o.value?t.push(s):ae(s)?t.push(Ge.filterTokens(s)):-1===n.indexOf(s.value)&&t.push(s)}return t},parse:function(e){function t(e){return s[void 0===e?++a:a+=e]}function n(){return Ge.parse(t())}function r(e){return e in o?o[e]:\"*\"===e&&\"&\"===s[a+1].value?(t(2),\",\"):\"&\"===e?(t(),\",\"):\"\\\\\"===e?\"],[\":e}var i=\"\",s=this.filterTokens(e),o={cdot:\"\",times:\"\",infty:\"Infinity\"},a=0;for(u=s.length;a<u;a++){var u,l,c,p,f,h,m,g=s[a];\"frac\"===g.value?i+=n()+\"/\"+n():g.value in Ge.symbols?g.value===z&&\"vector\"===s[a+1].type&&\"Set\"===s[a+2].type?(f=n(),i+=n()+\"^\"+E(\"1/\"+f)):i+=g.value+n():\"int\"===g.value?(h=n(),a++,c=r((c=t().value).substring(1,c.length)),i+=\"integrate\"+E(h+\",\"+c)):\"int_\"===g.value?(u=n(),a++,void 0===(l=t().value)&&(a--,l=n()),h=n(),\"differentialD\"===(c=\",\"===(c=t().value)?t().value:c)&&(a++,c=t().value),\"mathrm\"===c&&(a++,c=t().value),i+=\"defint\"+E(h+\",\"+u+\",\"+l+\",\"+c)):g.value&&g.value.startsWith(\"int_\")?(u=g.value.replace(\"int_\",\"\"),console.log(\"uppernow\"),a++,void 0===(l=t().value)&&(a--,l=n()),h=n(),\"differentialD\"===(c=\",\"===(c=t().value)?t().value:c)&&(a++,c=t().value),\"mathrm\"===c&&(a++,c=t().value),i+=\"defint\"+E(h+\",\"+u+\",\"+l+\",\"+c)):\"mathrm\"===g.value?i+=(h=s[++a][0].value)+n():\"sum_\"===g.value||\"prod_\"===g.value?(p=\"sum_\"===g.value?\"sum\":\"product\",m=t(),a++,f=n(),h=n(),i+=p+E([h,r(m[0]),r(m[2]),r(f)].join(\",\"))):\"lim_\"===g.value?(m=t(),i+=\"limit\"+E([n(),r(m[0]),r(m[2])].join(\",\"))):\"begin\"===g.value?(m=t(),Array.isArray(m)&&\"matrix\"===m[0].value&&(i+=\"matrix([\")):\"end\"===g.value?(m=t(),Array.isArray(m)&&\"matrix\"===m[0].value&&(i+=\"])\")):Array.isArray(g)?i+=r(Ge.parse(g)):i+=r(g.value.toString())}return E(i)}};function Ve(e){re(e)?this.elements=e.items.slice(0):ae(e)?this.elements=e.slice(0):this.elements=[].slice.call(arguments)}function He(){var e=arguments,t=e.length,n=[];if(ie(e))for(o=0;o<t;o++)n.push(e[o].slice(0));else for(var r,i,s,o=0;o<t;o++)r=e[o],re(r)&&(r=r.elements),s=(r=!ae(r)?[r]:r).length,i&&i!==s&&K(\"Unable to create Matrix. Row dimensions do not match!\"),n.push(r),i=s;this.elements=n}function je(e){if(this.elements=[],e=!re(e)?Ve.fromArray(arguments):e)for(var t=e.elements,n=0,r=t.length;n<r;n++)this.add(t[n])}Ve.arrayPrefill=function(e,t){var n=[];t=t||0;for(var r=0;r<e;r++)n[r]=t;return n},Ve.fromArray=function(e){var t=new Ve;return t.elements=e,t},Ve.fromSet=function(e){return Ve.fromArray(e.elements)},Ve.prototype={custom:!0,e:function(e){return e<1||e>this.elements.length?null:this.elements[e-1]},set:function(e,t){ne(t)||(t=new Fe(t)),this.elements[e]=t},dimensions:function(){return this.elements.length},modulus:function(){return ye(\"SAFE\",function(){return d.pow(this.dot(this.clone()),new Fe(.5))},void 0,this)},eql:function(e){var t=this.elements.length,n=e.elements||e;if(t!==n.length)return!1;do{if(Math.abs(d.subtract(this.elements[t-1],n[t-1]).valueOf())>PRECISION)return!1}while(--t);return!0},clone:function(){for(var e=new Ve,t=this.elements.length,n=0;n<t;n++)e.elements.push(this.elements[n].clone());return this.getter&&(e.getter=this.getter.clone()),e},map:function(n){var r=[];return this.each(function(e,t){r.push(n(e,t))}),new Ve(r)},each:function(e){for(var t,n=this.elements.length,r=n;e(this.elements[t=r-n],1+t),--n;);},toUnitVector:function(){return ye(\"SAFE\",function(){var t=this.modulus();return 0===t.valueOf()?this.clone():this.map(function(e){return d.divide(e,t)})},void 0,this)},angleFrom:function(o){return ye(\"SAFE\",function(){var n=o.elements||o;if(this.elements.length!==n.length)return null;var r=new Fe(0),i=new Fe(0),s=new Fe(0);this.each(function(e,t){r=d.add(r,d.multiply(e,n[t-1])),i=d.add(i,d.multiply(e,e)),s=d.add(s,d.multiply(n[t-1],n[t-1]))});var i=d.pow(i,new Fe(.5)),s=d.pow(s,new Fe(.5)),e=d.multiply(i,s);if(0===e.valueOf())return null;var t=d.divide(r,e),e=t.valueOf();return e<-1&&(t=-1),1<e&&(t=1),new Fe(Math.acos(t))},void 0,this)},isParallelTo:function(e){e=this.angleFrom(e).valueOf();return null===e?null:e<=PRECISION},isAntiparallelTo:function(e){e=this.angleFrom(e).valueOf();return null===e?null:Math.abs(e-Math.PI)<=PRECISION},isPerpendicularTo:function(e){e=this.dot(e);return null===e?null:Math.abs(e)<=PRECISION},add:function(e){return ye(\"SAFE\",function(){var n=e.elements||e;return this.elements.length!==n.length?null:this.map(function(e,t){return d.add(e,n[t-1])})},void 0,this)},subtract:function(e){return ye(\"SAFE\",function(){var n=e.elements||e;return this.elements.length!==n.length?null:this.map(function(e,t){return d.subtract(e,n[t-1])})},void 0,this)},multiply:function(t){return this.map(function(e){return e.clone()*t.clone()})},x:function(e){return this.multiply(e)},dot:function(r){return ye(\"SAFE\",function(){var e=r.elements||r,t=new Fe(0),n=this.elements.length;if(n!==e.length)return null;for(;t=d.add(t,d.multiply(this.elements[n-1],e[n-1])),--n;);return t},void 0,this)},cross:function(e){var t=e.elements||e;if(3!==this.elements.length||3!==t.length)return null;var n=this.elements;return ye(\"SAFE\",function(){return new Ve([d.subtract(d.multiply(n[1],t[2]),d.multiply(n[2],t[1])),d.subtract(d.multiply(n[2],t[0]),d.multiply(n[0],t[2])),d.subtract(d.multiply(n[0],t[1]),d.multiply(n[1],t[0]))])},void 0,this)},max:function(){for(var e,t=0,n=this.elements.length,r=n;e=r-n,Math.abs(this.elements[e].valueOf())>Math.abs(t.valueOf())&&(t=this.elements[e]),--n;);return t},magnitude:function(){var t=new Fe(0);return this.each(function(e){t=d.add(t,d.pow(e,new Fe(2)))}),d.sqrt(t)},indexOf:function(e){for(var t,n=null,r=this.elements.length,i=r;t=i-r,null===n&&this.elements[t].valueOf()===e.valueOf()&&(n=1+t),--r;);return n},text:function(e){return Pe(this)},toString:function(){return this.text()},latex:function(e){for(var t=[],n=0;n<this.elements.length;n++)t.push(Ge.latex.call(Ge,this.elements[n],e));return\"[\"+t.join(\", \")+\"]\"}},He.identity=function(e){for(var t=new He,n=0;n<e;n++){t.elements.push([]);for(var r=0;r<e;r++)t.set(n,r,new Fe(n===r?1:0))}return t},He.fromArray=function(e){function t(e){return He.apply(this,e)}return t.prototype=He.prototype,new t(e)},He.zeroMatrix=function(e,t){for(var n=new He,r=0;r<e;r++)n.elements.push(Ve.arrayPrefill(t,new Fe(0)));return n},(He.prototype={custom:!0,get:function(e,t){if(this.elements[e])return this.elements[e][t]},map:function(r,i){var s=new He;return this.each(function(e,t,n){s.set(t,n,r.call(s,e),i)}),s},set:function(e,t,n,r){this.elements[e]||(this.elements[e]=[]),this.elements[e][t]=r||ne(n)?n:new Fe(n)},cols:function(){return this.elements[0].length},rows:function(){return this.elements.length},row:function(e){return!e||e>this.cols()?[]:this.elements[e-1]},col:function(e){var t=this.rows(),n=[];if(e>this.cols()||!e)return n;for(var r=0;r<t;r++)n.push(this.elements[r][e-1]);return n},eachElement:function(e){for(var t,n=this.rows(),r=this.cols(),i=0;i<n;i++)for(t=0;t<r;t++)e.call(this,this.elements[i][t],i,t)},determinant:function(){if(!this.isSquare())return null;for(var e,t=this.toRightTriangular(),n=t.elements[0][0],r=t.elements.length-1,i=r;n=d.multiply(n,t.elements[e=i-r+1][e]),--r;);return n},isSquare:function(){return this.elements.length===this.elements[0].length},isSingular:function(){return this.isSquare()&&0===this.determinant()},augment:function(e){var t=this.rows();t!==e.rows()&&K(\"Cannot augment matrix. Rows don't match.\");for(var n=0;n<t;n++)this.elements[n]=this.elements[n].concat(e.elements[n]);return this},clone:function(){for(var e=this.rows(),t=this.cols(),n=new He,r=0;r<e;r++){n.elements[r]=[];for(var i=0;i<t;i++){var s=this.elements[r][i];n.elements[r][i]=ne(s)?s.clone():s}}return n},invert:function(){return this.isSquare()||K(\"Matrix is not square!\"),ye(\"SAFE\",function(){var e,t,n,r,i,s,o,a=this.elements.length,u=a,l=He.identity(a),c=this.augment(l).toRightTriangular(),p=c.elements[0].length,f=[];do{for(i=[],n=p,f[e=a-1]=[],s=c.elements[e][e];o=d.divide(c.elements[e][r=p-n],s.clone()),i.push(o),u<=r&&f[e].push(o),--n;);for(c.elements[e]=i,t=0;t<e;t++){for(i=[],n=p;i.push(d.subtract(c.elements[t][r=p-n].clone(),d.multiply(c.elements[e][r].clone(),c.elements[t][e].clone()))),--n;);c.elements[t]=i}}while(--a);return He.fromArray(f)},void 0,this)},toRightTriangular:function(){return ye(\"SAFE\",function(){var e,t,n,r=this.clone(),i=this.elements.length,s=i,o=this.elements[0].length;do{if(0===r.elements[t=s-i][t].valueOf())for(var a=1+t;a<s;a++)if((e=r.elements[a][t])&&0!==e.valueOf()){for(l=[],c=o;l.push(d.add(r.elements[t][n=o-c].clone(),r.elements[a][n].clone())),--c;);r.elements[t]=l;break}if(0!==r.elements[t][t].valueOf())for(a=1+t;a<s;a++){for(var u=d.divide(r.elements[a][t].clone(),r.elements[t][t].clone()),l=[],c=o;l.push((n=o-c)<=t?new Fe(0):d.subtract(r.elements[a][n].clone(),d.multiply(r.elements[t][n].clone(),u.clone()))),--c;);r.elements[a]=l}}while(--i);return r},void 0,this)},transpose:function(){var e,t,n,r=this.elements.length,i=this.elements[0].length,s=new He,o=i;do{for(s.elements[e=i-o]=[],t=r;s.elements[e][n=r-t]=this.elements[n][e].clone(),--t;);}while(--o);return s},canMultiplyFromLeft:function(e){e=(ie(e)?e.elements:e).length;return this.elements[0].length===e},sameSize:function(e){return this.rows()===e.rows()&&this.cols()===e.cols()},multiply:function(g){return ye(\"SAFE\",function(){var e=g.elements||g;if(!this.canMultiplyFromLeft(e)){if(this.sameSize(g)){for(var t=new He,n=this.rows(),r=0;r<n;r++){var i=d.multiply(new Ve(this.elements[r]),new Ve(g.elements[r]));t.elements[r]=i.elements}return t}return null}var s,o,a,u,l,c=this.elements.length,p=c,f=e[0].length,h=this.elements[0].length,m=[];do{m[r=p-c]=[],s=f;do{for(o=f-s,a=new Fe(0),u=h;a=d.add(a,d.multiply(this.elements[r][l=h-u],e[l][o])),--u;);}while(m[r][o]=a,--s)}while(--c);return He.fromArray(m)},void 0,this)},add:function(i,s){var o=new He;return this.sameSize(i)&&this.eachElement(function(e,t,n){var r=d.add(e.clone(),i.elements[t][n].clone());s&&(r=s.call(o,r,e,i.elements[t][n])),o.set(t,n,r)}),o},subtract:function(i,s){var o=new He;return this.sameSize(i)&&this.eachElement(function(e,t,n){var r=d.subtract(e.clone(),i.elements[t][n].clone());s&&(r=s.call(o,r,e,i.elements[t][n])),o.set(t,n,r)}),o},negate:function(){return this.each(function(e){return e.negate()}),this},toVector:function(){if(1!==this.rows()&&1!==this.cols())return this;var e=new Ve;return e.elements=this.elements,e},toString:function(e,n){var t=this.rows(),r=[];for(var i=0;i<t;i++)r.push(\"[\"+this.elements[i].map(function(e){var t=n?e.multiplier.toDecimal():e.toString();return void 0!==e?t:\"\"}).join(\",\")+\"]\");return\"matrix\"+E(r.join(\",\"))},text:function(){return\"matrix(\"+this.elements.toString(\"\")+\")\"},latex:function(i){var s=this.cols(),o=this.elements;return ce(\"\\\\begin{vmatrix}{0}\\\\end{vmatrix}\",function(){var e,t=[];for(e in o){for(var n=[],r=0;r<s;r++)n.push(Ge.latex.call(Ge,o[e][r],i));t.push(n.join(\" & \"))}return t.join(\" \\\\cr \")})}}).each=He.prototype.eachElement,je.fromArray=function(e){function t(e){return je.apply(this,e)}return t.prototype=je.prototype,new t(e)},je.prototype={add:function(e){this.contains(e)||this.elements.push(e.clone())},contains:function(e){for(var t=0;t<this.elements.length;t++){var n=this.elements[t];if(e.equals(n))return!0}return!1},each:function(e){for(var t=this.elements,n=new je,r=0,i=t.length;r<i;r++){var s=t[r];e.call(this,s,n,r)}return n},clone:function(){var t=new je;return this.each(function(e){t.add(e.clone())}),t},union:function(e){var t=this.clone();return e.each(function(e){t.add(e)}),t},difference:function(e){var t=this.clone();return e.each(function(e){t.remove(e)}),t},remove:function(e){for(var t=0,n=this.elements.length;t<n;t++)if(this.elements[t].equals(e))return we(this.elements,t),!0;return!1},intersection:function(e){var t=new je,n=this;return e.each(function(e){n.contains(e)&&t.add(e)}),t},intersects:function(e){return 0<this.intersection(e).elements.length},is_subset:function(e){for(var t=e.elements,n=0,r=t.length;n<r;n++)if(!this.contains(t[n]))return!1;return!0},toString:function(){return\"{\"+this.elements.join(\",\")+\"}\"}};var Xe={dependencies:{_rename:{\"Math2.factorial\":\"factorial\"},factorial:{\"Math2.gamma\":Te.gamma},gamma_incomplete:{\"Math2.factorial\":Te.factorial},Li:{\"Math2.Ei\":Te.Ei,\"Math2.bigLog\":Te.bigLog,Frac:De},Ci:{\"Math2.factorial\":Te.factorial},Ei:{\"Math2.factorial\":Te.factorial},Si:{\"Math2.factorial\":Te.factorial},Shi:{\"Math2.factorial\":Te.factorial},Chi:{isInt:ue,nround:me,\"Math2.num_integrate\":Te.num_integrate},factor:{\"Math2.ifactor\":Te.ifactor,Symbol:Fe},num_integrate:{\"Math2.simpson\":Te.simpson,nround:me},fib:{even:ge}},reformat:{diff:function(e,t){var n=e.args[1].toString(),e=\"var f = \"+Xe.build(e.args[0].toString(),[n])+\";\";return t[1]+=\"var diff = \"+Te.diff.toString()+\";\",t[1]+=e,[\"diff(f)(\"+n+\")\",t]}},getProperName:function(e){return{continued_fraction:\"continuedFraction\"}[e]||e},compileDependencies:function(e,t){var n,r,i=Xe.dependencies[e],s=t&&t[1]?t[1]:\"\",o=t&&t[0]?t[0]:{};for(n in i)\"object\"!=typeof i[n]&&(s+=\"var \"+(1<(r=n.split(\".\")).length?r[1]:r[0])+\"=\"+i[n]+\";\",o[n]=r.pop());return[o,s]},getArgsDeps:function(e,t){for(var n=e.args,r=0;r<n.length;r++)e.args[r].each(function(e){e.group===H&&(t=Xe.compileDependencies(e.fname,t))});return t},build:function(e,t){e=ye(\"PARSE2NUMBER\",function(){return d.parse(e)},!0);var n=b(e),l=[],c=[],p=function(s,o){\"\"===s.fname&&(s=Fe.unwrapPARENS(s)),o=o||[];function e(e){return e=e in Math?\"Math.\"+e:(e=Xe.getProperName(e),-1===l.indexOf(e)&&(o.push(\"var \"+e+\" = \"+Te[e].toString()+\"; \"),l.push(e)),e),e+=E(s.args.map(function(e){return p(e,o)[0]}).join(\",\"))}var t,n,r=[],i=s.group,a=\"\",u=function(e){var t,e=e===X?\"*\":\"+\",n=[];for(t in s.symbols){var r=s.symbols[t],i=p(r,o)[0];r.isComposite()&&(i=E(i)),n.push(i)}e=n.join(e);return e=e&&!s.multiplier.equals(1)?E(e):e};return i===F?r.push(s.multiplier.toDecimal()):s.multiplier.equals(-1)?a=\"-\":s.multiplier.equals(1)||r.push(s.multiplier.toDecimal()),i===G||i===B?t=s.value:i===H?(c=Xe.compileDependencies(s.fname,c),c=Xe.getArgsDeps(s,c),t=Xe.reformat[s.fname]?(n=Xe.reformat[s.fname](s,c),c=n[1],n[0]):e(s.fname)):i===V?(i=s.previousGroup)===F||i===G?t=s.value:i===H?(t=e(s.fname),c=Xe.compileDependencies(s.fname,c),c=Xe.getArgsDeps(s,c)):t=u(s.previousGroup):t=u(s.group),s.group===F||s.power.equals(1)||(u=p(d.parse(s.power)),o.push(u[1]),t=\"Math.pow\"+E(t+\",\"+u[0])),t&&r.push(a+t),[r.join(\"*\"),o.join(\"\").replace(/\\n+\\s+/g,\" \")]};t&&(n=t);var r,i=p(e);for(r in c[0]){var s=c[0][r];i[1]=i[1].replace(r,s),c[1]=c[1].replace(r,s)}return new Function(n,(c[1]||\"\")+i[1]+\" return \"+i[0]+\";\")}};x(d.CONSTANTS),x(d.functions),d.initConstants(),d.error||(d.error=K),D.LOG_FNS={log:d.functions.log,log10:d.functions.log10};function $e(n,e,r,t){var i=!1,s=/^([a-z_][a-z\\d\\_]*)\\(([a-z_,\\s]*)\\):=(.+)$/gi.exec(n);return s?nerdamer.setFunction(s[1],s[2].split(\",\"),s[3]):(n instanceof R&&(n=n.toString()),(r=!ae(r)?void 0===r?[]:[r]:r).forEach(function(e){var t;\"numer\"!==e?(t=d.functions[r])&&1===t[1]&&(n=`${e}(${n})`):i=!0}),s=ye(\"PARSE2NUMBER\",function(){return d.parse(n,e)},i||D.PARSE2NUMBER),t?p[t-1]=s:p.push(s),new R(s))}var x={allSame:w,allNumeric:function(e){for(var t=0;t<e.length;t++)if(!te(e[t]))return!1;return!0},arguments2Array:be,arrayAddSlices:function(e,t){t=t||20;var n=[];n.push(e[0]);for(var r=0;r<e.length-1;r++)for(var i=e[r],s=(e[r+1]-i)/t,o=0;o<t;o++)n.push(i+=s);return n},arrayClone:function(e){for(var t=[],n=e.length,r=0;r<n;r++)t[r]=e[r].clone();return t},arrayMax:function(e){return Math.max.apply(void 0,e)},arrayMin:c,arrayEqual:function(e,t){if(e.sort(),t.sort(),e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0},arrayUnique:a,arrayGetVariables:function(e){for(var t=b(e[0],null,null,!0),n=1,r=e.length;n<r;n++)t=t.concat(b(e[n]));return t=a(t).sort()},arraySum:function(e,t){for(var n=new Fe(0),r=0;r<e.length;r++)var i=e[r],n=d.add(n,ne(i)?i:d.parse(i));return t?Number(n):n},block:ye,build:Xe.build,clearU:function(e){e=f.indexOf(e);-1!==e&&(f[e]=void 0)},comboSort:function(e,t){for(var n=e.length,r=[],i=0;i<e.length;i++)r.push([e[i],t[i]]);r.sort(function(e,t){return e[0]-t[0]});for(var s=[],o=[],i=0;i<n;i++)s.push(r[i][0]),o.push(r[i][1]);return[s,o]},compare:function(e,t,n){for(var r,i={},s=0;s<n.length;s++)i[n[s]]=new Fe(Math.floor(5*Math.random())+1);return ye(\"PARSE2NUMBER\",function(){r=d.parse(e,i).equals(d.parse(t,i))}),r},convertToVector:C,customError:n,customType:function(e){return void 0!==e&&e.custom},decompose_fn:he,each:s,evaluate:Se,even:ge,evenFraction:de,fillHoles:function(e,t){t=t||e.length;for(var n=0;n<t;n++)e[n]||(e[n]=new Fe(0));return e},firstObject:pe,format:ce,generatePrimes:u,getCoeffs:function(e,r,t){var i=[];e.each(function(e){var t,n=e.contains(r)?(t=e.stripVar(r),d.divide(e.clone(),t.clone()).power.toDecimal()):(t=e,0),e=i[n];i[n]=e?d.add(e,t):t},!0);for(var n=0;n<i.length;n++)i[n]||(i[n]=new Fe(0));return i},getU:function(e){for(var t=\"u\",n=0,r=b(e);-1!==f.indexOf(t)||-1!==r.indexOf(t);)t=\"u\"+n++;for(var i=0,s=f.length;i<=s;i++)if(!f[i]){f[i]=t;break}return t},importFunctions:function(){var e,t={};for(e in d.functions)t[e]=d.functions[e][0];return t},inBrackets:E,isArray:ae,isExpression:i,isFraction:v,isInt:ue,isMatrix:ie,isNegative:A,isNumericSymbol:oe,isPrime:g,isReserved:r,isSymbol:ne,isVariableSymbol:function(e){return e.group===G&&e.multiplier.equals(1)&&e.power.equals(1)},isVector:re,keys:q,knownVariable:function(e,t){var n={};return n[e]=t,n},nroots:function(e){var t,n;if(e.group===H&&\"\"===e.fname?(t=Fe.unwrapPARENS(d.parse(e).toLinear()),n=d.parse(e.power)):e.group===B&&(t=d.parse(e.value),n=d.parse(e.power)),t&&n&&t.group===F&&n.group===F&&t.multiplier.isNegative()){for(var r=[],i=Fe.toPolarFormArray(Se(e))[0],s=d.arg(t),o=n.multiplier.den.toString(),a=n.multiplier.num.toString(),u=0;u<o;u++){var l=Se(d.parse(ce(\"(({0})+2*pi*({1}))/({2})\",s,u,o))).multiplier.toDecimal();r.push(Se(d.parse(ce(\"(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})\",i,o,D.IMAGINARY,l,a))))}return Ve.fromArray(r)}return e.isConstant(!0,!0)?(t=e.sign(),s=Se(e.abs()),r=[(n=d.sqrt(s)).clone(),n.negate()],t<0&&(r=r.map(function(e){return d.multiply(e,Fe.imaginary())}))):r=[d.parse(e)],Ve.fromArray(r)},remove:we,reserveNames:x,range:function(e,t,n){var r=[];n=n||1;for(var i=e;i<=t;i++)r.push(i*n);return r},round:me,sameSign:function(e,t){return e<0==t<0},scientificToDecimal:y,separate:N,stringReplace:function(e,t,n,r){return e.substr(0,t)+r+e.substr(n,e.length)},text:Pe,validateName:m,variables:b,warn:ee},Ze={groups:t,Symbol:Fe,Expression:R,Frac:De,Vector:Ve,Matrix:He,Parser:P,Scientific:T,Fraction:Be,Math2:Te,LaTeX:Ge,Utils:x,PARSER:d,PARENTHESIS:Z,Settings:D,err:K,bigInt:S,bigDec:k,exceptions:e};return $e.rpn=function(e){return d.tokenize(d.toRPN(e))},$e.convertToLaTeX=function(e,t){return d.toTeX(e,t)},$e.convertFromLaTeX=function(e){e=Ge.parse(d.tokenize(e));return new R(d.parse(e))},$e.version=function(t){if(t)try{return Ze[t].version}catch(e){return\"No module named \"+t+\" found!\"}return\"1.1.13\"},$e.getWarnings=function(){return h},$e.setConstant=function(e,t){if(m(e),!r(e))if(\"delete\"===t||\"\"===t)delete d.CONSTANTS[e];else{if(isNaN(t))throw new I(\"Constant must be a number!\");d.CONSTANTS[e]=t}return this},$e.getConstant=function(e){return String(d.constant[e])},$e.setFunction=fe,$e.getCore=function(){return Ze},$e.getExpression=$e.getEquation=R.getExpression,$e.reserved=function(e){return e?f:f.join(\", \")},$e.clear=function(e,t){return\"all\"===e?p=[]:\"last\"===e?p.pop():\"first\"===e?p.shift():(e=e?e-1:p.length,!0===t?p[e]=void 0:we(p,e)),this},$e.flush=function(){return this.clear(\"all\"),this},$e.expressions=function(e,t,n){for(var r=e?{}:[],i=0;i<p.length;i++){var s=t?Ge.latex(p[i],n):Pe(p[i],n);e?r[i+1]=s:r.push(s)}return r},$e.register=function(e){var t=this.getCore();if(ae(e))for(var n=0;n<e.length;n++)e&&this.register(e[n]);else if(e&&-1===D.exclude.indexOf(e.name)){if(e.dependencies)for(n=0;n<e.dependencies.length;n++)if(!t[e.dependencies[n]])throw new Error(ce(\"{0} requires {1} to be loaded!\",e.name,e.dependencies[n]));var r=e.parent,i=e.build.call(t);r&&(t[r]||(t[e.parent]={}),(\"nerdamer\"===r?this:t[r])[e.name]=i),e.visible&&(d.functions[e.name]=[i,e.numargs])}},$e.validateName=m,$e.validVarName=function(e){try{return m(e),-1===f.indexOf(e)}catch(e){return!1}},$e.supported=function(){return q(d.functions)},$e.numEquations=$e.numExpressions=function(){return p.length},$e.setVar=function(e,t){return m(e),e in d.CONSTANTS&&K(\"Cannot set value for constant \"+e),\"delete\"===t||\"\"===t?delete J[e]:J[e]=ne(t)?t:d.parse(t),this},$e.getVar=function(e){return J[e]},$e.clearVars=function(){return J={},this},$e.load=function(e){return e.call(this),this},$e.getVars=function(e,t){var n={};if(\"object\"===(e=e||\"text\"))n=J;else for(var r in J)\"latex\"===e?n[r]=J[r].latex(t):\"text\"===e&&(n[r]=J[r].text(t));return n},$e.set=function(e,t){if(\"object\"==typeof e)for(var n in e)$e.set(n,e[n]);-1!==[\"SAFE\"].indexOf(e)&&K(\"Cannot modify setting: \"+e),\"PRECISION\"===e?(k.set({precision:t}),21<(D.PRECISION=t)&&this.set(\"USE_BIG\",!0)):\"USE_LN\"===e&&!0===t?(D.LOG=\"LN\",D.LOG10=\"log\",d.functions.log=D.LOG_FNS.log10,d.functions.log[0]=function(e){return e.isConstant()?new Fe(Math.log10(e)):d.symfunction(D.LOG10,[e])},d.functions.LN=D.LOG_FNS.log,delete d.functions.log10):D[e]=t},$e.get=function(e){return D[e]},$e.updateAPI=function(e){for(var t in d.functions)t in $e&&!e||($e[t]=function(n){return function(){for(var e=[].slice.call(arguments),t=0;t<e.length;t++)e[t]=d.parse(e[t]);return new R(ye(\"PARSE2NUMBER\",function(){return d.callfunction(n,e)}))}}(t))},$e.replaceFunction=function(e,t,n){var r=d.functions[e],n=void 0===n?r[1]:n;d.functions[e]=[t.call(void 0,r[0],Ze),n]},$e.setOperator=function(e,t){d.setOperator(e,t)},$e.getOperator=function(e){return d.getOperator(e)},$e.aliasOperator=function(e,t){d.aliasOperator(e,t)},$e.tree=function(e){return d.tree(d.toRPN(d.tokenize(e)))},$e.htmlTree=function(e,t){return'<div class=\"tree\">\\n    <ul>\\n        <li>\\n'+this.tree(e).toHTML(3,t)+\"\\n        </li>\\n    </ul>\\n</div>\"},$e.addPeeker=function(e,t){d.peekers[e]&&d.peekers[e].push(t)},$e.removePeeker=function(e,t){we(d.peekers[e],t)},$e.parse=function(e){return String(e).split(\";\").map(function(e){return d.parse(e)})},$e.updateAPI(),$e}({bigInt:function(){var Q=function(o){\"use strict\";var v=1e7,l=7,t=9007199254740992,n=m(t),c=Math.log(t);function u(e,t){return void 0===e?u[0]:void 0===t||10==+t?z(e):V(e,t)}function p(e,t){this.value=e,this.sign=t,this.isSmall=!1}function f(e){this.value=e,this.sign=e<0,this.isSmall=!0}function h(e){return-t<e&&e<t}function m(e){return e<1e7?[e]:e<1e14?[e%1e7,Math.floor(e/1e7)]:[e%1e7,Math.floor(e/1e7)%1e7,Math.floor(e/1e14)]}function w(e){g(e);var t=e.length;if(t<4&&C(e,n)<0)switch(t){case 0:return 0;case 1:return e[0];case 2:return e[0]+e[1]*v;default:return e[0]+(e[1]+e[2]*v)*v}return e}function g(e){for(var t=e.length;0===e[--t];);e.length=t+1}function y(e){for(var t=new Array(e),n=-1;++n<e;)t[n]=0;return t}function d(e){return 0<e?Math.floor(e):Math.ceil(e)}function r(e,t){for(var n,r=e.length,i=t.length,s=new Array(r),o=0,a=v,u=0;u<i;u++)n=e[u]+t[u]+o,s[u]=n-(o=a<=n?1:0)*a;for(;u<r;)n=e[u]+o,s[u++]=n-(o=n===a?1:0)*a;return 0<o&&s.push(o),s}function b(e,t){return e.length>=t.length?r(e,t):r(t,e)}function i(e,t){for(var n,r=e.length,i=new Array(r),s=v,o=0;o<r;o++)n=e[o]-s+t,t=Math.floor(n/s),i[o]=n-t*s,t+=1;for(;0<t;)i[o++]=t%s,t=Math.floor(t/s);return i}function S(e,t){for(var n,r=e.length,i=t.length,s=new Array(r),o=0,a=v,u=0;u<i;u++)o=(n=e[u]-o-t[u])<0?(n+=a,1):0,s[u]=n;for(u=i;u<r;u++){if(!((n=e[u]-o)<0)){s[u++]=n;break}n+=a,s[u]=n}for(;u<r;u++)s[u]=e[u];return g(s),s}function s(e,t,n){for(var r,i=e.length,s=new Array(i),o=-t,a=v,u=0;u<i;u++)r=e[u]+o,o=Math.floor(r/a),s[u]=(r%=a)<0?r+a:r;return\"number\"==typeof(s=w(s))?new f(s=n?-s:s):new p(s,n)}function M(e,t){for(var n,r,i=e.length,s=t.length,o=y(i+s),a=v,u=0;u<i;++u)for(var l=e[u],c=0;c<s;++c)n=l*t[c]+o[u+c],r=Math.floor(n/a),o[u+c]=n-r*a,o[u+c+1]+=r;return g(o),o}function N(e,t){for(var n,r=e.length,i=new Array(r),s=v,o=0,a=0;a<r;a++)n=e[a]*t+o,o=Math.floor(n/s),i[a]=n-o*s;for(;0<o;)i[a++]=o%s,o=Math.floor(o/s);return i}function E(e,t){for(var n=[];0<t--;)n.push(0);return n.concat(e)}function a(e,t,n){return new p(e<v?N(t,e):M(t,m(e)),n)}function q(e){for(var t,n=e.length,r=y(n+n),i=v,s=0;s<n;s++){for(var o,a=0-(o=e[s])*o,u=s;u<n;u++)t=o*e[u]*2+r[s+u]+a,a=Math.floor(t/i),r[s+u]=t-a*i;r[s+n]=a}return g(r),r}function x(e,t){for(var n,r=e.length,i=y(r),s=v,o=0,a=r-1;0<=a;--a)o=(n=o*s+e[a])-(n=d(n/t))*t,i[a]=0|n;return[i,0|o]}function A(e,t){var n=z(t),r=e.value,i=n.value;if(0===i)throw new Error(\"Cannot divide by zero\");if(e.isSmall)return n.isSmall?[new f(d(r/i)),new f(r%i)]:[u[0],e];if(n.isSmall){if(1===i)return[e,u[0]];if(-1==i)return[e.negate(),u[0]];var s=Math.abs(i);if(s<v){var o=w((a=x(r,s))[0]),t=a[1];return e.sign&&(t=-t),\"number\"==typeof o?[new f(o=e.sign!==n.sign?-o:o),new f(t)]:[new p(o,e.sign!==n.sign),new f(t)]}i=m(s)}s=C(r,i);if(-1===s)return[u[0],e];if(0===s)return[u[e.sign===n.sign?1:-1],u[0]];o=(a=(r.length+i.length<=200?function(e,t){var n,r,i,s,o,a,u,l=e.length,c=t.length,p=v,f=y(t.length),h=t[c-1],m=Math.ceil(p/(2*h)),g=N(e,m),d=N(t,m);for(g.length<=l&&g.push(0),d.push(0),h=d[c-1],r=l-c;0<=r;r--){for(n=p-1,g[r+c]!==h&&(n=Math.floor((g[r+c]*p+g[r+c-1])/h)),a=d.length,o=s=i=0;o<a;o++)i+=n*d[o],u=Math.floor(i/p),s+=g[r+o]-(i-u*p),i=u,s=s<0?(g[r+o]=s+p,-1):(g[r+o]=s,0);for(;0!==s;){for(--n,o=i=0;o<a;o++)i=(i+=g[r+o]-p+d[o])<0?(g[r+o]=i+p,0):(g[r+o]=i,1);s+=i}f[r]=n}return g=x(g,m)[0],[w(f),w(g)]}:function(e,t){for(var n,r,i,s,o,a=e.length,u=t.length,l=[],c=[],p=v;a;)if(c.unshift(e[--a]),g(c),C(c,t)<0)l.push(0);else{for(i=c[(r=c.length)-1]*p+c[r-2],s=t[u-1]*p+t[u-2],u<r&&(i=(i+1)*p),n=Math.ceil(i/s);!(C(o=N(t,n),c)<=0)&&--n;);l.push(n),c=S(c,o)}return l.reverse(),[w(l),w(c)]})(r,i))[0];var n=e.sign!==n.sign,a=a[1],e=e.sign;return[o=\"number\"==typeof o?new f(o=n?-o:o):new p(o,n),a=\"number\"==typeof a?new f(a=e?-a:a):new p(a,e)]}function C(e,t){if(e.length!==t.length)return e.length>t.length?1:-1;for(var n=e.length-1;0<=n;n--)if(e[n]!==t[n])return e[n]>t[n]?1:-1;return 0}function L(e){e=e.abs();return!e.isUnit()&&(!!(e.equals(2)||e.equals(3)||e.equals(5))||!(e.isEven()||e.isDivisibleBy(3)||e.isDivisibleBy(5))&&(!!e.lesser(49)||void 0))}function I(e,t){for(var n,r,i,s=e.prev(),o=s,a=0;o.isEven();)o=o.divide(2),a++;e:for(r=0;r<t.length;r++)if(!e.lesser(t[r])&&!(i=Q(t[r]).modPow(o,e)).equals(u[1])&&!i.equals(s)){for(n=a-1;0!=n;n--){if((i=i.square().mod(e)).isUnit())return!1;if(i.equals(s))continue e}return!1}return!0}p.prototype=Object.create(u.prototype),f.prototype=Object.create(u.prototype),p.prototype.plus=p.prototype.add=function(e){var t=z(e);if(this.sign!==t.sign)return this.subtract(t.negate());var n=this.value,e=t.value;return t.isSmall?new p(i(n,Math.abs(e)),this.sign):new p(b(n,e),this.sign)},f.prototype.plus=f.prototype.add=function(e){var t=z(e),n=this.value;if(n<0!==t.sign)return this.subtract(t.negate());e=t.value;if(t.isSmall){if(h(n+e))return new f(n+e);e=m(Math.abs(e))}return new p(i(e,Math.abs(n)),n<0)},p.prototype.minus=p.prototype.subtract=function(e){var t=z(e);if(this.sign!==t.sign)return this.add(t.negate());var n,r=this.value,e=t.value;return t.isSmall?s(r,Math.abs(e),this.sign):(t=r,r=e,e=this.sign,0<=C(t,r)?n=S(t,r):(n=S(r,t),e=!e),\"number\"==typeof(n=w(n))?new f(n=e?-n:n):new p(n,e))},f.prototype.minus=f.prototype.subtract=function(e){var t=z(e),n=this.value;if(n<0!==t.sign)return this.add(t.negate());e=t.value;return t.isSmall?new f(n-e):s(e,Math.abs(n),0<=n)},p.prototype.negate=function(){return new p(this.value,!this.sign)},f.prototype.negate=function(){var e=this.sign,t=new f(-this.value);return t.sign=!e,t},p.prototype.abs=function(){return new p(this.value,!1)},f.prototype.abs=function(){return new f(Math.abs(this.value))},p.prototype.times=p.prototype.multiply=function(e){var t,n=z(e),r=this.value,i=n.value,e=this.sign!==n.sign;if(n.isSmall){if(0===i)return u[0];if(1===i)return this;if(-1===i)return this.negate();if((t=Math.abs(i))<v)return new p(N(r,t),e);i=m(t)}return n=r.length,t=i.length,new p((0<-.012*n-.012*t+15e-6*n*t?function e(t,n){if((r=Math.max(t.length,n.length))<=30)return M(t,n);var r=Math.ceil(r/2),i=t.slice(r),s=t.slice(0,r),o=n.slice(r),a=n.slice(0,r),t=e(s,a),n=e(i,o),o=e(b(s,i),b(a,o)),r=b(b(t,E(S(S(o,t),n),r)),E(n,2*r));return g(r),r}:M)(r,i),e)},f.prototype._multiplyBySmall=function(e){return h(e.value*this.value)?new f(e.value*this.value):a(Math.abs(e.value),m(Math.abs(this.value)),this.sign!==e.sign)},p.prototype._multiplyBySmall=function(e){return 0===e.value?u[0]:1===e.value?this:-1===e.value?this.negate():a(Math.abs(e.value),this.value,this.sign!==e.sign)},f.prototype.times=f.prototype.multiply=function(e){return z(e)._multiplyBySmall(this)},p.prototype.square=function(){return new p(q(this.value),!1)},f.prototype.square=function(){var e=this.value*this.value;return h(e)?new f(e):new p(q(m(Math.abs(this.value))),!1)},f.prototype.divmod=p.prototype.divmod=function(e){e=A(this,e);return{quotient:e[0],remainder:e[1]}},f.prototype.over=f.prototype.divide=p.prototype.over=p.prototype.divide=function(e){return A(this,e)[0]},f.prototype.remainder=f.prototype.mod=p.prototype.remainder=p.prototype.mod=function(e){return A(this,e)[1]},p.prototype.pow=function(e){var t,n,r,i=z(e),e=this.value,s=i.value;if(0===s)return u[1];if(0===e)return u[0];if(1===e)return u[1];if(-1===e)return i.isEven()?u[1]:u[-1];if(i.sign)return u[0];if(!i.isSmall)throw new Error(\"The exponent \"+i.toString()+\" is too large.\");if(this.isSmall&&h(t=Math.pow(e,s)))return new f(d(t));for(n=this,r=u[1];!0&s&&(r=r.times(n),--s),0!==s;)s/=2,n=n.square();return r},f.prototype.pow=p.prototype.pow,f.prototype.modPow=p.prototype.modPow=function(e,t){if(e=z(e),(t=z(t)).isZero())throw new Error(\"Cannot take modPow with modulus 0\");for(var n=u[1],r=this.mod(t);e.isPositive();){if(r.isZero())return u[0];e.isOdd()&&(n=n.multiply(r).mod(t)),e=e.divide(2),r=r.square().mod(t)}return n},p.prototype.compareAbs=function(e){var t=z(e),n=this.value,e=t.value;return t.isSmall?1:C(n,e)},f.prototype.compareAbs=function(e){var t=z(e),n=Math.abs(this.value),e=t.value;return t.isSmall?n===(e=Math.abs(e))?0:e<n?1:-1:-1},p.prototype.compareTo=p.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=z(e),n=this.value,e=t.value;return this.sign!==t.sign?t.sign?1:-1:t.isSmall?this.sign?-1:1:C(n,e)*(this.sign?-1:1)},f.prototype.compareTo=f.prototype.compare=function(e){if(e===1/0)return-1;if(e===-1/0)return 1;var t=z(e),n=this.value,e=t.value;return t.isSmall?n==e?0:e<n?1:-1:n<0!==t.sign?n<0?-1:1:n<0?1:-1},f.prototype.eq=f.prototype.equals=p.prototype.eq=p.prototype.equals=function(e){return 0===this.compare(e)},f.prototype.neq=f.prototype.notEquals=p.prototype.neq=p.prototype.notEquals=function(e){return 0!==this.compare(e)},f.prototype.gt=f.prototype.greater=p.prototype.gt=p.prototype.greater=function(e){return 0<this.compare(e)},f.prototype.lt=f.prototype.lesser=p.prototype.lt=p.prototype.lesser=function(e){return this.compare(e)<0},f.prototype.geq=f.prototype.greaterOrEquals=p.prototype.geq=p.prototype.greaterOrEquals=function(e){return 0<=this.compare(e)},f.prototype.leq=f.prototype.lesserOrEquals=p.prototype.leq=p.prototype.lesserOrEquals=function(e){return this.compare(e)<=0},p.prototype.isEven=function(){return 0==(1&this.value[0])},f.prototype.isEven=function(){return 0==(1&this.value)},p.prototype.isOdd=function(){return 1==(1&this.value[0])},f.prototype.isOdd=function(){return 1==(1&this.value)},p.prototype.isPositive=function(){return!this.sign},f.prototype.isPositive=function(){return 0<this.value},p.prototype.isNegative=function(){return this.sign},f.prototype.isNegative=function(){return this.value<0},p.prototype.isUnit=function(){return!1},f.prototype.isUnit=function(){return 1===Math.abs(this.value)},p.prototype.isZero=function(){return!1},f.prototype.isZero=function(){return 0===this.value},f.prototype.isDivisibleBy=p.prototype.isDivisibleBy=function(e){var t=z(e),e=t.value;return 0!==e&&(1===e||(2===e?this.isEven():this.mod(t).equals(u[0])))},f.prototype.isPrime=p.prototype.isPrime=function(e){var t=L(this);if(t!==o)return t;var n=this.abs(),t=n.bitLength();if(t<=64)return I(n,[2,325,9375,28178,450775,9780504,1795265022]);for(var t=Math.log(2)*t,r=Math.ceil(!0===e?2*Math.pow(t,2):t),i=[],s=0;s<r;s++)i.push(Q(s+2));return I(n,i)},f.prototype.isProbablePrime=p.prototype.isProbablePrime=function(e){var t=L(this);if(t!==o)return t;for(var n=this.abs(),r=e===o?5:e,i=[],s=0;s<r;s++)i.push(Q.randBetween(2,n.minus(2)));return I(n,i)},f.prototype.modInv=p.prototype.modInv=function(e){for(var t,n,r=Q.zero,i=Q.one,s=z(e),o=this.abs();!o.equals(Q.zero);)t=s.divide(o),n=s,s=o,i=r.subtract(t.multiply(r=i)),o=n.subtract(t.multiply(o));if(!s.equals(1))throw new Error(this.toString()+\" and \"+e.toString()+\" are not co-prime\");return-1===r.compare(0)&&(r=r.add(e)),this.isNegative()?r.negate():r},p.prototype.next=function(){var e=this.value;return this.sign?s(e,1,this.sign):new p(i(e,1),this.sign)},f.prototype.next=function(){var e=this.value;return e+1<t?new f(e+1):new p(n,!1)},p.prototype.prev=function(){var e=this.value;return this.sign?new p(i(e,1),!0):s(e,1,this.sign)},f.prototype.prev=function(){var e=this.value;return-t<e-1?new f(e-1):new p(n,!0)};for(var U=[1];2*U[U.length-1]<=v;)U.push(2*U[U.length-1]);var _=U.length,O=U[_-1];function R(e){return(\"number\"==typeof e||\"string\"==typeof e)&&+Math.abs(e)<=v||e instanceof p&&e.value.length<=1}function T(e,t,n){t=z(t);for(var r=e.isNegative(),i=t.isNegative(),s=r?e.not():e,o=i?t.not():t,a=0,u=0,l=null,c=null,p=[];!s.isZero()||!o.isZero();)a=(l=A(s,O))[1].toJSNumber(),r&&(a=O-1-a),u=(c=A(o,O))[1].toJSNumber(),s=l[0],o=c[0],p.push(n(a,u=i?O-1-u:u));for(var f=0!==n(r?1:0,i?1:0)?Q(-1):Q(0),h=p.length-1;0<=h;--h)f=f.multiply(O).add(Q(p[h]));return f}f.prototype.shiftLeft=p.prototype.shiftLeft=function(e){if(!R(e))throw new Error(String(e)+\" is too large for shifting.\");if((e=+e)<0)return this.shiftRight(-e);var t=this;if(t.isZero())return t;for(;_<=e;)t=t.multiply(O),e-=_-1;return t.multiply(U[e])},f.prototype.shiftRight=p.prototype.shiftRight=function(e){var t;if(!R(e))throw new Error(String(e)+\" is too large for shifting.\");if((e=+e)<0)return this.shiftLeft(-e);for(var n=this;_<=e;){if(n.isZero()||n.isNegative()&&n.isUnit())return n;n=(t=A(n,O))[1].isNegative()?t[0].prev():t[0],e-=_-1}return(t=A(n,U[e]))[1].isNegative()?t[0].prev():t[0]},f.prototype.not=p.prototype.not=function(){return this.negate().prev()},f.prototype.and=p.prototype.and=function(e){return T(this,e,function(e,t){return e&t})},f.prototype.or=p.prototype.or=function(e){return T(this,e,function(e,t){return e|t})},f.prototype.xor=p.prototype.xor=function(e){return T(this,e,function(e,t){return e^t})};var P=1<<30,k=(v&-v)*(v&-v)|P;function D(e){e=e.value,e=\"number\"==typeof e?e|P:e[0]+e[1]*v|k;return e&-e}function F(e,t){return e=z(e),t=z(t),e.greater(t)?e:t}function B(e,t){return e=z(e),t=z(t),e.lesser(t)?e:t}function G(e,t){if(e=z(e).abs(),t=z(t).abs(),e.equals(t))return e;if(e.isZero())return t;if(t.isZero())return e;for(var n,r,i=u[1];e.isEven()&&t.isEven();)n=Math.min(D(e),D(t)),e=e.divide(n),t=t.divide(n),i=i.multiply(n);for(;e.isEven();)e=e.divide(D(e));do{for(;t.isEven();)t=t.divide(D(t))}while(e.greater(t)&&(r=t,t=e,e=r),!(t=t.subtract(e)).isZero());return i.isUnit()?e:e.multiply(i)}f.prototype.bitLength=p.prototype.bitLength=function(){var e=this;return 0===(e=e.compareTo(Q(0))<0?e.negate().subtract(Q(1)):e).compareTo(Q(0))?Q(0):Q(function e(t,n){if(n.compareTo(t)<=0){var r=e(t,n.square(n)),i=r.p,r=r.e,n=i.multiply(n);return n.compareTo(t)<=0?{p:n,e:2*r+1}:{p:i,e:2*r}}return{p:Q(1),e:0}}(e,Q(2)).e).add(Q(1))};var V=function(e,t){for(var n=e.length,r=Math.abs(t),i=0;i<n;i++){var s=e[i].toLowerCase();if(\"-\"!==s&&/[a-z0-9]/.test(s))if(/[0-9]/.test(s)&&r<=+s){if(\"1\"!==s||1!==r)throw new Error(s+\" is not a valid digit in base \"+t+\".\")}else if(s.charCodeAt(0)-87>=r)throw new Error(s+\" is not a valid digit in base \"+t+\".\")}if(2<=t&&t<=36&&n<=c/Math.log(t)){var o=parseInt(e,t);if(isNaN(o))throw new Error(s+\" is not a valid digit in base \"+t+\".\");return new f(parseInt(e,t))}t=z(t);var a=[],o=\"-\"===e[0];for(i=o?1:0;i<e.length;i++){var u=(s=e[i].toLowerCase()).charCodeAt(0);if(48<=u&&u<=57)a.push(z(s));else if(97<=u&&u<=122)a.push(z(s.charCodeAt(0)-87));else{if(\"<\"!==s)throw new Error(s+\" is not a valid character\");for(u=i;\">\"!==e[++i];);a.push(z(e.slice(u+1,i)))}}return H(a,t,o)};function H(e,t,n){for(var r=u[0],i=u[1],s=e.length-1;0<=s;s--)r=r.add(e[s].times(i)),i=i.times(t);return n?r.negate():r}function j(e){return e<=35?\"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(e):\"<\"+e+\">\"}function X(e,t){if((t=Q(t)).isZero()){if(e.isZero())return{value:[0],isNegative:!1};throw new Error(\"Cannot convert nonzero numbers to base 0.\")}if(t.equals(-1)){if(e.isZero())return{value:[0],isNegative:!1};if(e.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-e)).map(Array.prototype.valueOf,[1,0])),isNegative:!1};var n=Array.apply(null,Array(+e-1)).map(Array.prototype.valueOf,[0,1]);return n.unshift([1]),{value:[].concat.apply([],n),isNegative:!1}}n=!1;if(e.isNegative()&&t.isPositive()&&(n=!0,e=e.abs()),t.equals(1))return e.isZero()?{value:[0],isNegative:!1}:{value:Array.apply(null,Array(+e)).map(Number.prototype.valueOf,1),isNegative:n};for(var r=[],i=e;i.isNegative()||0<=i.compareAbs(t);){var i=(s=i.divmod(t)).quotient,s=s.remainder;s.isNegative()&&(s=t.minus(s).abs(),i=i.next()),r.push(s.toJSNumber())}return r.push(i.toJSNumber()),{value:r.reverse(),isNegative:n}}function $(e,t){t=X(e,t);return(t.isNegative?\"-\":\"\")+t.value.map(j).join(\"\")}function Z(e){if(h(+e)){var t=+e;if(t===d(t))return new f(t);throw new Error(\"Invalid integer: \"+e)}var n=\"-\"===e[0],r=(e=n?e.slice(1):e).split(/e/i);if(2<r.length)throw new Error(\"Invalid integer: \"+r.join(\"e\"));if(2===r.length){var i=r[1];if((i=+(i=\"+\"===i[0]?i.slice(1):i))!==d(i)||!h(i))throw new Error(\"Invalid integer: \"+i+\" is not a valid exponent.\");t=r[0],r=t.indexOf(\".\");if(0<=r&&(i-=t.length-r-1,t=t.slice(0,r)+t.slice(r+1)),i<0)throw new Error(\"Cannot include negative exponent part for integers\");e=t+=new Array(i+1).join(\"0\")}if(!/^([0-9][0-9]*)$/.test(e))throw new Error(\"Invalid integer: \"+e);for(var s=[],o=e.length,a=l,u=o-a;0<o;)s.push(+e.slice(u,o)),(u-=a)<0&&(u=0),o-=a;return g(s),new p(s,n)}function z(e){return\"number\"==typeof e?function(e){if(h(e)){if(e!==d(e))throw new Error(e+\" is not an integer.\");return new f(e)}return Z(e.toString())}(e):\"string\"==typeof e?Z(e):e}p.prototype.toArray=function(e){return X(this,e)},f.prototype.toArray=function(e){return X(this,e)},p.prototype.toString=function(e){if(10!==(e=e===o?10:e))return $(this,e);for(var t,n=this.value,r=n.length,i=String(n[--r]);0<=--r;)t=String(n[r]),i+=\"0000000\".slice(t.length)+t;return(this.sign?\"-\":\"\")+i},f.prototype.toString=function(e){return 10!=(e=e===o?10:e)?$(this,e):String(this.value)},p.prototype.toJSON=f.prototype.toJSON=function(){return this.toString()},p.prototype.toJSNumber=p.prototype.valueOf=function(){return parseInt(this.toString(),10)},f.prototype.toJSNumber=f.prototype.valueOf=function(){return this.value};for(var e=0;e<1e3;e++)u[e]=new f(e),0<e&&(u[-e]=new f(-e));return u.one=u[1],u.zero=u[0],u.minusOne=u[-1],u.max=F,u.min=B,u.gcd=G,u.lcm=function(e,t){return e=z(e).abs(),t=z(t).abs(),e.divide(G(e,t)).multiply(t)},u.isInstance=function(e){return e instanceof p||e instanceof f},u.randBetween=function(e,t){var n=B(e=z(e),t=z(t)),r=F(e,t).subtract(n).add(1);if(r.isSmall)return n.add(Math.floor(Math.random()*r));for(var i=[],s=!0,o=r.value.length-1;0<=o;o--){var a=s?r.value[o]:v,u=d(Math.random()*a);i.unshift(u),u<a&&(s=!1)}return i=w(i),n.add(\"number\"==typeof i?new f(i):new p(i,!1))},u.fromArray=function(e,t,n){return H(e.map(z),z(t||10),n)},u}();return\"undefined\"!=typeof module&&module.hasOwnProperty(\"exports\")&&(module.exports=Q),\"function\"==typeof define&&define.amd&&define(\"big-integer\",[],function(){return Q}),Q}(),bigDec:function(e){\"use strict\";var c,L,t,s,o=9e15,m=1e9,g=\"0123456789abcdef\",r=\"2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058\",i=\"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789\",a={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-o,maxE:o,crypto:!1},y=!0,u=\"[DecimalError] \",d=u+\"Invalid argument: \",l=u+\"Precision limit exceeded\",p=u+\"crypto unavailable\",I=Math.floor,v=Math.pow,f=/^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,h=/^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,w=/^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,b=/^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,U=1e7,_=7,S=r.length-1,M=i.length-1,N={name:\"[object Decimal]\"};function E(e){var t,n,r,i=e.length-1,s=\"\",o=e[0];if(0<i){for(s+=o,t=1;t<i;t++)r=e[t]+\"\",(n=_-r.length)&&(s+=V(n)),s+=r;o=e[t],(n=_-(r=o+\"\").length)&&(s+=V(n))}else if(0===o)return\"0\";for(;o%10==0;)o/=10;return s+o}function q(e,t,n){if(e!==~~e||e<t||n<e)throw Error(d+e)}function x(e,t,n,r){for(var i,s,o=e[0];10<=o;o/=10)--t;return--t<0?(t+=_,i=0):(i=Math.ceil((t+1)/_),t%=_),o=v(10,_-t),s=e[i]%o|0,null==r?t<3?(0==t?s=s/100|0:1==t&&(s=s/10|0),n<4&&99999==s||3<n&&49999==s||5e4==s||0==s):(n<4&&s+1==o||3<n&&s+1==o/2)&&(e[i+1]/o/100|0)==v(10,t-2)-1||(s==o/2||0==s)&&0==(e[i+1]/o/100|0):t<4?(0==t?s=s/1e3|0:1==t?s=s/100|0:2==t&&(s=s/10|0),(r||n<4)&&9999==s||!r&&3<n&&4999==s):((r||n<4)&&s+1==o||!r&&3<n&&s+1==o/2)&&(e[i+1]/o/1e3|0)==v(10,t-3)-1}function A(e,t,n){for(var r,i,s=[0],o=0,a=e.length;o<a;){for(i=s.length;i--;)s[i]*=t;for(s[0]+=g.indexOf(e.charAt(o++)),r=0;r<s.length;r++)s[r]>n-1&&(void 0===s[r+1]&&(s[r+1]=0),s[r+1]+=s[r]/n|0,s[r]%=n)}return s.reverse()}N.absoluteValue=N.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),P(e)},N.ceil=function(){return P(new this.constructor(this),this.e+1,2)},N.comparedTo=N.cmp=function(e){var t,n,r=this,i=r.d,s=(e=new r.constructor(e)).d,o=r.s,a=e.s;if(!i||!s)return o&&a?o!==a?o:i===s?0:!i^o<0?1:-1:NaN;if(!i[0]||!s[0])return i[0]?o:s[0]?-a:0;if(o!==a)return o;if(r.e!==e.e)return r.e>e.e^o<0?1:-1;for(t=0,n=(r=i.length)<(e=s.length)?r:e;t<n;++t)if(i[t]!==s[t])return i[t]>s[t]^o<0?1:-1;return r===e?0:e<r^o<0?1:-1},N.cosine=N.cos=function(){var e,t,n=this,r=n.constructor;return n.d?n.d[0]?(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+_,r.rounding=1,n=function(e,t){var n,r=t.d.length,r=r<32?(1/Y(4,n=Math.ceil(r/3))).toString():(n=16,\"2.3283064365386962890625e-10\");e.precision+=n,t=Q(e,1,t.times(r),new e(1));for(var i=n;i--;){var s=t.times(t);t=s.times(s).minus(s).times(8).plus(1)}return e.precision-=n,t}(r,W(r,n)),r.precision=e,r.rounding=t,P(2==s||3==s?n.neg():n,e,t,!0)):new r(1):new r(NaN)},N.cubeRoot=N.cbrt=function(){var e,t,n,r,i,s,o,a,u,l,c=this,p=c.constructor;if(!c.isFinite()||c.isZero())return new p(c);for(y=!1,(s=c.s*v(c.s*c,1/3))&&Math.abs(s)!=1/0?r=new p(s.toString()):(n=E(c.d),(s=((e=c.e)-n.length+1)%3)&&(n+=1==s||-2==s?\"0\":\"00\"),s=v(n,1/3),e=I((e+1)/3)-(e%3==(e<0?-1:2)),(r=new p(n=s==1/0?\"5e\"+e:(n=s.toExponential()).slice(0,n.indexOf(\"e\")+1)+e)).s=c.s),o=(e=p.precision)+3;;)if(l=(u=(a=r).times(a).times(a)).plus(c),r=C(l.plus(c).times(a),l.plus(u),o+2,1),E(a.d).slice(0,o)===(n=E(r.d)).slice(0,o)){if(\"9999\"!=(n=n.slice(o-3,o+1))&&(i||\"4999\"!=n)){+n&&(+n.slice(1)||\"5\"!=n.charAt(0))||(P(r,e+1,1),t=!r.times(r).times(r).eq(c));break}if(!i&&(P(a,e+1,0),a.times(a).times(a).eq(c))){r=a;break}o+=4,i=1}return y=!0,P(r,e,p.rounding,t)},N.decimalPlaces=N.dp=function(){var e,t=this.d,n=NaN;if(t){if(n=((e=t.length-1)-I(this.e/_))*_,e=t[e])for(;e%10==0;e/=10)n--;n<0&&(n=0)}return n},N.dividedBy=N.div=function(e){return C(this,new this.constructor(e))},N.dividedToIntegerBy=N.divToInt=function(e){var t=this.constructor;return P(C(this,new t(e),0,1,1),t.precision,t.rounding)},N.equals=N.eq=function(e){return 0===this.cmp(e)},N.floor=function(){return P(new this.constructor(this),this.e+1,3)},N.greaterThan=N.gt=function(e){return 0<this.cmp(e)},N.greaterThanOrEqualTo=N.gte=function(e){e=this.cmp(e);return 1==e||0===e},N.hyperbolicCosine=N.cosh=function(){var e,t,n,r=(a=this).constructor,i=new r(1);if(!a.isFinite())return new r(a.s?1/0:NaN);if(a.isZero())return i;t=r.precision,n=r.rounding,r.precision=t+Math.max(a.e,a.sd())+4,r.rounding=1;for(var s,o=(o=a.d.length)<32?(1/Y(4,e=Math.ceil(o/3))).toString():(e=16,\"2.3283064365386962890625e-10\"),a=Q(r,1,a.times(o),new r(1),!0),u=e,l=new r(8);u--;)s=a.times(a),a=i.minus(s.times(l.minus(s.times(l))));return P(a,r.precision=t,r.rounding=n,!0)},N.hyperbolicSine=N.sinh=function(){var e,t,n,r=(o=this).constructor;if(!o.isFinite()||o.isZero())return new r(o);if(e=r.precision,t=r.rounding,r.precision=e+Math.max(o.e,o.sd())+4,r.rounding=1,(n=o.d.length)<3)o=Q(r,2,o,o,!0);else for(var i,s=16<(s=1.4*Math.sqrt(n))?16:0|s,o=Q(r,2,o=o.times(1/Y(5,s)),o,!0),a=new r(5),u=new r(16),l=new r(20);s--;)i=o.times(o),o=o.times(a.plus(i.times(u.times(i).plus(l))));return P(o,r.precision=e,r.rounding=t,!0)},N.hyperbolicTangent=N.tanh=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+7,r.rounding=1,C(n.sinh(),n.cosh(),r.precision=e,r.rounding=t)):new r(n.s)},N.inverseCosine=N.acos=function(){var e=this,t=e.constructor,n=e.abs().cmp(1),r=t.precision,i=t.rounding;return-1!==n?0===n?e.isNeg()?B(t,r,i):new t(0):new t(NaN):e.isZero()?B(t,r+4,i).times(.5):(t.precision=r+6,t.rounding=1,e=e.asin(),n=B(t,r+4,i).times(.5),t.precision=r,t.rounding=i,n.minus(e))},N.inverseHyperbolicCosine=N.acosh=function(){var e,t,n=this,r=n.constructor;return n.lte(1)?new r(n.eq(1)?0:NaN):n.isFinite()?(e=r.precision,t=r.rounding,r.precision=e+Math.max(Math.abs(n.e),n.sd())+4,r.rounding=1,y=!1,n=n.times(n).minus(1).sqrt().plus(n),y=!0,r.precision=e,r.rounding=t,n.ln()):new r(n)},N.inverseHyperbolicSine=N.asinh=function(){var e,t,n=this,r=n.constructor;return!n.isFinite()||n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+2*Math.max(Math.abs(n.e),n.sd())+6,r.rounding=1,y=!1,n=n.times(n).plus(1).sqrt().plus(n),y=!0,r.precision=e,r.rounding=t,n.ln())},N.inverseHyperbolicTangent=N.atanh=function(){var e,t,n,r=this,i=r.constructor;return r.isFinite()?0<=r.e?new i(r.abs().eq(1)?r.s/0:r.isZero()?r:NaN):(e=i.precision,t=i.rounding,n=r.sd(),Math.max(n,e)<2*-r.e-1?P(new i(r),e,t,!0):(i.precision=n=n-r.e,r=C(r.plus(1),new i(1).minus(r),n+e,1),i.precision=e+4,i.rounding=1,r=r.ln(),i.precision=e,i.rounding=t,r.times(.5))):new i(NaN)},N.inverseSine=N.asin=function(){var e,t,n,r=this,i=r.constructor;return r.isZero()?new i(r):(e=r.abs().cmp(1),t=i.precision,n=i.rounding,-1!==e?0===e?((e=B(i,t+4,n).times(.5)).s=r.s,e):new i(NaN):(i.precision=t+6,i.rounding=1,r=r.div(new i(1).minus(r.times(r)).sqrt().plus(1)).atan(),i.precision=t,i.rounding=n,r.times(2)))},N.inverseTangent=N.atan=function(){var e,t,n,r,i,s,o,a,u,l=this,c=l.constructor,p=c.precision,f=c.rounding;if(l.isFinite()){if(l.isZero())return new c(l);if(l.abs().eq(1)&&p+4<=M)return(o=B(c,p+4,f).times(.25)).s=l.s,o}else{if(!l.s)return new c(NaN);if(p+4<=M)return(o=B(c,p+4,f).times(.5)).s=l.s,o}for(c.precision=a=p+10,c.rounding=1,e=n=Math.min(28,a/_+2|0);e;--e)l=l.div(l.times(l).plus(1).sqrt().plus(1));for(y=!1,t=Math.ceil(a/_),r=1,u=l.times(l),o=new c(l),i=l;-1!==e;)if(i=i.times(u),s=o.minus(i.div(r+=2)),i=i.times(u),void 0!==(o=s.plus(i.div(r+=2))).d[t])for(e=t;o.d[e]===s.d[e]&&e--;);return n&&(o=o.times(2<<n-1)),y=!0,P(o,c.precision=p,c.rounding=f,!0)},N.isFinite=function(){return!!this.d},N.isInteger=N.isInt=function(){return!!this.d&&I(this.e/_)>this.d.length-2},N.isNaN=function(){return!this.s},N.isNegative=N.isNeg=function(){return this.s<0},N.isPositive=N.isPos=function(){return 0<this.s},N.isZero=function(){return!!this.d&&0===this.d[0]},N.lessThan=N.lt=function(e){return this.cmp(e)<0},N.lessThanOrEqualTo=N.lte=function(e){return this.cmp(e)<1},N.logarithm=N.log=function(e){var t,n,r,i,s,o,a,u,l=this.constructor,c=l.precision,p=l.rounding;if(null==e)e=new l(10),t=!0;else{if(n=(e=new l(e)).d,e.s<0||!n||!n[0]||e.eq(1))return new l(NaN);t=e.eq(10)}if(n=this.d,this.s<0||!n||!n[0]||this.eq(1))return new l(n&&!n[0]?-1/0:1!=this.s?NaN:n?0:1/0);if(t)if(1<n.length)s=!0;else{for(i=n[0];i%10==0;)i/=10;s=1!==i}if(y=!1,o=$(this,a=c+5),r=t?F(l,a+10):$(e,a),x((u=C(o,r,a,1)).d,i=c,p))do{if(o=$(this,a+=10),r=t?F(l,a+10):$(e,a),u=C(o,r,a,1),!s){+E(u.d).slice(i+1,i+15)+1==1e14&&(u=P(u,c+1,0));break}}while(x(u.d,i+=10,p));return y=!0,P(u,c,p)},N.minus=N.sub=function(e){var t,n,r,i,s,o,a,u,l,c,p,f=this,h=f.constructor;if(e=new h(e),!f.d||!e.d)return f.s&&e.s?f.d?e.s=-e.s:e=new h(e.d||f.s!==e.s?f:NaN):e=new h(NaN),e;if(f.s!=e.s)return e.s=-e.s,f.plus(e);if(l=f.d,p=e.d,a=h.precision,u=h.rounding,!l[0]||!p[0]){if(p[0])e.s=-e.s;else{if(!l[0])return new h(3===u?-0:0);e=new h(f)}return y?P(e,a,u):e}if(n=I(e.e/_),f=I(f.e/_),l=l.slice(),s=f-n){for(o=(c=s<0)?(t=l,s=-s,p.length):(t=p,n=f,l.length),s>(r=Math.max(Math.ceil(a/_),o)+2)&&(s=r,t.length=1),t.reverse(),r=s;r--;)t.push(0);t.reverse()}else{for((c=(r=l.length)<(o=p.length))&&(o=r),r=0;r<o;r++)if(l[r]!=p[r]){c=l[r]<p[r];break}s=0}for(c&&(t=l,l=p,p=t,e.s=-e.s),o=l.length,r=p.length-o;0<r;--r)l[o++]=0;for(r=p.length;s<r;){if(l[--r]<p[r]){for(i=r;i&&0===l[--i];)l[i]=U-1;--l[i],l[r]+=U}l[r]-=p[r]}for(;0===l[--o];)l.pop();for(;0===l[0];l.shift())--n;return l[0]?(e.d=l,e.e=D(l,n),y?P(e,a,u):e):new h(3===u?-0:0)},N.modulo=N.mod=function(e){var t,n=this,r=n.constructor;return e=new r(e),!n.d||!e.s||e.d&&!e.d[0]?new r(NaN):!e.d||n.d&&!n.d[0]?P(new r(n),r.precision,r.rounding):(y=!1,9==r.modulo?(t=C(n,e.abs(),0,3,1)).s*=e.s:t=C(n,e,0,r.modulo,1),t=t.times(e),y=!0,n.minus(t))},N.naturalExponential=N.exp=function(){return X(this)},N.naturalLogarithm=N.ln=function(){return $(this)},N.negated=N.neg=function(){var e=new this.constructor(this);return e.s=-e.s,P(e)},N.plus=N.add=function(e){var t,n,r,i,s,o,a,u,l=this,c=l.constructor;if(e=new c(e),!l.d||!e.d)return l.s&&e.s?l.d||(e=new c(e.d||l.s===e.s?l:NaN)):e=new c(NaN),e;if(l.s!=e.s)return e.s=-e.s,l.minus(e);if(a=l.d,u=e.d,s=c.precision,o=c.rounding,!a[0]||!u[0])return u[0]||(e=new c(l)),y?P(e,s,o):e;if(c=I(l.e/_),l=I(e.e/_),a=a.slice(),r=c-l){for(i=r<0?(n=a,r=-r,u.length):(n=u,l=c,a.length),r>(i=(c=Math.ceil(s/_))>i?c+1:i+1)&&(r=i,n.length=1),n.reverse();r--;)n.push(0);n.reverse()}for((i=a.length)-(r=u.length)<0&&(r=i,n=u,u=a,a=n),t=0;r;)t=(a[--r]=a[r]+u[r]+t)/U|0,a[r]%=U;for(t&&(a.unshift(t),++l),i=a.length;0==a[--i];)a.pop();return e.d=a,e.e=D(a,l),y?P(e,s,o):e},N.precision=N.sd=function(e){var t;if(void 0!==e&&e!==!!e&&1!==e&&0!==e)throw Error(d+e);return this.d?(t=G(this.d),e&&this.e+1>t&&(t=this.e+1)):t=NaN,t},N.round=function(){var e=this.constructor;return P(new e(this),this.e+1,e.rounding)},N.sine=N.sin=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+_,r.rounding=1,n=function(e,t){var n,r=t.d.length;if(r<3)return Q(e,2,t,t);n=16<(n=1.4*Math.sqrt(r))?16:0|n,t=Q(e,2,t=t.times(1/Y(5,n)),t);for(var i,s=new e(5),o=new e(16),a=new e(20);n--;)i=t.times(t),t=t.times(s.plus(i.times(o.times(i).minus(a))));return t}(r,W(r,n)),r.precision=e,r.rounding=t,P(2<s?n.neg():n,e,t,!0)):new r(NaN)},N.squareRoot=N.sqrt=function(){var e,t,n,r,i,s,o=this,a=o.d,u=o.e,l=o.s,c=o.constructor;if(1!==l||!a||!a[0])return new c(!l||l<0&&(!a||a[0])?NaN:a?o:1/0);for(y=!1,r=0==(l=Math.sqrt(+o))||l==1/0?(((t=E(a)).length+u)%2==0&&(t+=\"0\"),l=Math.sqrt(t),u=I((u+1)/2)-(u<0||u%2),new c(t=l==1/0?\"5e\"+u:(t=l.toExponential()).slice(0,t.indexOf(\"e\")+1)+u)):new c(l.toString()),n=(u=c.precision)+3;;)if(r=(s=r).plus(C(o,s,n+2,1)).times(.5),E(s.d).slice(0,n)===(t=E(r.d)).slice(0,n)){if(\"9999\"!=(t=t.slice(n-3,n+1))&&(i||\"4999\"!=t)){+t&&(+t.slice(1)||\"5\"!=t.charAt(0))||(P(r,u+1,1),e=!r.times(r).eq(o));break}if(!i&&(P(s,u+1,0),s.times(s).eq(o))){r=s;break}n+=4,i=1}return y=!0,P(r,u,c.rounding,e)},N.tangent=N.tan=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+10,r.rounding=1,(n=n.sin()).s=1,n=C(n,new r(1).minus(n.times(n)).sqrt(),e+10,0),r.precision=e,r.rounding=t,P(2==s||4==s?n.neg():n,e,t,!0)):new r(NaN)},N.times=N.mul=function(e){var t,n,r,i,s,o,a,u,l,c=this.constructor,p=this.d,f=(e=new c(e)).d;if(e.s*=this.s,!(p&&p[0]&&f&&f[0]))return new c(!e.s||p&&!p[0]&&!f||f&&!f[0]&&!p?NaN:p&&f?0*e.s:e.s/0);for(n=I(this.e/_)+I(e.e/_),(u=p.length)<(l=f.length)&&(s=p,p=f,f=s,o=u,u=l,l=o),s=[],r=o=u+l;r--;)s.push(0);for(r=l;0<=--r;){for(t=0,i=u+r;r<i;)a=s[i]+f[r]*p[i-r-1]+t,s[i--]=a%U|0,t=a/U|0;s[i]=(s[i]+t)%U|0}for(;!s[--o];)s.pop();return t?++n:s.shift(),e.d=s,e.e=D(s,n),y?P(e,c.precision,c.rounding):e},N.toBinary=function(e,t){return J(this,2,e,t)},N.toDecimalPlaces=N.toDP=function(e,t){var n=this.constructor,r=new n(this);return void 0===e?r:(q(e,0,m),void 0===t?t=n.rounding:q(t,0,8),P(r,e+r.e+1,t))},N.toExponential=function(e,t){var n=this,r=n.constructor,e=void 0===e?k(n,!0):(q(e,0,m),void 0===t?t=r.rounding:q(t,0,8),k(n=P(new r(n),e+1,t),!0,e+1));return n.isNeg()&&!n.isZero()?\"-\"+e:e},N.toFixed=function(e,t){var n=this,r=n.constructor,i=void 0===e?k(n):(q(e,0,m),void 0===t?t=r.rounding:q(t,0,8),k(i=P(new r(n),e+n.e+1,t),!1,e+i.e+1));return n.isNeg()&&!n.isZero()?\"-\"+i:i},N.toFraction=function(e){var t,n,r,i,s,o,a,u,l,c,p=this,f=p.d,h=p.constructor;if(!f)return new h(p);if(u=n=new h(1),r=a=new h(0),l=(s=(t=new h(r)).e=G(f)-p.e-1)%_,t.d[0]=v(10,l<0?_+l:l),null==e)e=0<s?t:u;else{if(!(o=new h(e)).isInt()||o.lt(u))throw Error(d+o);e=o.gt(t)?0<s?t:u:o}for(y=!1,o=new h(E(f)),l=h.precision,h.precision=s=f.length*_*2;c=C(o,t,0,1,1),1!=(i=n.plus(c.times(r))).cmp(e);)n=r,r=i,u=a.plus(c.times(i=u)),a=i,t=o.minus(c.times(i=t)),o=i;return i=C(e.minus(n),r,0,1,1),a=a.plus(i.times(u)),n=n.plus(i.times(r)),a.s=u.s=p.s,p=C(u,r,s,1).minus(p).abs().cmp(C(a,n,s,1).minus(p).abs())<1?[u,r]:[a,n],h.precision=l,y=!0,p},N.toHexadecimal=N.toHex=function(e,t){return J(this,16,e,t)},N.toNearest=function(e,t){var n=(r=this).constructor,r=new n(r);if(null==e){if(!r.d)return r;e=new n(1),t=n.rounding}else{if(e=new n(e),void 0===t?t=n.rounding:q(t,0,8),!r.d)return e.s?r:e;if(!e.d)return e.s&&(e.s=r.s),e}return e.d[0]?(y=!1,r=C(r,e,0,t,1).times(e),y=!0,P(r)):(e.s=r.s,r=e),r},N.toNumber=function(){return+this},N.toOctal=function(e,t){return J(this,8,e,t)},N.toPower=N.pow=function(e){var t,n,r,i,s,o,a=this,u=a.constructor,l=+(e=new u(e));if(!(a.d&&e.d&&a.d[0]&&e.d[0]))return new u(v(+a,l));if((a=new u(a)).eq(1))return a;if(r=u.precision,s=u.rounding,e.eq(1))return P(a,r,s);if((t=I(e.e/_))>=e.d.length-1&&(n=l<0?-l:l)<=9007199254740991)return i=H(u,a,n,r),e.s<0?new u(1).div(i):P(i,r,s);if((o=a.s)<0){if(t<e.d.length-1)return new u(NaN);if(0==(1&e.d[t])&&(o=1),0==a.e&&1==a.d[0]&&1==a.d.length)return a.s=o,a}return(t=0!=(n=v(+a,l))&&isFinite(n)?new u(n+\"\").e:I(l*(Math.log(\"0.\"+E(a.d))/Math.LN10+a.e+1)))>u.maxE+1||t<u.minE-1?new u(0<t?o/0:0):(y=!1,u.rounding=a.s=1,n=Math.min(12,(t+\"\").length),(i=X(e.times($(a,r+n)),r)).d&&x((i=P(i,r+5,1)).d,r,s)&&(+E((i=P(X(e.times($(a,(t=r+10)+n)),t),t+5,1)).d).slice(r+1,r+15)+1==1e14&&(i=P(i,r+1,0))),i.s=o,y=!0,P(i,r,u.rounding=s))},N.toPrecision=function(e,t){var n=this,r=n.constructor,e=void 0===e?k(n,n.e<=r.toExpNeg||n.e>=r.toExpPos):(q(e,1,m),void 0===t?t=r.rounding:q(t,0,8),k(n=P(new r(n),e,t),e<=n.e||n.e<=r.toExpNeg,e));return n.isNeg()&&!n.isZero()?\"-\"+e:e},N.toSignificantDigits=N.toSD=function(e,t){var n=this.constructor;return void 0===e?(e=n.precision,t=n.rounding):(q(e,1,m),void 0===t?t=n.rounding:q(t,0,8)),P(new n(this),e,t)},N.toString=function(){var e=this.constructor,e=k(this,this.e<=e.toExpNeg||this.e>=e.toExpPos);return this.isNeg()&&!this.isZero()?\"-\"+e:e},N.truncated=N.trunc=function(){return P(new this.constructor(this),this.e+1,1)},N.valueOf=N.toJSON=function(){var e=this.constructor,e=k(this,this.e<=e.toExpNeg||this.e>=e.toExpPos);return this.isNeg()?\"-\"+e:e};var C=function(e,t,n,r,i,s){var o,a,u,l,c,p,f,h,m,g,d,v,w,y,b,S,M,N,E,q=e.constructor,x=e.s==t.s?1:-1,A=e.d,C=t.d;if(!(A&&A[0]&&C&&C[0]))return new q(e.s&&t.s&&(A?!C||A[0]!=C[0]:C)?A&&0==A[0]||!C?0*x:x/0:NaN);for(a=s?(c=1,e.e-t.e):(s=U,I(e.e/(c=_))-I(t.e/c)),N=C.length,S=A.length,m=(x=new q(x)).d=[],u=0;C[u]==(A[u]||0);u++);if(C[u]>(A[u]||0)&&a--,null==n?(w=n=q.precision,r=q.rounding):w=i?n+(e.e-t.e)+1:n,w<0)m.push(1),p=!0;else{if(w=w/c+2|0,u=0,1==N){for(C=C[l=0],w++;(u<S||l)&&w--;u++)y=l*s+(A[u]||0),m[u]=y/C|0,l=y%C|0;p=l||u<S}else{for(1<(l=s/(C[0]+1)|0)&&(C=O(C,l,s),A=O(A,l,s),N=C.length,S=A.length),d=(g=A.slice(0,b=N)).length;d<N;)g[d++]=0;for((E=C.slice()).unshift(0),M=C[0],C[1]>=s/2&&++M;l=0,(o=R(C,g,N,d))<0?(v=g[0],1<(l=(v=N!=d?v*s+(g[1]||0):v)/M|0)?1==(o=R(f=O(C,l=s<=l?s-1:l,s),g,h=f.length,d=g.length))&&(l--,T(f,N<h?E:C,h,s)):(0==l&&(o=l=1),f=C.slice()),(h=f.length)<d&&f.unshift(0),T(g,f,d,s),-1==o&&(o=R(C,g,N,d=g.length))<1&&(l++,T(g,N<d?E:C,d,s)),d=g.length):0===o&&(l++,g=[0]),m[u++]=l,o&&g[0]?g[d++]=A[b]||0:(g=[A[b]],d=1),(b++<S||void 0!==g[0])&&w--;);p=void 0!==g[0]}m[0]||m.shift()}if(1==c)x.e=a,L=p;else{for(u=1,l=m[0];10<=l;l/=10)u++;x.e=u+a*c-1,P(x,i?n+x.e+1:n,r,p)}return x};function O(e,t,n){var r,i=0,s=e.length;for(e=e.slice();s--;)r=e[s]*t+i,e[s]=r%n|0,i=r/n|0;return i&&e.unshift(i),e}function R(e,t,n,r){var i,s;if(n!=r)s=r<n?1:-1;else for(i=s=0;i<n;i++)if(e[i]!=t[i]){s=e[i]>t[i]?1:-1;break}return s}function T(e,t,n,r){for(var i=0;n--;)e[n]-=i,i=e[n]<t[n]?1:0,e[n]=i*r+e[n]-t[n];for(;!e[0]&&1<e.length;)e.shift()}function P(e,t,n,r){var i,s,o,a,u,l,c,p,f=e.constructor;e:if(null!=t){if(!(c=e.d))return e;for(i=1,a=c[0];10<=a;a/=10)i++;if((s=t-i)<0)s+=_,u=(l=c[p=0])/v(10,i-(o=t)-1)%10|0;else if((p=Math.ceil((s+1)/_))>=(a=c.length)){if(!r)break e;for(;a++<=p;)c.push(0);l=u=0,o=(s%=_)-_+(i=1)}else{for(l=a=c[p],i=1;10<=a;a/=10)i++;u=(o=(s%=_)-_+i)<0?0:l/v(10,i-o-1)%10|0}if(r=r||t<0||void 0!==c[p+1]||(o<0?l:l%v(10,i-o-1)),u=n<4?(u||r)&&(0==n||n==(e.s<0?3:2)):5<u||5==u&&(4==n||r||6==n&&(0<s?0<o?l/v(10,i-o):0:c[p-1])%10&1||n==(e.s<0?8:7)),t<1||!c[0])return c.length=0,u?(t-=e.e+1,c[0]=v(10,(_-t%_)%_),e.e=-t||0):c[0]=e.e=0,e;if(0==s?(c.length=p,a=1,p--):(c.length=p+1,a=v(10,_-s),c[p]=0<o?(l/v(10,i-o)%v(10,o)|0)*a:0),u)for(;;){if(0==p){for(s=1,o=c[0];10<=o;o/=10)s++;for(o=c[0]+=a,a=1;10<=o;o/=10)a++;s!=a&&(e.e++,c[0]==U&&(c[0]=1));break}if(c[p]+=a,c[p]!=U)break;c[p--]=0,a=1}for(s=c.length;0===c[--s];)c.pop()}return y&&(e.e>f.maxE?(e.d=null,e.e=NaN):e.e<f.minE&&(e.e=0,e.d=[0])),e}function k(e,t,n){if(!e.isFinite())return Z(e);var r,i=e.e,s=E(e.d),o=s.length;return t?(n&&0<(r=n-o)?s=s.charAt(0)+\".\"+s.slice(1)+V(r):1<o&&(s=s.charAt(0)+\".\"+s.slice(1)),s=s+(e.e<0?\"e\":\"e+\")+e.e):i<0?(s=\"0.\"+V(-i-1)+s,n&&0<(r=n-o)&&(s+=V(r))):o<=i?(s+=V(i+1-o),n&&0<(r=n-i-1)&&(s=s+\".\"+V(r))):((r=i+1)<o&&(s=s.slice(0,r)+\".\"+s.slice(r)),n&&0<(r=n-o)&&(i+1===o&&(s+=\".\"),s+=V(r))),s}function D(e,t){var n=e[0];for(t*=_;10<=n;n/=10)t++;return t}function F(e,t,n){if(S<t)throw y=!0,n&&(e.precision=n),Error(l);return P(new e(r),t,1,!0)}function B(e,t,n){if(M<t)throw Error(l);return P(new e(i),t,n,!0)}function G(e){var t=e.length-1,n=t*_+1;if(t=e[t]){for(;t%10==0;t/=10)n--;for(t=e[0];10<=t;t/=10)n++}return n}function V(e){for(var t=\"\";e--;)t+=\"0\";return t}function H(e,t,n,r){var i,s=new e(1),o=Math.ceil(r/_+4);for(y=!1;;){if(n%2&&K((s=s.times(t)).d,o)&&(i=!0),0===(n=I(n/2))){n=s.d.length-1,i&&0===s.d[n]&&++s.d[n];break}K((t=t.times(t)).d,o)}return y=!0,s}function j(e){return 1&e.d[e.d.length-1]}function n(e,t,n){for(var r,i=new e(t[0]),s=0;++s<t.length;){if(!(r=new e(t[s])).s){i=r;break}i[n](r)&&(i=r)}return i}function X(e,t){var n,r,i,s,o,a,u,l=0,c=0,p=0,f=e.constructor,h=f.rounding,m=f.precision;if(!e.d||!e.d[0]||17<e.e)return new f(e.d?e.d[0]?e.s<0?0:1/0:1:e.s?e.s<0?0:e:NaN);for(u=null==t?(y=!1,m):t,a=new f(.03125);-2<e.e;)e=e.times(a),p+=5;for(u+=r=Math.log(v(2,p))/Math.LN10*2+5|0,n=s=o=new f(1),f.precision=u;;){if(s=P(s.times(e),u,1),n=n.times(++c),E((a=o.plus(C(s,n,u,1))).d).slice(0,u)===E(o.d).slice(0,u)){for(i=p;i--;)o=P(o.times(o),u,1);if(null!=t)return f.precision=m,o;if(!(l<3&&x(o.d,u-r,h,l)))return P(o,f.precision=m,h,y=!0);f.precision=u+=10,n=s=a=new f(1),c=0,l++}o=a}}function $(e,t){var n,r,i,s,o,a,u,l,c,p,f,h=1,m=e,g=m.d,d=m.constructor,v=d.rounding,w=d.precision;if(m.s<0||!g||!g[0]||!m.e&&1==g[0]&&1==g.length)return new d(g&&!g[0]?-1/0:1!=m.s?NaN:g?0:m);if(c=null==t?(y=!1,w):t,d.precision=c+=10,r=(n=E(g)).charAt(0),!(Math.abs(s=m.e)<15e14))return l=F(d,c+2,w).times(s+\"\"),m=$(new d(r+\".\"+n.slice(1)),c-10).plus(l),d.precision=w,null==t?P(m,w,v,y=!0):m;for(;r<7&&1!=r||1==r&&3<n.charAt(1);)r=(n=E((m=m.times(e)).d)).charAt(0),h++;for(s=m.e,1<r?(m=new d(\"0.\"+n),s++):m=new d(r+\".\"+n.slice(1)),u=o=m=C((p=m).minus(1),m.plus(1),c,1),f=P(m.times(m),c,1),i=3;;){if(o=P(o.times(f),c,1),E((l=u.plus(C(o,new d(i),c,1))).d).slice(0,c)===E(u.d).slice(0,c)){if(u=u.times(2),0!==s&&(u=u.plus(F(d,c+2,w).times(s+\"\"))),u=C(u,new d(h),c,1),null!=t)return d.precision=w,u;if(!x(u.d,c-10,v,a))return P(u,d.precision=w,v,y=!0);d.precision=c+=10,l=o=m=C(p.minus(1),p.plus(1),c,1),f=P(m.times(m),c,1),i=a=1}u=l,i+=2}}function Z(e){return String(e.s*e.s/0)}function z(e,t){var n,r,i;for(0<(r=(t=-1<(n=t.indexOf(\".\"))?t.replace(\".\",\"\"):t).search(/e/i))?(n<0&&(n=r),n+=+t.slice(r+1),t=t.substring(0,r)):n<0&&(n=t.length),r=0;48===t.charCodeAt(r);r++);for(i=t.length;48===t.charCodeAt(i-1);--i);if(t=t.slice(r,i)){if(i-=r,e.e=n=n-r-1,e.d=[],r=(n+1)%_,n<0&&(r+=_),r<i){for(r&&e.d.push(+t.slice(0,r)),i-=_;r<i;)e.d.push(+t.slice(r,r+=_));t=t.slice(r),r=_-t.length}else r-=i;for(;r--;)t+=\"0\";e.d.push(+t),y&&(e.e>e.constructor.maxE?(e.d=null,e.e=NaN):e.e<e.constructor.minE&&(e.e=0,e.d=[0]))}else e.e=0,e.d=[0];return e}function Q(e,t,n,r,i){var s,o,a,u,l=e.precision,c=Math.ceil(l/_);for(y=!1,u=n.times(n),a=new e(r);;){if(o=C(a.times(u),new e(t++*t++),l,1),a=i?r.plus(o):r.minus(o),r=C(o.times(u),new e(t++*t++),l,1),void 0!==(o=a.plus(r)).d[c]){for(s=c;o.d[s]===a.d[s]&&s--;);if(-1==s)break}s=a,a=r,r=o,o=s}return y=!0,o.d.length=c+1,o}function Y(e,t){for(var n=e;--t;)n*=e;return n}function W(e,t){var n=t.s<0,r=B(e,e.precision,1),i=r.times(.5);if((t=t.abs()).lte(i))return s=n?4:1,t;if((e=t.divToInt(r)).isZero())s=n?3:2;else{if((t=t.minus(e.times(r))).lte(i))return s=j(e)?n?2:3:n?4:1,t;s=j(e)?n?1:4:n?3:2}return t.minus(r).abs()}function J(e,t,n,r){var i,s,o,a,u,l,c,p,f=e.constructor,h=void 0!==n;if(h?(q(n,1,m),void 0===r?r=f.rounding:q(r,0,8)):(n=f.precision,r=f.rounding),e.isFinite()){for(h?(i=2,16==t?n=4*n-3:8==t&&(n=3*n-2)):i=t,0<=(o=(l=k(e)).indexOf(\".\"))&&(l=l.replace(\".\",\"\"),(p=new f(1)).e=l.length-o,p.d=A(k(p),10,i),p.e=p.d.length),s=a=(c=A(l,10,i)).length;0==c[--a];)c.pop();if(c[0]){if(o<0?s--:((e=new f(e)).d=c,e.e=s,c=(e=C(e,p,n,r,0,i)).d,s=e.e,u=L),o=c[n],p=i/2,u=u||void 0!==c[n+1],u=r<4?(void 0!==o||u)&&(0===r||r===(e.s<0?3:2)):p<o||o===p&&(4===r||u||6===r&&1&c[n-1]||r===(e.s<0?8:7)),c.length=n,u)for(;++c[--n]>i-1;)c[n]=0,n||(++s,c.unshift(1));for(a=c.length;!c[a-1];--a);for(o=0,l=\"\";o<a;o++)l+=g.charAt(c[o]);if(h){if(1<a)if(16==t||8==t){for(o=16==t?4:3,--a;a%o;a++)l+=\"0\";for(a=(c=A(l,i,t)).length;!c[a-1];--a);for(o=1,l=\"1.\";o<a;o++)l+=g.charAt(c[o])}else l=l.charAt(0)+\".\"+l.slice(1);l=l+(s<0?\"p\":\"p+\")+s}else if(s<0){for(;++s;)l=\"0\"+l;l=\"0.\"+l}else if(++s>a)for(s-=a;s--;)l+=\"0\";else s<a&&(l=l.slice(0,s)+\".\"+l.slice(s))}else l=h?\"0p+0\":\"0\";l=(16==t?\"0x\":2==t?\"0b\":8==t?\"0o\":\"\")+l}else l=Z(e);return e.s<0?\"-\"+l:l}function K(e,t){return e.length>t&&(e.length=t,1)}function ee(e){return new this(e).abs()}function te(e){return new this(e).acos()}function ne(e){return new this(e).acosh()}function re(e,t){return new this(e).plus(t)}function ie(e){return new this(e).asin()}function se(e){return new this(e).asinh()}function oe(e){return new this(e).atan()}function ae(e){return new this(e).atanh()}function ue(e,t){e=new this(e),t=new this(t);var n,r=this.precision,i=this.rounding,s=r+4;return e.s&&t.s?e.d||t.d?!t.d||e.isZero()?(n=t.s<0?B(this,r,i):new this(0)).s=e.s:!e.d||t.isZero()?(n=B(this,s,1).times(.5)).s=e.s:n=t.s<0?(this.precision=s,this.rounding=1,n=this.atan(C(e,t,s,1)),t=B(this,s,1),this.precision=r,this.rounding=i,e.s<0?n.minus(t):n.plus(t)):this.atan(C(e,t,s,1)):(n=B(this,s,1).times(0<t.s?.25:.75)).s=e.s:n=new this(NaN),n}function le(e){return new this(e).cbrt()}function ce(e){return P(e=new this(e),e.e+1,2)}function pe(e){if(!e||\"object\"!=typeof e)throw Error(u+\"Object expected\");for(var t,n,r=!0===e.defaults,i=[\"precision\",1,m,\"rounding\",0,8,\"toExpNeg\",-o,0,\"toExpPos\",0,o,\"maxE\",0,o,\"minE\",-o,0,\"modulo\",0,9],s=0;s<i.length;s+=3)if(t=i[s],r&&(this[t]=a[t]),void 0!==(n=e[t])){if(!(I(n)===n&&i[s+1]<=n&&n<=i[s+2]))throw Error(d+t+\": \"+n);this[t]=n}if(t=\"crypto\",r&&(this[t]=a[t]),void 0!==(n=e[t])){if(!0!==n&&!1!==n&&0!==n&&1!==n)throw Error(d+t+\": \"+n);if(n){if(\"undefined\"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(p);this[t]=!0}else this[t]=!1}return this}function fe(e){return new this(e).cos()}function he(e){return new this(e).cosh()}function me(e,t){return new this(e).div(t)}function ge(e){return new this(e).exp()}function de(e){return P(e=new this(e),e.e+1,3)}function ve(){var e,t,n=new this(0);for(y=!1,e=0;e<arguments.length;)if((t=new this(arguments[e++])).d)n.d&&(n=n.plus(t.times(t)));else{if(t.s)return y=!0,new this(1/0);n=t}return y=!0,n.sqrt()}function we(e){return e instanceof c||e&&\"[object Decimal]\"===e.name||!1}function ye(e){return new this(e).ln()}function be(e,t){return new this(e).log(t)}function Se(e){return new this(e).log(2)}function Me(e){return new this(e).log(10)}function Ne(){return n(this,arguments,\"lt\")}function Ee(){return n(this,arguments,\"gt\")}function qe(e,t){return new this(e).mod(t)}function xe(e,t){return new this(e).mul(t)}function Ae(e,t){return new this(e).pow(t)}function Ce(e){var t,n,r,i,s=0,o=new this(1),a=[];if(void 0===e?e=this.precision:q(e,1,m),r=Math.ceil(e/_),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(r));s<r;)429e7<=(i=t[s])?t[s]=crypto.getRandomValues(new Uint32Array(1))[0]:a[s++]=i%1e7;else{if(!crypto.randomBytes)throw Error(p);for(t=crypto.randomBytes(r*=4);s<r;)214e7<=(i=t[s]+(t[s+1]<<8)+(t[s+2]<<16)+((127&t[s+3])<<24))?crypto.randomBytes(4).copy(t,s):(a.push(i%1e7),s+=4);s=r/4}else for(;s<r;)a[s++]=1e7*Math.random()|0;for(r=a[--s],e%=_,r&&e&&(i=v(10,_-e),a[s]=(r/i|0)*i);0===a[s];s--)a.pop();if(s<0)a=[n=0];else{for(n=-1;0===a[0];n-=_)a.shift();for(r=1,i=a[0];10<=i;i/=10)r++;r<_&&(n-=_-r)}return o.e=n,o.d=a,o}function Le(e){return P(e=new this(e),e.e+1,this.rounding)}function Ie(e){return(e=new this(e)).d?e.d[0]?e.s:0*e.s:e.s||NaN}function Ue(e){return new this(e).sin()}function _e(e){return new this(e).sinh()}function Oe(e){return new this(e).sqrt()}function Re(e,t){return new this(e).sub(t)}function Te(e){return new this(e).tan()}function Pe(e){return new this(e).tanh()}function ke(e){return P(e=new this(e),e.e+1,1)}return(c=function e(t){var n,r,i;function s(e){var t,n,r,i=this;if(!(i instanceof s))return new s(e);if(e instanceof(i.constructor=s))return i.s=e.s,void(y?!e.d||e.e>s.maxE?(i.e=NaN,i.d=null):e.e<s.minE?(i.e=0,i.d=[0]):(i.e=e.e,i.d=e.d.slice()):(i.e=e.e,i.d=e.d&&e.d.slice()));if(\"number\"==(r=typeof e)){if(0===e)return i.s=1/e<0?-1:1,i.e=0,void(i.d=[0]);if(e<0?(e=-e,i.s=-1):i.s=1,e===~~e&&e<1e7){for(t=0,n=e;10<=n;n/=10)t++;return void(y?s.maxE<t?(i.e=NaN,i.d=null):t<s.minE?(i.e=0,i.d=[0]):(i.e=t,i.d=[e]):(i.e=t,i.d=[e]))}return 0*e!=0?(e||(i.s=NaN),i.e=NaN,void(i.d=null)):z(i,e.toString())}if(\"string\"!=r)throw Error(d+e);return 45===(n=e.charCodeAt(0))?(e=e.slice(1),i.s=-1):(43===n&&(e=e.slice(1)),i.s=1),(b.test(e)?z:function(e,t){var n,r,i,s,o,a,u,l;if(\"Infinity\"===t||\"NaN\"===t)return+t||(e.s=NaN),e.e=NaN,e.d=null,e;if(h.test(t))l=16,t=t.toLowerCase();else if(f.test(t))l=2;else{if(!w.test(t))throw Error(d+t);l=8}for(s=0<=(i=(t=0<(i=t.search(/p/i))?(a=+t.slice(i+1),t.substring(2,i)):t.slice(2)).indexOf(\".\")),n=e.constructor,s&&(i=(o=(t=t.replace(\".\",\"\")).length)-i,r=H(n,new n(l),i,2*i)),i=l=(u=A(t,l,U)).length-1;0===u[i];--i)u.pop();return i<0?new n(0*e.s):(e.e=D(u,l),e.d=u,y=!1,s&&(e=C(e,r,4*o)),a&&(e=e.times(Math.abs(a)<54?v(2,a):c.pow(2,a))),y=!0,e)})(i,e)}if(s.prototype=N,s.ROUND_UP=0,s.ROUND_DOWN=1,s.ROUND_CEIL=2,s.ROUND_FLOOR=3,s.ROUND_HALF_UP=4,s.ROUND_HALF_DOWN=5,s.ROUND_HALF_EVEN=6,s.ROUND_HALF_CEIL=7,s.ROUND_HALF_FLOOR=8,s.EUCLID=9,s.config=s.set=pe,s.clone=e,s.isDecimal=we,s.abs=ee,s.acos=te,s.acosh=ne,s.add=re,s.asin=ie,s.asinh=se,s.atan=oe,s.atanh=ae,s.atan2=ue,s.cbrt=le,s.ceil=ce,s.cos=fe,s.cosh=he,s.div=me,s.exp=ge,s.floor=de,s.hypot=ve,s.ln=ye,s.log=be,s.log10=Me,s.log2=Se,s.max=Ne,s.min=Ee,s.mod=qe,s.mul=xe,s.pow=Ae,s.random=Ce,s.round=Le,s.sign=Ie,s.sin=Ue,s.sinh=_e,s.sqrt=Oe,s.sub=Re,s.tan=Te,s.tanh=Pe,s.trunc=ke,(t=void 0===t?{}:t)&&!0!==t.defaults)for(i=[\"precision\",\"rounding\",\"toExpNeg\",\"toExpPos\",\"maxE\",\"minE\",\"modulo\",\"crypto\"],n=0;n<i.length;)t.hasOwnProperty(r=i[n++])||(t[r]=this[r]);return s.config(t),s}(a)).default=c.Decimal=c,r=new c(r),i=new c(i),\"function\"==typeof define&&define.amd?define(function(){return c}):\"undefined\"!=typeof module&&module.exports?(\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator&&(N[Symbol.for(\"nodejs.util.inspect.custom\")]=N.toString,N[Symbol.toStringTag]=\"Decimal\"),module.exports=c):(e=e||(\"undefined\"!=typeof self&&self&&self.self==self?self:window),t=e.Decimal,c.noConflict=function(){return e.Decimal=t,c},e.Decimal=c),c}(this)});\"undefined\"!=typeof module&&(module.exports=nerdamer),\"undefined\"!=typeof module&&(nerdamer=require(\"./nerdamer.core.js\"),require(\"./Calculus.js\")),function(){\"use strict\";var Z=nerdamer.getCore(),H=Z.PARSER,u=Z.groups.N,c=Z.groups.P,j=Z.groups.S,p=Z.groups.EX,C=Z.groups.FN,y=Z.groups.PL,X=Z.groups.CP,L=Z.groups.CB,I=Z.Utils.keys,U=Z.Utils.even,$=Z.Utils.variables,l=Z.Utils.format,b=Z.Utils.round,z=Z.Frac,_=Z.Utils.isInt,Q=Z.Symbol,Y=Z.Settings.CONST_HASH,f=Z.Utils.importFunctions();Z.Utils.evaluate;function W(e,t,n){if(Z.Utils.isSymbol(e))this.parse(e),this.variable=this.variable||t;else if(isNaN(e))\"string\"==typeof e&&this.parse(H.parse(e));else{if(n=n||0,void 0===t)throw new Z.exceptions.InvalidVariableNameError(\"Polynomial expects a variable name when creating using order\");this.coeffs=[],this.coeffs[n]=e,this.fill(e)}}function O(){this.factors={},this.length=0}function J(e,t,n){this.terms=t||[],this.coeff=e,this.map=n,this.sum=new Z.Frac(0),this.image=void 0}W.fromArray=function(e,t){if(void 0===t)throw new Z.exceptions.InvalidVariableNameError(\"A variable name must be specified when creating polynomial from array\");var n=new W;return n.coeffs=e,n.variable=t,n},W.fit=function(e,t,n,r,i,s){var o=new Array(i+1),a=n-t;o[0]=t,a-=(o[i]=e)*Math.pow(r,i);for(var u=i-1;0<u;u--){var l=Math.pow(r,u),c=a/l,c=Math.sign(c)*Math.floor(Math.abs(c));a-=c*l,o[u]=c}if(0!==a)return null;for(u=0;u<o.length;u++)o[u]=new z(o[u]);return W.fromArray(o,s)},W.prototype={parse:function(e,t){if(this.variable=$(e)[0],!e.isPoly())throw Z.exceptions.NerdamerTypeError(\"Polynomial Expected! Received \"+Z.Utils.text(e));if(t=t||[],(e=!e.power.absEquals(1)?H.expand(e):e).group===Z.groups.N)t[0]=e.multiplier;else if(e.group===Z.groups.S)t[e.power.toDecimal()]=e.multiplier;else for(var n in e.symbols){var r=e.symbols[n],n=r.power;if(Z.Utils.isSymbol(n))throw new Z.exceptions.NerdamerTypeError(\"power cannot be a Symbol\");n=r.group===u?0:n.toDecimal(),r.symbols?this.parse(r,t):t[n]=r.multiplier}this.coeffs=t,this.fill()},fill:function(e){e=Number(e)||0;for(var t=this.coeffs.length,n=0;n<t;n++)void 0===this.coeffs[n]&&(this.coeffs[n]=new z(e));return this},trim:function(){for(var e=this.coeffs.length;e--;){var t=this.coeffs[e],n=t.equals(0);if(!t||!n)break;if(0===e)break;this.coeffs.pop()}return this},modP:function(e){for(var t=this.coeffs.length,n=0;n<t;n++){var r=this.coeffs[n];if(r<0){for(var i,s=n;s<t;s++)if(0<this.coeffs[s]){i=this.coeffs[s];break}if(i){for(;n<s;s--)this.coeffs[s]=this.coeffs[s].subtract(new z(1)),this.coeffs[s-1]=this.coeffs[s-1].add(new z(e));r=this.coeffs[n]}}var o,a=r.mod(e),u=r.subtract(a).divide(e);u.equals(0)||(r=(r=this.coeffs[o=n+1]||new z(0)).add(u),this.coeffs[o]=new z(r),this.coeffs[n]=new z(a))}return this},add:function(e){for(var t=Math.max(this.coeffs.length,e.coeffs.length),n=0;n<t;n++){var r=this.coeffs[n]||new z(0),i=e.coeffs[n]||new z(0);this.coeffs[n]=r.add(i)}return this},subtract:function(e){for(var t=Math.max(this.coeffs.length,e.coeffs.length),n=0;n<t;n++){var r=this.coeffs[n]||new z(0),i=e.coeffs[n]||new z(0);this.coeffs[n]=r.subtract(i)}return this},divide:function(e){for(var t=this.variable,n=Z.Utils.arrayClone(this.coeffs),r=Z.Utils.arrayClone(e.coeffs),i=n.length,s=r.length-1,o=[],a=0;a<i;a++){var u=i-(a+1),l=u-s,c=n[u].divide(r[s]);if(l<0)break;o[l]=c;for(var p=0;p<=s;p++)n[p+l]=n[p+l].subtract(r[p].multiply(c))}e=W.fromArray(n,t||\"x\").trim();return[W.fromArray(o,t||\"x\"),e]},multiply:function(e){for(var t=this.coeffs.length,n=e.coeffs.length,r=[],i=0;i<t;i++)for(var s=this.coeffs[i],o=0;o<n;o++){var a=i+o,u=e.coeffs[o],l=r[a]||new z(0);r[a]=l.add(s.multiply(u))}return this.coeffs=r,this},isZero:function(){for(var e=this.coeffs.length,t=0;t<e;t++)if(!this.coeffs[t].equals(0))return!1;return!0},sub:function(e){for(var t=new z(0),n=this.coeffs.length,r=0;r<n;r++){var i=this.coeffs[r];i.equals(0)||(t=t.add(i.multiply(new z(Math.pow(e,r)))))}return t},clone:function(){var e=new W;return e.coeffs=this.coeffs,e.variable=this.variable,e},deg:function(){return this.trim(),this.coeffs.length-1},lc:function(){return this.coeffs[this.deg()].clone()},monic:function(){for(var e=this.lc(),t=this.coeffs.length,n=0;n<t;n++)this.coeffs[n]=this.coeffs[n].divide(e);return this},gcd:function(e){if(this.coeffs.length-1<e.coeffs.length-1)return e.gcd(this);for(var t=this;!e.isZero();){var n=e.clone();e=(t=t.clone()).divide(n)[1],t=n}var r=Z.Math2.QGCD.apply(null,t.coeffs);if(!r.equals(1))for(var i=t.coeffs.length,s=0;s<i;s++)t.coeffs[s]=t.coeffs[s].divide(r);return t},diff:function(){for(var e=[],t=this.coeffs.length,n=1;n<t;n++)e.push(this.coeffs[n].multiply(new z(n)));return this.coeffs=e,this},integrate:function(){for(var e=[0],t=this.coeffs.length,n=0;n<t;n++){var r=new z(n+1);e[r]=this.coeffs[n].divide(r)}return this.coeffs=e,this},gcf:function(e){for(var t=[],n=0;n<this.coeffs.length;n++){var r=this.coeffs[n];r.equals(0)||-1!==t.indexOf(r)||t.push(r)}var i=[Z.Math2.QGCD.apply(void 0,t),function(e){for(var t=0;t<e.length;t++)if(!e[t].equals(0))return t}(this.coeffs)].toDecimal();return e&&((e=[])[i[1]-1]=i[0],i=W.fromArray(e,this.variable).fill()),i},quad:function(e){var t=[];if(3<this.coeffs.length)throw new Error(\"Cannot calculate quadratic order of \"+(this.coeffs.length-1));if(0===this.coeffs.length)throw new Error(\"Polynomial array has no terms\");var n=this.coeffs[2]||0,r=this.coeffs[1]||0,i=r*r-4*n*this.coeffs[0];return i<0&&!e||(t[0]=(-r+Math.sqrt(i))/(2*n),t[1]=(-r-Math.sqrt(i))/(2*n)),t},squareFree:function(){for(var e=this.clone(),t=1,n=e.clone().diff(),r=e.clone().gcd(n),i=e.divide(r)[0],s=W.fromArray([new z(1)],e.variable);!r.equalsNumber(1);){var o=i.gcd(r),a=i.divide(o)[0];if(!a.equalsNumber(1)&&1<t){for(var u=a.clone(),l=1;l<t;l++)u.multiply(a.clone());a=u}s=s.multiply(a),t++,r=r.divide(i=o)[0]}return[s,i,t]},toSymbol:function(){var e=this.coeffs.length,t=this.variable;if(0===e)return new Z.Symbol(0);for(var n=e-1,r=\"\",i=0;i<e;i++){var s=i===n?\"\":\"+\",o=this.coeffs[i];o.equals(0)||(r+=o+\"*\"+t+\"^\"+i+s)}return H.parse(r)},equalsNumber:function(e){return this.trim(),1===this.coeffs.length&&this.coeffs[0].toDecimal()===String(e)},toString:function(){return this.toSymbol().toString()}},Q.prototype.coeffs=function(e,t){t&&!this.isPoly(!0)&&H.error(\"Polynomial expected when requesting coefficients with order\"),e=e||[];var n,r=this.clone().distributeMultiplier();if(r.isComposite())for(var i in r.symbols){i=r.symbols[i];i.isComposite()?i.clone().distributeMultiplier().coeffs(e,t):t?e[i.isConstant()?0:i.power.toDecimal()]=i.multiplier:e.push(i.multiplier)}else t?e[r.isConstant(!0)?0:r.power.toDecimal()]=r.multiplier:r.group===L&&r.isImaginary()?(n=new Q(r.multiplier),r.each(function(e){(e.isConstant(!0)||e.imaginary)&&(n=H.multiply(n,e))}),e.push(n)):e.push(r.multiplier);if(t)for(var s=0;s<e.length;s++)void 0===e[s]&&(e[s]=new Q(0));return e},Q.prototype.tBase=function(e){if(void 0===e)throw new Error(\"Symbol.tBase requires a map object!\");for(var t=[],n=this.collectSymbols(null,null,null,!0),r=n.length,i=0;i<r;i++){var s=n[i],o=s.group,a=new J(s.multiplier,[],e);if(o===L)for(var u in s.symbols){var l=s.symbols[u];a.terms[e[u]]=l.power}else a.terms[e[s.value]]=s.power;t.push(a.fill()),a.updateCount()}return t},Q.prototype.altVar=function(e){var t=this.multiplier.toString(),n=this.power.toString();return(\"1\"===t?\"\":t+\"*\")+e+(\"1\"===n?\"\":\"^\"+n)},Q.prototype.sameVars=function(e){if(!this.symbols&&this.group!==e.group)return!1;for(var t in this.symbols){var n=this.symbols[t],t=e.symbols[t];if(!t)return!1;if(n.value!==t.value)return!1}return!0},Q.prototype.groupTerms=function(r){var i,s,o;r=String(r);var a=[];return this.each(function(e){if(e.group===y){o=e.groupTerms(r);for(var t=0;t<o.length;t++){var n=o[t];n&&(a[t]=n)}}else i=Z.Utils.decompose_fn(e,r,!0),s=i.x.value===r?Number(i.x.power):0,a[s]=H.add(a[s]||new Q(0),i.a)}),a},Q.prototype.collectFactors=function(){var t=[];return this.group===L?this.each(function(e){t.push(e.clone())}):t.push(this.clone()),t},O.prototype.getNumberSymbolics=function(){var t=0;return this.each(function(e){e.isConstant(!0)||t++}),t},O.prototype.add=function(e){if(e.equals(0))return this;if(e.equals(-1)&&0<this.length){var t=Z.Utils.firstObject(this.factors,null,!0);return this.add(H.symfunction(Z.Settings.PARENTHESIS,[t.obj]).negate()),delete this.factors[t.key],this.length--,this}if(e.group===L){var n=this;e.multiplier.equals(1)||n.add(new Q(e.multiplier)),e.each(function(e){n.add(e)})}else{this.preAdd&&(e=this.preAdd(e));t=(e=this.pFactor?H.pow(e,new Q(this.pFactor)):e).isConstant();if(t&&e.equals(1))return this;t=t?e.value:e.text();t in this.factors?(this.factors[t]=H.multiply(this.factors[t],e),this.factors[t].equals(1)&&(delete this.factors[t],this.length--)):(this.factors[t]=e,this.length++)}return this},O.prototype.toSymbol=function(){for(var e=new Q(1),t=Object.values(this.factors).sort(function(e,t){return e.group>t.group}),n=0,r=t.length;n<r;n++)var i=t[n],i=i.power.equals(1)&&\"\"!==i.fname?H.symfunction(Z.PARENTHESIS,[i]):i,e=H.multiply(e,i);return e=\"\"===e.fname?Q.unwrapPARENS(e):e},O.prototype.merge=function(e){for(var t in e)t in this.factors?this.factors[t]=H.multiply(this.factors[t],e[t]):this.factors[t]=e[t];return this},O.prototype.each=function(e){for(var t in this.factors){var n=this.factors[t];n.fname===Z.PARENTHESIS&&n.isLinear()&&(n=n.args[0]),e.call(this,n,t)}return this},O.prototype.count=function(){return I(this.factors).length},O.prototype.clean=function(){try{var e=Z.Settings.CONST_HASH;this.factors[e].lessThan(0)&&(this.factors[e].equals(-1)?delete this.factors[e]:this.factors[e].negate(),this.each(function(e){e.negate()}))}catch(e){}},O.prototype.toString=function(){return this.toSymbol().toString()},J.prototype.updateCount=function(){this.count=this.count||0;for(var e=0;e<this.terms.length;e++)this.terms[e].equals(0)||this.count++;return this},J.prototype.getVars=function(){for(var e=[],t=0;t<this.terms.length;t++){var n=this.terms[t];this.getRevMap();n.equals(0)||e.push(this.rev_map[t])}return e.join(\" \")},J.prototype.len=function(){return void 0===this.count&&this.updateCount(),this.count},J.prototype.toSymbol=function(e){e=e||this.getRevMap();for(var t=new Q(this.coeff),n=0;n<this.terms.length;n++){var r=e[n],i=this.terms[n];i.equals(0)||r===Y||((r=new Q(r)).power=i,t=H.multiply(t,r))}return t},J.prototype.getRevMap=function(){if(this.rev_map)return this.rev_map;var e,t={};for(e in this.map)t[this.map[e]]=e;return this.rev_map=t},J.prototype.generateImage=function(){return this.image=this.terms.join(\" \"),this},J.prototype.getImg=function(){return this.image||this.generateImage(),this.image},J.prototype.fill=function(){for(var e=this.map.length,t=0;t<e;t++)void 0===this.terms[t]?this.terms[t]=new Z.Frac(0):this.sum=this.sum.add(this.terms[t]);return this},J.prototype.divide=function(e){for(var t=this.coeff.divide(e.coeff),n=this.terms.length,r=new J(t,[],this.map),i=0;i<n;i++)r.terms[i]=this.terms[i].subtract(e.terms[i]),r.sum=r.sum.add(r.terms[i]);return r},J.prototype.multiply=function(e){for(var t=this.coeff.multiply(e.coeff),n=this.terms.length,r=new J(t,[],this.map),i=0;i<n;i++)r.terms[i]=this.terms[i].add(e.terms[i]),r.sum=r.sum.add(r.terms[i]);return r},J.prototype.isZero=function(){return this.coeff.equals(0)},J.prototype.toString=function(){return\"{ coeff: \"+this.coeff.toString()+\", terms: [\"+this.terms.join(\",\")+\"]: sum: \"+this.sum.toString()+\", count: \"+this.count+\"}\"},Z.Utils.toMapObj=function(e){for(var t=0,n={},r=0;r<e.length;r++){var i=e[r];void 0===n[i]&&(n[i]=t,t++)}return n.length=t,n},Z.Utils.filledArray=function(e,t,n){for(var r=[];t--;)r[t]=n?new n(e):e;return r},Z.Utils.arrSum=function(e){for(var t=0,n=e.length,r=0;r<n;r++)t+=e[r];return t},Z.Utils.haveIntersection=function(e,t){var n;return t.length>e.length&&(n=t,t=e,e=n),e.some(function(e){return-1<t.indexOf(e)})},Z.Utils.subFunctions=function(e,r){r=r||{};var i=[];return e.each(function(e){var t,n;e.group===C||e.previousGroup===C?(t=Z.Utils.text(e,\"hash\"),(n=r[t])?i.push(e.altVar(n)):(n=e.fname+I(r).length,r[t]=n,i.push(e.altVar(n)))):e.group===L||e.group===y||e.group===X?i.push(Z.Utils.subFunctions(e,r)):i.push(e.text())}),e.group===X||e.group===y?e.altVar(Z.Utils.inBrackets(i.join(\"+\"))):e.group===L?e.altVar(Z.Utils.inBrackets(i.join(\"*\"))):e.text()},Z.Utils.getFunctionsSubs=function(e){var t,n={};for(t in e)n[e[t]]=H.parse(t);return n};var R=Z.Algebra={version:\"1.4.6\",proots:function(e,l){l=l||7;function t(e,t,n){for(var r=function(e,t){var n=e.slice(0);if(e.unshift(t),100<t)throw new Z.exceptions.ValueLimitExceededError(\"This utility accepts polynomials of degree up to 100. \");var r=[],e={};for(e.Degree=t,p=0;p<t;p++)r.push(0);var i=r.slice(0);function V(e,t,n,r,i,s){i[0]=s.b=r[0],i[1]=s.a=-(t*s.b)+r[1];for(var o=2;o<e;o++)i[o]=-(t*s.a+n*s.b)+r[o],s.b=s.a,s.a=i[o]}function H(e,t,n,r,i,s,o,a,u){var l=new Object,c=3;return l.b=l.a=0,V(t,o,a,s,u,l),i.c=l.a,i.d=l.b,Math.abs(i.c)<=100*e*Math.abs(s[t-1])&&Math.abs(i.d)<=100*e*Math.abs(s[t-2])||(i.h=a*r,Math.abs(i.d)>=Math.abs(i.c)?(c=2,i.e=n/i.d,i.f=i.c/i.d,i.g=o*r,i.a3=i.e*(i.g+n)+i.h*(r/i.d),i.a1=-n+i.f*r,i.a7=i.h+(i.f+o)*n):(c=1,i.e=n/i.c,i.f=i.d/i.c,i.g=i.e*o,i.a3=i.e*n+(i.g+i.h/i.c)*r,i.a1=-(n*(i.d/i.c))+r,i.a7=i.g*i.d+i.h*i.f+n)),c}function j(e,t,n,r,i,s,o,a,u){if(3!=n)if(r=1==n?i:r,Math.abs(s.a1)>10*e*Math.abs(r)){s.a7/=s.a1,s.a3/=s.a1,o[0]=u[0],o[1]=-(u[0]*s.a7)+u[1];for(l=2;l<t;l++)o[l]=-(u[l-1]*s.a7)+a[l-2]*s.a3+u[l]}else{o[0]=0,o[1]=-(u[0]*s.a7);for(l=2;l<t;l++)o[l]=-(u[l-1]*s.a7)+a[l-2]*s.a3}else{o[1]=o[0]=0;for(var l=2;l<t;l++)o[l]=a[l-2]}}function X(e,t,n,r,i,s,o,a,u,l,c,p,f,h,m,g,d){var v;t.b=t.a=0,3!=e&&(a=2!=e?(v=n+f*o+p*l,a+(f+h*l)*u):(v=(n+c)*l+p,(l+f)*a+h*u),u=-(m[g-1]/d[g]),0!=(v=-(i=h*(m=-(m[g-2]+u*d[g-1])/d[g])*r-((d=u*s)+(g=u*u*i)))+a+u*v)&&(t.a=-(f*(g+d)+h*(u*r+m*s))/v+f,t.b=h*(1+i/v)))}function $(e,t,n,r){var i,s,o;(r.sr=r.si=r.lr=r.li=0)!=e?0!=n?(i=t/2,s=Math.abs(i)<Math.abs(n)?(o=-(o=0<=n?e:-e)+i*(i/Math.abs(n)),Math.sqrt(Math.abs(o))*Math.sqrt(Math.abs(n))):(o=-e/i*(n/i)+1,Math.sqrt(Math.abs(o))*Math.abs(i)),0<=o?(r.lr=(-i+(s=0<=i?-s:s))/e,r.sr=0!=r.lr?n/r.lr/e:r.sr):(r.lr=r.sr=-i/e,r.si=Math.abs(s/e),r.li=-r.si)):r.lr=-t/e:r.sr=0!=t?-n/t:r.sr}function G(e,t,n,r,i,s,o,a,u,l,c,p){var f,h,m,g,d,v,w,y,b,S,M,N,E,q,x,A,C,L,I,U,_,O,R,T,P,k=new Object,D=new Object,F=new Array(t),B=new Array(t),G=1;for(p.NZ=0,g=m=.25,d=r,y=i,k.b=k.a=0,V(u,c,i,a,l,k),f=k.a,h=k.b,D.h=D.g=D.f=D.e=D.d=D.c=D.a7=D.a3=D.a1=0,R=H(e,o,f,h,D,s,c,i,F),U=0;U<n;U++){if(L=1,j(e,o,R,f,h,D,s,F,l),X(R=H(e,o,f,h,D,s,c,i,F),k,f,D.a1,D.a3,D.a7,h,D.c,D.d,D.f,D.g,D.h,c,i,s,o,a),x=k.a,C=A=k.b,S=0!=s[o-1]?-(a[o]/s[o-1]):0,M=E=1,0!=U&&3!=R&&(T=(q=(E=0!=C?Math.abs((C-y)/C):E)<w?E*w:1)<g?1:0,(_=(N=(M=0!=S?Math.abs((S-d)/S):M)<v?M*v:1)<m?1:0)||T)){for(I=0;I<o;I++)B[I]=s[I];for(b=S,O=P=0;;){if(!L||0!=(L=0)||!_||T&&!(N<q)){if(!function(e,t,n,r,i,s,o,a,u,l,c,p){var f,h,m,g,d,v,w,y,b,S=new Object,M=0,N=0;n.NZ=0,g=r,v=i;do{if(S.li=S.lr=S.si=S.sr=0,$(1,g,v,S),n.szr=S.sr,n.szi=S.si,n.lzr=S.lr,n.lzi=S.li,Math.abs(Math.abs(n.szr)-Math.abs(n.lzr))>.01*Math.abs(n.lzr))break;for(V(o,g,v,u,s,a),w=Math.abs(-(n.szr*a.b)+a.a)+Math.abs(n.szi*a.b),y=Math.sqrt(Math.abs(v)),f=2*Math.abs(s[0]),d=-(n.szr*a.b),b=1;b<t;b++)f=f*y+Math.abs(s[b]);if(w<=20*(f=(9*(f=f*y+Math.abs(d+a.a))+2*Math.abs(d)-7*(Math.abs(a.a+d)+y*Math.abs(a.b)))*e)){n.NZ=2;break}if(20<++M)break;if(2<=M&&m<=.01&&h<=w&&!N){for(V(o,g-=g*(m=m<e?Math.sqrt(e):Math.sqrt(m)),v+=v*m,u,s,a),b=0;b<5;b++)j(e,t,H(e,t,a.a,a.b,c,p,g,v,l),a.a,a.b,c,p,l,s);N=1,M=0}}while(h=w,j(e,t,H(e,t,a.a,a.b,c,p,g,v,l),a.a,a.b,c,p,l,s),X(H(e,t,a.a,a.b,c,p,g,v,l),a,a.a,c.a1,c.a3,c.a7,a.b,c.c,c.d,c.f,c.g,c.h,g,v,p,t,u),d=a.a,0!=(w=a.b)&&(m=Math.abs((-v+w)/w),g=d,v=w),0!=w)}(e,o,p,x,A,l,u,k,a,F,D,s),f=k.a,h=k.b,0<p.NZ)return;if(G=P=1,g*=.25,O||!_)G=0;else for(I=0;I<o;I++)s[I]=B[I]}if(0!=G){if(k.a=b,G=function(e,t,n,r,i,s,o,a,u){var l,c,p,f,h,m,g,d,v,w,y,b=r-1;for(t.NZ=y=v=0,g=n.a;;){for(m=i[0],o[0]=m,w=1;w<s;w++)o[w]=m=m*g+i[w];for(p=Math.abs(m),f=Math.abs(g),l=.5*Math.abs(o[0]),w=1;w<s;w++)l=l*f+Math.abs(o[w]);if(p<=20*e*(2*l-p)){t.NZ=1,t.szr=g,t.szi=0;break}if(10<++y)break;if(2<=y&&Math.abs(d)<=.001*Math.abs(-d+g)&&h<p){v=1,t.a=g;break}for(h=p,u[0]=c=a[0],w=1;w<r;w++)u[w]=c=c*g+a[w];if(Math.abs(c)>10*Math.abs(a[b])*e)for(d=-m/c,a[0]=o[0],w=1;w<r;w++)a[w]=d*u[w-1]+o[w];else for(a[0]=0,w=1;w<r;w++)a[w]=u[w-1];for(c=a[0],w=1;w<r;w++)c=c*g+a[w];g+=d=Math.abs(c)>10*Math.abs(a[b])*e?-m/c:0}return v}(e,p,k,o,a,u,l,s,F),b=k.a,0<p.NZ)return;if(O=1,m*=.25,0!=G){x=-(b+b),A=b*b;continue}}for(I=0;I<o;I++)s[I]=B[I];if(!T||P)break}V(u,c,i,a,l,k),R=H(e,o,f=k.a,h=k.b,D,s,c,i,F)}y=C,d=S,w=E,v=M}}!function(e,t,n,r){for(var i,s,o,a,u,l,c,p,f,h,m,g,d,v,w=e.Degree,y=.017453292519943295,b=Math.LN2,S=e.Degree+1,M=new Array(S),N=new Array(S),E=new Array(S),q=new Array(S),x=new Object,A=new Object,C=1;i=C,1<(l=1+(C/=2)););var L=Number.MIN_VALUE/i,I=Math.cos(94*y),U=Math.sin(94*y),_=Math.sqrt(.5),O=-_;for(A.NZ=f=0,A.szr=A.szi=A.lzr=A.lzi=0;0==t[w];)n[f]=r[f]=0,w--,f++;for(d=w+1;1<=w;){if(w<=2){w<2?(n[e.Degree-1]=-(t[1]/t[0]),r[e.Degree-1]=0):($(t[x.li=x.lr=x.si=x.sr=0],t[1],t[2],x),n[e.Degree-2]=x.sr,r[e.Degree-2]=x.si,n[e.Degree-1]=x.lr,r[e.Degree-1]=x.li);break}for(a=0,u=Number.MAX_VALUE,R=0;R<d;R++)a<(T=Math.abs(t[R]))&&(a=T),0!=T&&T<u&&(u=T);if(((m=L/u)<=1&&10<=a||1<m&&Number.MAX_VALUE/m>=a)&&(m=0==m?Number.MIN_VALUE:m,m=Math.floor(Math.log(m)/b+.5),1!=(o=Math.pow(2,m))))for(R=0;R<d;R++)t[R]*=o;for(var R=0;R<d;R++)N[R]=Math.abs(t[R]);N[w]=-N[w],g=w-1,T=Math.exp((Math.log(-N[w])-Math.log(N[0]))/w),P=T=0!=N[g]?(P=-N[w]/N[g])<T?P:T:T;do{for(var T,P=.1*(T=P),k=N[0],R=1;R<d;R++)k=k*P+N[R]}while(0<k);0;do{for(var D=k=N[0],R=1;R<w;R++)D=T*D+(k=T*k+N[R])}while(T-=s=(k=T*k+N[w])/D,.005<Math.abs(s/T));for(var F=T,R=1;R<w;R++)M[R]=(w-R)*t[R]/w;for(M[0]=t[0],C=t[w],l=t[g],v=0==M[g]?1:0,h=0;h<5;h++)if(c=M[g],v){for(R=0;R<g;R++)M[f=g-R]=M[f-1];v=(M[0]=0)==M[g]?1:0}else{for(var B=-C/c,R=0;R<g;R++)M[f=g-R]=B*M[f-1]+t[f];M[0]=t[0],v=Math.abs(M[g])<=Math.abs(l)*i*10?1:0}for(R=0;R<w;R++)q[R]=M[R];for(h=1;h<=20;h++){if(p=-U*O+I*_,O=U*_+I*O,G(i,S,20*h,p=F*(_=p),F,M,w,t,d,E,-2*p,A),0!=A.NZ){n[f=e.Degree-w]=A.szr,r[f]=A.szi;for(w=(d-=A.NZ)-1,R=0;R<d;R++)t[R]=E[R];1!=A.NZ&&(n[f+1]=A.lzr,r[f+1]=A.lzi);break}for(R=0;R<w;R++)M[R]=q[R]}if(20<h){e.Degree-=w;break}}}(e,n,i,r);var s=r.length;for(p=0;p<s;p++){var o=b(r[p],l+8),a=b(i[p],l+8);a=2<l-String(a).length?a:i[p];var u=o<0?\"-\":\"\";0===a&&(a=\"\"),0===o&&(o=\"\"),o=1===Math.abs(o)?u+\"i\":o?o+\"*i\":\"\";o=a&&o?a+\"+\"+o:a+o;i[p]=o.replace(/\\+\\-/g,\"-\")}return i}(e,n).concat(s),i=0;i<0;i++)r.unshift(0);return r}var n,s=[];if(e instanceof Q&&e.isPoly()){if(e.distributeMultiplier(),e.group===y&&(n=Z.Utils.arrayMin(I(e.symbols)),n=e.symbols[n].clone().toUnitMultiplier(),e=H.expand(H.divide(e,n)),s.push(0)),e.group===Z.groups.S)return[0];e.group===Z.groups.PL&&(a=I(e.symbols),r=Z.Utils.arrayMin(a),e=Z.PARSER.divide(e,Z.PARSER.parse(e.value+\"^\"+r)));for(var r=I(e.symbols).sort().pop(),i=e.group===Z.groups.PL?e.symbols:e.symbols[r],o=i.group,a=o===j?[i.power.toDecimal()]:I(i.symbols),u=[],c=Z.Utils.arrayMax(a),p=1;p<=c;p++){var f=0;-1!==a.indexOf(p+\"\")&&(f=(o===j?i:i.symbols[p]).multiplier),u.unshift(f)}return u.push(e.symbols[Y].multiplier),i.group===j&&(u[0]=i.multiplier),t(u,0,c)}if(Z.Utils.isArray(e)){for(var h=e,u=[],a=[],m=0,p=0;p<h.length;p++){for(var g=h[p][0],d=h[p][1],v=d-m-1,w=0;w<v;w++)u.unshift(0);u.unshift(g),0!==d&&a.push(d),m=d}return t(u,0,c=Math.max.apply(void 0,a))}throw new Z.exceptions.NerdamerTypeError(\"Cannot calculate roots. Symbol must be a polynomial!\")},roots:function(e){if(e.isConstant(!0,!0))return Z.Utils.nroots(e);e=R.proots(e).map(function(e){return H.parse(e)});return Z.Vector.fromArray(e)},froot:function(a,e,u){return function(e){for(var t=u||Z.Utils.build(Z.Calculus.diff(a.clone())),n=a instanceof Function?a:Z.Utils.build(a),r=!1,i=0;!r;){var s=e-n(e)/t(e),o=Math.abs(s)-Math.abs(e);e=s,Math.abs(o)<1e-12?r=!0:1e4<i&&(r=!(e=null)),i++}return e}(Number(e))},quad:function(e,t,n){function r(e,t,n,r){return H.parse(\"-(\"+t+\"+\"+r+\"*sqrt((\"+t+\")^2-4*(\"+e+\")*(\"+n+\")))/(2*\"+e+\")\")}return[r(e,t,n,1),r(e,t,n,-1)]},sumProd:function(e,t){return R.quad(-t,e,-1).map(function(e){return e.invert()})},coeffs:function(e,t,n){t=String(t),e=H.expand(e),n=n||[new Q(0)],e.group===p&&e.contains(t,!0)&&H.error(\"Unable to get coefficients using expression \"+e.toString());var r,i=$(e);if(1!==i.length||i[0]!==t||e.isImaginary())t||H.error(\"Polynomial contains more than one variable. Please specify which variable is to be used!\"),-1===i.indexOf(t)?n[0]=H.add(e,n[0]):(n=n||[new Q(0)],e.group===L?((r=e.symbols[t])||H.error(\"Expression is not a polynomial!\"),i=Number(r.power),((l=H.divide(e.clone(),r.clone())).contains(t,!0)||i<0||!_(i))&&H.error(\"Expression is not a polynomial!\"),(u=n[i])&&(l=H.add(u,l)),n[i]=l):e.group===X&&e.each(function(e){R.coeffs(e.clone(),t,n)},!0));else for(var s=new W(e).coeffs.map(function(e){return new Q(e)}),o=0,a=s.length;o<a;o++){var u,l=s[o];(u=n[o])&&(l=H.add(u,l)),n[o]=l}for(o=0,a=n.length;o<a;o++)void 0===n[o]&&(n[o]=new Q(0));return n},polyPowers:function(e,t,n){if(n=n||[],(s=e.group)===y&&t===e.value)n=n.concat(I(e.symbols));else if(s===X)for(var r in e.symbols){var i=e.symbols[r],s=i.group,r=i.value;s===j&&t===r?n.push(i.power):s===y||s===X?n=R.polyPowers(i,t,n):s===L&&i.contains(t)?(i=i.symbols[t])&&n.push(i.power):s!==u&&t===r||n.push(0)}else s===L&&e.contains(t)&&n.push(Z.Utils.decompose_fn(e,t,!0).x.power);return Z.Utils.arrayUnique(n).sort()},Factor:{split:function(e){var n=new Q(1),r=new Q(1);return R.Factor.factor(e,new O).each(function(e){var t=H.parse(e);e.isConstant(!0)?n=H.multiply(n,t):r=H.multiply(r,t)}),[n,r]},mix:function(e,t){for(var n=I(e),r=n.length,i=[],s=0;s<r;s++){for(var o=n[s],a=e[o],u=i.length,l=0;l<u;l++){var c=i[l]*o;i.push(c),t&&i.push(-c)}for(l=1;l<=a;l++)i.push(Math.pow(o,l))}return i},common:function(e,t){try{if(e.group===X){for(var n=H.expand(e.clone(),!0).collectSymbols(null,null,function(e,t){return(t.length||1)-(e.length||1)}),r={},i=[],s=0;s<n.length;s++){var o=n[s];i.push(o.multiplier.clone()),o.each(function(e){var t=Number(e.power);if(isNaN(t))throw new Error(\"exiting\");e.value in r?(t<r[e.value][0]&&(r[e.value][0]=t),r[e.value][1].push(e)):r[e.value]=[t,[e]]})}var a,u=new Q(1);for(a in r)r[a][1].length===n.length&&(u=H.multiply(u,H.pow(new Q(a),new Q(r[a][0]))));var l=Z.Math2.QGCD.apply(null,i);if(!l.equals(1)){t.add(new Q(l));for(s=0;s<n.length;s++)n[s].multiplier=n[s].multiplier.divide(l)}if(!u.equals(1)){t.add(u),e=new Q(0);for(s=0;s<n.length;s++)e=H.add(e,H.divide(n[s],u.clone()))}}}catch(e){}return e},zeroes:function(e,t){function n(){throw new Z.exceptions.ValueLimitExceededError(\"Exiting\")}try{for(var r,i,s,o=(e=H.expand(e.clone())).toString(),a=$(e),u=new Q(0),l=[],c=[],p=0,f=a.length;p<a.length;p++){for(var h={},m=0;m<f;m++)p!==m&&(h[a[m]]=0);var g,d=(g=H.parse(o,h)).power;_(d)||n(),l.push(g),c.push(g.power)}Z.Utils.allSame(c)?(i=e.length,2===(s=l.length)&&(r=new z(c[0]/(i-1))),3===s&&(r=new z(c[0]/Math.round((Math.sqrt(8*i-1)-3)/2)))):r=Z.Math2.QGCD.apply(null,c),_(r)||n();for(p=0;p<l.length;p++){var v=l[p],w=v.power.clone().divide(r);v.multiplier=new z(Math.pow(v.multiplier,1/w)),v.power=r.clone(),u=H.add(u,v)}if(u.group!==X)return e;for(;;){var y=R.div(e.clone(),u.clone());if(!y[1].equals(0))break;if(e=y[0],t.add(u.clone()),e.equals(1))break}}catch(o){}return e},factor:function(e,t){if(e.isConstant())return Z.Math2.factor(e);var n,r,i=H.parse(e),t=R.Factor._factor(i,t);return t.equals(e)||t.group===L&&(n=new Q(1),e=H.parse(t.power),r=H.parse(t.multiplier),t.toUnitMultiplier(),t.multiplier.lessThan(0)&&(n.negate(),t.negate()),t.each(function(e){e=H.parse(R.Factor._factor(e));e.group===L?(r=H.multiply(r,Q.create(e.multiplier)),e.each(function(e){e=H.parse(R.Factor._factor(e));n=H.multiply(n,e),e.group===L&&(r=H.multiply(r,Q.create(e.multiplier)))})):n=H.multiply(n,e)}),t=H.pow(H.multiply(r,n),e)),t},quadFactor:function(e,t){if(e.isPoly()&&R.degree(e.equals(2))){var n=Z.Utils.variables(e)[0],r=R.coeffs(e,n),i=R.Factor._factor(r[2].clone());if(i.group===L){var s=i.collectSymbols();if(2<s.length)return e;var o=H.multiply(H.parse(r[0]),H.parse(s[0])),a=H.parse(r[1]).negate(),i=H.parse(s[1]),o=R.quad(i,a,o).filter(function(e){if(Z.Utils.isInt(e))return e});1===o.length&&(o=o[0],r=H.divide(r[0],H.parse(o)),Z.Utils.isInt(r)&&(t.add(H.parse(l(\"({0})*({1})+({2})\",s[1],n,r))),t.add(H.parse(l(\"({0})*({1})+({2})\",s[0],n,o))),e=new Q(1)))}}return e},cubeFactor:function(e,t){var n,r,i,s,o,a;return!e.isComposite()||2===(a=e.collectSymbols()).length&&(n=a[0].sign(),r=a[0].clone().abs(),i=a[1].sign(),s=a[1].clone().abs(),r.isCube()&&s.isCube()&&(n<i&&([n,i]=[i,n],[r,s]=[s,r]),o=H.parse(r.getNth(3)),a=H.parse(s.getNth(3)),o=H.multiply(H.expand(H.pow(r.clone().toUnitMultiplier(),H.parse(\"1/3\"))),o),a=H.multiply(H.expand(H.pow(s.clone().toUnitMultiplier(),H.parse(\"1/3\"))),a),1===n&&-1===i?(t.add(H.parse(l(\"(({0})-({1}))\",o,a))),t.add(H.parse(l(\"(({0})^2+({0})*({1})+({1})^2)\",o,a))),e=Q(1)):1===n&&1===i&&(t.add(H.parse(l(\"(({0})+({1}))\",o,a))),t.add(H.parse(l(\"(({0})^2-({0})*({1})+({1})^2)\",o,a))),e=Q(1)))),e},_factor:function(e,t){var n;e.group;if(e.group===C){var r=e.args[0];if(r.group===j&&r.isSimple())return e}else if(e.group===j&&e.isSimple())return e;e.group===X&&(e.distributeMultiplier(!0),n=new Q(0),e.each(function(e){(e.group===X&&e.power.greaterThan(1)||e.group===L)&&(e=H.expand(e)),n=H.add(n,e)}),n.power=e.power,e=n);r=(e=e.group===C&&\"sqrt\"!==e.fname?Z.Utils.evaluate(e):e).clone();try{if(e.group===L){var i=H.parse(e.power),s=R.Simplify.strip(e.getDenom()),o=R.Simplify.strip(e.getNum()),a=s.pop(),u=o.pop();if(u.equals(e))return e;var l=R.Factor.factor(u),c=R.Factor.factor(a),p=R.Simplify.unstrip(o,l),f=R.Simplify.unstrip(s,c);return A=H.divide(p,f)}if(e.group===j)return e;if(e.isConstant())return e.equals(1)?e.clone():Z.Math2.factor(e);i=e.power.clone();if(!_(i)||i.lessThan(0)&&e.group===C)return e;var h=i.sign();e.toLinear(),t=t||new O;var m={};e=H.parse(Z.Utils.subFunctions(e,m)),0<I(m).length&&(t.preAdd=function(e){return H.parse(e,Z.Utils.getFunctionsSubs(m))}),e.isLinear()||(t.pFactor=e.power.toString(),e.toLinear());var g=$(e);e.isImaginary()&&g.push(Z.Settings.IMAGINARY);var d=1<g.length;if(d){var v=!0,w=!0;if(e.each(function(e){e.group!==j&&(v=!1),e.multiplier.equals(1)||(w=!1)}),v&&w)return H.pow(H.parse(e,Z.Utils.getFunctionsSubs(m)),H.parse(i))}var y=new O;e=R.Factor.coeffFactor(e,y),y.each(function(e){U(i)&&e.lessThan(0)&&e.negate(),h<0&&e.invert(),t.add(e)});var b=new O;if(e=R.Factor.powerFactor(e,b),b.each(function(e){h<0&&e.invert(),t.add(e)}),d)e=R.Factor.cubeFactor(e,t),e=R.Factor.mfactor(e,t),t.each(function(e){h<0&&e.power.negate()});else{var S=g[0];e=R.Factor.squareFree(e,t,S);var M=new O;e=R.Factor.trialAndError(e,M,S);var N,E=M.toSymbol();if(E.equals(r))return E;for(N in M.factors){var q=M.factors[N];t.add(H.pow(q,H.parse(i)))}e.equals(r)&&(e=R.Factor.quadFactor(e,t))}e=H.parse(e,Z.Utils.getFunctionsSubs(m));var x=1===t.length;t.add(H.pow(e,H.parse(i)));var A=t.toSymbol();return A=x&&e.equals(1)&&A.isLinear()?H.pow(A,H.parse(i)):A}catch(e){return r}},reduce:function(e,t){if(e.group===X&&2===e.length){var n=e.collectSymbols().sort(function(e,t){return t.multiplier-e.multiplier});if(n[0].power.equals(n[1].power)){var r=H.parse(n[0].power),i=n[0].clone().toLinear(),s=n[1].clone().toLinear();t.add(H.add(i.clone(),s.clone())),s.negate();for(var o=Number(r),a=new Q(0),u=1;u<=o;u++)var l=H.pow(i.clone(),H.subtract(r.clone(),new Q(u))),c=H.pow(s.clone(),H.subtract(new Q(u),new Q(1))),a=H.add(a,H.multiply(l,c));return a}}return e},squareFree:function(e,t,n){if(e.isConstant()||e.group===j)return e;var r=new W(e,n).squareFree(),n=r[2];if(1===n)return e;e=r[1].toSymbol();return e.power=e.power.multiply(new z(n)),t.add(R.Factor.factor(e)),R.Factor.squareFree(r[0].toSymbol(),t)},powerFactor:function(e,t){if(e.group!==y||e.previousGroup===p)return e;var n=I(e.symbols);if(!Z.Utils.allNumeric(n))return e;var n=Z.Utils.arrayMin(n),r=new Q(0),i=H.parse(e.value+\"^\"+n);return e.each(function(e){e=H.divide(e,i.clone()),r=H.add(r,e)}),t.add(i),r},coeffFactor:function(e,t){var n,r,i,s;return e.isComposite()&&((n=Z.Math2.QGCD.apply(null,e.coeffs())).equals(1)?((r=function(e){var t;return e.group===L?(t=0,e.each(function(e){t+=e.power})):t=Number(e.power),t})(s=(i=e.collectSymbols(null,null,null,!0).sort(function(e,t){return e.isConstant(!0)?1:t.power-e.power}))[0])>r(i[1])||i[1].isConstant(!0))&&s.multiplier.lessThan(0)&&(t.add(new Q(-1)),e.each(function(e){e.negate()},!0)):(e.each(function(e){e.isComposite()?e.each(function(e){e.multiplier=e.multiplier.divide(n)}):e.multiplier=e.multiplier.divide(n)}),e.updateHash()),t&&t.add(new Q(n))),e},trialAndError:function(e,t,n){var r=e.clone();try{var i=[];if(e.isConstant()||e.group===j)return e;for(var s=new W(e,n),o=s.coeffs[0],a=Z.Math2.ifactor(o),u=R.proots(e),l=0;l<u.length;l++){var c=u[l],p=1;if(!isNaN(c)){for(var f in a){var h=Z.Utils.round(Math.log(f)/Math.log(Math.abs(c)),8);if(_(h)){c=f,p=h;break}}var m=new z(c),g=[new z(m.num).negate()];g[p]=new z(m.den);var d=W.fromArray(g,s.variable).fill(),v=s.divide(d);v[1].equalsNumber(0)&&(s=v[0],i.push(d.toSymbol()))}}return s.equalsNumber(1)||(s=R.Factor.search(s,t)),i.forEach(function(e){t.add(e)}),s.toSymbol()}catch(e){return r}},search:function(i,s,o){o=o||10;function e(e,t,n,r){if((n=W.fit(e,t,n,o,r,a))&&1<n.coeffs.length){r=i.divide(n);if(r[1].equalsNumber(0))return s.add(n.toSymbol()),[r[0],n]}return null}var a=i.variable,t=i.coeffs[0],n=Z.Math2.ifactor(t),r=i.lc(),u=Z.Math2.ifactor(r),l=i.sub(o),c=Z.Math2.ifactor(l),p=R.Factor.mix(c,l<0),f=Math.ceil(i.coeffs.length/2),h=r.lessThan(0),m=t.lessThan(0);for(n[u[1]=1]=1;f--;)for(var g in u)for(var d in n)for(var v=0;v<p.length;v++){var w=e(g,d,p[v],f);if(w)return i=w[0],i=!Z.Utils.isPrime(i.sub(o))?R.Factor.search(i,s):i;w||(h&&m?w=e(-g,-d,p[v],f):h?w=e(-g,d,p[v],f):m&&(w=e(g,-d,p[v],f)))}return i},mSqfrFactor:function(e,t){if(e.group!==C)for(var n=$(e).reverse(),r=0;r<n.length;r++)do{if(n[r]!==e.value){var i=Z.Calculus.diff(e,n[r]),s=R.Factor.coeffFactor(i);if(s.equals(0))break;var o=!0;if(s.isConstant()&&e.isComposite()&&e.each(function(e){e.multiplier%s!=0&&(o=!1)},!0),o){var a=R.div(e,s.clone()),u=a[1].equals(0);if(e.equals(a[0])&&a[1].equals(0))break;if(a[0].isConstant()){t.add(a[0]);break}}else u=!1;u&&(t.add(a[0]),e=s)}else t.add(e),e=new Q(1)}while(u);return e},sqdiff:function(e,t){if(e.isConstant(\"all\"))return e;try{var n,r,i,s,o,a=function(e){return Z.Utils.block(\"POSITIVE_MULTIPLIERS\",function(){return Q.unwrapPARENS(f.sqrt(f.abs(e)))},!0)},u=Z.Utils.separate(e.clone()),l=[];for(n in u)\"constants\"!==n&&l.push(u[n]);if(l.sort(function(e,t){return t.power-e.power}),2===l.length){if(o=l.pop(),r=l.pop(),U(o.power)&&U(r.power)&&o.sign()===r.sign()&&o.group===j&&r.group===j)throw new Error(\"Unable to factor\");o.isComposite()&&r.power.equals(2)?(r=a(r),(i=R.Factor.factor(H.add(o,u.constants))).power.equals(2)&&(i.toLinear(),t.add(H.subtract(i.clone(),r.clone())),t.add(H.add(i,r)),e=new Q(1))):(o=o.powSimp(),r=r.powSimp(),o.group!==j&&\"\"!==o.fname||!o.power.equals(2)||r.group!==j&&\"\"!==r.fname||!r.power.equals(2)||u.constants||(o.multiplier.lessThan(0)&&(s=r,r=o,o=s),o.multiplier.greaterThan(0)&&(o=a(o),r=a(r)),t.add(H.subtract(o.clone(),r.clone())),t.add(H.add(o,r)),e=new Q(1)))}}catch(e){}return e},mfactor:function(t,e){if(t.group===C){var n,r;\"sqrt\"===t.fname?(n=new O,r=R.Factor.common(t.args[0].clone(),n),r=R.Factor.coeffFactor(r,n),t=H.multiply(H.symfunction(\"sqrt\",[r]),H.parse(t.multiplier)),n.each(function(e){t=H.multiply(t,H.parse(Z.Utils.format(\"sqrt({0})\",e)))})):e.add(t)}else{t=R.Factor.mSqfrFactor(t,e);for(var i,s=$(t),o=t.collectSymbols().map(function(e){return Q.unwrapSQRT(e)}),a={},u={},l=s.length,c=o.length,p=0;p<l;p++){var f=s[p];a[f]=new Q(0);for(var h=0;h<c;h++){var m,g=o[h];g.contains(f)&&(m=(g.value===f?g:g.symbols[f]).power.toDecimal(),(!u[f]||m<u[f])&&(u[f]=m),a[f]=H.add(a[f],g.clone()))}}for(i in a){var d=H.parse(i+\"^\"+u[i]),v=H.divide(a[i],d),w=H.expand(v);if(w.equals(1))break;v=R.div(t.clone(),w);if(v[0].equals(0))break;if(v[1].equals(0)){var y=!1;if(v[0].each(function(e){_(e.multiplier)||(y=!0)}),y){v[1]=H.expand(H.multiply(v[1],w));break}}w=_(w)&&w.lessThan(0);if(v[1].equals(0)&&!w){w=R.div(t.clone(),v[0].clone());if((d=w[0]).equals(0))return t;if(t=w[1],d.equals(-1)&&!t.equals(0))return t;w=v[0];if(t.equals(w)){v=R.Factor.reduce(w,e);return t.equals(v)?v:R.Factor.mfactor(v,e)}return(e.add(w),t.equals(0))?d:d.isConstant(\"all\")?(e.add(d),d):R.Factor.mfactor(d,e)}}}return t=R.Factor.sqdiff(t,e),t=R.Factor.zeroes(t,e)}},allLinear:function(e){for(var t=e.length,n=0;n<t;n++)if(!R.isLinear(e[n]))return!1;return!0},isLinear:function(e){var t=!1,n=e.group;if(n===y||n===X)for(var r in t=!0,e.symbols){var i=e.symbols[r],r=i.group;if(r!==C&&r!==p||(t=!1),r===L)t=1===$(i).length;else if(r===y||r===X)t=R.isLinear(i);else if(i.group!==u&&\"1\"!==i.power.toString()){t=!1;break}}else n===j&&1===e.power&&(t=!0);return t},gcd:function(){var e=1===arguments.length&&arguments[0]instanceof Z.Vector?arguments[0].elements:Z.Utils.arguments2Array(arguments);if(0===e.length)return new Q(1);if(1===e.length)return e[0];for(var t=[],n=!1,r=0;r<e.length;r++)if(e[r].group===C&&\"gcd\"===e[r].fname)(e=e.concat(arguments[r].args)).splice(r,1);else{var i=$(e[r]);if(Z.Utils.haveIntersection(i,t)){n=!0;break}t=t.concat(i)}if(n||0===t.length){if(e.every(function(e){return e.getDenom().equals(1)})){for(var s=e[0],r=1;r<e.length;r++)s=R.gcd_(e[r],s);return s}return H.divide(R.gcd.apply(null,e.map(function(e){return e.getNum()})),R.lcm.apply(null,e.map(function(e){return e.getDenom()})))}return H.symfunction(\"gcd\",e)},gcd_:function(e,t){if(e.group!==C&&e.group!==c||(e=Z.Utils.block(\"PARSE2NUMBER\",function(){return H.parse(e)})),t.group===C&&(t=Z.Utils.block(\"PARSE2NUMBER\",function(){return H.parse(t)})),e.isConstant()&&t.isConstant())return new Q(Z.Math2.QGCD(new z(+e),new z(+t)));var n=H.multiply(e.getDenom()||new Q(1),t.getDenom()||new Q(1)).invert();if(e=H.multiply(e.clone(),n.clone()),t=H.multiply(t.clone(),n.clone()),e=H.expand(e),t=H.expand(t),e.group===L||t.group===L){var r=H.divide(e.clone(),t.clone());if(!(u=H.multiply(t.clone(),r.getDenom().invert())).equals(1))return u}if(e.group===p||t.group===p){var r=new Q(Z.Math2.GCD(e.multiplier,t.multiplier)),i=R.gcd_(e.value===Y?new Q(1):H.parse(e.value),t.value===Y?new Q(1):H.parse(t.value)),s=R.gcd_(H.parse(e.power),H.parse(t.power));return H.multiply(r,H.pow(i,s))}e.length<t.length&&(u=e,e=t,t=u);i=$(e),s=$(t);if(i.length===s.length&&1===i.length&&i[0]===s[0]||1===i.length&&0===s.length||0===i.length&&1===s.length)return e=new W(e),t=new W(t),H.divide(e.gcd(t).toSymbol(),n);var o,a=[];for(e.each(function(e){a.push(e.multiplier)}),t.each(function(e){a.push(e.multiplier)});!t.equals(0);){var u=t.clone();if(e=e.clone(),o=R.div(e,u),t=o[1],o[0].equals(0))return H.divide(new Q(Z.Math2.QGCD(e.multiplier,t.multiplier)),n);e=u}var l=Z.Math2.QGCD.apply(void 0,a);return l.equals(1)||e.each(function(e){e.multiplier=e.multiplier.divide(l)}),!e.equals(1)||e.isConstant()||t.isConstant()?H.divide(e,n):H.divide(H.symfunction(\"gcd\",arguments),n)},lcm:function(){var e;1===arguments.length?arguments[0]instanceof Z.Vector?e=arguments[0].elements:H.error(\"lcm expects either 1 vector or 2 or more arguments\"):e=Z.Utils.arguments2Array(arguments);var t=e.reduce(function(e,t){return H.multiply(e,t.clone())},new Q(1)),n=function(e,t){t=Number(t);for(var n,r,i=[],s=Math.pow(2,e.length),o=t;o<s;o++){for(n=[],r=e.length-1;0!=(o&1<<r)&&n.push(e[r]),r--;);n.length===t&&i.push(n)}return i}(arguments,arguments.length-1).map(function(e){return e.reduce(function(e,t){return H.multiply(e,t.clone())},new Q(1))}),n=e.every(function(e){return Z.Utils.isVariableSymbol(e)})?H.symfunction(\"gcd\",Z.Utils.arrayUnique(n)):R.gcd.apply(null,n);return H.divide(t,n)},divide:function(e,t){var n=Z.Algebra.Factor.factor(e.clone()),r=n.getDenom();return r.isConstant(\"all\")?r=new Q(1):e=H.expand(Q.unwrapPARENS(H.multiply(n,r.clone()))),e=R.div(e,t),t=H.divide(e[1],t),H.divide(H.add(e[0],t),r)},div:function(e,t){var n,r,i=[new Q(0),e.clone()];try{if(t.isConstant(\"all\"))return e.each(function(e){e.multiplier=e.multiplier.divide(t.multiplier)}),[e,new Q(0)];if(e=H.expand(e),t=H.expand(t),e.group===j&&t.group===X){var s=e.value,o=Z.Utils.decompose_fn(t.clone(),s,!0);if(e.isLinear()&&o.x&&o.x.isLinear()&&t.isLinear()){var a=Q.create(e.multiplier);return[H.divide(a.clone(),o.a.clone()),H.divide(H.multiply(a,o.b),o.a).negate()]}}if(e.group===j&&t.group===j){var u=H.divide(e.clone(),t.clone());return u.isConstant()?[u,new Q(0)]:[new Q(0),e.clone()]}var l,c,p=e.hasFunc(),f=t.hasFunc(),h=!1;(p||f)&&(h=!0,l={},e=H.parse(Z.Utils.subFunctions(e,l)),t=H.parse(Z.Utils.subFunctions(t,l)),c=Z.Utils.getFunctionsSubs(l));var m=Z.Utils.arrayUnique($(e).concat($(t)));if((e.isImaginary()||t.isImaginary())&&m.push(Z.Settings.IMAGINARY),1===m.length)var g=(F=new W(e).divide(new W(t)))[0].toSymbol(),d=F[1].toSymbol();else{m.push(Y);var v=function(e){for(var t=new Q(0),n=0;n<e.length;n++)var r=e[n].toSymbol(),t=H.add(t,r);return t},b=function(e,t){var n,r=Math.max.apply(null,e.terms),i=0;if(!t)for(var s=0;s<e.terms.length;s++)if(e.terms[s].equals(r)&&(n=s,i++),1<i)return;if(t)for(s=0;s<e.terms.length;s++)if(e.terms[s].equals(r)){n=s;break}return[r,n,e]},S=function(e,t){var n=e[t=t||0],r=e.length;if(n){for(var i,s=b(n),o=t+1;o<r;o++){var a=e[o],u=n.sum.equals(a.sum);if(!u&&s)break;if(u){for(var l,c,p,f,h=n.terms.length,m=0;m<h;m++){var g=n.terms[m],d=a.terms[m];void 0!==l&&!g.greaterThan(l)||(l=g,p=m),void 0!==c&&!d.greaterThan(c)||(c=d,f=m)}var v=l.subtract(a.terms[p]),u=c.subtract(n.terms[f]);if(v<u){s=[c,f,a];break}if(u<v){s=[l,p,n];break}}else if(s=b(a))break;s=b(a)}if(!s)return b(e[0],!0);for(o=0;o<E.length;o++){var w,y=E[o].terms;if((w=s[1])===y.length-1)return;if(!(i=y[w]).equals(0))break}return i.equals(0)?S(e,++t):s}},w=Z.Utils.toMapObj(m),y=function(e,t){return t.sum.subtract(e.sum)},M=function(e,t){if(!e||!t)return!1;for(var n=0;n<e.terms.length;n++)if(e.terms[n].lessThan(t.terms[n]))return!1;return!0},N=e.tBase(w).sort(y),E=t.tBase(w).sort(y),q=M(N[0],E[0])&&N[0].count>E[0].count?E:N,x=S(q),A=[];if(x){var C=x[1],L=function(e,t){var n=e.len(),r=t.len(),t=t.terms[C],e=e.terms[C];return n<r&&t.greaterThan(e)?r-n:t.subtract(e)},C=function(e,t){for(var n=[],r=0;r<e.length;r++)for(var i=e[r],s=0;s<i.terms.length;s++){var o=n[s],a=i.terms[s];0===r?n[s]=a:o&&!o.equals(a)&&(n[s]=void 0)}for(r=0;r<n.length;r++)if((i=n[r])&&!i.equals(0))return r;return t}(N,C);N.sort(L),E.sort(L);var I=E[0],U=N[0],_=new J(new z(1),[],U.map);if(I.sum.greaterThan(U.sum)&&1<U.len())for(var O=0;O<U.terms.length;O++){var R=I.terms[O].subtract(U.terms[O]);if(R.equals(0))_.terms[O]=new z(0);else{var T=R.add(new z(1));_.terms[O]=R;for(var P=0;P<N.length;P++)N[P].terms[O]=N[P].terms[O].add(T)}}for(var k=M(N[0],E[0]),D=0;k&&(r=E,!(n=N)[0].sum.equals(r[0].sum)||n.length>=r.length);){if(200<D++)throw new Z.exceptions.InfiniteLoopError(\"Unable to compute!\");var F=N[0].divide(E[0]);A.push(F),N.shift();for(O=1;O<E.length;O++){var B=E[O].multiply(F).generateImage(),G=N.length;0===G&&(B.coeff=B.coeff.neg(),N.push(B),N.sort(L));for(P=0;P<G;P++){var V=N[P];if(V.getImg()===B.getImg()){V.coeff=V.coeff.subtract(B.coeff),V.coeff.equals(0)&&(Z.Utils.remove(N,P),P--);break}P===G-1&&(B.coeff=B.coeff.neg(),N.push(B),N.sort(L))}}if(!(k=M(N[0],E[0]))&&N.length>=E.length)for(O=1;O<N.length;O++)if(k=M(N[O],E[0])){N.unshift(Z.Utils.remove(N,O));break}}}g=v(A),d=v(N),void 0!==_&&(_=_.toSymbol(),g=H.divide(g,_.clone()),d=H.divide(d,_))}return h&&(g=H.parse(g.text(),c),d=H.parse(d.text(),c)),[g,d]}catch(e){return i}},line:function(e,t,n){Z.Utils.isArray(e)&&(e=Z.Utils.convertToVector(e)),Z.Utils.isArray(t)&&(t=Z.Utils.convertToVector(t)),n=H.parse(n||\"x\"),Z.Utils.isVector(e)&&Z.Utils.isVector(t)||H.error('Line expects a vector! Received \"'+e+'\" & \"'+t+'\"');var r=H.subtract(t.e(1).clone(),e.e(1).clone()),t=H.subtract(t.e(2).clone(),e.e(2).clone()),r=H.divide(t,r),n=H.multiply(n,r.clone()),r=H.multiply(e.e(1).clone(),r);return H.add(H.subtract(n,r),e.e(2).clone())},PartFrac:{createTemplate:function(r,e,t,n){(r=R.Factor.factor(r)).each(function(e,t){var n;e.group===C&&\"\"===e.fname&&e.args[0].group===j&&(n=e.args[0],this.symbols?(delete this.symbols[t],this.symbols[n.value]=n):r=e.args[0])});for(var i=e.collectFactors(),s=[],o=[],a=new Q(1),u=0;u<i.length;u++){var l=Q.unwrapPARENS(i[u]);if(l.power.greaterThan(1))for(var c=Number(l.power),p=l.clone().toLinear(),f=Number(R.degree(p,n)),h=0;h<c;h++){var m=H.pow(p.clone(),new Q(h+1));t.push(m.clone());var g=H.divide(r.clone(),m.clone());o.push(f),s.push(g)}else{f=Number(R.degree(l,n)),t.push(l);g=H.divide(r.clone(),l.clone());g=H.expand(Q.unwrapPARENS(g)),o.push(f),s.push(g)}}return[t=t.map(function(e){return H.multiply(e,a.clone())}),s,o]},partfrac:function(t,o,n){var e=$(t);o=o||H.parse(e[0]);try{var a,r,i,u,l,c,s,p,f,h,m,g,d,v,w=H.expand(t.getNum()),y=H.expand(t.getDenom().toUnitMultiplier());if(w.multiplier=t.multiplier,i=w.groupTerms(o),Number(R.degree(w,o))>=Number(R.degree(y,o))?(p=(s=R.div(w.clone(),H.expand(y.clone())))[0],i=(w=s[1]).groupTerms(o)):p=new Q(0),1===Number(R.degree(y,o))){var b=H.divide(w,y);return n?[p,b]:H.add(p,b)}r=R.Factor.factor(y),m=R.PartFrac.createTemplate(y.clone(),r,[],o),g=m[0],f=m[1],u=m[2],c=[i.length],l=[],a=[],h=[],f.map(function(e,t){d=g[t],v=u[t];for(var n=0;n<v;n++){a.push(d.clone());var r=Q.create(o,n),i=H.expand(H.multiply(e,r.clone())).groupTerms(o),s=i.length;c.push(s),l.push(i),h.push(r.clone())}});for(var S=Z.Utils.arrayMax(c),M=new Z.Matrix(Z.Utils.fillHoles(i,S)).transpose(),N=new Z.Matrix,E=0;E<l.length;E++)N.elements.push(Z.Utils.fillHoles(l[E],S));var q=H.multiply(N.transpose().invert(),M),x=n?[p]:p;return q.each(function(e,t){t=H.multiply(h[t],H.divide(e,a[t]));n?x.push(t):x=H.add(x,t)}),x}catch(e){try{if(t.isComposite()){var A={};t.each(function(e){var t=e.getDenom(),n=e.getNum(),e=A[t];A[t]=e?H.add(e,n):n});var C,L=new Q(0);for(C in A)L=H.add(L,H.divide(A[C],H.parse(C)));t=L}}catch(e){}}return t}},degree:function(e,t,n){if(n=n||{nd:[],sd:[],depth:0},!t){var r=$(e);if(1<r.length)throw new Error(\"You must specify the variable for multivariate polynomials!\");if(0===r.length)return new Q(0);t=H.parse(r[0])}r=e.group;e.isComposite()?((e=e.clone()).distributeExponent(),e.each(function(e){n.depth++,R.degree(e,t,n),n.depth--})):e.group===L?e.each(function(e){n.depth++,R.degree(e,t,n),n.depth++}):r===p&&e.value===t.value?n.sd.push(e.power.clone()):r===j&&e.value===t.value?n.nd.push(H.parse(e.power)):n.nd.push(new Q(0));e=0<n.nd.length?Z.Utils.arrayMax(n.nd):void 0;return 0===n.depth&&0<n.sd.length?(void 0!==e&&n.sd.unshift(e),H.symfunction(\"max\",n.sd)):Z.Utils.isSymbol(e)?e:H.parse(e)},sqComplete:function(e,t,n){Z.Utils.isSymbol(t)||(t=H.parse(t));var r,i,s,o,a,u=function(e){throw new Z.exceptions.ValueLimitExceededError(e=e||\"Stopping\")};return e.isPoly(!0)||u(\"Must be a polynomial!\"),o=Z.Utils.inBrackets,e=e.clone(),(r=Z.Algebra.degree(e,t)).equals(2)||u(\"Cannot complete square for degree \"+r),a=(s=Z.Algebra.coeffs(e,t))[2],u=s[1].sign(),r=H.divide(s[1],new Q(2)),e=H.pow(r.clone(),new Q(2)),n?[a,r,i]:(a=f.sqrt(a),e=H.divide(f.sqrt(e),a.clone()),i=H.subtract(s[0],H.pow(e.clone(),new Q(2))),{a:e=H.parse(o(a.clone()+\"*\"+t+(u<0?\"-\":\"+\")+e)),c:i,f:H.add(H.pow(e.clone(),new Q(2)),i.clone())})},Simplify:{strip:function(e){var t=H.parse(e.multiplier);e.toUnitMultiplier();var n=H.parse(e.power);return e.toLinear(),[t,n,e]},unstrip:function(e,t){var n=e[0],e=e[1];return H.multiply(n,H.pow(t,e))},complexSimp:function(e,t){var n=e.realpart(),r=e.imagpart(),i=t.realpart(),s=t.imagpart(),e=H.multiply(n.clone(),i.clone()),t=H.multiply(r.clone(),s.clone()),r=H.multiply(i.clone(),r),n=H.multiply(n,s.clone()),s=H.add(H.pow(i,new Q(2)),H.pow(s,new Q(2)));return H.divide(H.add(H.add(e,t),H.multiply(H.subtract(r,n),Q.imaginary())),s)},trigSimp:function(e){var t,n,r,i,s,o;return e.containsFunction([\"cos\",\"sin\",\"tan\"])&&(e=e.clone(),n=(e=(t=R.Simplify.strip(e)).pop()).clone(),e.group===X?(r=new Q(0),e.each(function(e){e=R.Simplify.trigSimp(e.fnTransform());r=H.add(r,e)},!0),n=H.pow(H.multiply(new Q(e.multiplier),r),new Q(e.power))):e.group===L&&(i=e.getNum(),s=e.getDenom(),(n=\"sin\"===i.fname&&\"cos\"===s.fname&&i.args[0].equals(s.args[0])&&i.power.equals(s.power)?H.parse(Z.Utils.format(\"({0})*({1})*tan({2})^({3})\",s.multiplier,i.multiplier,i.args[0],i.power)):n).group===L&&(o=new Q(1),n.each(function(e){\"tan\"===e.fname&&(e=H.parse(Z.Utils.format(\"({0})*sin({1})^({2})/cos({1})^({2})\",e.multiplier,R.Simplify.simplify(e.args[0]),e.power))),o=H.multiply(o,e)}),n=o)),e=n=R.Simplify.unstrip(t,n).distributeMultiplier()),e},fracSimp:function(e){var t=e.getDenom();if((e=(a=e.getNum()).isImaginary()&&t.isImaginary()?R.Simplify.complexSimp(a,t):e).isComposite()){for(var n,r,i,s,o,a,u=(e=1<e.power?H.expand(e):e).collectSymbols(),l=u.pop();u.length;)o=u.pop(),s=H.parse(l.getDenom()),i=H.parse(o.getDenom()),n=l.getNum(),r=o.getNum(),o=H.multiply(s.clone(),i.clone()),i=H.multiply(n,i),s=H.multiply(r,s),s=H.add(i,s),l=H.divide(s,o);return t=H.expand(l.getDenom()),(t=(a=H.expand(l.getNum())).isImaginary()&&t.isImaginary()?R.Simplify.complexSimp(a,t):H.divide(a,t)).equals(e)?e:R.Simplify.simplify(t)}return e},ratSimp:function(e){var t,n;return e.group===L&&(t=e.getDenom(),n=e.getNum().distributeMultiplier(),t=R.Simplify.fracSimp(t),n=R.Simplify.fracSimp(n),e=H.divide(n,t)),e},sqrtSimp:function(e,t){if(e.isSQRT()){var n,r,i=R.Factor.factor(e.args[0].clone()),s=H.parse(i.multiplier),o=s.sign(),a=H.sqrt(s.abs());if(_(a))return i.group===L?(n=new Q(1),i.each(function(e){var t;e.group===u?(t=H.sqrt(e.clone()),_(t)?a=H.multiply(a,t):n=H.multiply(n,e)):n=H.multiply(n,e)}),o=H.multiply(n,H.parse(o)),(r=H.sqrt(o.clone())).isImaginary&&(r=H.sqrt(H.expand(o.clone())))):r=H.sqrt(i.clone().toUnitMultiplier()),H.multiply(a,r)}else e.isComposite()&&e.isLinear()?(a=new Q(0),e.each(function(e){a=H.add(a,R.Simplify.sqrtSimp(e))},!0),a=H.multiply(a,H.parse(e.multiplier))):e.group===L&&(a=H.parse(e.multiplier),e.each(function(e){e=R.Simplify.sqrtSimp(e);a=H.multiply(a,e)},!0),a=H.pow(a,H.parse(e.power)));return a||H.parse(e)},patternSub:function(n){var r={},i=function(e){var t=!1;return e.each(function(e){e.group===X?t=!0:e.symbols&&(t=i(e))}),t},s=function(e){e.each(function(e){var t;!e.symbols&&e.group!==C||(i(e)?s(e):r[e.value]||(t=Z.Utils.getU(n),r[e.value]=t,n=n.sub(e.value,t)))},!0)};return s(n),[n,r]},simplify:function(e){var t=R.Simplify.strip(e);if(e=t.pop(),(e=R.Simplify.fracSimp(e)).isConstant()||e.group===Z.groups.S)return t.push(e),R.Simplify.unstrip(t,e);var n,r=e.clone(),r=R.Simplify.trigSimp(r);return r=R.Simplify.ratSimp(r),(r=R.Factor.factor(r)).group===Z.groups.CP&&r.isLinear()&&(e=r.multiplier.clone(),r.toUnitMultiplier(),n=new Q(0),r.each(function(e){e=R.Simplify.simplify(e);n=H.add(n,e)}),(r=n).multiplier=n.multiplier.multiply(e)),R.Simplify.unstrip(t,r)}},Classes:{Polynomial:W,Factors:O,MVTerm:J}};Z.Expression.prototype.simplify=function(){return R.Simplify.simplify(this.symbol)},nerdamer.useAlgebraDiv=function(){var n=R.divideFn=H.divide,r=0;H.divide=function(e,t){t=1===++r?Z.Algebra.divide(e,t):n(e,t);return r=0,t}},nerdamer.useParserDiv=function(){R.divideFn&&(H.divide=R.divideFn),delete R.divideFn},nerdamer.register([{name:\"factor\",visible:!0,numargs:1,build:function(){return R.Factor.factor}},{name:\"simplify\",visible:!0,numargs:1,build:function(){return R.Simplify.simplify}},{name:\"gcd\",visible:!0,numargs:[1],build:function(){return R.gcd}},{name:\"lcm\",visible:!0,numargs:[1],build:function(){return R.lcm}},{name:\"roots\",visible:!0,numargs:-1,build:function(){return R.roots}},{name:\"divide\",visible:!0,numargs:2,build:function(){return R.divide}},{name:\"div\",visible:!0,numargs:2,build:function(){return R.div}},{name:\"partfrac\",visible:!0,numargs:[1,2],build:function(){return R.PartFrac.partfrac}},{name:\"deg\",visible:!0,numargs:[1,2],build:function(){return R.degree}},{name:\"coeffs\",visible:!0,numargs:[1,2],build:function(){return function(){var e=R.coeffs.apply(R,arguments);return new Z.Vector(e)}}},{name:\"line\",visible:!0,numargs:[2,3],build:function(){return R.line}},{name:\"sqcomp\",visible:!0,numargs:[1,2],build:function(){return function(t,e){try{return e=e||$(t)[0],R.sqComplete(t.clone(),e).f}catch(e){return t}}}}]),nerdamer.updateAPI()}(),\"undefined\"!=typeof module&&void 0===nerdamer&&(nerdamer=require(\"./nerdamer.core.js\"),require(\"./Algebra.js\")),function(){\"use strict\";var ct=nerdamer.getCore(),pt=ct.PARSER,ft=ct.Frac,ht=ct.Settings,mt=ct.Utils.isSymbol,gt=ct.groups.FN,dt=ct.Symbol,m=ct.Utils.text,vt=ct.Utils.inBrackets,wt=ct.Utils.isInt,yt=ct.Utils.format,bt=ct.Utils.even,k=ct.Utils.evaluate,g=ct.groups.N,St=ct.groups.S,gt=ct.groups.FN,Mt=ct.groups.PL,Nt=ct.groups.CP,Et=ct.groups.CB,qt=ct.groups.EX,d=ct.groups.P,xt=ht.LOG,At=\"sqrt\",Ct=\"sin\",Lt=\"cos\",It=\"tan\",Ut=\"sec\",_t=\"csc\",Ot=\"cot\",Rt=\"asin\",Tt=\"atan\",Pt=\"sinh\",kt=\"cosh\",Dt=\"tanh\";function Ft(e){this.message=e||\"\"}Ft.prototype=new Error,dt.prototype.hasIntegral=function(){return this.containsFunction(\"integrate\")},dt.prototype.fnTransform=function(){if(this.group!==gt)return this;var e,t,n,r=this.args[0],i=new dt(this.multiplier),s=this.clone().toUnitMultiplier();if(this.isLinear())switch(this.fname){case Pt:n=pt.parse(yt(\"(e^({0})-e^(-({0})))/2\",r));break;case kt:n=pt.parse(yt(\"(e^({0})+e^(-({0})))/2\",r));break;case Dt:n=pt.parse(yt(\"(e^({0})-e^(-({0})))/(e^({0})+e^(-({0})))\",r));break;case It:n=pt.parse(yt(\"sin({0})/cos({0})\",r));break;case _t:n=pt.parse(yt(\"1/sin({0})\",r));break;case Ut:n=pt.parse(yt(\"1/cos({0})\",r));break;default:n=s}else if(this.power.equals(2))switch(this.fname){case Ct:n=pt.parse(yt(\"1/2-cos(2*({0}))/2\",r));break;case Lt:n=pt.parse(yt(\"1/2+cos(2*({0}))/2\",r));break;case It:n=pt.parse(yt(\"sin({0})^2/cos({0})^2\",r));break;case kt:n=pt.parse(yt(\"1/2+cosh(2*({0}))/2\",r));break;case Pt:n=pt.parse(yt(\"-1/2+cosh(2*({0}))/2\",r));break;case Dt:n=pt.parse(yt(\"(1+cosh(2*({0})))/(-1+cosh(2*({0})))\",r));break;case Ut:n=pt.parse(yt(\"(1-cos(2*({0})))/(1+cos(2*({0})))+1\",r));break;default:n=s}else this.fname===Ut?n=pt.parse(yt(\"1/cos({0})^({1})\",this.args[0],this.power)):this.fname===_t?n=pt.parse(yt(\"1/sin({0})^({1})\",this.args[0],this.power)):this.fname===It?n=this.power.lessThan(0)?pt.parse(yt(\"cos({0})^(-({1}))/sin({0})^({1})\",this.args[0],this.power.negate())):pt.parse(yt(\"sin({0})^({1})/cos({0})^({1})\",this.args[0],this.power)):this.fname===Ct&&this.power.lessThan(0)?n=pt.parse(yt(\"csc({0})^(-({1}))\",this.args[0],this.power.negate())):this.fname===Lt&&this.power.lessThan(0)?n=pt.parse(yt(\"sec({0})^(-({1}))\",this.args[0],this.power.negate())):this.fname===Ct&&this.power.equals(3)?n=pt.parse(yt(\"(3*sin({0})-sin(3*({0})))/4\",this.args[0])):this.fname===Lt&&this.power.equals(3)?n=pt.parse(yt(\"(cos(3*({0}))+3*cos({0}))/4\",this.args[0])):this.fname!==Lt&&this.fname!==Ct||!bt(this.power)?n=s:(t=this.power/2,e=pt.pow(this.clone().toLinear(),pt.parse(2)).fnTransform(),t=pt.expand(pt.pow(e,pt.parse(t))),n=new dt(0),t.each(function(e){e=e.fnTransform();n=pt.add(n,e)},!0));return pt.multiply(n,i)},dt.prototype.hasTrig=function(){if(this.isConstant(!0)||this.group===St)return!1;if(this.fname&&(ct.Utils.in_trig(this.fname)||ct.Utils.in_inverse_trig(this.fname)))return!0;if(this.symbols)for(var e in this.symbols)if(this.symbols[e].hasTrig())return!0;return!1},ct.Expression.prototype.hasIntegral=function(){return this.symbol.hasIntegral()},ct.Utils.toCommonDenominator=function(e){if(e.isComposite()&&e.isLinear()){var t=new dt(e.multiplier),n=new dt(1),r=new dt(0);return e.each(function(e){n=pt.multiply(n,e.getDenom())},!0),e.each(function(e){var t=e.getNum(),e=e.getDenom(),e=pt.multiply(t,pt.divide(n.clone(),e));r=pt.add(r,e)}),pt.multiply(t,ct.Algebra.divide(pt.expand(r),pt.expand(n)))}return e},ct.Utils.in_inverse_trig=function(e){return-1!==[Rt,\"acos\",Tt,\"acsc\",\"asec\",\"acot\"].indexOf(e)},ct.Utils.in_trig=function(e){return-1!==[Lt,Ct,It,Ut,_t,Ot].indexOf(e)},ct.Utils.in_htrig=function(e){return-1!==[Pt,kt,Dt,\"acsch\",\"asech\",\"acoth\"].indexOf(e)},ct.Matrix.jacobian=function(e,t){var i=new ct.Matrix;return(t=t||ct.Utils.arrayGetVariables(e)).forEach(function(n,r){e.forEach(function(e,t){e=ct.Calculus.diff(e.clone(),n);i.set(t,r,e)})}),i},ct.Matrix.prototype.max=function(){var t=new dt(0);return this.each(function(e){e=e.abs();e.gt(t)&&(t=e)}),t},ct.Matrix.cMatrix=function(n,e){var r=new ct.Matrix;return e.forEach(function(e,t){r.set(t,0,pt.parse(n))}),r};var Bt=ct.Utils.all_functions=function(e){for(var t=0,n=e.length;t<n;t++)if(e[t].group!==gt)return!1;return!0},l=ct.Utils.cosAsinBtranform=function(e,t){e=e.args[0],t=t.args[0];return pt.parse(yt(\"(sin(({0})+({1}))-sin(({0})-({1})))/2\",e,t))},c=ct.Utils.cosAsinAtranform=function(e,t){if(1!==Number(t.power))return pt.multiply(e,t);e=e.args[0];return pt.parse(yt(\"(sin(2*({0})))/2\",e))},p=ct.Utils.cosAsinBtranform=function(e,t){e=e.args[0],t=t.args[0];return pt.parse(yt(\"(cos(({0})+({1}))-cos(({0})-({1})))/2\",e,t))},Gt=ct.Utils.trigTransform=function(e){for(var t,n,r,i,s={},o=new dt(1),a=0,u=e.length;a<u;a++)(r=e[a]).group===gt?(n=r.fname)===Lt&&s.sin?(t=(s.sin.args[0].toString()!==r.args[0].toString()?l:c)(r,s.sin),delete s.sin,o=pt.multiply(o,t)):n===Ct&&s.cos?(t=(s.cos.args[0].toString()!==r.args[0].toString()?l:c)(r,s.cos),delete s.cos,o=pt.multiply(o,t)):n===Ct&&s.sin?(t=s.sin.args[0].toString()!==r.args[0].toString()?p(r,s.sin):pt.multiply(r,s.sin),delete s.sin,o=t):s[n]=r:o=pt.multiply(o,r);for(i in s)o=pt.multiply(o,s[i]);return o};ct.Settings.integration_depth=10,ct.Settings.max_lim_depth=10;var Vt=ct.Calculus={version:\"1.4.6\",sum:function(s,o,a,u){if(o.group!==ct.groups.S)throw new ct.exceptions.NerdamerTypeError(\"Index must be symbol. \"+m(o)+\" provided\");var e;return o=o.value,ct.Utils.isNumericSymbol(a)&&ct.Utils.isNumericSymbol(u)?(e=u-a<200?\"\":\"PARSE2NUMBER\",a=Number(a),u=Number(u),ct.Utils.block(e,function(){for(var e=s.text(),t={\"~\":!0},n=new ct.Symbol(0),r=a;r<=u;r++){t[o]=new dt(r);var i=pt.parse(e,t),n=pt.add(n,i)}return n})):pt.symfunction(\"sum\",arguments)},product:function(i,s,o,a){if(s.group!==ct.groups.S)throw new ct.exceptions.NerdamerTypeError(\"Index must be symbol. \"+m(s)+\" provided\");return s=s.value,ct.Utils.isNumericSymbol(o)&&ct.Utils.isNumericSymbol(a)?ct.Utils.block(a-o<200?\"\":\"PARSE2NUMBER\",function(){o=Number(o),a=Number(a.multiplier);for(var e=i.text(),t={},n=new ct.Symbol(1),r=o;r<=a;r++)t[s]=new dt(r),n=pt.multiply(n,pt.parse(e,t));return n}):pt.symfunction(\"product\",arguments)},diff:function(e,l,r){if(ct.Utils.isVector(e)){var t=new ct.Vector([]);return e.each(function(e){t.elements.push(Vt.diff(e,l,r))}),t}if(ct.Utils.isMatrix(e)){var i=new ct.Matrix;return e.each(function(e,t,n){i.set(t,n,Vt.diff(e,l,r))}),i}var n,s,c=mt(l)?l.text():l;return r=mt(r)?r.multiplier:r||1,void 0===c&&(c=ct.Utils.variables(e)[0]),e.group===gt&&e.fname===At&&(s=e.args[0],n=e.power.clone(),s.group===g&&s.group===d||(s.power=mt(s.power)?pt.multiply(s.power,pt.multiply(new dt(.5)),n):s.power.multiply(new ft(.5)).multiply(n),s.multiplier=s.multiplier.multiply(e.multiplier)),e=s),e=e.group!==gt||mt(e.power)?f(e):(n=f(pt.parse(e)),s=Vt.diff(e.args[0].clone(),c),pt.multiply(n,s)),e=1<r?Vt.diff(e,l,--r):e;function p(e){return e.value!==c&&!e.contains(c,!0)||(e.multiplier=e.multiplier.multiply(e.power),e.power=e.power.subtract(new ft(1)),e.power.equals(0)&&(e=dt(e.multiplier))),e}function f(e){var t=e.group;if(t===g||t===St&&e.value!==c||t===d)e=dt(0);else if(t===St)e=p(e);else{if(t===Et){var n=e.multiplier.clone();e.toUnitMultiplier();var r=pt.multiply(function(e){for(var t=e.collectSymbols(),n=new dt(0),r=t.length,i=0;i<r;i++){for(var s=Vt.diff(t[i].clone(),c),o=0;o<r;o++)i!==o&&(s=pt.multiply(s,t[o].clone()));n=pt.add(n,s)}return n}(e),p(e));return r.multiplier=r.multiplier.multiply(n),r}if(t===gt&&e.power.equals(1))switch(e.fname){case xt:s=e.clone(),(e=e.args[0].clone()).power=e.power.negate(),e.multiplier=s.multiplier.divide(e.multiplier);break;case Lt:e.fname=Ct,e.multiplier.negate();break;case Ct:e.fname=Lt;break;case It:e.fname=Ut,e.power=new ft(2);break;case Ut:e=h(e,It);break;case _t:e=h(e,\"-cot\");break;case Ot:e.fname=_t,e.multiplier.negate(),e.power=new ft(2);break;case Rt:e=pt.parse(\"(sqrt(1-(\"+m(e.args[0])+\")^2))^(-1)\");break;case\"acos\":e=pt.parse(\"-(sqrt(1-(\"+m(e.args[0])+\")^2))^(-1)\");break;case Tt:e=pt.parse(\"(1+(\"+m(e.args[0])+\")^2)^(-1)\");break;case\"abs\":n=e.multiplier.clone(),e.toUnitMultiplier(),(o=e.args[0].clone()).toUnitMultiplier(),(e=pt.parse(vt(m(e.args[0]))+\"/abs\"+vt(m(o)))).multiplier=n;break;case\"parens\":e=dt(1);break;case\"cosh\":e.fname=\"sinh\";break;case\"sinh\":e.fname=\"cosh\";break;case Dt:e.fname=\"sech\",e.power=new ft(2);break;case\"sech\":e=h(e,\"-tanh\");break;case\"csch\":var i=String(e.args[0]);return pt.parse(\"-coth(\"+i+\")*csch(\"+i+\")\");case\"coth\":i=String(e.args[0]);return pt.parse(\"-csch(\"+i+\")^2\");case\"asinh\":e=pt.parse(\"(sqrt(1+(\"+m(e.args[0])+\")^2))^(-1)\");break;case\"acosh\":e=pt.parse(\"(sqrt(-1+(\"+m(e.args[0])+\")^2))^(-1)\");break;case\"atanh\":e=pt.parse(\"(1-(\"+m(e.args[0])+\")^2)^(-1)\");break;case\"asech\":i=String(e.args[0]);e=pt.parse(\"-1/(sqrt(1/(\"+i+\")^2-1)*(\"+i+\")^2)\");break;case\"acoth\":e=pt.parse(\"-1/((\"+e.args[0]+\")^2-1)\");break;case\"acsch\":i=String(e.args[0]);e=pt.parse(\"-1/(sqrt(1/(\"+i+\")^2+1)*(\"+i+\")^2)\");break;case\"asec\":i=String(e.args[0]);e=pt.parse(\"1/(sqrt(1-1/(\"+i+\")^2)*(\"+i+\")^2)\");break;case\"acsc\":i=String(e.args[0]);e=pt.parse(\"-1/(sqrt(1-1/(\"+i+\")^2)*(\"+i+\")^2)\");break;case\"acot\":e=pt.parse(\"-1/((\"+e.args[0]+\")^2+1)\");break;case\"S\":i=String(e.args[0]);e=pt.parse(\"sin((pi*(\"+i+\")^2)/2)\");break;case\"C\":i=String(e.args[0]);e=pt.parse(\"cos((pi*(\"+i+\")^2)/2)\");break;case\"Si\":i=e.args[0];e=pt.parse(\"sin(\"+i+\")/(\"+i+\")\");break;case\"Shi\":i=e.args[0];e=pt.parse(\"sinh(\"+i+\")/(\"+i+\")\");break;case\"Ci\":i=e.args[0];e=pt.parse(\"cos(\"+i+\")/(\"+i+\")\");break;case\"Chi\":i=e.args[0];e=pt.parse(\"cosh(\"+i+\")/(\"+i+\")\");break;case\"Ei\":i=e.args[0];e=pt.parse(\"e^(\"+i+\")/(\"+i+\")\");break;case\"Li\":i=e.args[0];e=pt.parse(\"1/\"+ht.LOG+\"(\"+i+\")\");break;case\"erf\":e=pt.parse(\"(2*e^(-(\"+e.args[0]+\")^2))/sqrt(pi)\");break;case\"atan2\":var s=String(e.args[0]),i=String(e.args[1]);e=pt.parse(\"(\"+i+\")/((\"+i+\")^2+(\"+s+\")^2)\");break;case\"sign\":e=new dt(0);break;case\"sinc\":e=pt.parse(yt(\"(({0})*cos({0})-sin({0}))*({0})^(-2)\",e.args[0]));break;case ht.LOG10:e=pt.parse(\"1/((\"+e.args[0]+\")*\"+ht.LOG+\"(10))\");break;default:e=pt.symfunction(\"diff\",[e,l])}else if(t===qt||t===gt&&mt(e.power)){var r=t===qt?e.value:t===gt&&e.contains(c)?e.fname+vt(m(e.args[0])):e.value+vt(m(e.args[0])),o=(pt.multiply(pt.parse(xt+vt(r)),e.power.clone()),Vt.diff(pt.multiply(pt.parse(xt+vt(r)),e.power.clone()),c));e=pt.multiply(e,o)}else if(t!==gt||e.power.equals(1)){if(t===Nt||t===Mt){var a,t=e.clone(),u=new dt(0);for(a in e.symbols)u=pt.add(u,Vt.diff(e.symbols[a].clone(),c));e=pt.multiply(p(t),u)}}else(o=e.clone()).toLinear(),o.toUnitMultiplier(),e=pt.multiply(p(e.clone()),f(o))}return e.updateHash(),e}function h(e,t,n){return pt.multiply(e,pt.parse(t+vt(n||m(e.args[0]))))}},integration:{u_substitution:function(e,i){function t(e,t,n){var r=Vt.diff(t,i),r=n?n(e,t):pt.divide(e.clone(),r);return r.contains(i,!0)?null:r}function n(e,t){e=Vt.integrate(pt.symfunction(e,[new dt(u)]),u,0);return(e=e.sub(new dt(u),t)).updateHash(),e}var r,s=e[0].clone(),o=e[1].clone(),a=s.group,e=o.group,u=\"__u__\";if(a===gt&&e!==gt)return(r=t(o,(c=s.args[0]).clone()))?pt.multiply(r,n(s.fname,c)):(r=t(o,s))?Vt.integration.poly_integrate(s):void 0;if(e===gt&&a!==gt){if(r=t(s,(c=o.args[0]).clone()))return pt.multiply(r,n(o.fname,c))}else{if(a===gt&&e===gt)return(r=t(s.clone(),o.clone()))||(r=t(o.clone(),s.clone()))?pt.multiply(Vt.integration.poly_integrate(o),r):void 0;if(a===qt&&e!==qt){if(!(r=t(o,(p=s.power).clone()))){var l=Vt.integration.decompose_arg(p.clone(),i),c=Vt.diff(l[2].clone(),i),c=Vt.integration.decompose_arg(c.clone(),i);if(pt.multiply(l[1],c[1]).power.equals(o.power)){c=pt.divide(l[0].clone(),c[0].clone()),c=pt.multiply(c.clone(),pt.pow(new dt(s.value),pt.multiply(l[0],new dt(u)))),c=pt.multiply(c,new dt(u));return Vt.integration.by_parts(c,u,0,{}).sub(u,l[1].clone())}}l=Vt.integrate(s.sub(p.clone(),new dt(u)),u,0);return pt.multiply(l.sub(new dt(u),p),r)}if(e===qt&&a!==qt){r=t(s,(p=o.power).clone());l=Vt.integrate(o.sub(p,new dt(u)),u,0);return pt.multiply(l.sub(new dt(u),p),r)}if(s.isComposite()||o.isComposite()){var a=function(e,t){t=Vt.diff(t,i),e=ct.Algebra.Factor.factor(e),t=ct.Algebra.Factor.factor(t);return pt.divide(e,t)},l=s.isComposite()?s.clone().toLinear():s.clone(),p=o.isComposite()?o.clone().toLinear():o.clone();return(r=t(l.clone(),p.clone(),a))?pt.multiply(Vt.integration.poly_integrate(o),r):(r=t(p.clone(),l.clone(),a))?pt.multiply(Vt.integration.poly_integrate(s),r):void 0}}},poly_integrate:function(e){var t=e.power.toString(),n=e.multiplier.toDecimal(),e=e.toUnitMultiplier().toLinear();return-1===Number(t)?pt.multiply(new dt(n),pt.symfunction(xt,[e])):pt.parse(yt(\"({0})*({1})^(({2})+1)/(({2})+1)\",n,e,t))},stop:function(e){throw ct.Utils.warn(e=e||\"Unable to compute integral!\"),new Ft(e)},partial_fraction:function(e,t,n,r){var i;return mt(t)||(t=pt.parse(t)),i=new dt(0),(e=ct.Algebra.PartFrac.partfrac(e,t)).group===Et&&e.isLinear()?(e.each(function(e){e.isLinear()||Vt.integration.stop()}),e.each(function(e){i=pt.add(i,Vt.integrate(e,t,n,r))})):i=pt.add(i,Vt.integrate(e,t,n,r)),i},get_udv:function(e){function t(e){var t,n=e.group;n===gt?(t=e.fname,ct.Utils.in_trig(t)||ct.Utils.in_htrig(t)?r[3].push(e):ct.Utils.in_inverse_trig(t)?r[1].push(e):t===xt?r[0].push(e):Vt.integration.stop()):n===St||e.isComposite()&&e.isLinear()||n===Et&&e.isLinear()?r[2].push(e):n===qt||e.isComposite()&&!e.isLinear()?r[4].push(e):Vt.integration.stop()}var r=[[],[],[],[],[]];e.group===Et?e.each(function(e){t(dt.unwrapSQRT(e,!0))}):t(e);for(var n,i=new dt(1),s=0;s<5;s++){var o=r[s],a=o.length;if(0<a){if(1<a)for(var u=new dt(1),l=0;l<a;l++)u=pt.multiply(u,o[l].clone());else u=o[0].clone();n?i=pt.multiply(i,u):(n=u).multiplier=n.multiplier.multiply(e.multiplier)}}return[n,i]},trig_sub:function(e,t,n,r,i,s){(i=i||Vt.integration.decompose_arg(e.clone().toLinear(),t))[3],i[2];var o=i[0],a=i[1];if(a.power.equals(2)&&o.greaterThan(0)){t=ct.Utils.getU(e),i=pt.parse(It+vt(t)),o=pt.parse(Ut+vt(t)+\"^2\"),o=pt.multiply(e.sub(a,i),o),a=Vt.integrate(o,t,n,r).sub(i,a);return ct.Utils.clearU(i),a}},by_parts:function(e,t,n,r){var i,s,o,a,u,l;return r.previous=r.previous||[],o=(s=Vt.integration.get_udv(e))[0],i=s[1],u=(a=dt.unwrapSQRT(pt.expand(Vt.diff(o.clone(),t)),!0)).clone().stripVar(t),a=pt.divide(a,u.clone()),e=Vt.integrate(i.clone(),t,n||0),a=(s=pt.multiply(e.clone(),a)).toString(),-1!==r.previous.indexOf(a)&&ct.Utils.in_trig(o.fname)&&i.isE()?(r.is_cyclic=!0,new dt(1)):(r.previous.push(a),o=pt.multiply(o,e),e=s.multiplier.clone(),s.toUnitMultiplier(),(u=pt.multiply(Vt.integrate(s.clone(),t,n,r),u)).multiplier=u.multiplier.multiply(e),u=pt.subtract(o,u),r.is_cyclic&&(r.previous.pop(),0===r.previous.length&&(u=pt.expand(u),l=new dt(0),u.each(function(e){e.contains(t)||(l=pt.add(l,e.clone()))}),u=pt.divide(pt.subtract(u,l.clone()),pt.subtract(new dt(1),l)))),u)},decompose_arg:ct.Utils.decompose_fn},integrate:function(ot,at,ut,lt){var e;if(at||(e=ct.Utils.variables(ot),at=(at=1===e.length?e[0]:at)||\"x\"),ct.Utils.isVector(ot)){var t=new ct.Vector([]);return ot.each(function(e){t.elements.push(Vt.integrate(e,at))}),t}return isNaN(at)||pt.error(\"variable expected but received \"+at),ot.isConstant(!0)?pt.multiply(ot.clone(),pt.parse(at)):(lt=lt||{},ct.Utils.block(\"PARSE2NUMBER\",function(){ut=ut||0;var t,n=mt(at)?at.toString():at,e=(ce=dt.unwrapSQRT(ot.clone(),!0)).group;try{if(++ut>ct.Settings.integration_depth&&Vt.integration.stop(\"Maximum depth reached. Exiting!\"),ce.contains(n,!0)){if(e===St)t=Vt.integration.poly_integrate(ce,n,ut);else if(e===qt)if(ce.previousGroup===gt&&\"sqrt\"!==ce.fname&&ce.fname!==ht.PARENTHESIS&&Vt.integration.stop(),ce.contains(n)&&ce.previousGroup!==gt)ce.power.contains(n)?Vt.integration.stop():((We=Vt.diff(ce.clone().toLinear(),n)).contains(n)&&Vt.integration.stop(),t=Vt.integration.poly_integrate(ce,n,ut));else{if((f=Vt.diff(ce.power.clone(),n)).contains(n)){var r=f.stripVar(n);if((h=pt.divide(f.clone(),r.clone())).group===St&&h.isLinear())return r.multiplier=r.multiplier.divide(new ft(2)),pt.parse(yt(\"({2})*(sqrt(pi)*erf(sqrt(-{0})*{1}))/(2*sqrt(-{0}))\",r,n,ce.multiplier));Vt.integration.stop()}ce.isE()?f.isLinear()?t=ce:f.isE()&&f.power.group===St&&f.power.power.equals(1)?t=pt.multiply(pt.symfunction(\"Ei\",[ce.power.clone()]),ce.power):Vt.integration.stop():(g=pt.symfunction(xt,[pt.parse(ce.value)]),t=pt.divide(ce,g)),t=pt.divide(t,f)}else if(ce.isComposite()&&ce.isLinear()){var i=pt.parse(ce.multiplier);ce.toUnitMultiplier(),t=new dt(0),ce.each(function(e){t=pt.add(t,Vt.integrate(e,n,ut))}),t=pt.multiply(i,t)}else if(e===Nt)if((ce=ce.power.greaterThan(1)?pt.expand(ce):ce).power.equals(1))t=new dt(0),ce.each(function(e){t=pt.add(t,Vt.integrate(e,n,ut))},!0);else{var s=Number(ce.power),i=ce.multiplier.clone();ce.toUnitMultiplier();var o,a,u,l=ce.clone().toLinear(),c=(Ve=Vt.integration.decompose_arg(l,n))[3],p=Ve[2],f=Ve[0],h=Ve[1];if(-1===s&&h.group!==Mt&&h.power.equals(2)){var m,g,d,v,w,y,b,S,M,N,E,q=!wt(c)||0<c;t=h.group===St&&h.power.equals(2)&&q?(m=function(e){var t=new dt(1);return e.each(function(e){t=pt.multiply(t,\"abs\"===e.fname?e.args[0]:e)}),t},d=f.clone(),v=c.clone(),d=pt.pow(d,new dt(.5)),v=pt.pow(v,new dt(.5)),g=pt.multiply(m(v),m(d)),R=pt.symfunction(Tt,[pt.divide(pt.multiply(f,h.toLinear()),g.clone())]),pt.divide(R,g)):h.group===St&&h.isLinear()?pt.divide(Vt.integration.poly_integrate(ce),f):h.power.equals(4)?(E=vt,d=pt.parse(At+E(f)+\"*\"+n+\"^2\"),v=pt.parse(At+E(2)+\"*\"+E(f)+\"^\"+E(\"1/4\")+\"*\"+E(c)+\"^\"+E(\"1/4\")+\"*\"+n),w=pt.parse(At+E(c)),P=pt.add(pt.add(d.clone(),v.clone()),w.clone()),X=pt.add(pt.subtract(d,v),w),y=pt.parse(At+E(2)+\"*\"+E(c)+\"^\"+E(\"3/4\")),b=pt.parse(At+E(c)+\"*\"+E(c)+\"^\"+E(\"1/4\")+\"*\"+n),S=pt.parse(\"2*\"+E(c)+\"*\"+At+E(2)+\"*\"+E(c)+\"^\"+E(\"1/4\")),M=pt.divide(pt.subtract(y.clone(),b.clone()),pt.multiply(S.clone(),X)),N=pt.divide(pt.add(y,b),pt.multiply(S,P.clone())),pt.add(Vt.integrate(M,n,ut,lt),Vt.integrate(N,n,ut,lt))):Vt.integration.partial_fraction(ce,n,ut)}else if(-.5===s)h.group===St&&h.power.equals(2)&&p.multiplier.lessThan(0)&&!c.multiplier.lessThan(0)?(f.negate(),t=c.isConstant()&&f.isConstant()?(g=pt.symfunction(At,[f.clone()]),o=pt.symfunction(At,[pt.multiply(f.clone(),c)]),pt.divide(pt.symfunction(Rt,[pt.divide(p.toLinear(),o)]),g)):(a=pt.symfunction(At,[f]),u=pt.multiply(a.clone(),h.clone().toLinear()),pt.divide(pt.symfunction(Tt,[pt.divide(u,pt.symfunction(At,[l.clone()]))]),a))):Vt.integration.stop();else if(.5===s&&h.power.equals(2)&&f.greaterThan(0))Vt.integration.stop();else if(h.isLinear()&&h.group!==Mt)t=pt.divide(Vt.integration.poly_integrate(ce),f);else{if(h.power.equals(2)&&f.greaterThan(0)){var x=pt.parse(At+vt(f)),A=pt.parse(At+vt(c)),C=pt.multiply(x.clone(),A.clone()).invert(),L=pt.pow(c,new dt(ce.power)),I=ct.Utils.getU(ce);Ze=pt.multiply(C,h.clone().toLinear());var U=pt.parse(Tt+vt(Ze)),_=2*(Math.abs(ce.power)-1),O=Vt.integrate(pt.parse(Lt+vt(I)+\"^\"+_));return ct.Utils.clearU(I),pt.multiply(O.sub(I,U),L)}if(ce.group===Et||ce.power.lessThan(0)){var R=ce.clone().toLinear(),T=ct.Algebra.Factor.factor(R).toString()!==R.toString();if(ct.Algebra.degree(R,pt.parse(n)).equals(2)&&!T)try{var P,k,D=ct.Algebra.sqComplete(R,n);Ze=ct.Utils.getU(R),P=D.f.sub(D.a,Ze),k=pt.pow(P,pt.parse(ce.power)),t=Vt.integrate(k,Ze).sub(Ze,D.a)}catch(e){Vt.integration.stop()}else t=Vt.integration.partial_fraction(ce,n,ut,lt)}else t=Vt.integration.by_parts(ce,n,ut,lt)}t.multiplier=t.multiplier.multiply(i)}else if(e===gt){var F=ce.args[0],i=ce.multiplier.clone();ce.toUnitMultiplier();var B,G,V,H,j,X,$,Z,z,f=(Ve=Vt.integration.decompose_arg(F,n))[0],h=Ve[1],Q=ce.fname;if(Q===xt||Q===Rt||\"acos\"===Q||Q===Tt&&h.isLinear()){var Y,s=ce.power.toString();wt(s)&&(ut-=s),t=F.isComposite()?(Ze=ct.Utils.getU(ce),R=pt.pow(pt.parse(xt+vt(Ze)),new dt(s)),Ce=Vt.diff(F,n),Y=pt.multiply(R,Ce),O=Vt.integrate(Y,Ze,ut,lt),pt.multiply(pt.parse(i),O.sub(Ze,F))):pt.multiply(pt.parse(i),Vt.integration.by_parts(ce,n,ut,lt))}else{if(Q===It&&ce.power.lessThan(0))return(Je=ce.clone()).power.negate(),Je.fname=Ot,pt.multiply(pt.parse(i),Vt.integrate(Je,n,ut));if(!f.contains(n,!0)&&ce.isLinear())if(\"abs\"===Q)(h=pt.divide(F.clone(),f.clone())).group!==St||h.power.lessThan(0)?Vt.integration.stop():t=ct.Utils.even(h.power)?Vt.integrate(F,n,ut):((z=Vt.integrate(h,n,ut)).power=z.power.subtract(new ft(1)),pt.multiply(pt.multiply(pt.symfunction(\"abs\",[h.toLinear()]),z),f));else{var W=ce.args[0].group,J=Vt.integration.decompose_arg(F,n);switch((W!==Nt&&W!==St&&W!==Et||!J[1].power.equals(1)||F.hasFunc())&&Vt.integration.stop(),Q){case Lt:t=pt.symfunction(Ct,[F]);break;case Ct:(t=pt.symfunction(Lt,[F])).negate();break;case It:t=pt.parse(yt(ht.LOG+\"(sec({0}))\",F));break;case Ut:t=pt.parse(yt(ht.LOG+\"(tan({0})+sec({0}))\",F));break;case _t:t=pt.parse(yt(\"-\"+ht.LOG+\"(csc({0})+cot({0}))\",F));break;case Ot:t=pt.parse(yt(ht.LOG+\"(sin({0}))\",F));break;case Pt:t=pt.symfunction(kt,[F]);break;case kt:t=pt.symfunction(Pt,[F]);break;case Dt:t=pt.parse(yt(ht.LOG+\"(cosh({0}))\",F));break;case\"asec\":case\"acsc\":case\"acot\":case\"asech\":case\"acsch\":case\"acoth\":t=Vt.integration.by_parts(ce,n,ut,lt);break;case\"sech\":t=pt.parse(yt(\"atan(sinh({0}))\",F));break;case\"csch\":t=pt.parse(yt(ht.LOG+\"(tanh(({0})/2))\",F));break;case\"coth\":t=pt.parse(yt(ht.LOG+\"(sinh({0}))\",F));break;case\"exp\":t=Vt.integrate(pt.parse(yt(\"e^({0})\",F)),n,ut);break;case\"S\":var F=ce.args[0].clone(),K=(Se=Vt.integration.decompose_arg(F,n))[1],ee=Se[0],te=Se[3];t=pt.parse(yt(\"(cos((1/2)*pi*(({1})+({0})*({2}))^2)+pi*(({1})+({0})*({2}))*S(({1})+({0})*({2})))/(({0})*pi)\",ee,te,h));break;case\"C\":F=ce.args[0].clone(),K=(Se=Vt.integration.decompose_arg(F,n))[1],ee=Se[0],te=Se[3];t=pt.parse(yt(\"(pi*(({1})+({0})*({2}))*C(({1})+({0})*({2}))-sin((1/2)*pi*(({1})+({0})*({2}))^2))/(({0})*pi)\",ee,te,K));break;case\"erf\":F=ce.args[0].clone(),K=(Se=Vt.integration.decompose_arg(F,n))[1],ee=Se[0];t=pt.parse(yt(\"e^(-(({2}))^2)/(({0})*sqrt(pi))+(1/({0})+({1}))*erf(({2}))\",ee,K,F));break;case\"sign\":t=pt.multiply(ce.clone(),F.clone());break;default:Vt.integration.stop()}t=pt.divide(t,f)}else h.isLinear()?Q===Lt||Q===Ct?(s=Number(ce.power),t=s<0?(ce.fname=Q===Ct?_t:Ut,ce.invert().updateHash(),Vt.integrate(ce,n,ut)):(F=ce.args[0],B=ce.clone(),G=ce.clone(),Ie=new dt((s-1)/s),V=pt.multiply(f.clone(),new dt(s)).invert(),B.power=B.power.subtract(new ft(1)),G.power=G.power.subtract(new ft(2)),We=pt.symfunction(Q===Lt?Ct:Lt,[F.clone()]),Q===Ct&&We.negate(),pt.add(pt.multiply(pt.multiply(V,B),We),pt.multiply(Ie,Vt.integrate(pt.parse(G),n,ut))))):Q===It||Q===Ot?ce.args[0].isLinear(n)&&(_=ce.power.subtract(new ft(1)).toString(),nt=ce.clone().toUnitMultiplier(),Z=pt.parse(yt((Q===Ot?\"-\":\"\")+\"1/({2}*{0})*{3}({1})^({0})\",_,F,f,Q)),nt.power=nt.power.subtract(new ft(2)),nt.power.equals(0)&&(nt=pt.parse(nt)),t=pt.subtract(Z,Vt.integrate(nt,n,ut))):Q===Ut||Q===_t?(H=ce.power.subtract(new ft(1)).toString(),j=ce.power.subtract(new ft(2)).toString(),X=Q===Ut?It:Ot,nt=ce.clone().toUnitMultiplier(),$=yt((Q===_t?\"-\":\"\")+\"1/({0}*{1})*{4}({3})^({2})*{5}({3})\",f,H,j,F,Q,X),Z=pt.parse($),nt.power=nt.power.subtract(new ft(2)),nt.power.equals(0)&&(nt=pt.parse(nt)),t=pt.add(Z,pt.multiply(new dt(j/H),Vt.integrate(nt,n,ut)))):Q!==kt&&Q!==Pt||!ce.power.equals(2)?Vt.integration.stop():t=Vt.integrate(ce.fnTransform(),n,ut):Vt.integration.stop();t.multiplier=t.multiplier.multiply(i)}}else if(e===Mt)t=Vt.integration.partial_fraction(ce,n,ut);else if(e===Et){var ne=(ce=ce.getDenom().group===St?pt.expand(ce):ce).stripVar(n),re=pt.divide(ce.clone(),ne.clone());if(ne.contains(n)&&(re=pt.multiply(re,ne),ne=new dt(1)),re.group!==Et){if(re.equals(1))return Vt.integrate(pt.expand(ce),n,ut);re.clone().toLinear().isPoly(!0)&&1<ct.Utils.variables(re).length&&(re=ct.Algebra.Factor.factor(re)),t=Vt.integrate(re,n,ut)}else{var ie=re.collectSymbols().sort(function(e,t){return e.group===t.group?Number(e.power)===Number(t.power)?e<t?1:-1:t.power-e.power:t.group-e.group}).map(function(e){e=dt.unwrapSQRT(e,!0);return\"exp\"===e.fname?pt.parse(yt(\"({1})*e^({0})\",e.args[0],e.multiplier)):e}),se=ie.length;if(ce.power<0){if(2===se)return Vt.integrate(pt.expand(ce),n,ut,lt)}else if(2===se){try{t=Vt.integration.u_substitution(ie,n)}catch(e){}if(!t){var oe,ae,ue,le,ce,pe,fe,he,me,ge,de,ve,we,ye,be,Se,Me,Ne,Ee,qe,xe,Ae,Ce,Le,Ie,Ue,_e,Oe,Re,Te,Pe=ie[0].group,ke=ie[1].group,De=ie[0],Fe=ie[1],Be=De.fname,Ge=Fe.fname;if(ce=pt.multiply(De.clone(),Fe.clone()),Pe===gt&&ke===gt)if(Be===xt||Ge===xt)t=Vt.integration.by_parts(ce.clone(),n,ut,lt);else{ie.sort(function(e,t){return t.fname>e.fname});var Ve,He=De.args[0];He.isLinear()&&(He.group===Nt||He.group===Et||He.group===St)||Vt.integration.stop(),h=(Ve=Vt.integration.decompose_arg(He,n))[1],f=Ve[0],h.isLinear()||Vt.integration.stop();var je,Xe=Fe.args[0];if(He.equals(Xe))if(Be===Ct&&Ge===Lt||Be===Lt&&Ge===Ct)if(De.power.lessThan(0)&&Vt.integration.stop(),Be===Ct&&De.power.add(Fe.power).equals(0))De.fname=It,De.updateHash(),t=Vt.integrate(De,n,ut);else if(bt(De.power)&&Ge===Lt&&Fe.power.lessThan(0)){var _=Number(De.power)/2,$e=pt.parse(yt(\"(1-cos({0})^2)^({1})\",De.args[0],_));t=Vt.integrate(pt.expand(pt.multiply($e,Fe.clone())),n,ut,lt)}else if(bt(De.power)&&Ge===Ct&&Fe.power.lessThan(0)){_=Number(De.power)/2,$e=pt.parse(yt(\"(1-sin({0})^2)^({1})\",De.args[0],_));t=Vt.integrate(pt.expand(pt.multiply($e,Fe.clone())),n,ut,lt)}else{var Ze,ze=ct.Utils.even(De.power),Qe=ct.Utils.even(Fe.power);if(t=new dt(0),ze&&Qe){var Ye=function(e){var t=e.power/2,t=e.fname===Lt?\"((1/2)+(cos(2*(\"+e.args[0]+\"))/2))^\"+t:\"((1/2)-(cos(2*(\"+e.args[0]+\"))/2))^\"+t;return pt.parse(t)},f=Ye(De),c=Ye(Fe),We=pt.multiply(f,c);return(Je=pt.expand(We)).each(function(e){t=pt.add(t,Vt.integrate(e,n,ut))}),pt.multiply(t,ne)}nt=ze?(Ze=De,Fe):(Ze=Fe,De);var Je,Ke=Ze.fname===Lt?-1:1,et=((_=nt.power)-1)/2,tt=pt.parse(\"(1-\"+Ze.fname+ct.Utils.inBrackets(He)+\"^2)^\"+et);(Je=pt.expand(pt.multiply(new dt(Ke),pt.multiply(Ze.clone(),tt)))).each(function(e){t=pt.add(t,Vt.integration.poly_integrate(e.clone()))})}else Be===Ut&&Ge===It&&h.isLinear()&&Fe.isLinear()?t=pt.parse(yt(\"sec({0})^({1})/({1})\",De.args[0],De.power)):Be===It&&Ge===Ut&&h.isLinear()?De.isLinear()&&Fe.isLinear()?t=pt.divide(pt.symfunction(Ut,[He.clone()]),f):bt(De.power)?(s=Number(De.power)/2,We=pt.parse(yt(\"(sec({0})^2-1)^({1})\",De.args[0],s)),t=Vt.integrate(pt.expand(pt.multiply(We,Fe)),n,ut)):Vt.integration.stop():t=Be===Ut&&Ge===Lt?(De.fname=Lt,De.invert().updateHash(),Vt.integrate(pt.multiply(De,Fe),n,ut)):Be===Ct&&Ge===_t?(Fe.fname=Ct,Fe.invert().updateHash(),Vt.integrate(pt.multiply(De,Fe),n,ut)):(We=Be!==It||Ge!==Lt&&Ge!==Ct||!Fe.power.lessThan(0)?pt.multiply(De.fnTransform(),Fe.fnTransform()):pt.multiply(De.fnTransform(),Fe),Vt.integrate(pt.expand(We),n,ut));else Be!==Ct&&Be!==Lt||Ge!==Ct&&Ge!==Lt?Vt.integration.stop():De.isLinear()&&Fe.isLinear()?t=De.args[0].isLinear()&&Fe.args[0].isLinear()?(Ge===Ct?(p=De.args[0],je=Fe.args[0]):(je=De.args[0],p=Fe.args[0]),R=pt.parse(yt(\"(sin(({1})+({0}))+sin(({1})-({0})))/2\",p.toString(),je.toString())),Vt.integrate(R,n,ut)):(st=Gt(ie),Vt.integrate(pt.expand(st),n,ut)):(st=new dt(1),ie.map(function(e){e=e.fnTransform();st=pt.multiply(st,e)}),We=pt.expand(st),(t=Vt.integrate(We,n,ut)).hasIntegral()&&(t=Vt.integrate(Gt(st.collectSymbols()),n,ut)))}else Pe===gt&&ke===St?(oe=De.isLinear(),De.fname===Lt&&oe&&Fe.power.equals(-1)?t=pt.symfunction(\"Ci\",[De.args[0]]):De.fname===Lt&&Fe.power.equals(-1)?t=Vt.integrate(pt.multiply(De.fnTransform(),Fe.clone()),n,ut):De.fname===kt&&oe&&Fe.power.equals(-1)?t=pt.symfunction(\"Chi\",[De.args[0]]):De.fname===kt&&Fe.power.equals(-1)?t=Vt.integrate(pt.multiply(De.fnTransform(),Fe.clone()),n,ut):De.fname===Ct&&oe&&Fe.power.equals(-1)?t=pt.symfunction(\"Si\",[De.args[0]]):De.fname===Ct&&Fe.power.equals(-1)?t=Vt.integrate(pt.multiply(De.fnTransform(),Fe.clone()),n,ut):De.fname===Pt&&oe&&Fe.power.equals(-1)?t=pt.symfunction(\"Shi\",[De.args[0]]):De.fname===Pt&&Fe.power.equals(-1)?t=Vt.integrate(pt.multiply(De.fnTransform(),Fe.clone()),n,ut):De.fname===xt&&Fe.power.equals(-1)?t=Vt.integration.poly_integrate(De,n,ut):\"erf\"===De.fname?Fe.power.equals(1)&&(ee=(Se=Vt.integration.decompose_arg(De.args[0],n))[0],K=Se[1],F=De.args[0].toString(),t=pt.parse(yt(\"(e^(-(({2}))^2)*(sqrt(pi)*e^((({2}))^2)*(2*({0})^2*({1})^2-3)*erf(({2}))+2*({0})*({1})-2))/(4*sqrt(pi)*({0})^2)\",ee,K,F))):t=Vt.integration.by_parts(ce,n,ut,lt)):Pe===qt&&ke===St?(h=Be===xt?Vt.integration.decompose_arg(De.args[0],n)[1]:null,t=De.isE()&&(De.power.group===St||De.power.group===Et)&&Fe.power.equals(-1)?pt.symfunction(\"Ei\",[De.power.clone()]):Be===xt&&h.value===Fe.value?Vt.integration.poly_integrate(De,n,ut):Vt.integration.by_parts(ce,n,ut,lt)):Pe===Mt&&ke===St?(ce=Fe.value===De.value&&De.power.equals(-1)?(ae=Math.min.apply(null,ct.Utils.keys(De.symbols)),ue=Math.min(ae,Fe.power),(le=Fe.clone()).power=new ft(ue),Fe=pt.divide(Fe,le.clone()),We=new dt(0),De.each(function(e){We=pt.add(We,pt.divide(e.clone(),le.clone()))}),We.multiplier=De.multiplier,pt.divide(Fe,We)):pt.expand(ce),t=Vt.integration.partial_fraction(ce,n,ut)):Pe===Nt&&ke===St?(R=De.clone().toLinear(),pe=ct.Algebra.degree(R,pt.parse(n)).equals(1),De.power.equals(-.5)?(f=(Ve=Vt.integration.decompose_arg(De.clone().toLinear(),n))[0].negate(),h=Ve[1],c=Ve[3],xe=Number(De.power),Ae=Number(Fe.power),wt(Ae)&&ct.Utils.even(Ae)&&h.power.equals(2)?(Me=pt.divide(pt.multiply(pt.pow(c.clone(),new dt(2)),pt.symfunction(At,[pt.divide(c.clone(),f.clone())])),pt.pow(f.clone(),new dt(2))),Me=pt.multiply(Me,pt.symfunction(At,[c]).invert()),(fe=pt.parse(\"sin(u)\")).power=fe.power.multiply(Fe.power),O=Vt.integrate(fe,\"u\",ut),he=pt.parse(\"asin(sqrt(\"+f+\"/\"+c+\")*\"+n+\")\"),t=pt.multiply(Me,O.sub(new dt(\"u\"),he))):-.5===xe&&(me=function(e,t){t=pt.parse(Vt.integrate(e,n,ut,lt).sub(n,yt(t,n)));if(!t.hasIntegral())return t},-1===Ae?t=me(pt.expand(pt.expand(pt.pow(pt.multiply(De.invert(),Fe.invert()),new dt(2)))).invert(),\"sqrt(1-1/({0})^2)\"):-2===Ae&&(t=me(pt.sqrt(pt.expand(pt.divide(pt.pow(ce,new dt(2)).invert(),pt.pow(new dt(n),new dt(2))).negate())).invert(),\"sqrt(1-1/({0})^2)\")))):De.power.equals(-1)&&Fe.isLinear()&&pe?t=Vt.integration.partial_fraction(ce,n,ut):!De.power.lessThan(0)&&wt(De.power)?(ge=pt.expand(De),t=new dt(0),ge.each(function(e){e.group===Mt?e.each(function(e){t=pt.add(t,Vt.integrate(pt.multiply(Fe.clone(),e),n,ut))}):t=pt.add(t,Vt.integrate(pt.multiply(Fe.clone(),e),n,ut))})):De.power.lessThan(-2)?t=Vt.integration.by_parts(ce,n,ut,lt):De.power.lessThan(0)&&Fe.power.greaterThan(1)?(f=(Ve=Vt.integration.decompose_arg(De.clone().toLinear(),n))[0].negate(),h=Ve[1],c=Ve[3],l=De.clone().toLinear(),t=h.group!==Mt&&h.isLinear()?(s=Number(Fe.power),Ze=new dt(Ce=\"_u_\"),de=pt.expand(pt.divide(pt.pow(pt.subtract(Ze.clone(),c.clone()),new dt(s)),Ze.clone())),(ve={})[Ce]=l,we=pt.parse(de,ve),Vt.integrate(we,n,0)):Fe.power.greaterThan(h.power)||Fe.power.equals(h.power)?(ye=new ct.Algebra.Classes.Factors,De=ct.Algebra.Factor.coeffFactor(De.invert(),ye),(be=ct.Algebra.divide(Fe,De)).group!==Et?(t=new dt(0),be.each(function(e){t=pt.add(t,Vt.integrate(e,n,ut))}),ye.each(function(e){t=pt.divide(t,e)}),pt.expand(t)):Vt.integration.by_parts(ce,n,ut,lt)):Vt.integration.partial_fraction(ce,n,ut)):De.power.den.equals(2)?(f=(Se=Vt.integration.decompose_arg(De.clone().toLinear(),n))[3],h=Se[1],c=Se[0],je=Se[2],t=h.power.equals(2)&&c.lessThan(0)?(f.equals(1)||(ne=pt.multiply(ne,pt.pow(f,new dt(2)))),Ze=n,Me=pt.divide(pt.pow(c.clone().negate(),new dt(.5)),pt.pow(f,new dt(.5))),Ce=pt.symfunction(Lt,[new dt(Ze)]),Ne=pt.pow(pt.symfunction(Lt,[new dt(Ze)]),new dt(De.power.num)),Ee=pt.pow(pt.symfunction(Ct,[new dt(Ze)]),new dt(Fe.power)),qe=pt.multiply(pt.multiply(Ne,Ce),Ee),(O=Vt.integrate(qe,Ze,ut)).sub(Ze,pt.symfunction(Rt,[pt.multiply(new dt(n),Me)]))):Vt.integration.partial_fraction(ce,n,ut,lt)):pe&&(t=Vt.integration.partial_fraction(ce,n,ut))):De.isComposite()&&Fe.isComposite()?(t=new dt(0),De.power.greaterThan(0)&&Fe.power.greaterThan(0)?(Je=pt.expand(ce)).each(function(e){t=pt.add(t,Vt.integrate(e,n,ut))},!0):(xe=Number(De.power),Ae=Number(Fe.power),xe<0&&0<Ae&&(We=De,De=Fe,Fe=We),-1===xe&&-1===Ae?t=Vt.integration.partial_fraction(ce,n):De.each(function(e){e=pt.multiply(e,Fe.clone()),e=Vt.integrate(e,n,ut);t=pt.add(t,e)}))):Pe===Nt&&ie[0].power.greaterThan(0)?(De=pt.expand(De),t=new dt(0),De.each(function(e){t=pt.add(t,Vt.integrate(pt.multiply(e,Fe.clone()),n,ut))},!0)):Pe===gt&&ke===qt&&ct.Utils.in_htrig(De.fname)?(De=De.fnTransform(),t=Vt.integrate(pt.expand(pt.multiply(De,Fe)),n,ut)):Pe===gt&&ke===Nt||ke===gt&&Pe===Nt?(ke===gt&&Pe===Nt&&(We=De,De=Fe,Fe=We),Ce=dt.unwrapSQRT(Vt.diff(De.clone(),n),!0),Le=dt.unwrapSQRT(Fe,!0),Ce.power.equals(Le.power)?(s=new dt(Fe.power),Ue=Ce.clone().toLinear(),_e=Fe.clone().toLinear(),(Ie=ct.Algebra.divide(Ue.toLinear(),_e)).isConstant()&&(Oe=pt.pow(Ie,s.negate()),t=pt.multiply(Oe,Vt.integration.poly_integrate(De.clone())))):t=Vt.integration.by_parts(ce,n,ut,lt)):(Re=De.clone().toLinear(),Te=Fe.clone().toLinear(),t=Pe===qt&&ke===qt&&De.power.contains(n)&&Fe.power.contains(n)&&!Re.contains(n)&&!Te.contains(n)?pt.parse(yt(\"(({0})^(({2})*({4}))*({1})^(({3})*({4})))/(log(({0})^({2}))+log(({1})^({3})))\",Re.toString(),Te.toString(),De.power.multiplier.toString(),Fe.power.multiplier.toString(),n)):Vt.integration.by_parts(ce,n,ut,lt))}}else if(3===se&&(ie[2].group===St&&ie[2].power.lessThan(2)||ie[0].group===Nt)){var nt,rt=ie[0];rt.group===Nt?(rt.power.greaterThan(1)&&(rt=pt.expand(rt)),nt=pt.multiply(ie[1],ie[2]),t=new dt(0),rt.each(function(e){e=pt.multiply(e,nt.clone()),e=Vt.integrate(e,n,ut);t=pt.add(t,e)},!0)):t=Vt.integration.by_parts(ce,n,ut,lt)}else if(Bt(ie)){for(var We=new dt(1),it=0,se=ie.length;it<se;it++)We=pt.multiply(We,ie[it].fnTransform());We=pt.expand(We),t=Vt.integrate(We,n,ut)}else{var st=Gt(ie);t=Vt.integrate(pt.expand(st),n,ut)}}t=pt.multiply(t,ne)}}else t=pt.multiply(ce.clone(),pt.parse(n));if(t)return t}catch(e){if(!(e instanceof Ft||e instanceof ct.exceptions.DivisionByZero))throw e}return pt.symfunction(\"integrate\",[ot,at])},!1))},defint:function(e,t,n,r){r=r||\"x\";function i(t,e,n){try{return pt.parse(t,e)}catch(e){return Vt.Limit.limit(t,r,n)}}var s,o,a=ct.Utils.variables(e),u=e.hasTrig();return 1!==a.length||r||(r=a[0]),u||(s=Vt.integrate(e,r)),u||s.hasIntegral()?1===a.length&&t.isConstant()&&n.isConstant()?(o=ct.Utils.build(e),new dt(ct.Math2.num_integrate(o,Number(t),Number(n)))):pt.symfunction(\"defint\",[e,t,n,r]):(o={},(e={})[r]=n,o[r]=t,n=i(s,e,n),t=i(s,o,t),pt.subtract(n,t))},Limit:{interval:function(e,t){return pt.parse(yt(\"[{0}, {1}]\",e,t))},diverges:function(){return Vt.Limit.interval(\"-Infinity\",\"Infinity\")},divide:function(e,t,n,r,i){if(!(i++>ht.max_lim_depth)){e.clone();var s=t.clone();if(\"abs\"===t.fname){var o=e.sign(),a=r.sign();if(r.isInfinity)return pt.multiply(new dt(o),new dt(a));if(r.equals(0)){var a=pt.parse(e.multiplier),u=pt.parse(t.multiplier);return pt.divide(pt.multiply(a,Vt.Limit.interval(\"-1\",\"1\")),u)}Vt.Limit.diverges()}var l=function(e){if(ct.Utils.isVector(e)){for(var t=0;t<e.elements.length;t++)if(!e.elements[t].isInfinity)return!1;return!0}return e.isInfinity},c=function(e,t){return!ct.Utils.isVector(e)&&e.equals(t)};do{var p,f,h=k(Vt.Limit.limit(e.clone(),n,r,i)),m=k(Vt.Limit.limit(t.clone(),n,r,i)),g=l(h)&&l(m)||c(h,0)&&c(m,0)}while(g&&(p=Vt.diff(e.clone(),n),f=Vt.diff(t.clone(),n),e=(f=pt.expand(pt.divide(p,f))).getNum(),t=f.getDenom()),g);u=m.equals(0),s=Number(s.power);return r.isConstant(!0)&&u?dt.infinity(ct.Utils.even(s)&&h.lessThan(0)?-1:void 0):u?Vt.Limit.diverges():pt.divide(h,m)}},rewriteToLog:function(e){var t=e.power.clone();return e.toLinear(),pt.pow(new dt(\"e\"),pt.multiply(t,pt.symfunction(ht.LOG+\"\",[e])))},getSubbed:function(t,e,n){var r;t.group===qt&&(t=Vt.rewriteToLog(t));try{r=t.sub(e,n)}catch(e){r=t}return r},isInterval:function(e){return ct.Utils.isVector(e)},isConvergent:function(e){return!(Vt.Limit.isInterval(e)&&e.elements[0].isInfinity&&e.elements[1].isInfinity||e.containsFunction(\"limit\"))},limit:function(t,n,r,i){if(t.isLinear()&&t.isComposite()){var s=new dt(0);return t.each(function(e){s=pt.add(s,Vt.Limit.limit(e,n,r,i))},!0),s}if(t=ct.Algebra.Simplify.simplify(t),i=i||1,!(i++>ht.max_lim_depth)){var e=pt.parse(t.multiplier);t.toUnitMultiplier();try{if(t.isConstant(!0))d=t;else{var o={};o[n]=r;try{var a=pt.parse(t.sub(n,r),o);(a.isConstant(!0)||a.isInfinity)&&(d=a)}catch(e){}if(!d){var u,l=t.getNum(),c=t.getDenom();if(c.isConstant(!0)){if(t.group===qt){var p,f,h,m,g,d,v=t.clone().toLinear(),w=(t.power.clone(),v.getNum()),y=v.getDenom(),b=ct.Utils.decompose_fn(y,n,!0);d=w.group===St&&w.multiplier.isOne()&&b.ax.group===St&&b.b.isConstant(!0)&&b.a.isOne()&&b.b.isConstant(!0)?pt.parse(yt(\"(1/e^({0}))\",b.b)):(f=(p=Vt.Limit.rewriteToLog(t.clone())).power.clone(),h=p.clone().toLinear(),m=Vt.Limit.limit(h,n,r,i),g=Vt.Limit.limit(f,n,r,i),pt.pow(m,g))}else if(t.group===gt&&1===t.args.length){var S,M=Vt.Limit.limit(t.args[0],n,r,i);if(ct.Utils.isVector(M))return d=M.map(function(e){return t.clone().args[0]=e,Vt.Limit.limit(pt.symfunction(t.fname,[e]),n,r,i)}),pt.multiply(e,d);if(M.isConstant(!0)){var N=pt.symfunction(t.fname,[M]);try{k(N),S=!0}catch(e){S=!1}}if(S)d=N;else if(Vt.Limit.isConvergent(M))if(t.fname===xt)switch(M.toString()){case\"0\":d=dt.infinity().negate();break;case\"Infinity\":case\"-Infinity\":d=dt.infinity()}else if(t.fname!==Lt&&t.fname!==Ct||!r.isInfinity){if(t.fname===It){var E=t.args[0],q=E.getNum(),x=E.getDenom(),A=q.toUnitMultiplier();(r.isInfinity||A.equals(\"pi\")&&x.equals(2))&&(d=divergent())}else if(t.fname===ht.FACTORIAL&&M.isInfinity)return dt.infinity()}else d=Vt.Limit.interval(-1,1)}else if(t.group===St){if(0<t.power)return pt.parse(t,o);d=ct.Utils.even(t.power)?dt.infinity():Vt.Limit.diverges()}else if(t.group===Et){for(var v=(U=t.collectSymbols().sort(function(e,t){return e.group-t.group})).pop(),C=k(Vt.Limit.limit(v,n,r,i));U.length;){var L=U.pop(),I=k(Vt.Limit.limit(L,n,r,i));C.isInfinity||!Vt.Limit.isConvergent(C)&&I.equals(0)||C.equals(0)&&Vt.Limit.isConvergent(I)?((L=L.containsFunction(xt)?[v,v=L][0]:L).invert(),C=C.isInfinity&&I.isInfinity?dt.infinity():Vt.Limit.divide(v,L,n,r,i)):(C=pt.multiply(C,I),v=pt.multiply(v,L))}d=C}else if(t.isComposite()){t.isLinear()||(t=pt.expand(t)),d=new dt(0);for(var U=t.collectSymbols().sort(function(e,t){return t.group-e.group}),_=[],O=new dt(0),R=0,T=U.length;R<T;R++)(P=U[R].clone()).group===gt||P.group===Et&&P.hasFunc()?O=pt.add(O,P):_.push(P);_.unshift(O),1!==_.length&&(U=_);for(R=0,T=U.length;R<T;R++){var P=U[R];try{u=Vt.Limit.limit(P,n,r,i)}catch(e){u=Vt.Limit.diverges()}try{d=pt.add(d,u)}catch(e){if(i++>ht.max_lim_depth)return;d=Vt.Limit.limit(Vt.diff(t,n),n,r,i)}}}}else d=Vt.Limit.divide(l,c,n,r,i)}}d=d||pt.symfunction(\"limit\",[t,n,r])}catch(e){d=pt.symfunction(\"limit\",[t,n,r])}return pt.multiply(e,d)}}},Fresnel:{S:function(e){return e.isConstant(!0)?Vt.defint(pt.parse(\"sin(pi*x^2/2)\"),dt(0),e,\"x\"):pt.symfunction(\"S\",arguments)},C:function(e){return e.isConstant(!0)?Vt.defint(pt.parse(\"cos(pi*x^2/2)\"),dt(0),e,\"x\"):pt.symfunction(\"C\",arguments)}}};nerdamer.register([{name:\"diff\",visible:!0,numargs:[1,3],build:function(){return Vt.diff}},{name:\"sum\",visible:!0,numargs:4,build:function(){return Vt.sum}},{name:\"product\",visible:!0,numargs:4,build:function(){return Vt.product}},{name:\"integrate\",visible:!0,numargs:[1,2],build:function(){return Vt.integrate}},{name:\"defint\",visible:!0,numargs:[3,4],build:function(){return Vt.defint}},{name:\"S\",visible:!0,numargs:1,build:function(){return Vt.Fresnel.S}},{name:\"C\",visible:!0,numargs:1,build:function(){return Vt.Fresnel.C}},{name:\"limit\",visible:!0,numargs:[3,4],build:function(){return Vt.Limit.limit}}]),nerdamer.updateAPI()}(),\"undefined\"!=typeof module&&(nerdamer=require(\"./nerdamer.core.js\"),require(\"./Calculus.js\"),require(\"./Algebra.js\")),function(){var t,H=nerdamer.getCore(),j=H.PARSER,X=H.Algebra,$=H.Calculus,Z=$.integration.decompose_arg,z=H.Utils.evaluate,q=H.Utils.remove,c=H.Utils.format,Q=H.Utils.build,f=H.Utils.knownVariable,Y=H.Symbol,W=H.Utils.isSymbol,l=H.Utils.variables,J=H.groups.S,K=H.groups.PL,ee=H.groups.CB,te=H.groups.CP,ne=H.groups.FN,re=H.Settings,s=H.Utils.range,ie=H.Utils.isArray;function se(e,t){if(t.isConstant()&&e.isConstant()&&!e.equals(t)||e.equals(H.Settings.IMAGINARY)&&t.isConstant(!0)||t.equals(H.Settings.IMAGINARY)&&e.isConstant(!0))throw new H.exceptions.NerdamerValueError(e.toString()+\" does not equal \"+t.toString());this.LHS=e,this.RHS=t}H.Settings.SOLVE_RADIUS=1e3,H.Settings.ROOTS_PER_SIDE=10,H.Settings.make_pi_conversions=!1,H.Settings.STEP_SIZE=.1,H.Settings.EPSILON=1e-13,H.Settings.MAX_NEWTON_ITERATIONS=200,H.Settings.MAX_NON_LINEAR_TRIES=12,H.Settings.NON_LINEAR_JUMP_AT=50,H.Settings.NON_LINEAR_JUMP_SIZE=100,H.Settings.NON_LINEAR_START=.01,H.Settings.NEWTON_SLICES=200,H.Settings.NEWTON_EPSILON=2*Number.EPSILON,H.Settings.SOLUTION_PROXIMITY=1e-14,H.Settings.FILTER_SOLUTIONS=!0,H.Settings.MAX_SOLVE_DEPTH=10,H.Settings.ZERO_EPSILON=1e-9,H.Settings.MAX_BISECTION_ITER=2e3,H.Settings.BI_SECTION_EPSILON=1e-12,H.Symbol.prototype.hasTrig=function(){return this.containsFunction([\"cos\",\"sin\",\"tan\",\"cot\",\"csc\",\"sec\"])},H.Symbol.prototype.hasNegativeTerms=function(){if(this.isComposite())for(var e in this.symbols){var t=this.symbols[e];if(t.group===K&&t.hasNegativeTerms()||this.symbols[e].power.lessThan(0))return!0}return!1},se.prototype={toString:function(){return this.LHS.toString()+\"=\"+this.RHS.toString()},text:function(e){return this.LHS.text(e)+\"=\"+this.RHS.text(e)},toLHS:function(e){var t=(n=(e=void 0===e)?this.removeDenom():this.clone()).LHS,n=n.RHS;t.isConstant(!0)&&!n.isConstant(!0)&&([t,n]=[n,t]);n=j.subtract(t,n);return new se(e?j.expand(n):n,new Y(0)).removeDenom().LHS},removeDenom:function(){var e=this.LHS.clone(),t=this.RHS.clone(),n=j.multiply(e.getDenom(),t.getDenom());if(e=j.expand(j.multiply(e,n.clone())),(t=j.expand(j.multiply(t,n))).group===te&&t.group!==te&&(r=e,e=t,t=r),e.group===ee){var r=new Y(e.multiplier),i=t.clone();e.each(function(e){e.power.lessThan(0)?i=j.divide(i,e):r=j.multiply(r,e)}),e=r,t=i}else if(e.group===te)for(var s in e.symbols){var o=e.symbols[s];if(o.group===ee)for(var a in o.symbols){a=o.symbols[a];if(a.power.lessThan(0))return new se(j.expand(j.multiply(a.clone().toLinear(),e)),j.expand(j.multiply(a.clone().toLinear(),t)))}}return new se(e,t)},clone:function(){return new se(this.LHS.clone(),this.RHS.clone())},sub:function(e,t){var n=this.clone();return n.LHS=n.LHS.sub(e.clone(),t.clone()),n.RHS=n.RHS.sub(e.clone(),t.clone()),n},isZero:function(){return H.Utils.evaluate(this.toLHS()).equals(0)},latex:function(e){return[this.LHS.latex(e),this.RHS.latex(e)].join(\"=\")}},j.equals=function(e,t){return new se(e,t)},t=j.functions.simplify[0],j.functions.simplify[0]=function(e){return e instanceof se?(e.LHS=t(e.LHS),e.RHS=t(e.RHS),e):t(e)},H.Expression.prototype.equals=function(e){return e instanceof H.Expression&&(e=e.symbol),new se(this.symbol,e)},H.Expression.prototype.solveFor=function(e){var t;if(this.symbol instanceof se){if(this.symbol.LHS.isConstant()&&this.symbol.RHS.equals(e))return new H.Expression(this.symbol.LHS);if(this.symbol.RHS.isConstant()&&this.symbol.LHS.equals(e))return new H.Expression(this.symbol.RHS);t=this.symbol.toLHS()}else t=this.symbol;return ue(t,e).map(function(e){return new H.Expression(e)})},H.Expression.prototype.expand=function(){if(this.symbol instanceof se){var e=this.symbol.clone();return e.RHS=j.expand(e.RHS),e.LHS=j.expand(e.LHS),new H.Expression(e)}return new H.Expression(j.expand(this.symbol))},H.Expression.prototype.variables=function(){return this.symbol instanceof se?H.Utils.arrayUnique(l(this.symbol.LHS).concat(l(this.symbol.RHS))):l(this.symbol)};function e(e,t){return j.equals(e,t)}H.Equation=se;var oe=H.Utils.checkAll=function(e,t){for(var n=0;n<e.length;n++)if(t(e[n]))return!1;return!0},ae=H.Solve={version:\"2.0.3\",solutions:[],solve:function(e,t){t=ue(e,String(t));return new H.Vector(t)},toLHS:function(e,t){return W(e)?e:(e instanceof se||((n=e.split(\"=\"))[1]=n[1]||\"0\",e=new se(j.parse(n[0]),j.parse(n[1]))),e.toLHS(t));var n},solveCircle:function(e,t){for(var n=t.map(function(e){return j.parse(e)}),r=[],i=[],s=0;s<e.length;s++){for(var o=[],a=0;a<n.length;a++)o.push(Number(H.Algebra.degree(e[s],n[a])));o.push(H.Utils.arraySum(o,!0)),r.push(o)}var u,l,c=e[0],p=e[1];return r[0][2]>r[1][2]&&([p,c]=[c,p],[r[1],r[0]]=[r[0],r[1]]),1===r[0][0]&&2===r[0][2]&&2===r[1][0]&&4===r[1][2]&&(u=t[0],l=t[1],t=ue(j.parse(p,f(u,ue(j.parse(c),u)[0])),l).map(function(e){return e.toString()}),p=[ue(j.parse(c,f(l,t[0])))[0].toString()],t[1]&&p.push(ue(j.parse(c,f(l,t[1])))[0].toString()),re.SOLUTIONS_AS_OBJECT?((i={})[u]=p,i[l]=t):(t.unshift(l),p.unshift(u),i=[p,t])),i},solveNonLinearSystem:function(e,t,r){if(t<0)return[];r=void 0===r?H.Settings.NON_LINEAR_START:r;var i=H.Settings.MAX_NON_LINEAR_TRIES,s=Math.floor(i/2);t=void 0===t?i:t;var o,a,u,l,c,p=H.Settings.NON_LINEAR_JUMP_AT,f=H.Settings.NON_LINEAR_JUMP_SIZE,h=!0,m=H.Utils.arrayGetVariables(e),i=H.Matrix.jacobian(e,m,function(e){return Q(e,m)},!0),g=H.Settings.MAX_NEWTON_ITERATIONS,d=e.map(function(e){return Q(e,m)}),v=i.map(function(e){return Q(e,m)},!0),w=H.Matrix.cMatrix(0,m),y=H.Matrix.cMatrix(r,m),b=0;do{if(g<b)break;o=function(e,n){return e.map(function(e,t){return Number(n.get(t,0))})}(m,y),l=y.clone(),d.forEach(function(e,t){y.set(t,0,e.apply(null,o))});var S=new H.Matrix;if(v.each(function(e,t,n){e=e.apply(null,o);S.set(t,n,e)}),S=S.invert(),c=(a=j.multiply(S,y).negate()).subtract(w,function(e){return j.parse(Number(e))}),w=l.add(a,function(e){return j.parse(Number(e))}),y=w,p<=b&&1<u){t===s&&(r=0);var M=s<t?1:-1;return n=t%Math.floor(s)+1,r+=M*n*f,ae.solveNonLinearSystem(e,--t,r)}}while((M=u,b++,u=c.max(),Number(u)!==Number(M))&&Number(u)>=Number.EPSILON);return h?ae.systemSolutions(y,m,!0,function(e){return H.Utils.round(Number(e),14)}):[]},systemSolutions:function(e,r,i,s){var o=H.Settings.SOLUTIONS_AS_OBJECT?{}:[];return e.each(function(e,t){var n=(i?j.expand(e):e).valueOf();s&&(n=s.call(e,n));t=r[t];H.Settings.SOLUTIONS_AS_OBJECT?o[t]=n:o.push([t,n])}),o},solveSystemBySubstitution:function(e){var t=l(e[0]),n=l(e[1]);return 2===e.length&&2===t.length&&H.Utils.arrayEqual(t,n)?ae.solveCircle(e,t):[]},solveSystem:function(e,t){for(var n=0;n<e.length;n++)e[n]=ae.toLHS(e[n]);var r,i=e.length,s=new H.Matrix,o=new H.Matrix,a=!1;if(void 0===t){if(!X.allLinear(e))try{return ae.solveNonLinearSystem(e)}catch(c){if(c instanceof H.exceptions.DivisionByZero)return ae.solveSystemBySubstitution(e)}if(1===(r=H.Utils.arrayGetVariables(e)).length){var u,l=0;do{var c=e[l].clone()}while(0<l&&(c=c.sub(r[0],u[0])),u=ue(c,r[0]),++l<e.length);return re.SOLUTIONS_AS_OBJECT?(h={})[r[0]]=u:h=0===u.length?u:[r[0],u],h}if(r.length<e.length){for(var p=[],l=e.length,n=0;n<l-1;n++)p.push(j.parse(e[n]));var f={},h=ae.solveSystem(p,r);Array.isArray(h)?h.forEach(function(e){f[e[0]]=e[1]}):f=h;for(var m=!0,n=l-1;n<l;n++)j.parse(e[n],f).equals(0)||(m=!1);if(m)return h}for(n=0;n<r.length;n++)nerdamer.setVar(r[n],\"delete\");for(n=0;n<i;n++){for(var c=e[n],g=0;g<r.length;g++){var d=r[g],v=[];c.each(function(e){e.contains(d)&&(v=v.concat(e.coeffs()))});var w=H.Utils.arraySum(v);s.set(n,g,w)}var y=c.clone();r.map(function(e){y=y.stripVar(e,!0)}),o.set(n,0,y.negate())}}else for(r=t,a=!0,n=0;n<i;n++){o.set(n,0,new Y(0));for(c=j.expand(e[n]).collectSymbols(),g=0;g<t.length;g++){s.set(n,g,new Y(0));for(var d=t[g],b=0;b<c.length;b++){for(var S,M=c[b],N=!1,E=0;E<t.length;E++)M.contains(t[E])&&(N&&H.err(\"Multiple variables found for term \"+M),N=!0);M.contains(d)&&(S=Z(q(c,b),d),s.set(n,g,j.add(s.get(n,g),S[0])))}}for(b=0;b<c.length;b++)o.set(n,0,j.add(o.get(n,0),c[b]))}if(r.length!==e.length||s.determinant().equals(0))throw new H.exceptions.SolveError(\"System does not have a distinct solution\");h=(s=s.invert()).multiply(o);return H.Utils.isArray(t)&&h.each(function(e){return e.negate()}),ae.systemSolutions(h,r,a)},quad:function(e,t,n){e=j.subtract(j.pow(t.clone(),Y(2)),j.multiply(j.multiply(n.clone(),e.clone()),Y(4))),e=j.expand(e),e=j.pow(e,Y(.5)),n=j.parse(j.multiply(new Y(2),n.clone()));return[j.parse(c(\"(-({0})+({1}))/({2})\",t,e,n)),j.parse(c(\"(-({0})-({1}))/({2})\",t,e,n))]},cubic:function(e,t,n,r){r=r.text(),n=n.text(),t=t.text(),e=`(-(${n})^3/(27*(${r})^3)+(${n})*(${t})/(6*(${r})^2)-(${e.text()})/(2*(${r})))`,t=`((${t})/(3*(${r}))-(${n})^2/(9*(${r})^2))`,n=`((${e})+sqrt((${e})^2+(${t})^3))^(1/3)+((${e})-sqrt((${e})^2+(${t})^3))^(1/3)-(${`(${n})/(3*(${r}))`})`,r=\"1/2+sqrt(3)/2*i\";return[j.parse(n),j.parse(`(${n})(${r})`),j.parse(`(${n})(${r})^2`)]},quartic:function(e,t,n,r,i){var s,o,a,u={};return H.Utils.arrayUnique(l(i).concat(l(r)).concat(l(n)).concat(l(t)).concat(l(e))).map(function(e){u[e]=1}),i=i.toString(),r=r.toString(),n=n.toString(),t=t.toString(),e=e.toString(),s=j.parse(c(\"(8*({0})*({2})-3*({1})^2)/(8*({0})^2)\",i,r,n)).toString(),o=j.parse(c(\"(({1})^3-4*({0})*({1})*({2})+8*({0})^2*({3}))/(8*({0})^3)\",i,r,n,t)).toString(),a=j.parse(c(\"12*({0})*({4})-3*({1})*({3})+({2})^2\",i,r,n,t,e)).toString(),e=j.parse(c(\"2*({2})^3-9*({1})*({2})*({3})+27*({1})^2*({4})+27*({0})*({3})^2-72*({0})*({2})*({4})\",i,r,n,t,e)).toString(),e=j.parse(c(\"((({1})+(({1})^2-4*({0})^3)^(1/2))/2)^(1/3)\",a,e)).toString(),J=j.parse(c(\"(1/2)*(-(2/3)*({1})+(1/(3*({0}))*(({2})+(({3})/({2})))))^(1/2)\",i,s,e,a)).toString(),[j.parse(c(\"-(({1})/(4*({0})))-({4})+(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))\",i,r,s,o,J)),j.parse(c(\"-(({1})/(4*({0})))-({4})-(1/2)*sqrt(-4*({4})^2-2*({2})+(({3})/({4})))\",i,r,s,o,J)),j.parse(c(\"-(({1})/(4*({0})))+({4})+(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))\",i,r,s,o,J)),j.parse(c(\"-(({1})/(4*({0})))+({4})-(1/2)*sqrt(-4*({4})^2-2*({2})-(({3})/({4})))\",i,r,s,o,J))]},divideAndConquer:function(e,t){var n=[],e=H.Algebra.Factor.factor(e);return e.group===ee&&e.each(function(e){e=Y.unwrapPARENS(e),n=n.concat(ue(e,t))}),n},csolve:function(u,l){return H.Utils.block(\"IGNORE_E\",function(){var e=[],t=H.Utils.decompose_fn(u,l,!0);if(t.x.group===J)for(var n,r=j.parse(t.x.power),i=Number(r),s=j.pow(j.divide(t.b.negate(),t.a),r.invert()),s=(t=Y.toPolarFormArray(s))[0],o=(t[1],s.toString()),a=(r.toString(),0);a<i;a++)n=c(\"({0})*e^(2*{1}*pi*{2}*{3})\",o,a,r,H.Settings.IMAGINARY),n=j.parse(n),e.push(n);return e},!0)},getPoints:function(e,t,u){t=t||.01,u=u||[];var l=Q(e),n=Math.round(0),r=l(n),c=r/Math.abs(r),i=H.Settings.ROOTS_PER_SIDE,r=i;u.push(Math.floor(n/2)),u.push(Math.abs(n)),u.push(n),e.each(function(e){e.containsFunction(H.Settings.LOG)&&u.push(.1)});e=s(-H.Settings.SOLVE_RADIUS,n,t),n=s(n,H.Settings.SOLVE_RADIUS,t),t=function(e,t){for(var n,r,i,s=[],o=0,a=e.length;o<a;o++)n=e[o],i=(r=l(n))/Math.abs(r),isNaN(r)||!isFinite(r)||s.length>t||(i!==c&&s.push(n),c=i);u=u.concat(s)};return t(e,r),t(n,i),u},bisection:function(e,t){var n=e-1,r=e+1;if(Math.sign(t(n))!==Math.sign(t(r))){var i,s,o=0;do{if(i=Math.abs(r-n),o++>H.Settings.MAX_BISECTION_ITER||isNaN(i))return}while(s=(n+r)/2,0<t(n)*t(s)?n=s:r=s,i>=re.EPSILON);var a=(n+r)/2,e=t(a);if(!isNaN(e)&&Math.abs(e)<=H.Settings.BI_SECTION_EPSILON)return H.Utils.round(a,13)}},Newton:function(e,t,n){var r=H.Settings.MAX_NEWTON_ITERATIONS,i=0,s=e;do{var o=t(s);if(0===s&&0===o){a=0;break}if(r<++i)return;var a=s-o/n(s),o=Math.abs(a-s),s=a}while(o>re.NEWTON_EPSILON);if(Math.abs(t(a))<=re.EPSILON)return a},rewrite:function(e,t,n){var r,i;t=t||new Y(0),e.isComposite()&&e.isLinear()?(r=[],i=[],e.each(function(e){(\"sqrt\"===(e=e.clone()).fname&&e.contains(n)?r:i).push(e)},!0),1===r.length&&(t=j.expand(j.pow(j.subtract(t,H.Utils.arraySum(i)),new Y(2))),e=j.expand(j.pow(Y.unwrapSQRT(r[0]),new Y(2))))):e=Y.unwrapSQRT(j.expand(e));var s=0,o=e.length;if(e.group===te&&e.contains(n)&&e.isLinear()){e.distributeMultiplier();var a=new Y(0);return e.each(function(e){e.contains(n)?(s++,a=j.add(a,e.clone())):t=j.subtract(t,e.clone())}),e=a,s!==o?ae.rewrite(e,t,n):[e,t]}if(e.group===ee&&e.contains(n)&&e.isLinear()){if(e.multiplier.lessThan(0)&&(e.multiplier=e.multiplier.multiply(new H.Frac(-1)),t.multiplier=t.multiplier.multiply(new H.Frac(-1))),t.equals(0))return new Y(0);a=new Y(1);return e.each(function(e){e.contains(n)?a=j.multiply(a,e.clone()):t=j.divide(t,e.clone())}),ae.rewrite(e=a,t,n)}if(!e.isLinear()&&e.contains(n)){o=j.parse(e.power.clone().invert());return e=j.pow(e,o.clone()),t=j.pow(j.expand(t),o.clone()),ae.rewrite(e,t,n)}if(e.group===ne||e.group===J||e.group===K)return[e,t]},sqrtSolve:function(n,r){var t=new Y(0),i=new Y(0);if(n.isComposite()&&(n.each(function(e){\"sqrt\"===e.fname&&e.contains(r)?t=j.add(t,e.clone()):i=j.add(i,e.clone())}),!t.equals(0))){var e=j.expand(j.multiply(j.parse(n.multiplier),j.subtract(j.pow(i,new Y(2)),j.pow(t,new Y(2)))));return ue(e,r).filter(function(e){if(e.isImaginary())return e;var t={};return t[r]=e,z(n,t).equals(0)?e:void 0})}}},ue=function(n,p,i,t,e){if(t=t||0,t++>re.MAX_SOLVE_DEPTH)return i;if(n instanceof se){if(n.isZero())return[new Y(0)];if(n.LHS.equals(p)&&!n.RHS.contains(p))return[n.RHS];if(n.RHS.equals(p)&&!n.LHS.contains(p))return[n.LHS]}if(n instanceof H.Vector&&(n=n.elements),p=p||\"x\",ie(n))return ae.solveSystem.apply(void 0,arguments);i=i||[];var s={},r={};if(r[p]=0,W(n)&&!0===z(n.getDenom(),r).equals(0))return i;var o=function(e,t){var n,r=W(e);void 0===e||\"number\"==typeof e&&isNaN(e)||(ie(e)?e.forEach(function(e){o(e)}):\"null\"!==e.valueOf()&&(\"function\"==typeof H.Settings.PRE_ADD_SOLUTION&&(e=H.Settings.PRE_ADD_SOLUTION(e)),r||(e=j.parse(e)),H.Settings.make_pi_conversions&&t&&(r=(n=j.divide(e.clone(),new Y(Math.PI))).multiplier,t=Math.abs(r.num),r=Math.abs(r.den),t<10&&r<10&&(e=j.multiply(n,new Y(\"pi\")))),n=e.toString(),s[n]||i.push(e),s[n]=!0))};if(n.group===J&&n.contains(p)){try{var a={};a[p]=0,z(e,a,\"numer\"),o(new Y(0))}catch(e){}return i}if(n.group===ee){var u=n.getNum();if(u.group!==ee)return ue(u,p,i,t,e);var l=String(p);return u.each(function(e){e.contains(l)&&ue(e,p,i,t,n)}),i}n.group===ne&&\"sqrt\"===n.fname&&(n=j.pow(Y.unwrapSQRT(n),new Y(2)));var c=(H.Utils.isSymbol(n)?n:ae.toLHS(n,!1)).getNum(),r=H.Utils.variables(c),a=r.length;if((c=H.Utils.isInt(c.power)&&0<c.power?j.parse(c).toLinear():c).group===J||c.group===ee&&c.contains(p))return[new Y(0)];function f(e){var t=new Y(0),n=new Y(0);return e.each(function(e){e.contains(p,!0)?t=j.add(t,e.clone()):n=j.subtract(n,e.clone())}),[t,n]}var h,m={},g=function(n){var e=(n=j.expand(n,{expand_denominator:!0,expand_functions:!0})).clone();if(n.symbols)for(var t in n.symbols){var r=n.symbols[t],i=r.getDenom();if(!i.isConstant(!0)&&n.isComposite()){var s=new Y(0);return n.each(function(e){s=j.add(s,j.multiply(e,i.clone()))}),g(j.multiply(j.parse(n.multiplier),s))}var o=Z(r,p),a=o[1].fname===H.Settings.SQRT,u=Y.unwrapSQRT(o[1]),t=u.power.clone();if(!W(t)&&!t.equals(.5))if(t.den.gt(1)){if(a)return n=j.subtract(n,r.clone()),n=j.add(n,j.multiply(o[0].clone(),u)),g(n);u=m[t.den];m[t.den]=u?u++:1}else{if(-1===t.sign()){var l=j.parse(p+\"^\"+Math.abs(t));return n.each(function(e,t){e.contains(p)&&(n.symbols[t]=j.multiply(e,l.clone()))}),m={},g(j.parse(n))}if(r.group===K){r=H.Utils.arrayMin(H.Utils.keys(r.symbols));if(r<0){var l=j.parse(p+\"^\"+Math.abs(r)),c=new Y(0);return e.each(function(e){c=j.add(c,j.multiply(e.clone(),l.clone()))},!0),c}}}}return n};if(ae.inverseFunctionSolve=function(e,t,n){var r=Z(t.args[0],p);if(r[1].group===J)return j.divide(j.symfunction(e,[j.divide(n,j.parse(t.multiplier))]),r[0])},(c=g(c)).equals(0))return[c];var d,v,u=H.Utils.keys(m);if(1===u.length&&(h=u[0],c.each(function(e,t){var n,r;!e.contains(p)||(e=(r=(n=Z(e,p))[1]).power).den.gt(1)&&(r.power=e.multiply(new H.Frac(h)),c.symbols[t]=j.multiply(r,n[0]))}),c=j.parse(c)),o(ae.sqrtSolve(c,p)),1===a)if(c.isPoly(!0)){var w=new H.Algebra.Classes.Factors;if(H.Algebra.Factor.factor(c,w),1<w.getNumberSymbolics())for(var y in w.factors)o(ue(w.factors[y],p));else{var b,S,M=(b=H.Utils.getCoeffs(c,p)).length-1,a=!1;r[0]===p&&(oe(b,function(e){return e.group!==H.groups.N})&&(r=H.Algebra.proots(c),oe(r,function(e){return!H.Utils.isInt(e)})&&(a=!0,r.map(function(e){o(new Y(e))}))),a||((n=j.parse(n))instanceof H.Equation&&(n=n.toLHS()),1===M?o(j.divide(b[0],b[1].negate())):2===M?o(j.expand(ae.quad.apply(void 0,b))):3===M?(i=[],S=H.Algebra.Factor.factor(n),0<(i=[]).length?o(i):o(ae.cubic.apply(void 0,b))):X.proots(c).map(o)))}}else try{for(var N,E,q=c.hasTrig(),x=ae.getPoints(c,.1),A=ae.getPoints(c,.05),C=ae.getPoints(c,.01),L=H.Utils.arrayUnique(x.concat(A).concat(C)).sort(function(e,t){return e-t}),I=Q(c.clone()),U=[],_=0;_<L.length;_++)N=L[_],void 0!==(E=ae.bisection(N,I))?o(E,q):U.push(N);var L=U,O=$.diff(c.clone()),R=Q(O);for(_=0;_<L.length;_++)N=L[_],o(ae.Newton(N,I,R),q);i.sort()}catch(e){console.log(e)}else if(!c.hasFunc(p)&&c.isComposite())try{if((S=H.Algebra.Factor.factor(c.clone())).group===ee)S.each(function(e){o(ue(e,p))});else{switch(M=(b=H.Utils.getCoeffs(c,p)).length-1){case 0:var T,P,k,D=(T=f(c))[0],F=T[1];D.group===H.groups.EX&&(k=`${P=H.Settings.LOG}((${F})/(${D.multiplier}))/${P}(${D.value})/${D.power.multiplier}`,o(j.parse(k)));break;case 1:o(j.divide(b[0],b[1].negate()));break;case 2:o(ae.quad.apply(void 0,b));break;case 3:o(ae.cubic.apply(void 0,b));break;case 4:o(ae.quartic.apply(void 0,b));break;default:o(ae.csolve(c,p)),0===i.length&&o(ae.divideAndConquer(c,p))}0===i.length&&o(ue(S,p,i,t))}}catch(e){}else try{var B,G=ae.rewrite(c,null,p),D=G[0],F=G[1];if(D.group===ne)\"abs\"===D.fname?o([F.clone(),F.negate()]):\"sin\"===D.fname?o(ae.inverseFunctionSolve(\"asin\",D,F)):\"cos\"===D.fname?o(ae.inverseFunctionSolve(\"acos\",D,F)):\"tan\"===D.fname?o(ae.inverseFunctionSolve(\"atan\",D,F)):D.fname===H.Settings.LOG?(y=(B=Z(D.args[0],p))[1]).group===J&&(c=new se(y,F=j.divide(j.subtract(j.pow(1<D.args.length?D.args[1]:new Y(\"e\"),j.divide(F,j.parse(D.multiplier))),B[3]),B[0])).toLHS(),o(ue(c,p))):o(j.subtract(D,F));else{var V=new se(D,F).toLHS();if(V.equals(c))throw new Error(\"Stopping. No stop condition exists\");o(ue(V,p))}}catch(e){try{c.group===ee?o(0):c.group===te&&(D=(T=f(c))[0],F=T[1],D.group===H.groups.EX&&D.value===p&&(d=D.power.clone().invert(),o(j.pow(F,d))))}catch(e){}}return h&&(i=i.map(function(e){return j.pow(e,new Y(h))})),W(n)&&(v={},i=i.filter(function(e){try{v[p]=e;var t=Number(z(n,v));return isNaN(t)?!0:!0}catch(e){return!1}})),i};nerdamer.register([{name:\"solveEquations\",parent:\"nerdamer\",numargs:-1,visible:!0,build:function(){return ue}},{name:\"solve\",parent:\"Solve\",numargs:2,visible:!0,build:function(){return H.Solve.solve}},{name:\"setEquation\",parent:\"Solve\",visible:!0,build:function(){return e}}]),nerdamer.updateAPI()}(),\"undefined\"!=typeof module&&(nerdamer=require(\"./nerdamer.core.js\"),require(\"./Calculus\"),require(\"./Algebra\")),function(){\"use strict\";var x=nerdamer.getCore(),A=x.PARSER,C=x.Symbol,L=x.Utils.format,a=x.Utils.isVector,u=x.Utils.isArray,I=(x.Vector,x.groups.S),U=(x.groups.EX,x.groups.CP),_=x.groups.CB,l=x.groups.FN;x.Settings.Laplace_integration_depth=40,C.prototype.findFunction=function(e){if(this.group===l&&this.fname===e)return this.clone();var t;if(this.symbols)for(var n in this.symbols)if(t=this.symbols[n].findFunction(e))break;return t};var O=x.Extra={version:\"1.4.2\",LaPlace:{transform:function(n,r,i){n=n.clone(),r=r.toString();var e=(n=C.unwrapSQRT(n,!0)).stripVar(r),t=n.group;if((n=A.divide(n,e.clone())).isConstant()||!n.contains(r,!0))o=A.parse(L(\"({0})/({1})\",n,i));else if(t===I&&x.Utils.isInt(n.power))var s=String(n.power),o=A.parse(L(\"factorial({0})/({1})^({0}+1)\",s,i));else if(n.group===I&&n.power.equals(.5))o=A.parse(L(\"sqrt(pi)/(2*({0})^(3/2))\",i));else if(n.isComposite())o=new C(0),n.each(function(e){o=A.add(o,O.LaPlace.transform(e,r,i))},!0);else if(!n.isE()||n.power.group!==I&&n.power.group!==_)if(n.group!==l||-1===[\"sin\",\"cos\",\"sinh\",\"cosh\"].indexOf(n.fname)||n.args[0].group!==I&&n.args[0].group!==_){var a,s=x.Settings.integration_depth<x.Settings.Laplace_integration_depth;s&&(a=x.Settings.integration_depth,x.Settings.integration_depth=x.Settings.Laplace_integration_depth),x.Utils.block(\"PARSE2NUMBER\",function(){var e=r,t=n.sub(r,e),t=A.parse(\"e^(-\"+i+\"*\"+e+\")*\"+t);if((o=x.Calculus.integrate(t,e)).hasIntegral())return A.symfunction(\"laplace\",arguments);o=o.sub(r,0),o=(o=A.expand(A.multiply(o,new C(-1)))).sub(e,r)},!1),o=x.Utils.block(\"PARSE2NUMBER\",function(){return A.parse(o)},!0),s&&(x.Settings.integration_depth=a)}else{u=n.args[0].stripVar(r);switch(n.fname){case\"sin\":o=A.parse(L(\"({0})/(({1})^2+({0})^2)\",u,i));break;case\"cos\":o=A.parse(L(\"({1})/(({1})^2+({0})^2)\",u,i));break;case\"sinh\":o=A.parse(L(\"({0})/(({1})^2-({0})^2)\",u,i));break;case\"cosh\":o=A.parse(L(\"({1})/(({1})^2-({0})^2)\",u,i))}}else{var u=n.power.stripVar(r);o=A.parse(L(\"1/(({1})-({0}))\",u,i))}return A.multiply(o,e)},inverse:function(M,N,E){var q=M.clone();return x.Utils.block(\"POSITIVE_MULTIPLIERS\",function(){if((M=M.group===_?x.Algebra.PartFrac.partfrac(A.expand(M),N):M).group===I||M.group===_||M.isComposite()){var e,t,n,r,i,s,o,a,u,l,c,p,f,h,m,g=function(){(s=A.multiply(s,e)).multiplier=s.multiplier.multiply(M.multiplier),s=A.divide(s,r.a)},d=M.multiplier.clone();if(M.toUnitMultiplier(),e=M.getNum(),(t=M.getDenom().toUnitMultiplier()).group===U?(i=t.power.clone(),t.toLinear()):i=new x.Frac(1),n=N.toString(),r=x.Utils.decompose_fn(t,n,!0),x.Utils.decompose_fn(A.expand(e.clone()),n,!0),e.multiplier=e.multiplier.multiply(d),(t.group===I||t.group===_)&&r.x.value===n&&r.b.equals(0)&&x.Utils.isInt(r.x.power))p=r.x.power-1,f=x.Math2.factorial(p),s=A.divide(A.pow(E,new C(p)),new C(f)),g();else if(t.group===U&&i.equals(1))r.x.group===x.groups.PL&&x.Algebra.degree(t).equals(2)?(u=x.Algebra.sqComplete(t,n),l=x.Utils.getU(t),h=x.Utils.decompose_fn(u.a,n,!0).b,c=O.LaPlace.inverse(A.parse(`1/((${l})^2+(${u.c}))`),l,E),s=A.multiply(c,A.parse(`(${d})*e^(-(${h})*(${E}))`))):r.x.isLinear()&&!e.contains(n)?(E=A.divide(E,r.a.clone()),s=A.parse(L(\"(({0})^({3}-1)*e^(-(({2})*({0}))/({1})))/(({4})*({1})^({3}))\",E,r.a,r.b,i,f=0===(p=i-1)||1===p?\"1\":`(${i}-1)!`)),g()):r.x.group===I&&r.x.power.equals(2)&&(e.contains(n)?(h=new C(1),e.group===_&&(o=new C(1),e.each(function(e){e.contains(n)?o=A.multiply(o,e):h=A.multiply(h,e)}),e=o),u=(a=x.Utils.decompose_fn(e,n,!0)).a,l=a.b,c=u.containsFunction(\"sin\"),p=u.containsFunction(\"cos\"),f=l.containsFunction(\"cos\"),g=l.containsFunction(\"sin\"),a.x.value===n&&a.x.isLinear()&&!(c&&f||p||g)?s=A.parse(L(\"(({1})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})\",E,a.a,r.a,r.b)):c&&f&&(c=u.findFunction(\"sin\"),f=l.findFunction(\"cos\"),c.args[0].equals(f.args[0])&&!c.args[0].contains(n)&&(v=A.divide(l,f.toUnitMultiplier()).toString(),f=c.args[0].toString(),m=r.b,c=A.divide(u,c.toUnitMultiplier()),s=A.parse(L(\"(({1})*({2})*cos({3})*sin(sqrt({4})*({0})))/sqrt({4})+({1})*sin({3})*({5})*cos(sqrt({4})*({0}))\",E,h,v,f,m,c))))):s=A.parse(L(\"(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/sqrt(({2})*({3}))\",E,e,r.a,r.b)));else if(r.x.power.num&&r.x.power.num.equals(3)&&r.x.power.den.equals(2)&&e.contains(\"sqrt(pi)\")&&!e.contains(n)&&e.isLinear()){var v=A.divide(e.clone(),A.parse(\"sqrt(pi)\"));s=A.parse(L(\"(2*({2})*sqrt({0}))/({1})\",E,r.a,v,e))}else if(i.equals(2)&&r.x.power.equals(2))if(e.contains(n))if((a=x.Utils.decompose_fn(A.expand(e.clone()),n,!0)).x.isComposite()){var w=[],y=e.collectSymbols(function(e){e=C.unwrapPARENS(e);var t=x.Utils.decompose_fn(e,n,!0);return t.symbol=e,t}).sort(function(e,t){e=e.x.value!==n?0:e.x.power;return(t.x.value!==n?0:t.x.power)-e});h=new C(-1);for(var b=0;b<y.length;b++){var S=y[b];S.x.value===n?w.push(S):h=A.multiply(h,S.symbol)}w[0].x.power.equals(2)&&w[1].x.power.equals(1)&&w[1].b.equals(0)&&!w[0].b.equals(0)&&(v=w[0].a.negate(),s=A.parse(L(\"-(({1})*({2})*({5})*({0})*sin((sqrt(({4})*({5}))*({0}))/({4})))/(2*({4})^2*sqrt(({4})*({5})))-(({1})*({3})*({0})*sin((sqrt(({4})*({5}))*({0}))/({4})))/(2*({4})*sqrt(({4})*({5})))+(({1})*({2})*cos((sqrt(({4})*({5}))*({0}))/({4})))/({4})^2\",E,h,v,w[0].b,r.a,r.b)))}else a.x.isLinear()?(h=A.divide(a.a,new C(2)),s=A.parse(L(\"(({1})*({0})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*sqrt(({2})*({3})))\",E,h,r.a,r.b))):a.x.power.equals(2)&&(s=a.b.equals(0)?(h=A.divide(a.a,new C(2)),A.parse(L(\"(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*sqrt(({2})*({3})))+(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})^2\",E,h,r.a,r.b))):(h=A.divide(a.a,new C(2)),m=a.b.negate(),A.parse(L(\"-((({2})*({4})-2*({1})*({3}))*sin((sqrt(({2})*({3}))*({0}))/({2})))/(2*({2})*({3})*sqrt(({2})*({3})))+(({4})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/(2*({2})*({3}))+(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/({2})^2\",E,h,r.a,r.b,m))));else h=A.divide(e,new C(2)),s=A.parse(L(\"(({1})*sin((sqrt(({2})*({3}))*({0}))/({2})))/(({3})*sqrt(({2})*({3})))-(({1})*({0})*cos((sqrt(({2})*({3}))*({0}))/({2})))/(({2})*({3}))\",E,h,r.a,r.b));else M.isComposite()&&(i.equals(2)&&r.x.group===I?s=A.parse(`(${d})*(${E})*e^(-(${r.b})*(${E}))`):(s=new C(0),M.each(function(e){s=A.add(s,O.LaPlace.inverse(e,N,E))},!0)))}return s=s||A.symfunction(\"ilt\",[q,N,E])},!0)}},Statistics:{frequencyMap:function(e){for(var t={},n=0,r=e.length;n<r;n++){var i=e[n].toString();t[i]||(t[i]=0),t[i]++}return t},sort:function(e){return e.sort(function(e,t){return e.isConstant()&&t.isConstant()||A.error(\"Unable to sort! All values must be numeric\"),e.multiplier.subtract(t.multiplier)})},count:function(e){return new C(e.length)},sum:function(e,t){for(var n=new C(0),r=0,i=e.length;r<i;r++)var s=e[r].clone(),n=t?A.add(A.pow(A.subtract(s,t.clone()),new C(2)),n):A.add(s,n);return n},mean:function(){var e=[].slice.call(arguments);return a(e[0])?O.Statistics.mean.apply(this,e[0].elements):A.divide(O.Statistics.sum(e),O.Statistics.count(e))},median:function(){var t=[].slice.call(arguments);if(a(t[0]))return O.Statistics.median.apply(this,t[0].elements);try{var e,n,r=O.Statistics.sort(t),i=t.length;n=x.Utils.even(i)?(e=i/2,O.Statistics.mean(r[e-1],r[e])):r[Math.floor(i/2)]}catch(e){n=A.symfunction(\"median\",t)}return n},mode:function(){var e=[].slice.call(arguments);if(a(e[0]))return O.Statistics.mode.apply(this,e[0].elements);var t=O.Statistics.frequencyMap(e);if(1===x.Utils.keys(t).length)o=e[0];else{var n,r={};for(n in t){var i,s=t[n];s in r?(i=r[s],u(i)?i.push(n):r[s]=[n,r[s]]):r[s]=n}var e=r[Math.max.apply(null,x.Utils.keys(r))],o=u(e)?A.symfunction(\"mode\",e.sort()):A.parse(e)}return o},gVariance:function(e,t){var n=O.Statistics.mean.apply(O.Statistics,t),n=O.Statistics.sum(t,n);return A.multiply(e,n)},variance:function(){var e=[].slice.call(arguments);if(a(e[0]))return O.Statistics.variance.apply(this,e[0].elements);var t=A.divide(new C(1),O.Statistics.count(e));return O.Statistics.gVariance(t,e)},sampleVariance:function(){var e=[].slice.call(arguments);if(a(e[0]))return O.Statistics.sampleVariance.apply(this,e[0].elements);var t=A.divide(new C(1),A.subtract(O.Statistics.count(e),new C(1)));return O.Statistics.gVariance(t,e)},standardDeviation:function(){var e=[].slice.call(arguments);return a(e[0])?O.Statistics.standardDeviation.apply(this,e[0].elements):A.pow(O.Statistics.variance.apply(O.Statistics,e),new C(.5))},sampleStandardDeviation:function(){var e=[].slice.call(arguments);return a(e[0])?O.Statistics.sampleStandardDeviation.apply(this,e[0].elements):A.pow(O.Statistics.sampleVariance.apply(O.Statistics,e),new C(.5))},zScore:function(e,t,n){return A.divide(A.subtract(e,t),n)}},Units:{table:{foot:\"12 inch\",meter:\"100 cm\",decimeter:\"10 cm\"}}};nerdamer.register([{name:\"laplace\",visible:!0,numargs:3,build:function(){return O.LaPlace.transform}},{name:\"ilt\",visible:!0,numargs:3,build:function(){return O.LaPlace.inverse}},{name:\"mean\",visible:!0,numargs:-1,build:function(){return O.Statistics.mean}},{name:\"median\",visible:!0,numargs:-1,build:function(){return O.Statistics.median}},{name:\"mode\",visible:!0,numargs:-1,build:function(){return O.Statistics.mode}},{name:\"smpvar\",visible:!0,numargs:-1,build:function(){return O.Statistics.sampleVariance}},{name:\"variance\",visible:!0,numargs:-1,build:function(){return O.Statistics.variance}},{name:\"smpstdev\",visible:!0,numargs:-1,build:function(){return O.Statistics.sampleStandardDeviation}},{name:\"stdev\",visible:!0,numargs:-1,build:function(){return O.Statistics.standardDeviation}},{name:\"zscore\",visible:!0,numargs:3,build:function(){return O.Statistics.zScore}}]),nerdamer.updateAPI()}(),\"undefined\"!=typeof module&&(module.exports=nerdamer);","/*\r\n * Author : Martin Donk\r\n * Website : http://www.nerdamer.com\r\n * Email : martin.r.donk@gmail.com\r\n * Source : https://github.com/jiggzson/nerdamer\r\n */\r\n\r\n/* global trig, trigh, Infinity, define, arguments2Array, NaN */\r\n//externals ====================================================================\r\n/* BigInterger.js v1.6.40 https://github.com/peterolson/BigInteger.js/blob/master/LICENSE */\r\n//var nerdamerBigInt = typeof nerdamerBigInt !== 'undefined' ? nerdamerBigInt : require(\"big-integer\");\r\n/* big.js v5.2.2 https://github.com/MikeMcl/big.js/LICENCE */\r\n//var nerdamerBigDecimal = typeof nerdamerBigDecimal !== 'undefined' ? nerdamerBigDecimal : require('big.js');\r\n\r\nvar nerdamer = (function (imports) {\r\n    \"use strict\"; \r\n\r\n//version ======================================================================\r\n    var version = '1.1.13';\r\n\r\n//inits ========================================================================\r\n    var _ = new Parser(); //nerdamer's parser\r\n\r\n    //import bigInt\r\n    var bigInt = imports.bigInt;\r\n    var bigDec = imports.bigDec;\r\n\r\n    //set the precision to js precision\r\n    bigDec.set({\r\n        precision: 250\r\n    });\r\n\r\n    var Groups = {};\r\n\r\n    //container of pregenerated primes\r\n    var PRIMES = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113\r\n                , 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251,\r\n        257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397,\r\n        401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557,\r\n        563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701,\r\n        709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863,\r\n        877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031,\r\n        1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171,\r\n        1181, 1187, 1193, 1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303,\r\n        1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399, 1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471,\r\n        1481, 1483, 1487, 1489, 1493, 1499, 1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597, 1601, 1607,\r\n        1609, 1613, 1619, 1621, 1627, 1637, 1657, 1663, 1667, 1669, 1693, 1697, 1699, 1709, 1721, 1723, 1733, 1741, 1747, 1753,\r\n        1759, 1777, 1783, 1787, 1789, 1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889, 1901, 1907, 1913, 1931,\r\n        1933, 1949, 1951, 1973, 1979, 1987, 1993, 1997, 1999, 2003, 2011, 2017, 2027, 2029, 2039, 2053, 2063, 2069, 2081, 2083];\r\n\r\n//Settings =====================================================================\r\n    var CUSTOM_OPERATORS = {};\r\n\r\n    var Settings = {\r\n        //Enables/Disables call peekers. False means callPeekers are disabled and true means callPeekers are enabled.\r\n        callPeekers: false,\r\n\r\n        //the max number up to which to cache primes. Making this too high causes performance issues\r\n        init_primes: 1000,\r\n\r\n        exclude: [],\r\n        //If you don't care about division by zero for example then this can be set to true.\r\n        //Has some nasty side effects so choose carefully.\r\n        suppress_errors: false,\r\n        //the global used to invoke the libary to parse to a number. Normally cos(9) for example returns\r\n        //cos(9) for convenience but parse to number will always try to return a number if set to true.\r\n        PARSE2NUMBER: false,\r\n        //this flag forces the a clone to be returned when add, subtract, etc... is called\r\n        SAFE: false,\r\n        //the symbol to use for imaginary symbols\r\n        IMAGINARY: 'i',\r\n        //the modules used to link numeric function holders\r\n        FUNCTION_MODULES: [Math],\r\n        //Allow certain characters\r\n        ALLOW_CHARS: ['π'],\r\n        //Allow nerdamer to convert multi-character variables\r\n        USE_MULTICHARACTER_VARS: true,\r\n        //Allow changing of power operator\r\n        POWER_OPERATOR: '^',\r\n        //The variable validation regex\r\n        //VALIDATION_REGEX: /^[a-z_][a-z\\d\\_]*$/i\r\n        VALIDATION_REGEX: /^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,\r\n        // The regex used to determine which characters should be included in implied multiplication\r\n        IMPLIED_MULTIPLICATION_REGEX: /([\\+\\-\\/\\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\\+\\-\\/\\*]*)/gi,\r\n        //Aliases\r\n        ALIASES: {\r\n            'π': 'pi',\r\n            '∞': 'Infinity'\r\n        },\r\n        POSITIVE_MULTIPLIERS: false,\r\n        //Cached items\r\n        CACHE: {},\r\n        //Print out warnings or not\r\n        SILENCE_WARNINGS: false,\r\n        // Precision\r\n        PRECISION: 21,\r\n        // The Expression defaults to this value for decimal places\r\n        EXPRESSION_DECP: 19,\r\n        // The text function defaults to this value for decimal places\r\n        DEFAULT_DECP: 16,\r\n        //function mappings\r\n        VECTOR: 'vector',\r\n        PARENTHESIS: 'parens',\r\n        SQRT: 'sqrt',\r\n        ABS: 'abs',\r\n        FACTORIAL: 'factorial',\r\n        DOUBLEFACTORIAL: 'dfactorial',\r\n        //reference pi and e\r\n        LONG_PI: '3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214' +\r\n                '808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196',\r\n        LONG_E: '2.718281828459045235360287471352662497757247093699959574966967627724076630353547594571382178525166427427466' +\r\n                '39193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901',\r\n        PI: Math.PI,\r\n        E: Math.E,\r\n        LOG: 'log',\r\n        LOG10: 'log10',\r\n        LOG10_LATEX: 'log_{10}',\r\n        MAX_EXP: 200000,\r\n        //The number of scientific place to round to\r\n        SCIENTIFIC_MAX_DECIMAL_PLACES: 14,\r\n        //True if ints should not be converted to\r\n        SCIENTIFIC_IGNORE_ZERO_EXPONENTS: true\r\n    };\r\n\r\n    (function () {\r\n        Settings.CACHE.roots = {};\r\n        var x = 40,\r\n                y = 40;\r\n        for(var i = 2; i <= x; i++) {\r\n            for(var j = 2; j <= y; j++) {\r\n                var nthpow = bigInt(i).pow(j);\r\n                Settings.CACHE.roots[nthpow + '-' + j] = i;\r\n            }\r\n        }\r\n    })();\r\n\r\n    //Add the groups. These have been reorganized as of v0.5.1 to make CP the highest group\r\n    //The groups that help with organizing during parsing. Note that for FN is still a function even\r\n    //when it's raised to a symbol, which typically results in an EX\r\n    var N = Groups.N = 1, // A number\r\n            P = Groups.P = 2, // A number with a rational power e.g. 2^(3/5).\r\n            S = Groups.S = 3, // A single variable e.g. x.\r\n            EX = Groups.EX = 4, // An exponential\r\n            FN = Groups.FN = 5, // A function\r\n            PL = Groups.PL = 6, // A symbol/expression having same name with different powers e.g. 1/x + x^2\r\n            CB = Groups.CB = 7, // A symbol/expression composed of one or more variables through multiplication e.g. x*y\r\n            CP = Groups.CP = 8; // A symbol/expression composed of one variable and any other symbol or number x+1 or x+y\r\n\r\n    var CONST_HASH = Settings.CONST_HASH = '#';\r\n\r\n    var PARENTHESIS = Settings.PARENTHESIS;\r\n\r\n    var SQRT = Settings.SQRT;\r\n\r\n    var ABS = Settings.ABS;\r\n\r\n    var FACTORIAL = Settings.FACTORIAL;\r\n\r\n    var DOUBLEFACTORIAL = Settings.DOUBLEFACTORIAL;\r\n\r\n    //the storage container \"memory\" for parsed expressions\r\n    var EXPRESSIONS = [];\r\n\r\n    //variables\r\n    var VARS = {};\r\n\r\n    //the container used to store all the reserved functions\r\n    var RESERVED = [];\r\n\r\n    var WARNINGS = [];\r\n\r\n    /**\r\n     * Use this when errors are suppressible\r\n     * @param {String} msg\r\n     * @param {object} ErrorObj\r\n     */\r\n    var err = function (msg, ErrorObj) {\r\n        if(!Settings.suppress_errors) {\r\n            if(ErrorObj)\r\n                throw new ErrorObj(msg);\r\n            else\r\n                throw new Error(msg);\r\n        }\r\n    };\r\n\r\n//Utils ========================================================================\r\n    var customError = function (name) {\r\n        var E = function (message) {\r\n            this.name = name;\r\n            this.message = message !== undefined ? message : '';\r\n            var error = new Error(this.message);\r\n            error.name = this.name;\r\n            this.stack = error.stack;\r\n        }; //create an empty error\r\n        E.prototype = Object.create(Error.prototype);\r\n        return E;\r\n    };\r\n\r\n    /**\r\n     * Checks to see if value is one of nerdamer's reserved names\r\n     * @param {String} value\r\n     * @return boolean\r\n     */\r\n    var isReserved = function (value) {\r\n        return RESERVED.indexOf(value) !== -1;\r\n    };\r\n\r\n    /**\r\n     * Checks to see that all symbols in array are the same\r\n     * @param {Symbol[]} arr\r\n     * @returns {bool}\r\n     */\r\n    var allSame = function (arr) {\r\n        var last = arr[0];\r\n        for(var i = 1, l = arr.length; i < l; i++)\r\n            if(!arr[i].equals(last))\r\n                return false;\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Used to pass warnings or low severity errors about the library\r\n     * @param msg\r\n     */\r\n    var warn = function (msg) {\r\n        WARNINGS.push(msg);\r\n        if(Settings.SHOW_WARNINGS && console && console.warn) {\r\n            console.warn(msg);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Enforces rule: \"must start with a letter or underscore and\r\n     * can have any number of underscores, letters, and numbers thereafter.\"\r\n     * @param name The name of the symbol being checked\r\n     * @param {String} typ - The type of symbols that's being validated\r\n     * @throws {Exception}  - Throws an exception on fail\r\n     */\r\n    var validateName = function (name, typ) {\r\n        typ = typ || 'variable';\r\n        if(Settings.ALLOW_CHARS.indexOf(name) !== -1)\r\n            return;\r\n        var regex = Settings.VALIDATION_REGEX;\r\n        if(!(regex.test(name))) {\r\n            throw new InvalidVariableNameError(name + ' is not a valid ' + typ + ' name');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Convert number from scientific format to decimal format\r\n     * @param {Number} num\r\n     */\r\n    var scientificToDecimal = function (num) {\r\n        var nsign = Math.sign(num);\r\n        //remove the sign\r\n        num = Math.abs(num);\r\n        //if the number is in scientific notation remove it\r\n        if(/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num)) {\r\n            var zero = '0',\r\n                    parts = String(num).toLowerCase().split('e'), //split into coeff and exponent\r\n                    e = parts.pop(), //store the exponential part\r\n                    l = Math.abs(e), //get the number of zeros\r\n                    sign = e / l,\r\n                    coeff_array = parts[0].split('.');\r\n            if(sign === -1) {\r\n                l = l - coeff_array[0].length;\r\n                if(l < 0) {\r\n                    num = coeff_array[0].slice(0, l) + '.' + coeff_array[0].slice(l) + (coeff_array.length === 2 ? coeff_array[1] : '');\r\n                }\r\n                else {\r\n                    num = zero + '.' + new Array(l + 1).join(zero) + coeff_array.join('');\r\n                }\r\n            }\r\n            else {\r\n                var dec = coeff_array[1];\r\n                if(dec)\r\n                    l = l - dec.length;\r\n                if(l < 0) {\r\n                    num = coeff_array[0] + dec.slice(0, l) + '.' + dec.slice(l);\r\n                }\r\n                else {\r\n                    num = coeff_array.join('') + new Array(l + 1).join(zero);\r\n                }\r\n            }\r\n        }\r\n\r\n        return nsign < 0 ? '-' + num : num;\r\n    };\r\n    /**\r\n     * Checks if number is a prime number\r\n     * @param {Number} n - the number to be checked\r\n     */\r\n    var isPrime = function (n) {\r\n        var q = Math.floor(Math.sqrt(n));\r\n        for(var i = 2; i <= q; i++) {\r\n            if(n % i === 0)\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Generates an object with known variable value for evaluation\r\n     * @param {String} variable\r\n     * @param {any} value Any stringifyable object\r\n     * @returns {Object} \r\n     */\r\n    var knownVariable = function (variable, value) {\r\n        var o = {};\r\n        o[variable] = value;\r\n        return o;\r\n    };\r\n\r\n    /**\r\n     * Checks if n is a number\r\n     * @param {any} n\r\n     */\r\n    var isNumber = function (n) {\r\n        return /^\\d+\\.?\\d*$/.test(n);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if an array contains only numeric values\r\n     * @param {Array} arr\r\n     */\r\n    var allNumeric = function (arr) {\r\n        for(var i = 0; i < arr.length; i++)\r\n            if(!isNumber(arr[i]))\r\n                return false;\r\n        return true;\r\n    };\r\n    /**\r\n     * Checks to see if a number or Symbol is a fraction\r\n     * @param {Number|Symbol} num\r\n     * @returns {boolean}\r\n     */\r\n    var isFraction = function (num) {\r\n        if(isSymbol(num))\r\n            return isFraction(num.multiplier.toDecimal());\r\n        return (num % 1 !== 0);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if the object provided is a Symbol\r\n     * @param {Object} obj\r\n     */\r\n    var isSymbol = function (obj) {\r\n        return (obj instanceof Symbol);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if the object provided is an Expression\r\n     * @param {Object} obj\r\n     */\r\n    var isExpression = function (obj) {\r\n        return (obj instanceof Expression);\r\n    };\r\n\r\n    /**\r\n     * This method traverses the symbol structure and grabs all the variables in a symbol. The variable\r\n     * names are then returned in alphabetical order.\r\n     * @param {Symbol} obj\r\n     * @param {Boolean} poly\r\n     * @param {Object} vars - An object containing the variables. Do not pass this in as it generated\r\n     * automatically. In the future this will be a Collector object.\r\n     * @returns {String[]} - An array containing variable names\r\n     */\r\n    var variables = function (obj, poly, vars) {\r\n        vars = vars || {\r\n            c: [],\r\n            add: function (value) {\r\n                if(this.c.indexOf(value) === -1 && isNaN(value))\r\n                    this.c.push(value);\r\n            }\r\n        };\r\n\r\n        if(isSymbol(obj)) {\r\n            var group = obj.group,\r\n                    prevgroup = obj.previousGroup;\r\n            if(group === EX)\r\n                variables(obj.power, poly, vars);\r\n\r\n            if(group === CP || group === CB || prevgroup === CP || prevgroup === CB) {\r\n                for(var x in obj.symbols) {\r\n                    variables(obj.symbols[x], poly, vars);\r\n                }\r\n            }\r\n            else if(group === S || prevgroup === S) {\r\n                //very crude needs fixing. TODO\r\n                if(!(obj.value === 'e' || obj.value === 'pi' || obj.value === Settings.IMAGINARY))\r\n                    vars.add(obj.value);\r\n            }\r\n            else if(group === PL || prevgroup === PL) {\r\n                variables(firstObject(obj.symbols), poly, vars);\r\n            }\r\n            else if(group === EX) {\r\n                if(!isNaN(obj.value))\r\n                    vars.add(obj.value);\r\n                variables(obj.power, poly, vars);\r\n            }\r\n            else if(group === FN && !poly) {\r\n                for(var i = 0; i < obj.args.length; i++) {\r\n                    variables(obj.args[i], poly, vars);\r\n                }\r\n            }\r\n        }\r\n\r\n        return vars.c.sort();\r\n    };\r\n\r\n    /**\r\n     * Returns the sum of an array\r\n     * @param {Array} arr\r\n     * @param {boolean} toNumber\r\n     * @returns {Symbol}\r\n     */\r\n    var arraySum = function (arr, toNumber) {\r\n        var sum = new Symbol(0);\r\n        for(var i = 0; i < arr.length; i++) {\r\n            var x = arr[i];\r\n            // Convert to symbol if not\r\n            sum = _.add(sum, !isSymbol(x) ? _.parse(x) : x);\r\n        }\r\n\r\n        return toNumber ? Number(sum) : sum;\r\n    };\r\n\r\n    /**\r\n     * Separates out the variables into terms of variabls.\r\n     * e.g. x+y+x*y+sqrt(2)+pi returns\r\n     * {x: x, y: y, x y: x*y, constants: sqrt(2)+pi\r\n     * @param {type} symbol\r\n     * @param {type} o\r\n     * @returns {undefined}\r\n     * @throws {Error} for expontentials\r\n     */\r\n    var separate = function (symbol, o) {\r\n        symbol = _.expand(symbol);\r\n        o = o || {};\r\n        var insert = function (key, sym) {\r\n            if(!o[key])\r\n                o[key] = new Symbol(0);\r\n            o[key] = _.add(o[key], sym.clone());\r\n        };\r\n        symbol.each(function (x) {\r\n            if(x.isConstant('all')) {\r\n                insert('constants', x);\r\n            }\r\n            else if(x.group === S) {\r\n                insert(x.value, x);\r\n            }\r\n            else if(x.group === FN && (x.fname === ABS || x.fname === '')) {\r\n                separate(x.args[0]);\r\n            }\r\n            else if(x.group === EX || x.group === FN) {\r\n                throw new Error('Unable to separate. Term cannot be a function!');\r\n            }\r\n            else {\r\n                insert(variables(x).join(' '), x);\r\n            }\r\n        });\r\n\r\n        return o;\r\n    };\r\n\r\n    /**\r\n     * Fills holes in an array with zero symbol or generates one with n zeroes\r\n     * @param {Array} arr\r\n     * @param {Number} n\r\n     */\r\n    var fillHoles = function (arr, n) {\r\n        n = n || arr.length;\r\n        for(var i = 0; i < n; i++) {\r\n            var sym = arr[i];\r\n            if(!sym)\r\n                arr[i] = new Symbol(0);\r\n        }\r\n        return arr;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Checks to see if the object provided is a Vector\r\n     * @param {Object} obj\r\n     */\r\n    var isVector = function (obj) {\r\n        return (obj instanceof Vector);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if the object provided is a Matrix\r\n     * @param {Object} obj\r\n     */\r\n    var isMatrix = function (obj) {\r\n        return (obj instanceof Matrix);\r\n    };\r\n\r\n    var isSet = function (obj) {\r\n        return (obj instanceof Set);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if a symbol is in group N\r\n     * @param {Symbol} symbol\r\n     */\r\n    var isNumericSymbol = function (symbol) {\r\n        return symbol.group === N || symbol.group === P;\r\n    };\r\n\r\n    /**\r\n     * Checks to see if a symbol is a variable with no multiplier nor power\r\n     * @param {Symbol} symbol\r\n     */\r\n    var isVariableSymbol = function (symbol) {\r\n        return symbol.group === S && symbol.multiplier.equals(1) && symbol.power.equals(1);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if the object provided is an Array\r\n     * @param {Object} arr\r\n     */\r\n    var isArray = function (arr) {\r\n        return Array.isArray(arr);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if a number is an integer\r\n     * @param {Number} num\r\n     */\r\n    var isInt = function (num) {\r\n        return /^[-+]?\\d+e?\\+?\\d*$/gim.test(num.toString());\r\n    };\r\n\r\n    /**\r\n     * @param {Number|Symbol} obj\r\n     * @returns {boolean}\r\n     */\r\n    var isNegative = function (obj) {\r\n        if(isSymbol(obj)) {\r\n            obj = obj.multiplier;\r\n        }\r\n        return obj.lessThan(0);\r\n    };\r\n    /**\r\n     * Safely stringify object\r\n     * @param o\r\n     */\r\n    var stringify = function (o) {\r\n        if(!o)\r\n            return o;\r\n        return String(o);\r\n    };\r\n\r\n    /**\r\n     * @param {String} str\r\n     * @returns {String} - returns a formatted string surrounded by brackets\r\n     */\r\n    var inBrackets = function (str) {\r\n        return '(' + str + ')';\r\n    };\r\n\r\n    /**\r\n     * A helper function to replace parts of string\r\n     * @param {String} str - The original string\r\n     * @param {Integer} from - The starting index\r\n     * @param {Integer} to - The ending index\r\n     * @param {String} with_str - The replacement string\r\n     * @returns {String} - A formatted string\r\n     */\r\n    var stringReplace = function (str, from, to, with_str) {\r\n        return str.substr(0, from) + with_str + str.substr(to, str.length);\r\n    };\r\n\r\n    /**\r\n     * the Parser uses this to check if it's allowed to convert the obj to type Symbol\r\n     * @param {Object} obj\r\n     * @returns {boolean}\r\n     */\r\n    var customType = function (obj) {\r\n        return obj !== undefined && obj.custom;\r\n    };\r\n\r\n    /**\r\n     * Checks to see if numbers are both negative or are both positive\r\n     * @param {Number} a\r\n     * @param {Number} b\r\n     * @returns {boolean}\r\n     */\r\n    var sameSign = function (a, b) {\r\n        return (a < 0) === (b < 0);\r\n    };\r\n\r\n    /**\r\n     * A helper function to replace multiple occurences in a string. Takes multiple arguments\r\n     * @example format('{0} nice, {0} sweet', 'something')\r\n     * //returns 'something nice, something sweet'\r\n     */\r\n    var format = function () {\r\n        var args = [].slice.call(arguments),\r\n                str = args.shift();\r\n        var new_str = str.replace(/{(\\d+)}/g, function (match, index) {\r\n            var arg = args[index];\r\n            return typeof arg === 'function' ? arg() : arg;\r\n        });\r\n\r\n        return new_str;\r\n    };\r\n\r\n    /**\r\n     * Generates an array with values within a range. Multiplies by a step if provided\r\n     * @param {Number} start\r\n     * @param {Number} end\r\n     * @param {Number} step\r\n     */\r\n    var range = function (start, end, step) {\r\n        var arr = [];\r\n        step = step || 1;\r\n        for(var i = start; i <= end; i++)\r\n            arr.push(i * step);\r\n        return arr;\r\n    };\r\n\r\n    /**\r\n     * Returns an array of all the keys in an array\r\n     * @param {Object} obj\r\n     * @returns {Array}\r\n     */\r\n    var keys = Object.keys;\r\n\r\n    /**\r\n     * Returns the first encountered item in an object. Items do not have a fixed order in objects\r\n     * so only use if you need any first random or if there's only one item in the object\r\n     * @param {Object} obj\r\n     * @param {String} key Return this key as first object\r\n     * @param {Boolean} both\r\n     * @returns {*}\r\n     */\r\n    var firstObject = function (obj, key, both) {\r\n        for(var x in obj)\r\n            break;\r\n        if(key)\r\n            return x;\r\n        if(both)\r\n            return {\r\n                key: x,\r\n                obj: obj[x]\r\n            };\r\n        return obj[x];\r\n    };\r\n\r\n    /**\r\n     * Substitutes out variables for two symbols, parses them to a number and them compares them numerically\r\n     * @param {Symbol} sym1\r\n     * @param {Symbol} sym2\r\n     * @param {String[]} vars - an optional array of variables to use\r\n     * @returns {bool}\r\n     */\r\n    var compare = function (sym1, sym2, vars) {\r\n        var n = 5; //a random number between 1 and 5 is good enough\r\n        var scope = {}; // scope object with random numbers generated using vars\r\n        var comparison;\r\n        for(var i = 0; i < vars.length; i++)\r\n            scope[vars[i]] = new Symbol(Math.floor(Math.random() * n) + 1);\r\n        block('PARSE2NUMBER', function () {\r\n            comparison = _.parse(sym1, scope).equals(_.parse(sym2, scope));\r\n        });\r\n        return comparison;\r\n    };\r\n\r\n    /**\r\n     * Is used to set a user defined function using the function assign operator\r\n     * @param {String} name\r\n     * @param {String[]} params_array\r\n     * @param {String} body\r\n     * @returns {Boolean}\r\n     */\r\n    var setFunction = function (name, params_array, body) {\r\n        validateName(name);\r\n        if(!isReserved(name)) {\r\n            params_array = params_array || variables(_.parse(body));\r\n            // The function gets set to PARSER.mapped function which is just\r\n            // a generic function call.\r\n            _.functions[name] = [_.mapped_function, params_array.length, {\r\n                    name: name,\r\n                    params: params_array,\r\n                    body: body\r\n                }];\r\n\r\n            return body;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Returns the minimum number in an array\r\n     * @param {Array} arr\r\n     * @returns {Number}\r\n     */\r\n    var arrayMax = function (arr) {\r\n        return Math.max.apply(undefined, arr);\r\n    };\r\n\r\n    /**\r\n     * Returns the maximum number in an array\r\n     * @param {Array} arr\r\n     * @returns {Number}\r\n     */\r\n    var arrayMin = function (arr) {\r\n        return Math.min.apply(undefined, arr);\r\n    };\r\n\r\n    /**\r\n     * Checks to see if two arrays are equal\r\n     * @param {Array} arr1 \r\n     * @param {Array} arr2 \r\n     */\r\n    var arrayEqual = function (arr1, arr2) {\r\n        arr1.sort();\r\n        arr2.sort();\r\n\r\n        // The must be of the same length\r\n        if(arr1.length === arr2.length) {\r\n            for(var i = 0; i < arr1.length; i++) {\r\n                // If any two items don't match we're done\r\n                if(arr1[i] !== arr2[i]) {\r\n                    return false;\r\n                }\r\n            }\r\n            // Otherwise they're equal\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Clones array with clonable items\r\n     * @param {Array} arr\r\n     * @returns {Array}\r\n     */\r\n    var arrayClone = function (arr) {\r\n        var new_array = [], l = arr.length;\r\n        for(var i = 0; i < l; i++)\r\n            new_array[i] = arr[i].clone();\r\n        return new_array;\r\n    };\r\n\r\n    /**\r\n     * Fills numbers between array values\r\n     * @param {Numbers[]} arr\r\n     * @param {Integer} slices\r\n     */\r\n    var arrayAddSlices = function (arr, slices) {\r\n        slices = slices || 20;\r\n        var retval = [];\r\n        var c, delta, e;\r\n        retval.push(arr[0]); //push the beginning\r\n        for(var i = 0; i < arr.length - 1; i++) {\r\n            c = arr[i];\r\n            delta = arr[i + 1] - c; //get the difference\r\n            e = delta / slices; //chop it up in the desired number of slices\r\n            for(var j = 0; j < slices; j++) {\r\n                c += e; //add the mesh to the last slice\r\n                retval.push(c);\r\n            }\r\n        }\r\n\r\n        return retval;\r\n    };\r\n\r\n    /**\r\n     * Gets nth roots of a number\r\n     * @param {Symbol} symbol\r\n     * @returns {Vector}\r\n     */\r\n    var nroots = function (symbol) {\r\n        var a, b;\r\n\r\n        if(symbol.group === FN && symbol.fname === '') {\r\n            a = Symbol.unwrapPARENS(_.parse(symbol).toLinear());\r\n            b = _.parse(symbol.power);\r\n        }\r\n        else if(symbol.group === P) {\r\n            a = _.parse(symbol.value);\r\n            b = _.parse(symbol.power);\r\n        }\r\n\r\n        if(a && b && (a.group === N) && b.group === N && a.multiplier.isNegative()) {\r\n            var _roots = [];\r\n\r\n            var parts = Symbol.toPolarFormArray(evaluate(symbol));\r\n            var r = parts[0];\r\n\r\n            //var r = _.parse(a).abs().toString();\r\n\r\n            //https://en.wikipedia.org/wiki/De_Moivre%27s_formula\r\n            var x = _.arg(a);\r\n            var n = b.multiplier.den.toString();\r\n            var p = b.multiplier.num.toString();\r\n\r\n            var formula = '(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})';\r\n\r\n            for(var i = 0; i < n; i++) {\r\n                var t = evaluate(_.parse(format(\"(({0})+2*pi*({1}))/({2})\", x, i, n))).multiplier.toDecimal();\r\n                _roots.push(evaluate(_.parse(format(formula, r, n, Settings.IMAGINARY, t, p))));\r\n            }\r\n            return Vector.fromArray(_roots);\r\n        }\r\n        else if(symbol.isConstant(true, true)) {\r\n            var sign = symbol.sign();\r\n            var x = evaluate(symbol.abs());\r\n            var root = _.sqrt(x);\r\n\r\n            var _roots = [root.clone(), root.negate()];\r\n\r\n            if(sign < 0)\r\n                _roots = _roots.map(function (x) {\r\n                    return _.multiply(x, Symbol.imaginary());\r\n                });\r\n\r\n        }\r\n        else {\r\n            _roots = [_.parse(symbol)];\r\n        }\r\n\r\n        return Vector.fromArray(_roots);\r\n    };\r\n\r\n    /**\r\n     * Sorts and array given 2 parameters\r\n     * @param {String} a\r\n     * @param {String} b\r\n     */\r\n    var comboSort = function (a, b) {\r\n        var l = a.length,\r\n                combined = []; //the linker\r\n        for(var i = 0; i < a.length; i++) {\r\n            combined.push([a[i], b[i]]); //create the map\r\n        }\r\n\r\n        combined.sort(function (x, y) {\r\n            return x[0] - y[0];\r\n        });\r\n\r\n        var na = [], nb = [];\r\n\r\n        for(i = 0; i < l; i++) {\r\n            na.push(combined[i][0]);\r\n            nb.push(combined[i][1]);\r\n        }\r\n\r\n        return [na, nb];\r\n    };\r\n    /**\r\n     * TODO: Pick a more descriptive name and better description\r\n     * Breaks a function down into it's parts wrt to a variable, mainly coefficients\r\n     * Example a*x^2+b wrt x\r\n     * @param {Symbol} fn\r\n     * @param {String} wrt\r\n     * @param {bool} as_obj\r\n     */\r\n    var decompose_fn = function (fn, wrt, as_obj) {\r\n        wrt = String(wrt); //convert to string\r\n        var ax, a, x, b;\r\n        if(fn.group === CP) {\r\n            var t = _.expand(fn.clone()).stripVar(wrt);\r\n            ax = _.subtract(fn.clone(), t.clone());\r\n            b = t;\r\n        }\r\n        else\r\n            ax = fn.clone();\r\n        a = ax.stripVar(wrt);\r\n        x = _.divide(ax.clone(), a.clone());\r\n        b = b || new Symbol(0);\r\n        if(as_obj)\r\n            return {\r\n                a: a,\r\n                x: x,\r\n                ax: ax,\r\n                b: b\r\n            };\r\n        return [a, x, ax, b];\r\n    };\r\n    /**\r\n     * Rounds a number up to x decimal places\r\n     * @param {Number} x\r\n     * @param {Number} s\r\n     */\r\n    var nround = function (x, s) {\r\n        if(isInt(x)) {\r\n            if(x >= Number.MAX_VALUE)\r\n                return x.toString();\r\n            return Number(x);\r\n        }\r\n\r\n        s = typeof s === 'undefined' ? 14 : s;\r\n        return Math.round(x * Math.pow(10, s)) / Math.pow(10, s);\r\n    };\r\n\r\n    /**\r\n     * Is used for u-substitution. Gets a suitable u for substitution. If for\r\n     * instance a is used in the symbol then it keeps going down the line until\r\n     * one is found that's not in use. If all letters are taken then it\r\n     * starts appending numbers.\r\n     * IMPORTANT! It assumes that the substitution will be undone\r\n     * beore the user gets to interact with the object again.\r\n     * @param {Symbol} symbol\r\n     */\r\n    var getU = function (symbol) {\r\n        //start with u\r\n        var u = 'u', //start with u\r\n                v = u, //init with u\r\n                c = 0, //postfix number\r\n                vars = variables(symbol);\r\n        //make sure this variable isn't reserved and isn't in the variable list\r\n        while(!(RESERVED.indexOf(v) === - 1 && vars.indexOf(v) === - 1))\r\n            v = u + c++;\r\n        //get an empty slot. It seems easier to just push but the\r\n        //problem is that we may have some which are created by clearU\r\n        for(var i = 0, l = RESERVED.length; i <= l; i++)\r\n            //reserved cannot equals false or 0 so we can safely check for a falsy type\r\n            if(!RESERVED[i]) {\r\n                RESERVED[i] = v; //reserve the variable\r\n                break;\r\n            }\r\n        return v;\r\n    };\r\n\r\n    /**\r\n     * Clears the u variable so it's no longer reserved\r\n     * @param {String} u\r\n     */\r\n    var clearU = function (u) {\r\n        var indx = RESERVED.indexOf(u);\r\n        if(indx !== -1)\r\n            RESERVED[indx] = undefined;\r\n    };\r\n\r\n    /**\r\n     * Loops through each item in object and calls function with item as param\r\n     * @param {Object|Array} obj\r\n     * @param {Function} fn\r\n     */\r\n    var each = function (obj, fn) {\r\n        if(isArray(obj)) {\r\n            var l = obj.length;\r\n            for(var i = 0; i < l; i++)\r\n                fn.call(obj, i);\r\n        }\r\n        else {\r\n            for(var x in obj)\r\n                if(obj.hasOwnProperty(x))\r\n                    fn.call(obj, x);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Checks to see if a number is an even number\r\n     * @param {Number} num\r\n     * @returns {boolean}\r\n     */\r\n    var even = function (num) {\r\n        return num % 2 === 0;\r\n    };\r\n\r\n    /**\r\n     * Checks to see if a fraction is divisible by 2\r\n     * @param {Number} num\r\n     * @returns {boolean}\r\n     */\r\n    var evenFraction = function (num) {\r\n        return 1 / (num % 1) % 2 === 0;\r\n    };\r\n\r\n    /**\r\n     * Strips duplicates out of an array\r\n     * @param {Array} arr\r\n     */\r\n    var arrayUnique = function (arr) {\r\n        var l = arr.length, a = [];\r\n        for(var i = 0; i < l; i++) {\r\n            var item = arr[i];\r\n            if(a.indexOf(item) === -1)\r\n                a.push(item);\r\n        }\r\n        return a;\r\n    };\r\n\r\n    /**\r\n     * Gets all the variables in an array of Symbols\r\n     * @param {Symbol[]} arr \r\n     */\r\n    var arrayGetVariables = function (arr) {\r\n        var vars = variables(arr[0], null, null, true);\r\n\r\n        //get all variables\r\n        for(var i = 1, l = arr.length; i < l; i++)\r\n            vars = vars.concat(variables(arr[i]));\r\n        //remove duplicates\r\n        vars = arrayUnique(vars).sort();\r\n\r\n        //done\r\n        return vars;\r\n    };\r\n\r\n    /**\r\n     * Removes duplicates from an array. Returns a new array\r\n     * @param {Array} arr\r\n     * @param {Function} condition\r\n     */\r\n    var removeDuplicates = function (arr, condition) {\r\n        var conditionType = typeof condition;\r\n\r\n        if(conditionType !== 'function' || conditionType === 'undefined') {\r\n            condition = function (a, b) {\r\n                return a === b;\r\n            };\r\n        }\r\n\r\n        var seen = [];\r\n\r\n        while(arr.length) {\r\n            var a = arr[0];\r\n            //only one element left so we're done\r\n            if(arr.length === 1) {\r\n                seen.push(a);\r\n                break;\r\n            }\r\n            var temp = [];\r\n            seen.push(a); //we already scanned these\r\n            for(var i = 1; i < arr.length; i++) {\r\n                var b = arr[i];\r\n                //if the number is outside the specified tolerance\r\n                if(!condition(a, b))\r\n                    temp.push(b);\r\n            }\r\n            //start over with the remainder\r\n            arr = temp;\r\n        }\r\n\r\n        return seen;\r\n    };\r\n\r\n    /**\r\n     * Reserves the names in an object so they cannot be used as function names\r\n     * @param {Object} obj\r\n     */\r\n    var reserveNames = function (obj) {\r\n        var add = function (item) {\r\n            if(RESERVED.indexOf(item) === -1)\r\n                RESERVED.push(item);\r\n        };\r\n\r\n        if(typeof obj === 'string')\r\n            add(obj);\r\n        else {\r\n            each(obj, function (x) {\r\n                add(x);\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Removes an item from either an array or an object. If the object is an array, the index must be\r\n     * specified after the array. If it's an object then the key must be specified\r\n     * @param {Object|Array} obj\r\n     * @param {Integer} indexOrKey\r\n     */\r\n    var remove = function (obj, indexOrKey) {\r\n        var result;\r\n        if(isArray(obj)) {\r\n            result = obj.splice(indexOrKey, 1)[0];\r\n        }\r\n        else {\r\n            result = obj[indexOrKey];\r\n            delete obj[indexOrKey];\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Creates a temporary block in which one of the global settings is temporarily modified while\r\n     * the function is called. For instance if you want to parse directly to a number rather than have a symbolic\r\n     * answer for a period you would set PARSE2NUMBER to true in the block.\r\n     * @example block('PARSE2NUMBER', function(){//symbol being parsed to number}, true);\r\n     * @param {String} setting - The setting being accessed\r\n     * @param {Function} f\r\n     * @param {boolean} opt - The value of the setting in the block\r\n     * @param {String} obj - The obj of interest. Usually a Symbol but could be any object\r\n     */\r\n    var block = function (setting, f, opt, obj) {\r\n        var current_setting = Settings[setting];\r\n        Settings[setting] = opt === undefined ? true : !!opt;\r\n        var retval = f.call(obj);\r\n        Settings[setting] = current_setting;\r\n        return retval;\r\n    };\r\n\r\n    /**\r\n     * provide a mechanism for accessing functions directly. Not yet complete!!!\r\n     * Some functions will return undefined. This can maybe just remove the\r\n     * function object at some point when all functions are eventually\r\n     * housed in the global function object. Returns ALL parser available\r\n     * functions. Parser.functions may not contain all functions\r\n     */\r\n    var importFunctions = function () {\r\n        var o = {};\r\n        for(var x in _.functions)\r\n            o[x] = _.functions[x][0];\r\n        return o;\r\n    };\r\n\r\n    /**\r\n     * Converts function arguments to an array. Now used by gcd and lcm in Algebra.js :)\r\n     * @param {Array|object} obj\r\n     */\r\n    var arguments2Array = function (obj) {\r\n        return [].slice.call(obj);\r\n    };\r\n\r\n    /**\r\n     * Returns the coefficients of a symbol given a variable. Given ax^2+b^x+c, it divides\r\n     * each nth term by x^n.\r\n     * @param {Symbol} symbol\r\n     * @param {Symbol} wrt\r\n     */\r\n    var getCoeffs = function (symbol, wrt, info) {\r\n        var coeffs = [];\r\n        //we loop through the symbols and stick them in their respective\r\n        //containers e.g. y*x^2 goes to index 2\r\n        symbol.each(function (term) {\r\n            if(term.contains(wrt)) {\r\n                //we want only the coefficient which in this case will be everything but the variable\r\n                //e.g. a*b*x -> a*b if the variable to solve for is x\r\n                var coeff = term.stripVar(wrt),\r\n                        x = _.divide(term.clone(), coeff.clone()),\r\n                        p = x.power.toDecimal();\r\n            }\r\n            else {\r\n                coeff = term;\r\n                p = 0;\r\n            }\r\n            var e = coeffs[p];\r\n            //if it exists just add it to it\r\n            coeffs[p] = e ? _.add(e, coeff) : coeff;\r\n\r\n        }, true);\r\n\r\n        for(var i = 0; i < coeffs.length; i++)\r\n            if(!coeffs[i])\r\n                coeffs[i] = new Symbol(0);\r\n        //fill the holes\r\n        return coeffs;\r\n    };\r\n\r\n    /**\r\n     * As the name states. It forces evaluation of the expression\r\n     * @param {Symbol} symbol\r\n     * @param {Symbol} o\r\n     */\r\n    var evaluate = function (symbol, o) {\r\n        return block('PARSE2NUMBER', function () {\r\n            return _.parse(symbol, o);\r\n        }, true);\r\n    };\r\n\r\n    /**\r\n     * Converts an array to a vector. Consider moving this to Vector.fromArray\r\n     * @param {String[]|String|Symbol|Number|Number[]} x\r\n     */\r\n    var convertToVector = function (x) {\r\n        if(isArray(x)) {\r\n            var vector = new Vector([]);\r\n            for(var i = 0; i < x.length; i++)\r\n                vector.elements.push(convertToVector(x[i]));\r\n            return vector;\r\n        }\r\n        //Ensure that a nerdamer ready object is returned\r\n        if(!isSymbol(x))\r\n            return _.parse(x);\r\n        return x;\r\n    };\r\n\r\n    /**\r\n     * Generates prime numbers up to a specified number\r\n     * @param {Number} upto\r\n     */\r\n    var generatePrimes = function (upto) {\r\n        //get the last prime in the array\r\n        var last_prime = PRIMES[PRIMES.length - 1] || 2;\r\n        //no need to check if we've already encountered the number. Just check the cache.\r\n        for(var i = last_prime; i < upto; i++) {\r\n            if(isPrime(i))\r\n                PRIMES.push(i);\r\n        }\r\n    };\r\n    /**\r\n     * Checks to see if all arguments are numbers\r\n     * @param {object} args\r\n     */\r\n    var allNumbers = function (args) {\r\n        for(var i = 0; i < args.length; i++)\r\n            if(args[i].group !== N)\r\n                return false;\r\n        return true;\r\n    };\r\n    /*\r\n     * Checks if all arguments aren't just all number but if they\r\n     * are constants as well e.g. pi, e.\r\n     * @param {object} args\r\n     */\r\n    var allConstants = function (args) {\r\n        for(var i = 0; i < args.length; i++) {\r\n            if(args[i].isPi() || args[i].isE())\r\n                continue;\r\n            if(!args[i].isConstant(true))\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Used to multiply two expression in expanded form\r\n     * @param {Symbol} a\r\n     * @param {Symbol} b\r\n     */\r\n    var mix = function (a, b, opt) {\r\n        // Flip them if b is a CP or PL and a is not\r\n        if(b.isComposite() && !a.isComposite() || b.isLinear() && !a.isLinear()) {\r\n            [a, b] = [b, a];\r\n        }\r\n        // A temporary variable to hold the expanded terms\r\n        var t = new Symbol(0);\r\n        if(a.isLinear()) {\r\n            a.each(function (x) {\r\n                // If b is not a PL or a CP then simply multiply it\r\n                if(!b.isComposite()) {\r\n                    var term = _.multiply(_.parse(x), _.parse(b));\r\n                    t = _.add(t, _.expand(term, opt));\r\n                }\r\n                // Otherwise multiply out each term.\r\n                else if(b.isLinear()) {\r\n                    b.each(function (y) {\r\n                        var term = _.multiply(_.parse(x), _.parse(y));\r\n                        var expanded = _.expand(_.parse(term), opt);\r\n                        t = _.add(t, expanded);\r\n                    }, true);\r\n                }\r\n                else {\r\n                    t = _.add(t, _.multiply(x, _.parse(b)));\r\n                }\r\n            }, true);\r\n        }\r\n        else {\r\n            // Just multiply them together\r\n            t = _.multiply(a, b);\r\n        }\r\n\r\n        // The expanded function is now t\r\n        return t;\r\n    };\r\n\r\n//Exceptions ===================================================================\r\n    //Is thrown for division by zero\r\n    var DivisionByZero = customError('DivisionByZero');\r\n    // Is throw if an error occured during parsing\r\n    var ParseError = customError('ParseError');\r\n    // Is thrown if the expression results in undefined\r\n    var UndefinedError = customError('UndefinedError');\r\n    // Is throw input is out of the function domain\r\n    var OutOfFunctionDomainError = customError('OutOfFunctionDomainError');\r\n    // Is throw if a function exceeds x amount of iterations\r\n    var MaximumIterationsReached = customError('MaximumIterationsReached');\r\n    // Is thrown if the parser receives an incorrect type\r\n    var NerdamerTypeError = customError('NerdamerTypeError');\r\n    // Is thrown if bracket parity is not correct\r\n    var ParityError = customError('ParityError');\r\n    // Is thrown if an unexpectd or incorrect operator is encountered\r\n    var OperatorError = customError('OperatorError');\r\n    // Is thrown if an index is out of range.\r\n    var OutOfRangeError = customError('OutOfRangeError');\r\n    // Is thrown if dimensions are incorrect. Mostly for matrices\r\n    var DimensionError = customError('DimensionError');\r\n    // Is thrown if variable name violates naming rule\r\n    var InvalidVariableNameError = customError('InvalidVariableNameError');\r\n    // Is thrown if the limits of the library are exceeded for a function\r\n    // This can be that the function become unstable passed a value\r\n    var ValueLimitExceededError = customError('ValueLimitExceededError');\r\n    // Is throw if the value is an incorrect LH or RH value\r\n    var NerdamerValueError = customError('NerdamerValueError');\r\n    // Is thrown if the value is an incorrect LH or RH value\r\n    var SolveError = customError('SolveError');\r\n    // Is thrown for an infinite loop\r\n    var InfiniteLoopError = customError('InfiniteLoopError');\r\n    // Is thrown if an operator is found when there shouldn't be one\r\n    var UnexpectedTokenError = customError('UnexpectedTokenError');\r\n\r\n    var exceptions = {\r\n        DivisionByZero: DivisionByZero,\r\n        ParseError: ParseError,\r\n        OutOfFunctionDomainError: OutOfFunctionDomainError,\r\n        UndefinedError: UndefinedError,\r\n        MaximumIterationsReached: MaximumIterationsReached,\r\n        NerdamerTypeError: NerdamerTypeError,\r\n        ParityError: ParityError,\r\n        OperatorError: OperatorError,\r\n        OutOfRangeError: OutOfRangeError,\r\n        DimensionError: DimensionError,\r\n        InvalidVariableNameError: InvalidVariableNameError,\r\n        ValueLimitExceededError: ValueLimitExceededError,\r\n        NerdamerValueError: NerdamerValueError,\r\n        SolveError: SolveError,\r\n        InfiniteLoopError: InfiniteLoopError,\r\n        UnexpectedTokenError: UnexpectedTokenError\r\n    };\r\n//Math2 ========================================================================\r\n    //This object holds additional functions for nerdamer. Think of it as an extension of the Math object.\r\n    //I really don't like touching objects which aren't mine hence the reason for Math2. The names of the\r\n    //functions within are pretty self-explanatory.\r\n    //NOTE: DO NOT USE INLINE COMMENTS WITH THE MATH2 OBJECT! THIS BREAK DURING COMPILATION OF BUILDFUNCTION.\r\n    var Math2 = {\r\n        csc: function (x) {\r\n            return 1 / Math.sin(x);\r\n        },\r\n        sec: function (x) {\r\n            return 1 / Math.cos(x);\r\n        },\r\n        cot: function (x) {\r\n            return 1 / Math.tan(x);\r\n        },\r\n        acsc: function (x) {\r\n            return Math.asin(1 / x);\r\n        },\r\n        asec: function (x) {\r\n            return Math.acos(1 / x);\r\n        },\r\n        acot: function (x) {\r\n            return (Math.PI / 2) - Math.atan(x);\r\n        },\r\n        // https://gist.github.com/jiggzson/df0e9ae8b3b06ff3d8dc2aa062853bd8\r\n        erf: function (x) {\r\n            var t = 1 / (1 + 0.5 * Math.abs(x));\r\n            var result = 1 - t * Math.exp(-x * x - 1.26551223 +\r\n                    t * (1.00002368 +\r\n                            t * (0.37409196 +\r\n                                    t * (0.09678418 +\r\n                                            t * (-0.18628806 +\r\n                                                    t * (0.27886807 +\r\n                                                            t * (-1.13520398 +\r\n                                                                    t * (1.48851587 +\r\n                                                                            t * (-0.82215223 +\r\n                                                                                    t * (0.17087277)))))))))\r\n                    );\r\n            return x >= 0 ? result : -result;\r\n        },\r\n        diff: function (f) {\r\n            var h = 0.001;\r\n\r\n            var derivative = function (x) {\r\n                return (f(x + h) - f(x - h)) / (2 * h);\r\n            };\r\n\r\n            return derivative;\r\n        },\r\n        median: function (...values) {\r\n            values.sort(function (a, b) {\r\n                return a - b;\r\n            });\r\n\r\n            var half = Math.floor(values.length / 2);\r\n\r\n            if(values.length % 2)\r\n                return values[half];\r\n\r\n            return (values[half - 1] + values[half]) / 2.0;\r\n        },\r\n        /*\r\n         * Reverses continued fraction calculation\r\n         * @param {obj} contd\r\n         * @returns {Number}\r\n         */\r\n        fromContinued: function (contd) {\r\n            var arr = contd.fractions.slice();\r\n            var e = 1 / arr.pop();\r\n            for(var i = 0, l = arr.length; i < l; i++) {\r\n                e = 1 / (arr.pop() + e);\r\n            }\r\n            return contd.sign * (contd.whole + e);\r\n        },\r\n        /*\r\n         * Calculates continued fractions\r\n         * @param {Number} n\r\n         * @param {Number} x The number of places\r\n         * @returns {Number}\r\n         */\r\n        continuedFraction: function (n, x) {\r\n            x = x || 20;\r\n            var sign = Math.sign(n); /*store the sign*/\r\n            var absn = Math.abs(n); /*get the absolute value of the number*/\r\n            var whole = Math.floor(absn); /*get the whole*/\r\n            var ni = absn - whole; /*subtract the whole*/\r\n            var c = 0; /*the counter to keep track of iterations*/\r\n            var done = false;\r\n            var epsilon = 1e-14;\r\n            var max = 1e7;\r\n            var e, w;\r\n            var retval = {\r\n                whole: whole,\r\n                sign: sign,\r\n                fractions: []\r\n            };\r\n            /*start calculating*/\r\n            while(!done && ni !== 0) {\r\n                /*invert and get the whole*/\r\n                e = 1 / ni;\r\n                w = Math.floor(e);\r\n                if(w > max) {\r\n                    /*this signals that we may have already gone too far*/\r\n                    var d = Math2.fromContinued(retval) - n;\r\n                    if(d <= Number.EPSILON)\r\n                        break;\r\n                }\r\n                /*add to result*/\r\n                retval.fractions.push(w);\r\n                /*move the ni to the decimal*/\r\n                ni = e - w;\r\n                /*ni should always be a decimal. If we have a whole number then we're in the rounding errors*/\r\n                if(ni <= epsilon || c >= x - 1)\r\n                    done = true;\r\n                c++;\r\n            }\r\n            /*cleanup 1/(n+1/1) = 1/(n+1) so just move the last digit one over if it's one*/\r\n            var idx = retval.fractions.length - 1;\r\n            if(retval.fractions[idx] === 1) {\r\n                retval.fractions.pop();\r\n                /*increase the last one by one*/\r\n                retval.fractions[--idx]++;\r\n            }\r\n            return retval;\r\n        },\r\n        bigpow: function (n, p) {\r\n            if(!(n instanceof Frac))\r\n                n = Frac.create(n);\r\n            if(!(p instanceof Frac))\r\n                p = Frac.create(p);\r\n            var retval = new Frac(0);\r\n            if(p.isInteger()) {\r\n                retval.num = n.num.pow(p.toString());\r\n                retval.den = n.den.pow(p.toString());\r\n            }\r\n            else {\r\n                var num = Frac.create(Math.pow(n.num, p.num));\r\n                var den = Frac.create(Math.pow(n.den, p.num));\r\n\r\n                retval.num = Math2.nthroot(num, p.den.toString());\r\n                retval.den = Math2.nthroot(den, p.den);\r\n            }\r\n            return retval;\r\n        },\r\n        //http://stackoverflow.com/questions/15454183/how-to-make-a-function-that-computes-the-factorial-for-numbers-with-decimals\r\n        gamma: function (z) {\r\n            var g = 7;\r\n            var C = [\r\n                0.99999999999980993,\r\n                676.5203681218851,\r\n                -1259.1392167224028,\r\n                771.32342877765313,\r\n                -176.61502916214059,\r\n                12.507343278686905,\r\n                -0.13857109526572012,\r\n                9.9843695780195716e-6,\r\n                1.5056327351493116e-7]\r\n                    ;\r\n\r\n            if(z < 0.5)\r\n                return Math.PI / (Math.sin(Math.PI * z) * Math2.gamma(1 - z));\r\n            else {\r\n                z -= 1;\r\n\r\n                var x = C[0];\r\n                for(var i = 1; i < g + 2; i++)\r\n                    x += C[i] / (z + i);\r\n\r\n                var t = z + g + 0.5;\r\n                return Math.sqrt(2 * Math.PI) * Math.pow(t, (z + 0.5)) * Math.exp(-t) * x;\r\n            }\r\n        },\r\n        //factorial\r\n        bigfactorial: function (x) {\r\n            var retval = new bigInt(1);\r\n            for(var i = 2; i <= x; i++)\r\n                retval = retval.times(i);\r\n            return new Frac(retval);\r\n        },\r\n        //https://en.wikipedia.org/wiki/Logarithm#Calculation\r\n        bigLog: function (x) {\r\n            var CACHE = [\"-253631954333118718762629409109262279926288908775918712466601196032/39970093576053625963957478139049824030906352922262642968060706375\", \"0\", \"24553090145869607172412918483124184864289170814122579923404694986469653261608528681589949629750677407356463601998534945057511664951799678336/35422621391945757431676178435630229283255250779216421054188228659061954317501699707236864189383591478024245495110561124597124995986978302375\", \"369017335340917140706044240090243368728616279239227943871048759140274862131699550043150713059889196223917527172547/335894053932612728969975338549993764554481173661218585876475837409922537622385232776657791604345125227005476864000\", \"24606853025626737903121303930100462245506322607985779603220820323211395607931699126390918477501325805513849611930008427268176602460462988972957593458726734897129954728102144/17750092415977639787139561330326170936321452137635322313122938207611787444311735251389066106937796085669460151963285086542745859461943369606018450213014148175716400146484375\", \"399073568781976806715759409052286641738926636328983929439450824555613704676637191564699164303012247386095942144825603522401740680808466858044/247958349743620302021733249049411604982786755454514947379317600613433680222511897950658049325685140346169718465773927872179874971908848116625\", \"1468102989495846944084741146947295378041808701256909016224309866143294556551407470861354311593351276612463858816796714569499021375899793849136855085849133702029337910502448189055357182595424959360/819363879309286303497217527375463120404739098260200279520788950777458900438307356738082930586032462601215802636320993648007907724899611296693997216938989854861043298494990214825163523387600982777\", \"5896704855274661767824574093605344871722790278354431422729640950821239030785642943033153793245906863203822369276271050164634206965056233097479117980782641839669/3030306850569309344013726745100070601277982132543905537366562638553198167007159067544789592089960911065181606283478843359856123992707598685058297067179343872000\", \"76631772943534985713873427262830314617912556928476573358548256872141516989538374761909611879922349479420014771499018155447198112155515453671128814488139633810493264352294560043912066253026059140653027326566801398784/36852092933388988649396042883218509607503204211148493545892849595498822817623842579026942621098851631842754395231561679671400197056377380063233740202370686144673585955581403046886083948450136247134308381940165804875\", \"3159076083816399509754948610929467278257473888282947311280653574634802580912280940686954763313882823327077171624015737719617373932318151594325834524000275847475866299387913048/1437757485694188822758304467756419845842037623148461107362957994816554782989250555362514354661961482939226272309026092009962414616417412938087494467254146002233028411865234375\", \"22266067259907364984531611601870291368272674573653403965630628996687370994139884833897773468149149664829922302484782423514167405397665098388400450149078982462318781750661005833037235183394221496186539779712428265837926417581952/9670030144664428565128962309657100138096047028794689249320859276197340398920725569428532293373676415359965773460364494998334259893079003125373872108770534788283842907318071170285038777091588292539102269617376180390982915567375\", \"14604654564989239958569331443385369522850975185358647132770022716433280072271007767111036877803328768910274400515590151934676819262085211828028638417329558229123989556376108454497813055/6090614019162516693013973409650613208227889078878781039105047015752493519149314227721984436973374032279421344818329285207124280297611253861173835238379831004010748379874393292231671808\", \"1901241885407696031217292877862925220917660047127261026827869027159993239567933534052663335498281439239753018507182016153657409777749792228538380379703411298411623469292891476969894084838876001545818141543890273256985768690847587711270930688/765116019778838839812655402103512685695769161212360553099732689795578904762091216998790589926057819838537805856579109910198553330075924857419395160755642371550113347465300208422126945265887065434116781678702741657275181694851670325469434625\", \"139459806786604751793737926146840623607010208216289543036026206208962059593900745886202214788747453279179283344350478734275973878932538430194363355795823581315329311220701640235653288975569812161436/54371368534412517053056101353618694718215711767266376573138772968257303578467926450212293233332401067673270853953399269852376592855992724934941173346260129257754416412476202526978443681584633116375\", \"1045669091124493070709683241190022970908640501171378776604126771144008324358233819560649021940145166254659028524319517244711645162132513416238958170819347361185944945680269442845829390112062101255500836072082817820950448463314034677353723256969344/396228259004446234921310936915931611736815598535963504660076315228798989932959459406702091180060429080345146735173591749448509810270759531977278642135591672189002006272326131885315743181289970885337574780897529347356567086535505950450897216796875\", \"9912919238915437302006264477931031611447467070103973106567538528951878797932559935860738745374437522819124347510590800370471910492338584284092534264608801221235029062881964101996762011296996851893455828946521/3660537472668264151218961634689665210933936249986285290553357254224360417386515311493310199319523687171757653216994741150377508234317025158302057758196429623723072084157928224798322861732880034847243894784000\", \"9263710175433181746575186369318246002919895649622127410824041370079225200282403368319370743363303164313395723904510539050157032684710468364067204876434546848634842333436957245275217583248805993142227630297924119330553308466662488683624783307023014909360640/3341177182697517248552428837661919299725031035849865632511882688786226888137634168024976033652753689210700218163621739078534353578510364301481093730054725078138658805025014615651043313990684347632166030359086885561104034510990826655289288319840595753002771\", \"5116082230713622171832327542439052727465114322479570603905499496221224653983960598946033081212909066917137546065542953865612718836914393275681318667667521726785633638189373998191090501201427906618075889744489190209584/1805752553736060443820406101277706970767657006346276183748749630179442318063568286372320188433843729960294965366346522303898609655762491623098453269916163621089005711823488749297418113474056676109581110715068124438875\", \"246569125619713282434448566970352231845414317018379160824176638351574938993535464763890962336882760882398479702237564384291290459961036068916857265499633061660562532011248501476114401629839742058389195725393702000011860799793778295606988057303225493814005789533570432/85307063020836305797178273029353623060860009152114361453434032434699636078115114412588719432277441055049132559782203988387794711585368296817222565434951256788867244687081233632650953850383220864394261763844194948389861147622944651546912394593164406926489862036343375\", \"133672026303452911046163998480860917119290576658330909785707604886881155606725822685088929236266583416708668502760907677019598002175122453170574729028452721476464728566191464897928696630979863154661704374206171469014225143/45398130975270785045482567762871405072140548998125471025451666500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\", \"6041693953360002800224091673336562508913199995987479264605216252220579740134601435770085920869376641180763419907442721705887169884230643795126568815123647603047739799302562095542459344811429882053086550900803768964612193941424128649976704727183797495759082741166938351872/2016766992122395667828553277997478570503475626107286343497917705446132017125079612756035254750822860815515899557855166824523851779156336235294914777307802256439645525835223691751931866188957324792276149549076500784191791380803500156776088683900346065830066370370083309875\", \"705868391597244582764749229356331441978820024796066870551110486625729826111158236686696326058778874201639006234449557592353247542995871491078308187261304930042019640830629526023972693107193897009168955674240659026247094657679060/231848642748474339277532000336338632910990823562381469441716922006107433404523316252618490265927265734670539384485699132080062215196462178933963957679882342083893417545858074378754089719547920901917516016346211301054206383643383\", \"101832160604157943093944673541651013907278188571533075311673249923948856034633446617630054761681006062910980371900782781226979391765818325065031889334563981235894369036439929651260587335544056975715076598739977065390678221999918899003881778449092038750712969437519295878491018112/32944277910571666002449086492515464541550138004002141571670657643770713783329063548790202120805341989608877739811787937782240802963962520261844114327432160788193314874913687387269408387417806176202979244637915812905426565263196954203487934225589622864145960079736633434831996625\", \"10655703119271468913597640479490594180964700448340778168715956712130636958373270202484276402718566314881119559090842449610957974112230306343486091910217340665146602598568991520563987490686996746558858366002301982443029430290679385551/3398412687366638541233365137084722368200311117891192348532156645374786104142009695796409107380345795998400850838706661851176885183144928701608654514812261697598380070746520197171576610572921007069104300695592751543563472456384512000\", \"1903039332876763837419920240543738799531131775028971323439870868730321221615515008394327723508670975623498588291298064320786970626232668956372004004897872810230178526101184611242511193415796638694370503100219710864543168952682617801833318493436174387568067811938490953495819438108686336/598806534367503338307287246320963280558134937382149405305466709787179429317914803617527827862441615350396864359976273212272586892074799651088317544101755361439294687323233086696182687664637422796995789967075271448560870681210580691574924544896656175563265378514188341796398162841796875\", \"525573915563826130963525826191411949262846916750432019596028344808298471293378917508549164993368392834023782480702893643486699787870059946429810070222126260200026332874480239090370088123833491499400991181659445914352500247596757005142623368/163278727324937389095822405034435687776345799835442022795533783889356344755225815267819508608559076191292900367982490827396869405536484846115955581043091229202052407483776587687967125885665493681707461345895999542381476164157058393971431375\", \"9263815657177858787273494705338516861045771674838057329170239610953039987023429736752079544014780707408666628475997291124805562998227296677616204140605356257712022384368492575381355563976330347792504605666631512343447560301417325154003481040250148561839861837778597346623630046623751094400/2843321709948499955095590862256744532227698001408929142548057792217790532624003190447363578048562448168721539177458065482170148482375585867230123873178100117094533143052886527452665480614620123764036974180917207421482431983407742154634391264619615289225747664532332469783301704643254076601\", \"407959339726114455622180187758753007349209016396248763075759257357925636039752474207685682218422721827857994768023399625060206708378433960993946156803948655098667156937949174400873748557248801874735834957795040139401560494087476967548060208243867/123780218751812156744401121690996305978134694678934447237402511116731459214498784497436358160964198336874043702652746834763131444030185151143987331404604087778514863973633941401826334750268416015224906056576641018962863645043976537664227639296000\", \"2547676391598917379516698439971914695230548782904479778605691338364453606537643088857116141939170899135026552016969320061900926954008522781162186995856580955090548471448276736878300717869625651893741316530109438876067419826217901657017506157997588944233677467357220316084583383623602865379325184/764562034757392298786420374672266498815021229519853724850874576419885380830752931701831256959159800764672605004880389358601658343203513177084389490286723240185146570925957286083025676875197029662038213216541352875570101363668917766225709569356861275434470568767077844675593176178611021135573625\", \"186545352286463730559933346565311535598243666022232037054735807289501173444103692309735768703898330430135399033529355360391658728987379385732098960609744313878477967971557204207043802935782878745271859468248704012618254203101767841517569443555143252/55399179641621656233589820996143825959365789093262978988289445625153099592463372579496245442338653053662134699646413817866770218574795378644415019944304868289119443774932782235638737888469746745621382139263856603239588594078668393194675445556640625\", \"664884440164786473344854955309049113269357314957985265728106924238588705533437169796551912202931185746193155801905841712503407258166135075966280435780812714252670362202091663287095423712596462690753468682634261029392794173636943978404002804413009590005984736612421172979101972556772005594499779860608/195485517776407145286424460448995460754674039560651791192647586550615878988380153730602665795647187884543361218962125172808792176382956599256188706636727418572541254480798303566840010217729386905041217793614214518363859058348249961790104618910877813067510758225302884815410347238200133693756493703875\", \"2614957283934314904315471338485451166053664494383241929385424599389309215073267052860464009981063483440201193771607520572077231889699858482582363845275452280606276949653970992719332472370351170732899676316967244504534154616036371979031399425846100527685/761493664432749089312665480773496290658029971027686543404885407644062485746072719559288231362060149626237939029641098328278650939665665969011529293869562636656650999759724704272743235210867676873525147820749560155294022488994426729939894753293900972032\", \"124843380518493746761140367283007507854364503961156704095198010255465940085534099747297600085903814014415830785663764373057896014399822131175202342399536439284123918855893825207202244831315575594886675813256448846863723093240955901916229136393454605455444105444987028391748121054399538064686074523506176/36022228212051654395480210378626648518430280334458144892889271272122662467638331091863215146548048144675657239846337165813938424387499358852301016926312083940212100001220180762189978024821166744964908871443681332664798940660421469519997746775275873085770018269706847741064037876137315001228315806659875\", \"827992369063043155578730871896750570951766628472810506926098505028264552046829097082095665194000002802661600196840639204300804225352337632259980703832713031790922485730615305441309917696044954289187837653933158950774246017223571461858939407386087081525130831392/236805932823686534991153393869288530368011574665859226704279685567723830696754821658770176385138917722808377962346690757191122309876922069867472518117628639913077442806147910884267694879089753138429767401700283014143248445966474839193628309668702223994071394625\", \"17347276886878323736540051321582548724378497839789943634071026331001588645519865992773157565595886250230140452154269197770615097377486013097979087647774513500701793885978192218455687078883766086309728287172567466406449372659680040183273634701092561727514713494914793425407149186041796935055187281744386432/4919325621804683623339606849970832094714371903709195539440424738973575902329797546592497378000858196173718145883783709223158260700365224756081275272021856393735663399552166737690038832550853145831185979094979556715294990257315369124065787473707136464772247917156232366320267601622617803514003753662109375\", \"137984231830526866236186357461458917020538108058615632801298091031540729111527734872044790487396302545910108285921421417358113055522725197998483383380192391312304647004240060970929072498293210057120617332323445379424867965764749534125081131327565507524502163460761/38810445792642817561168950890315210470940006613819790543653745327778579787694809782601777514116858514049585074667085399925278459138508514838268321349069481334967221455722811414399738756151414906092225265355449011152267068726417045644222323488445626292574879744000\", \"746567120547823334914136339633766098626636643449144032626270358619125402826113269699709721071135471625588981126637674402048519990010499180844665151971356149292818375448504122545400227696621572263621729512461528550588108384619064912224884465737417596190735966915167530332762203074440688676123756162572829692160/208334337057923929636884170505570363171441147899816815785150954417598643614152856767186132467069365605496210036171429712485182162940460120834349006784956522600679357307849981862006710239311750261522832996877712350330290831638640913932265004107623954913155144975252743257846945609734368518424172846119306643431\", \"64649371728330695076928013661001819989330953381731372450140483779536126948957993261299287753791770622512248630224724990234903928056275080682537641377393210728546364176267034339221558641084730052304770498929958838997239635790469536857863963589118888238069738647239076/17903951498200212327802847425913723358452100686246224008745414214690047078122925247086521362329833307849817944645647750649290248110509395628305970523384831671737569872597295947593410067364379687588919135621621162007748635920864926867870502568935739725312687094047375\", \"2454918942158003099688922026016393688092399295166304634317616773083386087532869193458590448918958337530406410803840837646465522656670050113548208618655070231274778592766244282964463702354872753657766121825196898916725498553882689210280080206627916046484942827487726300822318764058084323314109595329304407466188383616/674880185931325925966586583820010578979699141814417326552629206140252348822939845006845669570885271576698771404162512001549922909048916000017837898649100825976232784446638776021483802989797501705685620612986771521390439936066527738682396560462899753657942715306792783283782238662155922082005591512296007820682995125\", \"74018558041066162916454010680594042518462756234254788158141115244349044958441521749277686851928706433556285971088455226217644009628399441967508838553345152310730562224910795446341601049647392069373970101491741830623078126344928804029524181578945586663110848142571149861/20204153620006780689923328634586091101021423979622170579036140596085566172775051595588438592742563923428900864000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\", \"2127032036758045513335690185608563023954009095206088224487365541995326714285119384743928987635752931664240752323937321097955456543854943206092931247498833001499955456190701695430459583885125382086777607021670447795321669948733328973350279846928613949120929250312666393359442423066212311060931469017737106028339882830848/576612418511902928757340062840968526862381326698309578771238715462180282212422302261044980131594522407066369222998903808960617461164985318633518680304995784614308979881735537678182134128319596636920719106506829571072447362052319438091347699720147003209417806230149598345068078717948025207635448205253184540936478445125\", \"35289653975561083576641954928762116897061274899517309102784750384002335187117263273488751066569234386120759866204372398611196356888479036949053282301027789530999737306501029700128744408015642211359442183943916106790666114870974212159410284751571905275610921784716184508440/9503006066880728386808143045924119024212377150217533250562188228062174064693375135306438120385877320162710918716613546077156389583384656340709638430674364232343609717735574035535102953482366914421205216675248471695111720986346092738728929878538430662191272737183832556131\", \"102633551023964794485575491065909467125458972250222581133681080524371507544152979467328048718122409841060527545925136196267751819689935599599321090571687632103850847605493223603751038996548520557330016046032671961857623066292962260173840972332108111505971231021442896036760967107060309991355545554631003681544611731245475968/27459658121882266328752886605529964804078316737648012166874496015808620265471203512606463219297059547428855195782384236337998738233668399173746663289852416697917397644234441300570212555870401420579737973722145663287124151049692290432756231390864184491891697469874600345958989433125942336757049639797225309327019275689074625\", \"10034393558388390065766795008210457368713365491566387292163814915435906649268119060550511145023450790393353937124495488860451123302412204483570913557762460385297770427946219119911920640306914453207097103853766023934602534502476962159682750262143380527529536498215384467975023/2667919902603322771586358077760621955455470781865624844984169443739075976572061827709528710108877015489050369589117491611045518221354793418884447632063538994046714401229510497599783726376490260140723032102883617341970952663947646017489439179953454964374887388652792446976000\", \"248528145263843375390386172800048509380966183384567983242213959113927668429802237067505890436957693495616107089384741585283620097982859345081736730899912519273262934785992235852866637878831878448348444611412764161078458068549719800733237024285525816723480868704742804077255242682077291713092790250511567621735004237450946304/65676865669148624809340872151906045781446981664561196686217551358486802274698228825404698950974939545099727242259547145392352658637333562345477931951890984276718673618736565926663528625796412420753961231404680876558659735251469326707567479071881966875336951133475135427640218972722939427821842173216282390058040618896484375\", \"7805448718805635696495809414501206964843262114470109146341305656318015059743127114324245035489577134938579856003956861881125856595981500593426840968087618241785931128978516340812066502964561231235073012672356530509663384739132686548934288703179479011016719045530855033205271548/2050525178024039744126592505352202216905491833360272553169520915020715464206141942151086176509423406413311520838568324134077402841030113427309725873344806030836314500267104070131451720947531994814710189000076651895520222646974590481497382830325485174899169093049299764813276375\", \"3355325071293197839434119105039673324264765809771192815982246040415580387729382404624613875653005261578877047405365032178619450963731719777167015959920645055600439987161800547901539269321100559393048973255388860193948274255340335876890491746900991668165565729269698196233805991206691196045182214641935483083662356666996922240/876402579119117579582569839757462461050855174353108858954282915644790659429341853404829661899850841645529640454766173209897510988090318303454542547519850473808789222552969933222203420847859171250332350076509996295844203965564448154484566493395403967626596213792922784509892086361572955175655987334882030766001799867659814117\", \"218871061991045868372866381545267589365410350294028138778572466235486397478028823720846191998825628156716190463263492304639890659254282445466806224943413446008645087186307985343574807361972238230520975439736199291019544576443791916302825193643774360055545186783819367378492631806297/56849560726416896431557940314760680962653658127458002233782028041537121216487790008085876994020812492987733987414743604239935223783349870516284048368761617736127892160849065895223288023531930411718807065209903593668117085505482007061969339237404945180379460053180570404846043136000\", \"5008685108365226931582937964451700746853986170633433728409171904803795018146152804690759530990140552460596075588463394200510044617816085275660078502126507209302951286606953039953843685800941558212440519542602092919776366067720586295390886070120828199562643208637974347390938772070049344991272621102622931576339988103674070876518912/1293888539680354282541277646947380627241979967611883341823378331667976045287311988103163380651334828012840330710760757271860219584371109472132211215957402251594055009937397184768184517621978947384029376766290498101728971145633139541827544539988344772578184316843734267915665730981857376872622787627370859411909330227080697966353375\", \"15388340113525711660227566446101909585796746979396093776960989868457211684028149502578116456785221720682202816140911944661051001675127262774824593420825587319436537346311831003212424497488485098543512314062112948777572038731823948224734505930748371522309451168088057190162878224801232/3954220582960831691377435160890656173654063611768428458807273708040518769541211737927975894584024448193835165167801976423275767590502552964407494549049777006346189436817215329891530811451811864579644894987864267389290848598289794977382504890216219362031324635609053075313568115234375\", \"5099039333987561374222193551155323470675617979816941646196895589439391685938046865391119484510329634015275893520725135141878751153360264368353595348921951280561029028912953500944814771064409611917475818956659775131751121312316084465321917769679881052144364834485866477379437705913911371481828140817759401117780199246301705600020671104/1303503600297679371136943454060319958680553228879031326679449263682048703103464872914972900105569835004878963701599765030590097739639045890060548760692125546754294514068052902543220382104483822438283040090444827980927544440984823535260277595466339403795403200720622852069244768910603820007632395190204569927612348189089161551951106625\", \"4902837141334073026145827027361937996261324349722726869116185158777439337041263482852376194988371853413467559557923410949898048139830183335197992754748294810838187068126867611615800383834975563313220497573778480109264178673389149671194149749735833378557143135481387904961537942569904075/1247045310545991266291285730016853118981099516935251861146038369985109288084420528171217942065832292739130145780833406014673689119563698528225048800794718789218267628507713621235056538202070171596177775095071513194885568843375526804796016261173388452184505503341132236719484809714335744\", \"38114743522716832107917466438257616720476488812538316101658139632867788464381862291240727309611460187159930652186486096300862388591521625093237019662273764387591494074792574929490381910446287947994150655077877204446864004067956087975012773988833339521775463977233068498404144221045837190392670308437391686081418318624745039402145439223552/9647001083383999453668111809775451078976046488746916070976218645431946648087171586252172936600115032316383427265217993193444199863138429602138841976586190525451324093772097241349417938578878934577091671046050326087898259692917931230974174799815198493279413438192301437068820185757869608523761456160341754512329264442115351926967120404125\", \"573695055225225727008803730767518906490704995929177617646275646884555707960986625481944101622708415415988844740028718027554452662358957933526173824325955904005404113684003841990198157072540659184995738719040024647370869010473254071681533880576462368600901824622431045529064651675640055917092/144509482511118816399089096021290587489594541280398871255876563615464628718527634679330291741479135415168539765887291789615790513527330600394937614433502341116068305347468133950204152174094704092402978083370792135432486240914953928188835819767755172666693219213868545854371103120604946200875\", \"23876960329653589647925126180903391687666378233201794403339630995420215267415575142266707357255726330536094448314199602616026935251126469221925945960901748679919435908556550271504767784553484434363646489174587463466333864577705745452492395785557425904735048180164697040313528831173448025400634629163795223739061661461986923675833880378496/5986312408594306954013526197465608559068621248896320652512228238115589875514604632230098997609482248000888567135685167138762172475788060284232459813998201719590208742091697294562538265829954186149162974972471533202880368317237508987477069872431064075005305838801862900501819963793062041081601844759452202282545840716920793056488037109375\", \"58168289917567723171226992383559866214094157894992327555495441698028867727845766488121900626912848698952863438654895252811583144479300382761129433911280049009362667380001406579175563745824368613319103673817094498117944856004415812877213722455299491145649879676787079744410765053845551958756701/14517067289347903655500020160671113450349743650636953726251191692074385521975132268313263723831804150872238173602847065423463131917373356798750100313145228608894881457107689499956903046984443545789053438946050974567665049237414588435796381674590098629779384355275820782532479708807512981504000\", \"728621890568281859295409481422447012528302594365693410763821707074444799793690738137592101239862736313347273167450056625929591960610208335290882047413011571781161008296084630072829079783328937418641417642857196346026366370059522990813537731394823630207433267854616768658990289454635793326766697884798538576055949457122067828153655416688640/181030730759516991863708593747964787874073354051675597050399087612142539517308720603687322924426591889179726492403913356461908748733972707460063017057809060190437917851790767968877215795679844983288935075688219234885360839984681619084834228226744165610073685719017596630302462070188937998558312507638434329299017584329479516410907786681093\", \"86855946923438322218622470067224691860808273886184997065663554841573982963995340977083049132518812923329423480393306918856650577072525633920456721265953575424233701929892019410099166322511413146891121248381648145391642571638857576890568882512129960291171866772665863159474602604647289052079991768/21485753507365901947528588896402264670781310878547726104482740647554738151100954835784115119035980523529677083504495839730499664052882400915208251594384038810917282207449860876251558307288700200910747338758723324686939379138206117634546981163355060740270734146780942696291669461182599512320099625\", \"2158989152301022938148680102142188531448821359505188055264665167313418619665693092337665573150374231484840948447637297247277576415460889296724813940128955070240137590073233263168835678714131062764247434144994737610229909964847568491446606012581370840699582055341626266533733744293929658949697805855362114229666626620766245630122333733703618176/531794915405164005613733454597931482878479882704956110685223892325074211694837836221759995948610212818642789132749082430059593652854659130217225506942675608692701447738732031302987802196501895840510235161825501235133794449421919927396142470196961877376701957829921152848178076410141813926924749057304222282687697297216661687583257901415465125\", \"139432548574396829074586704387656697097760057897628994548358619815052936481650396157428747411173567801047221928593253479330480454469358220685854351236980383914223693722868233819483137401339800304943891968050399345430243790898955416907228948287367356990263740207046902209563417267686591994743547621/34201151688775214071963206765436083445901621442002061707492082843232231754829227303539041286301398668437202547003300396162741375435703188500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\", \"11008517174872833286150985180322584448162884832099344969609291070844193524816852920942383850580217443209402836100467940651581092350600329145627967515818684442171571156446321228596914355704205623857871497315955269266498229823278800717909321269179839084452384509142712677235552103459737790674103994445173074670347080506698168482564009465276165824768/2689223396936080856855299215659204161946704205931885125148201643087176556822542895325191478283706585400237901215485150928036895428721912118467760766508162631903585126377676412573187912443878232521444786090510891599171741773242011017926658231638022943018461086517502584854390836347781674626615709751386455292026775663545470794167629144456268750125\", \"16108638074211260588800537540680707641986073914251424878121255234668558067988171568946079848860335948991834525552515669040163026131919804987340113244760738846884911038097907756220945883750502673899084880578229601870882631165510396775126850307838505063922101682333806284668762825609556049426829531780/3919363961344261777100658318137884299575193089462944554282218278496298610828757650104922583359642384253066896538203596057302203635134833545580869871333892935330950583664400555463557735723364497947986885146043017010159347046389604172186788902608216894094289769850517098027486468084407618748895626853\", \"34420755849180279597302103726180110022640946692592540634353734157479505420320000324260530767186132260970572450489530034440214259559325114511265075416512316229177952140217732655405289808326341696986755141965043719344169685611217958619102774617224847284122901023774956887687026904767714958090256282893003000752947427857703259704682455375442735857024/8342030311716679826889917494957593165464748884572298173556257652389845294530325764837124998293398445804458613956489096007564811101361266196542129764287084823604897187311540561857741285793447174119667215803837719660675298308873496219385226998078648428368061868944322478384684509466965129972030932418920415308276430355882329457342937549162000252625\", \"345888075261020004071220843714060353763382280664960929903544964118831237876694384053904571498830068831026644303797377762345709976595360421502594656308937649239978525713471393570536680412814805076323426256584504251728507416368609420882442293831684681071553766603478479006495757222912500012444787804577811/83505703731469734628961395063481893801938371516752417759131774530720075262459158384433785006689548434701904106312038822969658455364219435022841597243178757423598248565463985786213156556523685666430799283870548238467817226915680747412191245046634279766450629886904716776719219698922088211154187845632000\", \"1061717830619177527082296723099890392273896386613997004874669053445943252046748251883532634529759169500795452576392700472771365240996842610207274128102329096619028487369622001737128463631016494371635687841733644339636164570819431573829173533941056258744442930643735587780907310433371453992062647737259587563398111688659657406089003293576961475848704/255359631537215747979895955806995352799574790340218399351168178555478073997876110889483456972687438702262017800167048243754141722496276537685853311434069991222324039005160057724073156957530106623908696241268268096879569794431919729620178375212905203484165745866913773304319069321426245521467122472046370356725530914587807274074293673038482666015625\", \"274122944106300296738399632684955400761495830361663966466225652918683099779465438024846903286816813856490888796372134557295699980528187779624865098445756013563535339056233912394908544185885547842235097677765325396255649207317018754967666450708249125316192200151505568416495274671679500594656671785202496/65687592621976546250581560102201535533608158256953087745856906437400149205693427285162333502528793675585022025602144243543064185647792948495372442630333800126269123531636800213405254045262127593759539706750242430153456891792533267948231185296091297979933562727112487057234422009426868531651634706262125\", \"7842680480716516803148821198697967237136721860017131244266974996267074742248599085253569637183007740566941125452215834642683053334607896723447140851344501084122965014242091312411884985569341166545074688756440728922408743841592658677792796881188604773469108807869960161395759837407978596679911066586626885830991556090978327508459276025943279064965688960/1872528612245648675720382138045071131304652050696842872529163720558126655075937845539792108048310219395746259570506175902206215101518698490144716531697689534559827422735649881381597761684154409796315455445459537515308174919488497154409643876490472215352056502193150125644288086294418253309947229151074464928874881827227706992859640236086417889990541889\", \"5300824422251242070074569186825929119848111723012841627275830216301188228660779008353049603527567784119877706984722171178137272986345560485784907345500893648715341273841147320288851034078863843374665850852481747000237834238703248634174397792745914847774297223176674917912406659831206869442510948965571661/1261140476013707338477604677428573831791396352814802149994640617701773078174882455512668089072441176857892331468691160991310474734143842336092636848492066592397892638052212250229129355009939118431643425836944282456647571558383755315238500832868535816144280088644939696339160092963629012001958205063168000\", \"2220223718762215584659309059880106334425515875615107369399767892051551634000614327272260081056973863669004224981561870246078120862256383581012183852291444462730018546753183156982897386563561418424093883164027305254176874653780425452987066512563140531367766900610414277825262239199580925879453806414860409441845631158680721091621460775043562065815179617536/526383206607841251253861841374779803798480623722760367843070466043030228662340154304405180907941079883976168609082254331465595267209149963786388600028701073430773581228212441424400748220833542964971495005714483235359479470452593264280645360131482713147116366500300066771223383007216182988263355451923333319170174755334598973202740108032097242475554128875\", \"521891797109626296684891455959263713257353500867652268541535940159815152120871142196535233326890353914761242025931373491906127275561002910157909306979093246574207104081108188995072105948138299097848175016082947174156278439986705241571619793059501724269644447572323501261424770743329858038040685313621446524/123310256826873923765604825413207481739886340225713108649758575106598510022338480189649787216845041382860899099250547657534972156328080736149239332330143771138115695598493059325064119176038137294863053148618656356436332991079150723235214278848602671333076219529535123842212129829931654967367649078369140625\", \"66086044538329677372986118727999622900471937619891337714357792768200341519193500393739322894033303245376225584865369486696276607060432449792893028061817203932068085863800494054274423512956136695211796751845295921015953538329385253280866669403169919614982155350899648626481405781514434761541281229159396787287553493046927448595964103589100429722948913403008/15562137339474350565671240515273666798063901504051979980452491653975250630723677279081058884163396938548780856293034775459223871281049026140999055923743471466471830572672766633086347312178711643724485955576579988182546105048041649947277672869613992334541438784737993706482731696809943027528882927942967419447250586964258807454003775693567366165507144866375\", \"335377615394100148751647837967017467711612297170079949298328061159559939969228226474615711044891085626519877634842694983669611974807129333052471799687426665556738316626171408219730853872410792831871526174987402129691897433888027072807302411474690613948951673562473758814664346259109886876538510453475290967835/78715592752271462306588358880337347638000605031000575876214116610339827495261512281635361568951675037834544811575026718101166562072917855004822606752296233435017284127594847656529606648345533195437635894948829857913798336356647286032372695130461573940500785137424365840081503133157308796505622439791698116608\", \"20090879701618729602554170716780970848925039917987945471322994867171660307998603515745066411687983450400412739285577269751603921163835619296822801840348319742203974023505186187060251544248644338412667631232247108675504629538319425769464277309915502144443973397371136256151336255138506001292355330875114245901820438821732843540725116728866301271466614762497024/4700223519410528857298732096729483544820841497820611795617923063440946097326817340637303431283005509904481323205480729806879570430868897342398783028649633951362398196137429076844504529051072393709154483678349272930361110568616112723747726853614661953537957117231900032044221535502745676310313569997665352252492568100075191900969170979460298189170486601502625\", \"2904778979985524171206573028445379872240558084236464200857594814631031581387804621371822074061289363372523364167184697785570324832815972970658633551879143187709707164796663015180877412717910872234647704536817108676736661804878068078543241390828229923424191204586313620612539678930999769543756218765870513049986792/677408099044823641581658869221044375312077929976719183424865834811543737800956896926637625166844372424044003929341361734886232742770909683021563822987505236295727478159938135467975522336774471915167606673489722102077041330652185811196423400701795791669780695158730756241178262962515917389382302757366325768069625\", \"31270155809329751863885224732454397292230969002004953832354065319735530624996254695453061851449600345977646455072512400760539747054003851289540339425848681804190284451253462663731135337775088379954403740058084949675460445909826322297817535400604180338201322667139062500269285493417563095365899631360901732684124930296643108551710704785906431324876072470231424/7269578038000504017073007978844992319987411732848567116655821196644382777088703228960020894756722675887473977480537577509061256138261063926845643360849217556370868752909531088361229374467207196928745673402380473721018157327193509586295879051411183657185176812738231456253321187419224704301236205478184115996135940848503487199394612616742961108684539794921875\", \"432538822079707760382094121020421735679118830363764570640789368235407853152380328891350816400541189148550353337874309885334920995713154225799660601389784410911658967499100610376065640785585342035058364676314084595283850213942576431310823836792440218271879354669291052589804956435743500204185107215929849054782893113/100246574739326291035824954677502591279343311051719151327066341370995390423713403739043396503785261917771859220535505691760472395306543276314938287868734009582906895763073519374099272340577921671298878837400921045252035507925021904954445172372479744465666760762909731237634082051855588025732494461939980856983552000\", \"1914333673689206389116942789116917579088664511118582610293383428712902211612554212779880638065888518488492298586641997844141510832940409501694726851666478650414191249534733087933879981733561565249818572204932715347752949087800778646065986244657260832234479202201129845117955957242616947361016603702640821256099895469088229339240402478576285854783063612307200/442333801076281757298117784528962837115323835962460661601905131618341609371649347131724700192551574625400701487125984359494804828935577124602622582550626336986871791407398609915208114339012374456785705161994343348351473385887949809051796407340988735853810174589261300681030826392672282630613354461927208579993042968520650313621522933214063366558703422757071\", \"5704691626402072213006354545292364761246893919997531024861408248746241619817955824682639582830486790618668221530365426203424888737658778881721063941495350237419723855000515747725926735319471480027293210991869255971365522170749568996651406002311020883635577590045650037569906001924971041810547543163363976464780729932/1314240362076792592671773873754757443276256223533339004339330559325754574023619698171225777585408160438834449576526997055649849875516310105297894855264038450585295422343454458568152668980131977005808840141079502436391909349182185596381509091427752151860204235071122788499996991078935216686010888734471173124487937875\", \"451219364084386208718456142329444023337343409261545444643031014769484085278440612677813682892926852469540118625738238137458321112005189595703619178533263706811689687213128887082197330137502064260105387500552856851972124172206996205919556553246133218441769325133725631665593372188755090094541462474970525820334385058333756591222492801647110594428922046641945259392/103648250172203340865458115839764297558925693061798169434516001775068769911768281084188883278842546791612199025413573394167639925287068809631958006622842716869211374513136766899877504136929177267362862319748507372147243911522667591375015611312165464514308451222180272935398828092646393830572838772085366567154646425598388620105539619174837489536378605144891769625\", \"1591076564577634575701791393842535460875733974464805197283632670013516183281542903377750304419996681222758401497321278555686661981435637461350320471258386388843198706277657208526372100698700615835733712519332548607115875288787602084336341594576426630670911478276101702119972195558314357975365863803265163991961173/364433108410193393847203348728981296285742202617988970384277162225847256295865554341611171460436362780497179090329831885853324392923449579538286804729856000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\", \"5307507148709435807261229345132535134848030343901300324623409721698217134932866488937772986386501538026693956121121771089740095760486362654754229904633476234090792827930433598453200536551779789049352131005222659995845427680686677324963223653949277037520711609343166926627713758990384011274777087968799793410506391884872456420041494598273703914689586637995139580794368/1212244290381524115082005575105703496583315188540177702780216570265159923654197746388568151706509243638302707511238539845531608313334248788980188054651601536067740709977678222790481348003085034888244447626347312094586389347535167903408519024105748523384932942441843118813819781347089702286481924493361058339731949844620763272778960860509570622673048786968660129650125\", \"3046577098843580578619955603029073328361298436129791931304665777036152915858575282362742008136721284817899542475666054101957899858138590963789072530710775790433466847100422875906866496318804986202089528198912098377828580031852152997907433335176267300286466072997014023120087988748396598176622765923059385876855303940720/693911859077752895978833241338902695755528613729508555938416419864772385336777924892434701804078893822446727762077537955240605927550548046309823051841326355655848406646248595628715185413852040295631448250459076043816328082561248420925930431777502622148019371383254316636979070731427737764160145097293260938978413488819\", \"155310926743873343426312607182060072939030765297630534544899230213054714482456829198485999782086944271490229412707980997432528653509945301574794242118433868747172279224118534460563400440670015323324602117517342201640016853927923976796453577048995243600967202462466681112804476672348206491490513419336308575442086511015101999847896197546900512764233674747415844045184/35278162986589659300679088538176070649273991865663041616088851923111175518405117391134863644540911005782372831496121355954470744169969774540892096320978686548284501139861783292226140413769665461494668479430833892857992401391262903582109993838728281915806394747833588629467613308837196269424421131934859079260185052081536487462257809987002198437182539441349474426375\", \"46729591025621874782758519074451728476386657576036360734358719976400940301493939192083339293779149127132651616972817165172116269307276487158069293114860391502484125554406945249728802484128756924044633825692779783425628292959170597009935305429239702926898931975023598456207165067568919757902764815108751735753431153581849/10585868084079030838651390738371141142245086465033459640458366146849314274285871375459898014414833295804139979016362796357043372316321872357817727821559232353993714062535883074661734509440994664726425399880995133711038483607773782532430879196405793694658185175583691180757783597895616920432527125993118171361116684288000\", \"3736372348124144720852190769710129461145889011598636925228657393934132828633132357232883470466940330848177425542748100211498184494252714616379450272611850068867816250209867530921278645286769418080018709947826876461419654782341309127709703626401211996255743831998918894661053669189312375159058718767082163156988766821194002596331826150321864927832618126580509732359424/844176851007504003627016945212023239308348428094023437269532743221937069345682900884618378849283002998220513307273333096775669556093005637615012750733216460458689282791632437851364674879152695438589692227159038555722539345972833161146108367329370564838671791241431125003401861887477969954740544092178721327724620450947646209914621007186497081420384347438812255859375\", \"1258774755828991281578968023382624723772927642002016270484090409043454336040857926581316994594109169123354553321469500848146015719851609220423736153365139804086413284787598253618361769125996755159571523632747129480387254164008968993734442164892486441152227433281625391753702577143985047832519062595123255569172968685060844/283659859661671181526547833415653453506477950678651675193210969173130116121017723360258249430884213011988678011357458727603413521688184521573094783291496368005697481333739504490647194454695504722542014845706216224432373442438242355188461951883454664693262684873988061018976711201351382163527093784753398257094429403691625\", \"84932063355292829988908961192574710493098897148701473172754949846455626381329456661808566365329266898990829247446356970454502007127269708487563279536825277374133681167235811080298134899629580318813382668399644553111080625918213250223197440426147821225593304993621451053135332451997633132772608233430131400186571793929377129211228689703376067763625568623535588709576320/19089978133324852910950469658566458037096027722326716800113107848115231563787455584278193954518442601810776347091253561956877155673550458955562102935555510392954425196165785410319126098393353878286400877305164869548380670204577544630353859009177051698096136470072137579698473017257397949994722015089768745013713383769765609613514021200888647472804720456494757423299627\", \"802638881530832431828249604040579750916118423833791608589560402449036920165704012070349537114920882938466635598602387718300074733476150548724726460209016834416094317724261857969955414000155807312852092720310159572547644569797512233899495300028159721348599816083166712365215075728968005941610056018023633235372936903015771583/179951197386119079732438617407921535065140503043429174394605652913879982486051627760652197484142547447000508189455126493868229565647284332735552462525598465192073558793335913005459266977086104359621022691931002488052727597513413492393525660272900161375677499228252863529934576881596384036401784035248649026076581302370304000\", \"25208742399375362881099811032135575360109715964024747212026245529087599633280142314962581193303683759605084995818253124445773115574470717199218828756449187055537877478033129862600982068782249943150019637186466260707552416433010545437321814115233841687700051830170191107127799355485920046505591193770164750886037885397478191534797655616745528343172318318678405576430544896/5637713398995569614196397857525646325234056219513202928587580534159596897880731043336790273040813044077153051260989730372846713618900145444802234629922717464041261370803598799826604841654608724727320798324006129524610666235998113655193642594744544226880944882342204407750193512869672849910003246504052298022468012594459974209940607450480609190841893267203392880360823875\", \"732332637178584560220688900268566130246820235956768724845747830959547501950765063982943061181526237061809052444110437930100210105274824607344902764184151030827266142225894655531497849161692760385938786736436977268616029862577293984376170905024712952813234949508186306774257035535805330366742322777611063402455261391021097128/163377988152179636922409938163005948596822656868040662831003991395905185823836089887990201522673196719628247106777881741843786365701135555917263285268753605514812568258179391272113405920369587922702002732667842511108732068683407168090725712401954314293193572654347237716691784386690948494003094992876867763698101043701171875\", \"22391374854299462107923583267570593886002658786775211597896252879708753450794332301142909715845151746786016535157797023153041007263258732991465037648536702217273897876864351559736449481285518249846264600935543582562018874574655740660800634883403597181876364712521253650744197321080655028374602772696770227741610874399454362583980465225235674816785988164157351243193265401728/4983275997188967758382167867656806681565521964135131710678447245984239733544941881418957694612909599261843693554043504855207170782744518943778096768859337980470219783210191765678908537645270392500777411134164918803949155037581108678968701961544979451081836872425574123683574475790997414488641534074873248802450108535183413970057319247033379016606809226547805269752123746375\", \"21252344995592269775107236774689012760750850598567799560343535731251766780016530978663079386453430272698006977668063208502408607227544322945446079708000304179073184745623740466334127867464883762843346619853325415963062181018736410570113171387891518398846617197097407612852037905687899800932343156979591740310928257766081697645/4718515378484509142377558412184183991357747235892194234377932213613746008373918923611236346330189287336493794499188640380975364991548794341177060325509698404571318037298112293926833877103554546466055612498927474225619680186119313129604319096374924037870803554153458104225741255753314955115645304948564151765516183663634546688\", \"76703085666560609319365659209445044957052359500745196718269665234646121134787807938680787341023203786904308047981099228357850016602203539979246579454229078497537148799349353250167621935384193502383187510928609818011142642954550330069991570983902841318203794113898871515702445720207144863877026526025447819537396146822201819435536435835285098485990260677737192230985069824/16989892821104122916312992616665764943723222199277412857053896319814438961475117951904867066845412639236790762432996309717924037467863024360211163971190006272168845197000304328480920483651558672879967350982199768255256753110375467976246339260326422891913564151453729285191351273342206198366624882195135056176502724912849575385576554208844814085228696838834665339811027625\", \"40153831166521391225489894857551838468150576827129133168972859441122728710165233865309084872159583787083130713473702296122465319276461991457173085312407612757280915853584698420083436946976844240063731333638150599017886937783470942007376523947840104246927580254612991191040951001539641947153847776050138532219595746056076776809812/8873576113581065493273519627544307418139908640325227196912114520903505426722086265723900326735989771660987609604507503750212298754414472822477243293638486047313990878348820573874809636084574108909615044524663712495422565151340037564156235745628465172219286664653343193162657374410926171153516871765680561505768223660055617934625\", \"200736374277835272485186523480177159453030082779872429648449412313247640312479214261681899286513818912991945046297334418102711629933437654377760028476767482162031641781499114859553677502002901248124750539270235098492377826240319766677856465093871367817683734079621359186477306173620331748496369122143019303740252461824523590096923561928354020960176605008889579578495073283712/44259440065125442964014453739391594153290923937737136823355312892557975399035370631521014554980129291582486968083228888083079118116286312583989433037097397252506140224404130371160608365777625538148303917306340620019882928744151294738308047800711028158277500317134537540772759486365658024194428796846364486187105343266398338060080611643110071184992193593643605709075927734375\", \"488459049325494693259159444507437983381645757291858092983371672334043029615965882574409808932509285079401239403272414271652617474184321852388397021836909585659327974611273820676128650810907598106588433939541654215766888212287311943387232664417347883717203611092450971786083806323404432266197250919880225892099146722474124874256523/107455855466267410923480140898552598306699341366032095904938430084768624148829473848763761936703072253841751966906142283640379336131083461646777390874405323298406517250231389493084918065243079819898691146841695350589992171102939046740169198394671965069747042621265775948217054519855346617967866614303497258042439052681849864192000\", \"8430374068596413768975326329313648683222744787097373111477788794692418932056901235174019333392845529821722488982447683794746518712070635063397464904489452840169472596494433874412726723065560358405027764015273789053064830528919091414531400589850704395887250756457780868677553068164933299802944396576360356896758745030955907258232257358056931680617626606715393885378887657377280/1850480358582748412767893656294669486390769246349349706200869446679212812264400876685764762211659843658541567071977813110496329850010288179702589501255367345935389050373021591572539260951149696801665953123597521983257852207280970577287472932167362521740230973547070264273850381896786822127290397075758780174083415923482640313277341120938690594859118603017930500014640169211239\", \"58273615882491925540881784328370957720539797010816130007322211512070634295154626813477498607761260613353633996451797686143131893884559909668805628269959901044961666535533876340116728982072626875010391195372759135469446048394835148654407846242721443845351855234347422256700864370273092971804207514736924787577569355949601385705517152/12763172138328432984573837529764902730448666594097466544652830703737195804747682450548488162227364538052585484418491914323658215406327363805353540266048943197822838925184942600367647278764952826664684839953902567694832690683467635727409976388280092262839126779730168889686628630302519063225007497707028600865624133968363921915016625\", \"2685278694947152969468407055109959900160804835228466214479525891103128459065131221736713585038130737099067040196326815283171857977706979990467444622550497565521863441617001097354649972660183038850033950647594754644997436624623325003537308428828750008305464174443210079059253920383411910911594636045517662796811001285984447671371943267419151220518726940455756833040934506414133888/586864816044968996825907488721678304211296267371936463272955488077666796280028127333229453342355554450708284934221461946991556216095213627059047984199091625921432110913096253352065238765240063555347292393427726758010888546427415276046238297382474708612526770055488323003698641493939145624184943388159614111350839555141202024991876221874110644879676602924730506882384603409121625\", \"27700345710264347957758638741952394530538598225904772664391173119594616680996031886665218221392453628824570256438960349220263575741495285780845399187013582169907518462437966962923592601721119258663490655013419675469864809004562272799012227293974254329929404036071055528766397079743200179924243479370594973626764330855493789112414191/6040997839051213541001279276287478343874107660287651711609067205111574718442229224212245187655300348484144001298428958025052162253854676210451657425437588244676589965820312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\", \"80160269787574270953020489212619791839643207793889009503234879683494928396231769167082355143564723274576166638869430572977442020236299319718643894871736539109822173538266278165276591962215927816541165548699380129014840956895931285215480350321259054359835472320394089646764361802445068798451796525897304221529850133401768027469126408090577121172238802281079916258951770135485696/17444957084936455555074876721808241311651668802091828589911310253709517226715880722948267977560381436307152342821304525073651379763144281678911047276389231713860392794975453518107055568765009486973017341479560154792340888780337029481646046233967923289468141293699236815196553819373828280398488966665994092877680860643266914861837639322607761804740256920429518434353839878280875\", \"2352816897072623416220002134476921108405735955266703519252095150412419264317091785317803024028565851487861978477208755211589867803009700996828082850796103789009194767813611798769297617674631277847910238088040257037678126316866517601388289837575778165301828137259948173292658462765645645868094197736382683775415645307647043205988394700/510973411316690313485681833991645423802776865720580280058344111363363091616558230182669376841383375321912553771027107891991318313938505988903735114191313214327683449514676737796942389784957658395806951715454372568523597420866050825822028817422805046287798054682484158011143949412956697442991898914560191411624040490122951328364833797\", \"6403295584873165688372907494046202150046769667837790834896334486679541887567517050446119511695248926941383207478170182650927368177009669717288184903306689332746127845953193587519575304974203099873732502605739219028995266139383163062837007982999189114810534856227848568800302527760100163350814120545587074865568436789021082619398126713943637898657861949091545516403987546145915409024/1387794272010111535893205703999712437783041553900341112488641528986385462810448493444968969845352401058333929711237978223214186693177251566069419805757440174840170213159651962686467523533938145629444468366235554597245713128812532716616087753947246800626006504878203666972651384731498770435755225220796872155249202960801768048854869001310722927230237083418017482134588865244642658875\", \"82993247683514419570466529457059660634483860665557779709153549045427987672829778520201315148149878525274005978368939092115193636113741972236218502664881450367443614971109677363668874484696543982239492409231870942414193419634675024621942196087473557914167832058111113476295926250739099284241826553737074679953551191767148712684157318697/17950946423927357725787689855263532224005643859095168852729513034456208872420513601894508438640531171097082516559962755244698695622824386001219435651555513795509616906355363573638916895074349491513539093024980575852693293474288638209680085037286354050958859425647536735341886663074581909148323105020337857959651624760873736590065664000\", \"584891611376763781852144397260140844977346305541197362434227194779766612939978629636198589818106137319267243431810481928639442343946346034433828599323416877248326356345631611148749005937144684862502198147087702668524450709118588741606955966569427636630159793409544653944608958808602551061186799401212712216156799273254257486955348236914237644151956226336750212957092204830385441792/126256710861549838395499078249922986417488985866522660521294610280820007499099176190820291214370699289977888813109514854178180265382471972583921477022411657285850911270389720508719377071949050253246021921916685716353393018411683757067093259101151481189635423399611625009617884983318141463140199839724797412514785751549277231259345923662499623640886881048572831787168979644775390625\", \"4743054867460856425399742072925732465660626340183690464743217147109403130730445842673866624947360862438925194786600531200056131309608642363389833474026007798643235346104937733349791667694862514383520689594596660275306247615314272223660862212527346572811422915223417783887717426641317921972456913534338708745549252254865615725859881457906376/1021840037832289788284691535543138164288462770384961802287250236519983887262771944174557087207566030730743075334169628971336358708580124427857321953981475719503574867471090607795242192417162791762511940848493176847925838738242153177311649130718886794249673254183907621449520415060660496225939963471753122766421338241291756892571824984344625\", \"3784664074155769467702999785016514468281913375341134899878893061325465790589101335015569840325786070795267055386681356241209412947116340524588831510768864231937929260236754881829005065056310226407358204278658699999612596866156294195316867934035877283950841910726224355461522065773816109849107487214275801829843762482082803559183694631856772777313673086715631547326400170962722842240/813783281473223559981291694175087508812520505931454895884442580280342455516154674683217348039336712901850738745276445107477919518905155156380620466135946654952837573797479076027688866326359448543065305071605591497778941561986579230698384305536224430794233462949056326864499827444363206162251104552740175503996670997705423888382328014210171324376593090187604268086334796245552762333\", \"1946671258536842642381655747294621776070051525209940130115769153666368932042152311477746728678182920842238801763565726086459485050237860693394471644023999467670017470376746609892484192072297938254898880354014176373253875722410186683852253828299669530022166361304397631667133689128358365296701757782382475692465977794960109690362462330857/417774039698408581013003883929127512062321623871486379101498968145670269174833505080260389860863417408848209525427705249526516766731427603641806256289098209429110794311660844125377702016056984573671024035213045475132134896835814746425864304907974005950155657789157496389234919107772201305672421982198984613601511388413381215220924416000\", \"328578487723377153600821813410631465225159589727320893988991729306688663770697528156625398176929288628930496338036815910669579019719633124832162035588583242320537435554101841406566009219059042888412893352417446437227440076869427577701706713564212185163005644118869496869980925214424591264870388237079776503547314587137721633918824664946974571838634860386893404364499977966899068777016064/70382695927096628347637455030970644630942872888311870124896575877585692281624151103204551947776906510366521972834357031777287506848887607457751667816514216907338309372900327919413372044625602555866294337672022362865161523684052940126509854895320132828009551012639156341878073682501185688461720664801829933689280752623773789373199210473995823367199793407048741191786377993390965297664875\", \"2617201476921368517857942326432090876874414269689140439151907982631768946799200744678055980827789859579196832718849393046147656447672531861353456343821196812881882023188898815179947651274131166835133965629115749368441605680383605331300030886676081418867305170012032824011912531673468215561506423833911621270680104083533917562622600478548/559567121085534865189976875600841717161617153776904752351231210970240323460800785728739412474960421770806162360125774000625035522428160837855944215417821324758873127567654244465281354654299068546570789547691342609793050301258532586131013585959164719533123826201937801986942606844854123769532447570107525081084531848318874835968017578125\", \"636225736038986537559880265988431731529837451289737542395494683393492040808565905376235074534207026537145408562785279823547657299565440309510931336394031904920056464959974743525662459433889398003683078967642651812081450227654478095420306880762753401111260630654049389197602389949892636943971690212484981672010398108426002137114819838399222096538921225458913266993881960732663394566024064/135776510176793971074115131648637508758953050390591773574951317807919051619690313331192027871176160424663811116849856489187562728496099757910540362703888937768555824513740118941387831822900198029266206334350448626733139136083404404120210893986654422850183837974770675600952078956326317698998103770833069712616832650406225828969036781514645731022616236082175582937900731419575337473384125\", \"266695771933124633677367149389643417608461366874310588884377151539325854547826373711099517873721616543570605935954334944030816383858485296542260152894035979141266909050267414072982042090341712035518685997484257326212454742816979806460287972757626105526907510197321350895873473656215941034605746494172316089636216915825022339855304925515685/56811706665210352283362623728191218698295056176625217939528332247537278605113496147630185544004654583441448319260578659922931798845493756189402805173037491645434052737405379674607517658118427614090338938517963215812444779184193933749520313676564187507594274551791388039139409235056119788261689087831209441779870873305232021728002651979776\", \"3511806683161697708497547617957719390189982761002154386881580160856792742952365159764830433511949678304281539875366378131195670004345568047690216126001067194904446295336734931691743477531830892015690816210752795806120303198745685394015161323982229908105397857791180342330098240702332072396030780386362735967021055250450666535422528637737695053315137238368787607412459874094164027214953984/746741569878639983491390741637813989978804202898438708743258000150996080386381281307609038830698579358879333079215327202911977568726258527646560497079622703052765164031089590965199628534477381843079892123440214378949632707668935001371616475282883095939750704292616758568964786737752325652839226013335092148777788733453702438432279149298482004122593243860829060557386699231448957232420125\", \"499543951252504651717279461487337168721376180441322735807713499521878076780205427598086756686061009718016175215146305489885835839673419698751530207404115002383180054704927695269921072232395828258826213554806570423602966743337801741633869267620843626804016742412046844770601322513184123515405692795346790813502805238635003099976693786012816/106032986203682550514602969462803214831559442358811656484036951559991322084935692953211120289352600484987931812632505499612220494311324679562152078883141464406938524087376964935494245010636163705698220308243980789514815579319533341929989455211613890905485981353837321342730307819060825125980500975023479813757024395422041501208805339176375\", \"8540849722242122835873311629952985285477986765819584558233324868363310302206006773828897816547299245727087876984857726652932481899766510637403577175623031467933486823994040576431755172220921921877192006685053572215922347418846423419683723609799729359551828522978186208983138345476801247634773975311405913274552616037005854836040162212761099347518242200807692224460514057530656658616850816/1809694575992816440924165741094996511361288430727981159314194000585536832192004274726651828760263522962868944612215633976203596150606503849595633388319338251977160257979846235995654357082321611719654136058257458753105122024859078420173515189641515736029725847315662215778251370398007468665986604529263071981040014321717598469319370651877296085250322599247141397427185438573360443115234375\", \"51377057693118720457387330519321684810411289582445982078756989158447711080414032055843805733348558621949380554029375294451303430269197115810494758213980833379214402452992657502777067850631862453239349835215260705131864911194740832694498014048717871429797341104227759557199716944554347879767916801106279081864127192611546757627038037780244683/10867246748205139797826516105458406878398263495890048637741584969144406206902037615496936724683237700974333817527350121106320991054058406504571347680049945745432432384570515723033245430148177097144850158758462968940525568041926860856763884474605057056550146491001458649244094211354153171337463406192651150028767064600270112838159624568832000\", \"2517199821548153657910904242290029026229621935918771922146425373057248090467388430999870036608278542449661971830076845113363443421757278612394167195431759807908413353743377586893872930828548256216510734912027450642648789925142482023713336937258932978503310551945630359646777080073329099268529064437120002567758664419443374110941824106727218341795100740316967386497091058915066147604481280/531524260324016969370728057738851340792702640911631807178654723224511108065633433027773388768889035083734041289308124943130099580765995149865288328550751289346866467755881013217287175392101334538392596956248952430438673292186779006015549928829953979591250274457658042926539541422697852390294886719770034058916886894408015624288115732154492554105512936468520265305162358665491880968652687\", \"937159485027553069020805864547349554547661693803137696125140510201297417077233061462068930061915381468160677500445535971818609631674361074587732183297775728389124966713749450996643183965795829780345678634356741756033039293590264355732129789110416943789326482663579413229893878422643110852069225671783017610387570935863228248464396615988222968188/197552642195166614912991396771845374656891854357948006221100585931656016640982345159207601253599235265353060942313995345483862152489766993442419668492877390774016299878943454249209917002169480134131612530977452579520564400124908392339263545911443803619972765231094502745980083350567509014991735227390978850048088378721210219321877150756855372125\", \"5119346675109082499980756672052066247676641510661024682574296075659671743397880591881419516307292610449161239233139088348510165442597278965718490070997173182184417648987611422446347235659085092530927312760229499083348217392125906851921500360553758600756698605047197529446594606336369425040236883171542367713951500007600355406492128741649090501989105696576697387613035366083536629358444229248/1077349190930018641197987339365056771667455373500846354778079878558146320193384166982231171317419356136237346389570422332278447217033773023556383420372685049620361481309067017697564760747047839930422553324681218253359586320952896352245366885171583221864112040038531116947187482413031483309534553461613717398523132176948321964066833901215878133594739833910960843185464241840039390204295097875\", \"58469980853327028628854378052548435225264353747414624620847476036979290604604988637469977624105451959796142112200285366199247075503424204044884512269071061176877225315884188402954249683107639777479663275428465242905314418930053869461904934138752031124685541853599407727446896558064252696813370692668496452783003306386669962110734257851955001481/12284458784412533668960387046583440199646081362484321078872891438551639470826582933879934711861551014258493898870867541349962531447724393381011633785884743889445407749238183080941846528000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\", \"632694338036291086868292541736272151517212971647680989553388199374739841494700315711180961760384484042159533979873604395621016272772109619401112452105475906812313548587880899058905419220497456502543971131226430775692744506047039958551641270070996110661036371362526401525207493270590999387476275629412687473362310414634469788979236895300129227082421021999210841384596617452097273320509348159488/132710874087075221626157136110978536488168313127228703025408943153782802265472978945703742152954881438058373686972477195846162708986982742647038014147903817539418442869011995988024638278746664230046452545499722614320284478925059527086663455478374200352375121910000967044366831275681254530914306064535110528723482282501358749001657608122307686482720926189537227492041135055090784059994118192625\", \"2022422468242151190347511883185841333968390991430363660248687284021524206079162212007263606819387821055183192871951076644707111802972354128011904720586729919826758651167984507804867954970064938022106484656560866447290934136610214175516487579122328055482392137619829739560923807880779865442016530712986750711199998190148885726144596663143651240/423528009127070458603837580844559347493775236970253513203186912091140251858605354218715508091394564000304400858761758838182654201653901408046974668599216804223721114331085507752600832390227068985693006017591304916519540245902645712532993889000048992026931475754508248265356181099817467608863068068953756055334213584649136541490530849577363647\", \"150542201776735231618709653388506394887777837646651406023174643241783006776019388336318216053045300417086929061565868663031237502137150880313922488106751241006715449458736723129545400133450376339156062387859536289694727635468338235084533552501618659272047966040838509286942825414463511175531001410923014751124732748099355476332649458471135027773371541572374016038525336728276024676601778299264/31475618522527975728853391146702172347290819252268551219771201846701658848754300838383637247014705706066050673096278897933831272607774110183488615338021656923433335661890414740664480671162459271850877855521869741833030384682549648626038314686632195158507693321505500888988183270276134667071014075017317692121986144742473139078857816578133693776368882596780120407949076129685719314703426278875\", \"162664351499283182546788129866259011542529017155637405328005084357078048074065548349602626724265307733005745244338982661090506394708170105916177679714664432754153795772811389612700051002336719842784098507498286260450939289109123759859710248621544296008356071415713931721102824434964336667980062728653562369697289761913925215639430496443820411811651/33956433298509232632327667206936379248172049619640091186698677954874297837764235300806836350019565970550533206216590639008637925266405524715041372407701947953283803854153876844320283735281209725651036513491246238622967031979233265136280687995181375582844780830517825595245506321879177965868747546127685256867456319112247572348416655367667187712000\", \"27228583713734183629451808889147559240254570554044667607519238865891084165382075658707675405673276615039702916443152954157535195508033284355580742761569101934821088036084480297442018005972653124248838420021440899368869744141698556359295489470499243402799483082406238128875386939389123336303631993557844565927960009744780823166462314116039469622216263221278402673028225214534859076857413557466368/5675134787340359276387085910732530678163604187009567576895331134521132071092293139167824957253050637085885426100206370974479279292804959049999647539684766632278449357893560561608633329561385765035738071726214510832066885156767060324427330401967034889966727638276371320401053302413136551142103678412692111973028587922399670456670380189570979581674699102934733563330382821732200682163238525390625\", \"1340937726818688387636018677960518622106989311577445614347061615417831160296369500704524022869612973331444242000788110133157689786976834913297544087249593601420972111789552905846168933014570399562460789075871112224533723259660967481288525220689577290386781169316008987012566216235876842757183233207943071523447855623001920854571597886491163165150556/279054368814522483241446594911968519760869180429079780837994812436395792594449929617293503975169489945136244602350941695478861584261665582123038340824700224583170270427163469762789603657025958695551448477050958557681299495041994050951692916032501884523150972841782658389836059236040091605838583126400660344344601879969354053137568588338096589095875\", \"8910951660339249479517731530773509037034977353457185453617569046885132434552771722727442649095007828468878374139001808825741829728375370140505088133244952288239619141544661695065318568074863317054989982620944602245967155400712702259180443238473885690297281525960618905625084639870407113029712510345262279507055197024677292523214467306898573956604928730377318210588837126450942086527893437954864000/1851573255256476362977604759655284263358595254392797078730401113550522214182030016660458780180636930591149034499142464357511158868625309442843792189394292787657774627425816694628839987456477799348874853555586931850788645677998004186437300173080088839930384424797706381282430208961565555953254145002318893188197561315855286173276564036402546798318351229978103276843822345004757661005876638005274037\", \"84997663352987536417038496128111159210386455419431137931308301989414462311135708114322046234708053448098538629166672456703651524480738219822858469100454933583774404032968304328859365484249897913676382909050450855222567147661842184538302991526635974158862033287154321908483007506326807469239745851379559259262425675035790574846229470041596801343087041/17634687575122715507915388096857069366146981156897230620371714518707518105157483283253374797127075689236298114335734874553183291806268149747826050838089931351158483980735336772879045027213982661634865556129548356487722537193914986994283729746578044621115589195066212043187229606921062007047940293972381121200723292297716621231320254309060321476608000\", \"1648849257486312935416274009474520589799750757877252390543329851029437452988499485179026845292068377957697884739052491455807688429630524210823560524122596610276957537756142278585091315141096146341773982302888007751632401090642472506538817998043326415693840862261701364114923327286462650797963969289743571514890723145251583881752876340628073395708716735192690808352188867334842743895738955762067968/341580411902962140529547622267381834425264893226447658723654120920549166416114849731588552578626041597847002946105459812230979900480135423787717825697955152193526724029890829615845314765605770060975538542976523177976182401820926854406945392167140347444433885786340415437006775075196031433365827874254477351374236932624514469241634422312990555534789607377023339236417434574755566856489013828206625\", \"4899626659231633406569362199187192352933567344960498139854460545644210119722856870634652562532083546344965166340063297647520613455037240144734014575196764021102614748218834054157165781057405100578668000290493431869797883155764963238760612333048336953434663867580862692267574574465371615023999531030446250351305046572267686566999209229202587258144318592/1013522377571209303732207048597964555261512342860326827024786500686692475697570284120359840724596444209277948648863014479460188496587721578075151793081823795161404110811480269106846359964436993190293615381593756076515012514100289406862487971220020752628653845345780766244842386136740768474703009091552043945843632199999007070800871588289737701416015625\", \"362903847358088423032098939589019598036593525722040887883164115981767777873860799955715587436566233010543937498922435963385091400670303956612881974450548904906949032005878241638546734597308786514086678561900713741746905742866635779432216761799371793260025549698865319760786921444505323758235164807966277024031605673481480590193724980659448692487108892154809490199414370023696404259691299614147712/74959603173756091922435708504751461448318819548943586676159545028063979695880930926805574951275602951047845904770828900645717477098988124553474616764040938121171776556999069351772286262529729056288451037717198273521810585868307402693261479298923209587143468206907278220909447483738730657438961435587752873879244136801168836767273934997417156543866722171766794171623224855358640156858606843576125\", \"8521348154958613550574095745596657249924328336262127244827955886474742319277424381360677655239017583606851483318951440691757875270001283229585075137091617073509041644097526047127618954293881264113694362598157456878784814696577083997902588926421675843291157049153701100218784481406086810264243143337016042301806376864424632290226377881206765051896745/1757584673254145109614914862134217345456065873908262753169404848658913774363650863904627183104777337461445063704655164325930891269843669860409763569362863600932267319335889540453302785099532688264425988677082044905948179153286276609910158854349711054144968131934713419772852663860893241364433872853338630216232313607969790083448433666334742108176384\", \"1802461420562646993856730082999823508145602238125054717836501201545920604020389361370931345491160549787411668288359013059160331370751496329806488246135100776263777863399096485894306306621852596694700845918608199329091852956315870664531614358379176680326508877329862713333336188556181470928613423972314983964578645688876556351433429494008513812136152576866650152623510296911708111085518974142728903424/371238439252064016214448115231139360835481920731625321084601566992497057371416121407293286027832357816257507287295719261141426130159269433199862002841433235955835172774430690352481806933860390015899973299268361513643524088242973968537595085600335021120523852420135081643310663869327371821064862449426404044951571585406092523478861879148545678639697679215289523234342337347529225543852787599016265125\", \"88795280670112240977945082069219541902481768504536167808816453021962616596410396813316064685579412429940019071114917828928080181638058444302439626425155946562362550070187433083541414569447612195370911498321149367969974762244140788494955146280201020345849385865084095189982291190135293114489407801749533448443222584092575861096946605418438181411489276/18262596223069549313969288693970246663726147886364354584825624311486557881239003216971630599389642752648815377795018130449384513824927138566203714891090017787258920529990523519479383032564209629983810866231367438270859421572641494420831435563580050954867101292568399107965982704216434467243223964964535464624988344342084084237484262612100980519602625\", \"752911409358158070688133336918078236438086521781731735123294741731669530734909563155732092406099003582749182967246236657021875488130304108082404134004381196925042617909108654109138702993903561036987511410396567636331465803949049946947888490287210013788802287247422993384874670368649616782837096233384279817294778916419067404863458318451722971117669642134894906235066332205740872938406767767019265664/154635332883086377656813458754577288834216641577439356891585125701020579768315520324293435008561626926046988056302745604248220408154454267643222328696606367409715369481567213640103076112146615938180089303294709009813772509602954514391675152597458428326644988225555987883250642389550531163153338541870029415077982539614784206119074702022117790679351778993541426110436276530890609137713909149169921875\", \"15286089077439918584953144558775765002061832952090847117286473868694909713791678395221438112006475047633028543501632631679316850512797978594476229228325228403849089079675681042224057234415951253954044235099139983386056610384489202589484570852048157272551098909455253037561994944665563291526597323199530997923272894119350512727802414680772513760081360291/3135161418037836259442831302977219750614726139657718770206960776514822107155928800694375522572523712277389679035632531727155957120566617736817225541673148354829212969778664144907503411589126111888917929495106029890532891919001138770210977012708107496187227751496980000137223047079127096028939624830654227758737339725345681745847598157538483308068864000\", \"17723482381737693269787076798246423310802126092500438681864673375704464394105734049099094818738115345706100191580982712146882034618103161268453808819471603805345990162762722549964406042295355916458624836894291267553138041035528315839108252422478610879301656207772491548742981990469454529537049123948604931661837539943536878260665617524824604291547373872716194154198824107266275716083848262625068958720/3630091565725887087605600771358216927099748013831912080380983545872077197366172619225751217619097657405660172801849926220948413919823038425519006413005998509677472226729295278652284861834178791332630676772284971762683579047508016687969040658592436230062049051143001484384767836353233324570686249824980508520186643477313941054900197268584495128610811273834192099099592687485176400539748616360799518357\", \"39160514032490258389003214587901781721548011632821053230881239001436341012396166857515197251499460842954863342641015306304854226194551189224721257664420778416733889030680295206179109679627522113592373938602737416822981698362363553492610842201005420727750505681358595340127099855823746410663750133019743170700888375554918213182862789028531284364877435896/8009919337434786244380818390213546866794958389603666737562053423775386173149395943310276429895991903753441584557917565343673605019989336264748588735390182130334278887642569515202100870042209261561001627386525182096090194076839370589780431326097965428311786635366819094633651297179987340498215947144870164066409654464551017761658775207392803825996394875\", \"18188388167811476762477659006849121912679763597132233588170406666718758511478154418948855160838212151370453213943784067796172102916618102024199200086478021533171984254799008541948973652219533819511807681148179806051835318645591102296256347927018942348574774821478499092054497390790734798143983945096982240517058861467440217558586822663985584775920517755909444876443211404222400335500608733284461685888/3715278241795087610941547133490827711133909145414878217965273061493740719983191775105550559905283733134189195190321643965858771461560130864714477448011225816210219450040558581571206711791272284197614810026220745160693898421068168630870850392739817340370146186703867097982858560347971281142766235850971837330222970900661653800041795020382847588362774677568059355238174402415384788280852059532958121625\", \"46353430636874284402376008361176880938798775506236714098123916668545331718677407145199311191108199195405139575147933283523305343027297808443653460575141799729554209181454676876263582758919969948546918471128299522715691694855904535448703118221685887195383025133924852224568922999317583667985459047407473419196367812949579858081181660610155317911318937349/9455890179897829052705408931064120820559254220394152447502395298827357144081378513080398823188243663943177539817982481713456798757563952162598464929784370305696420245648035222083207596797327498500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\", \"13607414211126412689435920170832779523235279308039712294681570127241403406455725064605210473923965685858012114332021572088551127762628892611459785625407107300355287623761046438724706918300976102581928643740596336865698485838431972050267114940079353996100620311097561405192365496385584164725035842307146351211183443267583872067352881387294766804298681841402861626441205037637282007810811602289501477350144/2772205947240095684743358245950494400934136973845543049938212403703005150954425087866758842625041409060217562878157900197951382737615822655863548356735553650755342108183641353142157728364469706919993519071329069805875834057743793434164720370026073143626055293058601124362130539040404491770346043977106988100969901297669523170508321703496903672333781306743488573086901583022550356345156457496396749797875\", \"23264350093315690507131500726914401771633259602904894387312742275462601574788485574913195967854009886824436237740789910851843045306673524324611130536719802717912615609109285261163220007241492964833933975789257681755002054890453747803418465119567389315754801791950553304034666399677630030683759466627797123971742061866928213780452325847848901682792886840980/4733430508316851445525799359992627142007028326865116523033957869609125212251136452396410236930025876982265915963089597825393317909648054808274488356887197933393799241941120691826916741647173843634076299630884655997401370400734954098249519111198509015387869462198674657171808841005212058822254513429836457539629035675822719720295352508916898476137111981397\", \"538960934807826161927564251064896730663918579817797131801326848839524373936888402762331254883505157846659830555799909822861853145306547699817986010353774500545305596630924815657016569444824389893996399550343022444937690798126189162954188680257730893424775303801562327757655350002001080811866451425665301674688928515041429654624970707803336800125648742168380676815769457467038849213225206824671025803392/109517448833211208909213522579666376007937648875042608355810687327424621469323788799169718267715808580775296460944943658428295481347915131091297305260674731651980547668762317138753250458639043477453950774629862540017034566407286963562574188172753764978963685535201028286359818524519980885827473904574840285411260037264057197155527809916623487144493019982419606308144576939532055057697567269576800542875\", \"24451481554350251656598350124163983489544445991992661049829014268366250968046589127810466483349378560701491445658725080497078590986743512397927747885285095846398852574219367580068049729894667374214861939897557930527646930793431512683750733092448862551580494245486308114129295467976874843852138144539250235632985676953662288536669286915983261820949386845806781/4962240683851186225340479316959605207278948397833849899236383273145853045488131674290332609876751222112917095096150531825255611911377071887145019702433883343849119017643117746273523770961304609989779231048095665388209125939879595509516490230961558353074751312876252070889983946768175488341370453053495319823381943793679003096504200440997908071027962806272000\", \"166591964685609920525429719961758335887941461052357297159523350448241484106515158310298216150030768812873781356326923214637847449893575074813991141092681107583183275003570804134461187213143832123628701876041315736048451374824101256980832991214945762266748755723551899001458245164317581617731332466039757786839492869211248064662857987111284518155462148044812626055842061283907063784492325693994911811072/33765943466859756347231737285768516240749714264564410814839966011490233598006227246396923594069488496368994857718734549787000213944990695920130591750377483911116845697231074543526982580529937081378303555262933800375576494067959129682770065443667091668104132884375840812635624862495548888467575848428463895756394050252457592540570490061561616914443009224917652440212112452400106121785938739776611328125\", \"142464729519206642943985715465196065680101634264787375740459792619754842396453535646509170066091478069799080172299369994438836484938378991283020978342879057271045033903518255546705211647900945143546293360496661466657600494787228476009216508124736254967761901224547269496682078470378676865981855568197705507111970901389105723589666709580851611656838285777566736/28839643075889294346635430272525349651555039807615358795334663734940126053968249608601725991946342449660829847322517564370606746964714098508298705743689729306507554363954348780144675937510900983622836770223945538844314468550644543502501484521561567788992156632892028591678742014134130878101553633195551605796158103033794695984958987367799607407626319024034625\", \"380457154857422076784416625436182734840012277442496600178664323821064977485271288502806124740204295811759917468598315932331219906040253463960961995849761235911145436552991677050565022181516596464968316292789048809559129516930574340710998611088996508613850407294743457197519091160170604426002924022923388338999324182261954685794522778833029950214443271526469607532589775916381786492089432407550224137344640/76922142291839859196033215395526448408989799722090330866256930898223012427332209054699494033511478050536463051459450844520020426942553107946282832072826069342120835351421637970462054707566481086202287686453371483126873188020538661871147778312986131920021929455276187425940666580158173676284545586944833678819622895550345083175685846944633982680908505900099388037050135210936852210263717185637166725605577\", \"79999800708369666670693340813609265988600461251844239982904928629083975986385235816587497657678297663151298709076884516168798694292862559083730259839524968813932151813233366175091317046758260934357096757322369138747731224414176608247605314668045838769433811781490030635374856042786947109101585097035794969502111354126773165391577217071956928171336060247633607/16154850265413610119312596299635391433380319311682208755390341659152160578366244774029302281068833963848811596545791104919556346810193385001196395489740571188884873246131813864782581356887110499639544662322008824704830818136660544673293865921754569356583698951612797219776290835161780326945625621758204931298948625885081325268123344406261740843197232316416000\", \"26517014004241498798848003208133111307300592620947908933072661812816683085261359696887064436611747292468717739609776825664344064024535028242737616786238200200498291226984541942836459188328346609549239724653950302145388877472274074665166631509490297630344351573245265440164082334092997307729007429218385933622623935704482371360985836659823269511115937443161532987660855490906546130131716829909388620539153152/5348257529530073524280989257577050878033239486885664777340947102417077875628238501791711336803418503616042922880218860266611595594400020206192599559925169589023339295256084579966533260861249529670141854632965231468533448709363477120437277477668173149958267956654411822360053335695956270719680086524322530514249891157439878407417971839744392044064720476417844056346174795601710447583861127956455406902139625\", \"71197348290771978405602732839537012310626009318133570890482364371056186523989330157966045289127980687764218363064941391483781008265266963537623770685390148810455244349859354857421474277963009857011653865476081389968122418691934354122230780300833008753686234433642072919923583176333668289998661499146617277981691372057042930131717336250309680764289256080895092/14342680993892886303954853579883363225921109635079605392320944523109187641283117181461662846411912306480691901515655220490850586434947504504317080144378185989596578890875561336496479576651516902048606328604696610314441229321219627021610788398730173161473456954861916116391687748151443335513249810808309201830214153565966339609616397865465842187404632568359375\", \"342401018754023891059352629509715357053454506037284788725127073168445189422181540408896452651232759821766616850264122591225331120588918865882061344322996688880669665450231982002597398732201789017495427566260651180470635467002453249479483900268320570004293679361696197905823690145326531180324429318916092471863347575533714871355651558610515931373080997536792242278529575700808878786732127630024064418468916608/68894647682461956089382461406499759613691148650738957016015844830333168307020284281532026442272618372290646283794122772122665531108484704223311663270836645399554940741928358317884620420886609705267248656765357348477857852684140561714900614303731786621656041881975328169543884661780531057279582784036689401206706069028229798913082362331334839997133771880514515972024899408556517159759907883793675672065360125\", \"190286571838805495686895463752492174798162827967490343625540320679760700551286395956241059969689020885714190883323266375067607282890063444652926151862650426323339187596278760962390404656342309737428214493422028545912504503974763216230927196187743439226243880933947417760147785405444976177822143722569696182520826218120595298059020305548681823408268556482981325/38242608291912408815838081993045123864617058390583394828737640036167893859507494091864963383596867701436244007905770284939991912884465101575490548813894148831966132970730263562113961685364216989999844961688441914455435934703797359360780356482629495214859917249465567846934284121032247250332634283689409883499295469118485912489058982596725212975311140618764288\", \"15345379701153714436938289567639102307887273898834051456693981514956329731572600026866162286097662958712922836383881840211072389867463987895894067288699955858337488812343674818565432780224654423872618380928462939482247900055572079914753652915184313685270722583926261499687728814560680092231526501970431280783177357735398580700300402036873780385926225005561766822479878280891130232036389707452005183370152749056/3080426623087819678602049171756961824196425548529619576972793653585089380165862889092832375934535464160425580449193072125955685099151500755278763306599307218302635233595329082702148677300945556130106197481236122437978375963261172524503625593066102601042060541617791008722569799735202779005407381267021641545644264334109052258081225159748043792288699674153722046659880085850980843460715080965607434114275256125\", \"36443601662144279337033484452272105547257065463167427418525882851507989449375452076227652634440476502702584889057376829320548464677623038648843251719168810701744338735202853412651160681259533015293997501525430222870696235141468274274064390273214484922080219643095978640300874086585386991338440415203863901714217818222666715642467237183267303214471854472286478344/7307237990148312451155090506264642657872224684879860008436735430879314349554023096366846856470375025555139219961666754780864835035902856314981482268319886395881809659368275720375576152008289949085453326722156553603358879420820012964006978808113307340321824660484441618487292138631579616351777191144073820686595597986548374588839763719082323114663844043046087375\", \"1575294930860663922843149113097927168024893739962464327016763741314068438447271326302129681931564068796631337571133444163024224071270063174829664848259482066723104251718808936762938249028582992557822551950212098797718627418782376027133576209718376784834456568694813577764300716139817031545408608110880973380162736536313173329973171844528083756524804574267826691156368696436273087171467254161930265910972517504/315498546654512047637461608750018349421492986465373840347519942494904200733840189483934245529561231604050629653992944140351106887747105945984325466452136415067807666316202346895657914393512001212656936450425268507235863153258769360296536050028695266363553141327896064944506216017933135251875087069031098099192325817395958019524956320840925176589616439477134480262100237057953933117460110224783420562744140625\", \"7692057599553133417225997786980128299372439542315125030077404519679450372805989755158000864378924877036225189784045171045139667691524763609840822628706422918926410377185494048355128046783294954373197082851501927410350313585640237550107070936498164597231431242858771457898152684298047446530220873884022213114819556822050178579707210264243087257050468000092842761/1538814487241112760739561704846381585063002784795057066438330325566843108114787083741788078680861495340026117682606689156065008672344707615420501964123121620401073675430690541617930520947170306763541251152854304975131871537939618684186766168376514664494488691311397307418298556185724993104760692216619178358268934740746932420562664234738576394742559349407744000\", \"15190836470550557926140012263310230378455340797095100474720776113765300081463960235506950799869073894127884189857505951314428810423734978025409205413789025720642609035117121385453856877706229778165533034683130064865256448444765902482146676668197546098809055341050873494446231793312407516463576380102073171090898973046611572020564659042146465345334273595086941562425006763960197801018796906114925005810069684480/3035556598829526968124942916297025416522606357010637652635799096498208643970273828496655227572100159414352020909846298817521082538898702393916708804775798552206401718323929157863173504795127180177622667376867235806208021329981136637175570409791442328468473111768140746895005561471574356889047981458002257872092408771959478275534098789982899056118498417649167444480913552548249005268380838457505944462494874581\", \"2923754549090941424546974281011770689534961442264350984393235983189168024079617848190236639328676436485460311093391982825027512234467853098757486086492333410753919927528867817406389678461354257841007722472106464785557179844602277350411593959136520732862935740433163383885526249897183805981219416420390137516812715245569037561966929572448247077578419534651990827044/583599691615378545100950777601104007812792435102945248411439102112424251478512952087517463400054567832353967731887062349496616445419782499817548928078665212077449420216892583997505908858360011413290038645573504472422610780073975450391707084016931661068694024023083417126286468909117254531307085545768412513447197205482285022417611018126886491416133665625891075125\", \"441922815213568908489589193556560586318864326425397702047965372289295962228254658331201274291697626694859414786292266008476137667843874780506886929181835469302142365772763129838217316953835831059616268288399119642314758261677639945004547833810080700127847214666763863338091523753898362699222880772298183760217731228628442782431573977490761665091005756534420789258276075174436091798475838370152192077494553263232/88113527373573049332749294663402406454524640221866407165839162576979477138694653404281889227416977618913249275712917582743426231744980461918772793673202077716234026090308791893409200158969108910565467273725064769890443408324386897017825489615600787634985397885230455168591240328585041836771921929567914891379235573982442311269392541694564675053636078990836491104116280492254795616055818375774141667319774630875\", \"91197133767962483852278456285591810579974783077874307589555559715577599604626819245000672929518645004771085106770784762994476973842713035791487204122653245797126906189270204029735872508462106527240320932458036231707311992868347221176460407003487373754014365881209649632547685657666691589606571865740595829983849941049450471212387808617247938941417000965198123059467/18163679611214677813643455199979098261849405189805364986036911945012016248297645596270602508015864371788974684317239728239847888960155365342460843559658233069613218442910226128113196984801126248862273503232000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\", \"733396724434554481470656964167233690851279923085197144879644750437402627936723531635898542414136943003236478432848965516925891956615111678444586384493883113385335463639674699443808084827715994137410743992130712903997815471369201406683862985677774155704267039224546352414417632475628136460919900347977754644214725932476856018335195927604771408949980634142255497812566866795799230501026066145434755838336990365184/145912495644159810313026420025053989609942265686388630266226856650796088768164358961644113076809511566125145395699271530802891523741636707532676065833327082092521989958971154798465784847092870457944857590623097781956884297103961713362268264159015928554707158239398721416218953003215109202771651993622244788505649098445109438104466256408060944298437033058380804126574878377874459371251056800895394904459469832875\", \"167606423853658713615749101123336326908381619586838606922565378505211386185130407423587264776519589295420758009764678759213587906216543160801059029133457062067529468464636376639307690657945597847080706144898920305379653754920571797771178341550808041652360635584401789901525709166172283390177673009483341826911179861584213314395893323035527116283758445038413646757280/33310364848744488727470761889861069993071965180756187311178124887286133554324042422503263994717993129539448310743598138364172889305532401505890384806078790034557049074169245078416704866867380089103064821732673967120808611636618526737138435792818828990403374766228037003927569643972203993263329403469747342204808360947840103843317533210523853631711601450617095736473\", \"22466735478643771803624909352181817912387732117378538284107485621001246177152644141853604633676939694208131243081227668237716194316732125445041260568403752325416203858329469477774720998849334961751541191761521224644520742691981372782009394826739249604257098248751626957528543558542443122470657230835176462612530464044652140581367666271771882198747182114685116336512604038833327707163107207664705120728068987996560512/4460342260599110071819142535903990817893424192972341872394014748315090430999224107274777695306032783105944721337053156074851240201179902835353097683269298594190456286888326067932777720561181760369783486872666974623910515795208353605697065447942804414120030678603538761538385793829787734830129764152263691296719726909633580318897787729004972323599773548689272008712427926734258913271101899780538635213826239542884125\", \"1972862002066252798837977155272535342727415329632252213508267781390870646909686724955861608046325765650407340102472833428905279473185818898693854344138403744757857928883601637909604082588338869612221777263582365745419719805587946558326048087138197694016224613118304623864709183681172362693106460535117459192992832969130895829916210933710820035479169562970982784580861/391262854245936198649509275719624152305206807261382621390946060636032376057385723427601113233050260359684153963520782285097664628279596618521963444574543409076428660874564026651742234728997339844161514273669735686516761239076529088145208958938384732800586298943281728435207452253170935715239392534815683367114290676180839217919539381651841151674859715992309727232000\", \"25408691426286653276004556426513401767718328640048945917745783225459709487487356095164164652218100925888847689099153320777389381851598236046402124684511968385325107497047025485302333503075085562533472482645023963717347867696861885363417595298751490212495932766872748125111115039311507374363000062513977436921772096443948159289707996749061007112458126301618769295162649600673247799961118662602756889448152517364992/5033870770817104909025512331238419776407331281944565644457345507262881100618908405924951559853352841154730802006750688581603270849880756026262217651685813584900300357685874044482329601894134443542753690048962260914642678445058891387041919581376195543193199307524572671344323361282633828144708683536721118910549933336800461248338059209853766305058943888965279863852107507075916981165164543199352920055389404296875\", \"616565940481577765011174617619124841631603944267256178093555235591208387588894068005162766513720546626399308168923904625210748051788652328072241494243040185611373035059619136712559505023703153194815611268503291295059648269772663939137446253437248541496631852986499688052678961495116210133458596866684413931188348798244969797973846568160999564540652111599082181871436/122025682149627484528651507368051367620578469392233875493556828623437869650284356703295836998178256875766319508797903923638967073687991229708051285605187358616531926112736402511567721889845693991963610192161413692928378708223712791930113386840109729368772998347036090902364801014045328348830748307179590755723160142468563977011700764517880467116766150322736003147125\", \"979882056834583241477188686550561625289337025747787132773853690143359657519481397575561812727394470125172272246774578404543257210124412718725081536309818383310896102958167337333430555168671327992395916735022711297435263157670501117734412587691271084981140167017421900852550822579410636184333142944411060788723653596377015359036101170054828623669169047118551010102258802465554033173968468183492058271365801755986560/193732066620504775981759812703028757608600125742477178751189607602983198559778039141192492589734277739017909889924488699372940787977794555519474807920198944109549023547259912324279741006975129518191081373554817584214941629021088206977532599055014150433581544599721903881284581257812850697423350805715586436114842183295730680490110793225514602133304729484547181740290534056445482186430729398701311563285494964645419\", \"1138059441890428903336718712159907364975959482163004276901676063186939296217569849990951930955270849692775077813359573394435924934540269310629731801376134549169322946310756738187834128956671195358413024062230774111935109203207768898525882417078119314003162592087920755572050993355843681931139257303484526223461840939880759908449181135029327442039666513325916729112853/224777393704985303260433439401503507705148576727364388720387174977154204629336985298082893443205223017966145098064861566754244624732671470935725326043491911142467178027013112527668183783450932992534517827863293825061296257420183669383719043873666284378647952385401303733274771042385666436214517205678674213118374889121542369996042313879258622144464565403138392064000\", \"614262617634904509410555695398092190166323289787703954329113412647342230855826568873946233136303566178604275296873234926652080462259552775254755109931312516616838091852915397846984381183732773411263828600108443070778861986849272794442105107285234729077818614332155890946804257724112143631642663084660012362691100872465148864413343598067567142977134846266425075195546265101720326272502009234689388355365794889444257557504/121200854655310345878069155190734381476914416893031941761756379148622591310152793328910334357724762079139509813381997287954319983165971628429295803162563856219211627796200599196263868781937234015821367575512548522790158101892507996780675863234181700253545912643548466256938936835469646114659598727592390628209362096738343417775009361678599075671154405137663077798419897932404104579113056038271753988669813988076515476125\", \"106893445531995430131837569895703697604978445859412739331042151546083234373443601923983714252801103551874986033841637079479794895452077803182698291822629713500021995241940133037200268381793282318691568234728329378829301282121562652452936297422136961147432559766896143081059518238234777055931999714973999553456547746825617168005650221542417216291412324174772893635832/21070287546583154895102927029203125577385528350171457634203261197137238923923245382493868134869009844094435068284335909266152042903157700510534904847257436666980671067329084409346149729385625108233234542133838924281113454526471855573271066865534480974484196644173270141056470857666632902827625475719738076524047736123182255306429677688129231682978570461273193359375\", \"1112742798776748551928744983308584493817112400536084744850969025063360679785378789764875076529575583792571198510306186417773101346425704969671256564494135750783642910394213727189639661184379341961737135764570942961692159177189753139209638929302928699705042832922774012622017270172331722295881412111812933593370743210214549038212395941675257558442878012136484052827439007483777859391215222647499741572327725689840850048/219121905514652575155579185322367175400669386131891843382447432851122462422992147756333729893028362013318264155489537138133372703295804002840920402482110260590055749843170064921843460498824128274420925357547023876488939786863662801268798987685503391058250902634999352652063668663245829496836853509616873246554292796823779397317819134891873583857621623143253788854530146303641400986028503534408870194989478421253057625\", \"983995170259637497940121707857673268620603982844439610076334749792119502557380361624096960070148627663305171311646851566811683351232268240169848810658089698606409195744471343416197434926513684882439596141368794175162315633192028977211909698595778839497844847281262559899914504080092844816319298286511436690429175757804604673752838786852277255064434365401871903307643705/193579499709739777577893639665643417521924510242119561765932078835121983190401762561436208758210519231103767232899529457440602166918701550386152070813526760823513884391055054076485295945972185402977095815609448651316824455250005505410192101148149284756928250258632031981439345164037318129987999546683113483700660879431801728391911161900686707231543216283304182063038464\", \"30691013076836380319652884848585431917439358375118437035944950498156836885409110087616602043242747413728866747975631727566613593257623099549583001362246649928075859944695060947434885707102684568632559339383409378997568182445019183928058902445738702610436187907199482604867148445903921474846103586253320950728989228898324829144701782792767763794895137313050381112872972806712570559942583906619373159053654481250809168128/6031936190594376585238407905469035598668211679521553144958053099463931217856780171872253258738635531385711702176347575597387389685526098889278278029314982721284691198967204664771178761416891317672705719303088746953644978471289001577698554025410820041497108311270431130911021653860874238212040640737171103823631718483572464361276703378587106311153455557896527384426327053165214814954154328483257657424873929502112904625\", \"33633002641218571027682690377239300567277297301791434890431645909447040830457253186262970747405514897340315490970846553666201190386457221846694126637998462873786334837901001833771510353365825087187582807843940479192544772559118293851131234910638705258664901225494129023244916125545283621607920983287799648992632814461828998517949449887522866259724675318233522060729654796/6603800575190864815125307817934327053530311915572323544225173935830559756077637251538096164499112411672913910767032482188570876526606118068929913515497400397562722669603861813453418621246538114872330536044519242663538662076583511078523573320035084744399535581216815034837553165853576616422592790103728141443697362408727056813977234078214386771115586436985105038873998875\", \"9090550743395453237608373761422705922989356346696677314277463900103283296889488490217663400349361962695279888433677856471792856853109469433355422802663947305503479561493033851081993247556828544308258821557994512133708656174864544457143793106703578476914924328960109390350040954158797845288786321215010324565010420734044059968931558099077932776525974187717655105951506223649947806568984848883258144616897526257038550656/1783219994432430133950472014582130883873515063182143523712063859964133099770763874744121895885645346884371273930727450069430704145915261127061538288702855011220545530326588799412076879985026006593893648911637986337776174555198865379578424838210466703683642106934154603710587408512357351455891557594977191641529451749437270208258072920514602243985184744955476557012910446023911358037761232253615162335336208343505859375\", \"396226087129511787616470716244996965529391571019620342657409150252952330537366537352182763477820160355931003174946109480036915624974500187179367618457008802667089004678925595775249725629495848146669773574395699032785024522882892752987825063933573399691764866816284097232869198405981830106568826923407996367321353003569052419999880089180418759265274331299787468134974811/77651132902382550540201641628906752945078964002822585000619340261128555048628863996784740469908853602590877726845475670110127527874088625214912598995012971630852593597027649154487264595100300180591016581254965295280089902497540043916128232871685159131211213497239568483141031137909208031392464815187505714066235868748950184065923236670418822911614780061752905170944000\", \"1288523130900767412477856952035690867153496584747510253984686336382980221603917538996138294311274357713893956725672062832264871415025750136690143411884111580335458539824573239771267043414225271729141508235839982033182605445173050590151912297720800168687369852280323356691345317649445843078291369394324862039143247087442309135074453265658730028145500871559458519282433012494054724678302957276371418936282902434203225600/252284450515080370603949213084529993395050575951188044032908270470514999880554862449223347761507020354321422785760279154913310488296485989979706208254206974075438570521939826124860483842758137231373182496438568202110337751291106165654945352183167578675508602832478752400011567482434301614269579368882858973850914513870297071866544875650189106576672289734326492492059816669288907018095832842249738081022227281715919357\", \"559506782175368748187145067236900803925823792088293851453005882621173124590368101213652371965740365119375069053747415415684193092607523211636912074219215053809881814859129515591479780669511533619258835199715146655774919418434080807837587396115955105126806762961292429904380132116986984435528307613054828929294602185927322238461491059740342387266084431988727321711184308176/109446188216864405154936682374609448082436347600301765944233278303643744736544109262794383069197271409398615846380701459882784547857821831816863216080069944818453908760476475874319791512782445408136169878207358663250499628002971644430164185578966399908622640732411885568638054229180673755690889471388585521113862492432946110902070139679164884208988489955874131206343597375\", \"365842109776085256207829452385781129402656684569922320812625438296958174120084800064669048017227033185969596458778213306152397766619692644694641677223213185977626940193107608138827771259334379895020377700759789774994800008933137569543592829220611543060189849601828342989023692876182148818363689293009174358168826340010491728715549904988196347316703985894355217235339548078187164176255405596310602921647203428200269666176/71497266937783826306774367225149833789788300609530680399994804704196212252148324552193149332755057982662844988588678159610516634667597707204818296457616315484973288944637139939912166034691155272078609876888919170894915224022982785138928008133003473320018151370486895637936102520353951511525996197267572355782608352075229547764732602557133494648237258900273354364050662921889937355682486287799239363976556848320046933875\", \"59378684894605773397070783936113244261297966863668546282887298999811950599772732377979382620766180662159460666220894896896564357533604962977968843474062092083279165837424210591042655271577974272394203253875965589611493384384257117088518521598379301169916060951350650621757237206805037261878212424267780312614942173870651684587166691539909068452932891649554575072205080763/11593916877920131260484148322810317629326850763057953025674154928920977965095141485536566217873796019006709247938019404840440511433467040918770165456925609124166970862430104329357419669175323763143377917913760028500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\", \"440706629842402075137926797732405268015915199334341565218443748798479563505125605478061664327658137598204192554352688830679475840386882350034150077506804799859586772904929402683276898098601814091430598259347980573084686932949502809068565420937301632494387691284902026088950093888426872222813857928092871267130505744095697172494119689779474840037266295586359244899477781345249657455186847452249040895151288114085352974933708544/85971876318334010542313048056773419567285701852816309711738644074302467763075671531248793080425349570584102078764464196653843973936119037322000695949209283327606280423406302517302874806092835694196353778161663338667091195199032831587897410329509487165187753418615356836636352319310103639079123698118997500068644500893282438137614420288839230827096109835206605385673197123994357393257304049093683934224826006704198171592304125\", \"13220371178312284248107863849287558696210741535280184003301555188086761767176560823174196915070378763091889333203635784037294769747641959860810039816533609140662043493962707445564057197150603226797446933532133956054671103942520142568674339411250001585991743608723150284270101326419464088290151483823061613403673956918458456165552482913079283537536214967294211244361353060/2576683013797055224377707713704899315377379548630511095136568220145808780162671473907260623503552385384482723173913562423316997528913651044277418227616447815609873991028073011738113927961824632868956802271260292075825561646156680740323686126811928372672670917332613490241615850953660246271541592056143611581223295045062157404996958100136358649109693659623847024011265147\", \"1538372578072246705266078247950089219881197139399081643650271348770110178217959856819170325400476655944115553238940541695152110949081675985299189913515975242840473616169775880272489805123124548256666658584129873597192213080038937409046114908719298170078476325423466734429870048697383304265342125425087105698152643145531760853127801123272389134514333752173173161562273487752064850461823726948588221913540799816489566883798912/299566102446745552813544808169323270315327122249327394279467999308669285416179486075255023523726449428151807672528368606071047812907935426406886253284580296349349558797128593446316786243666290649442956134448480598303527795996222703837663605600624271807461605295956674925277658331760000117761013381199880905748188151556184620779667670278558839116983636972680749836497346863752662521197700717702790359162307617024566689271625\", \"281696937222363685333688097915539146272117417024070728031063821781398985795813333650547982965341298894634762289669256129805545549280355643122501181852136332529515756074502902204877664395456278205770206019663082511098956468724829475220996427130295010430751942126263620206886404244432409164651524408198286831329682605959881993845189585640874220032515465014097345759490750307207/54806274927935495596891312029173862473687610099325998583092091915101265393157631244775387832621032230434007486602816972765210205596482942091518459849775458089575743699797096697542306049628939919466378189656065461708686421130956996965004776108499273871055615413566043083634090083096967567965373203683231171594922347812966905149873265654962896456451681332216735396249206784000\", \"228506238533410805238253122961471637501498406104430046727793420497895852412513560203475440156216063574654372726194215013407325207763369075250819386897086702757125418327084312933061738392406321003231853349865003322697360659712771167066453430309997639548320673279964210730701373707765051246595806673865646607841876463608039111252607452843372970797479959213447237540830563469297144446069689149549515457318899981763489792/44418759813188470246596822974281932219088697005123285598909329328419879212164564561558656547678211265529803086702843380128457744445765859393426675396393053094588240457569380155526179040891009717323059641035189017918495485630657360525410506453554255734005459614858972904374739673834145083512160883402151636664208253116362089211658645312778404886460203600762546810897889629330022309705583438699250109493732452392578125\", \"2396110297187570506257836426251930521245117960980667897194680897478996322590925380310917400763581787981992131769075961259393685331523600287377841990678117113566991100720996059187144934569703045966210306282348527729533806882408323961336166190162075154579344185244957673138372347997134388801085788353482276257401005734929059700346687783400772331280644647089520646562669857652648/465370154262863030800729180763091967573522779260407615567563274096037297593764955820626213827962697601334935773802201919483657310282236100250543992334865461800976838791035335861420892967699843608855185710753433852279737724446294443337363478679601049432404435672469098850676302728116369979460222148206944323730586138087862719386327396334468302608499235112520318322763857676375\", \"1188272888075247520453568790651819187486389546755745961952033150576243575862120569399808467067800830890874391487822723879717525264875722720416173276963170672622214121308038530968291758445510982186014289745026439477197148445087614813262170975056866881909056450023324743409114115141145340480846088869807540798073417035168139476153897066325127540609756310068558610112731607522096096821938163134080426356894899245575410494080/230586762395914863625709048789913840511134004337945700368117795195769576856434588144361459740833007125516905017415184787078710001969815416281381427387949263792200577791644278234661952852149216540491852757174842146376788280677956350901082838474705227642420261641783722891948710833898248566893322144435457967452449965772543077421407816225704952270697016152452032506898311260979594550143344971416786595888053149375287120733\", \"1072184299258468249004114536023934869518152618369895613271618698908405514630154819453979477077738526673716264830106745031385951736108376866253955319711026042389282009348594845497252059906901748860111986811345742998968284077119165082435598381810306691078037018432766116865792677955520465319184311529667642995217214507658693259694586107847099911341219913576038605872218680562047/207882129535607118520818565811162643811811563516006836924341123976848022970024793004700710992938987476728640943834012473687892481059618823520721737479364352887178017866425027953255856440099446112508663603319745066750522936408781591578321031173620445865113295407603090322283539974563690157418931060565698315406021569491751612761888641141446406531645379264720684248398299136000\", \"158094023904374464057702010126993231151433474361820266584020400101533651587072432728050776506672527718975042616651177034635188178967462982926261516748842073587981953038445977514446838733557926696939591069712397947055261777416704028506441173540338327591514650398349069348381309688677335132100441905603664282735310299686268721634369502296867409514777359935022301425165750780988231639828675424239931533849896744198012747670272/30626384366513923671063955469537776291182594080083494737341604579575446319190916924682809546024369330706012653799783122328775875399363759308193432327358837772825609356553955350401725689682838701996446404559005896479618311357573203081153855961484398360670837599853294627153740224543175497655414585918231215639906924313779933211774291565425360415684556655021031131349317390382320286092667852173815259422737956767922154798375\", \"12216278924286401897470540169822542417611356797676160128176706721343511598951866107858729405615631246003458062949723290192242594609994613705183460814797527214549142043573863947658832694800184691222426521703728394203722420336773310908687071670107794543022567943478843065246011544888390757810534211554666736239506503613750756246364621509359804902243487113673014588325806249988332/2364584127734680580481708368927921125934330000162935118371174269642831409084634375654239735054363928748162229294829526339927907778510530444646754603322373712788147193691037688552857183116332292048731726305451516954679277320777955342295564000586923227775208580772868590742136150431152495718132142742153643081187691849828217592954519485869135930755646768375299870967864990234375\", \"578939195017447864385837341975558679292903716580114421030538728778491606282153588930983966100514147976321305616196463174070345884292672842497715966933722088536619333912687108737657068701352918582656105418491672377271304970407730786932913490869797471081081431072836814581099271832696990064828717287258860166842791984158634684078346453202928137987930328826212011774670396356151265781053547412633310327737900786639842674288716416/111966291649651600701875186827360807558960817589719096407887999108024557254221008849510152469119211567152616745769256123968832250104006560061907741567034087109512483357851919402017950812795426393415409198268246337542639470834168040295134130657073201020340432236723824670803498949071870597039309004562024033656488150406105175401372709011082725359382691270659245312133919518760328422827067578306005644825927050994860723405473375\", \"8041514821545833865350873212853873042112343327573364523948780030849543753072688526717886590013028227714585965095216381829914996539132359247488639692828639170075726301411777307168737667077730792892326979446426349813642680537699905651125068091362135055902152994216233622733424128982011248923051410141033146604688083721413402395290842738021365861670415833356403364696759583009635/1553937833499559104910551811592138833189892464446761247731330672284191313590708439680460540329836344767557599746234213006493842842879398684745864919973051635127080738612248150108793397855113122368507483429209127035263504194847798809612278864438287815470711036548695032421148125849669175729331459149833945183228413961985381338162155596008680906676498435954178226973272371625984\", \"12059659399309169167301353842123191409306995788633965680414620302285606896146667751472818541537183787935352700725982053536032930866708413010971856856768384974849695774437178790890015242323873769697407411558706626105140596160049735605389301414460825674631122462760014451298494875244754354054447697502521388381253293175367558014453865905104467382184997528879171136492277222127399012368677604910497789360212571238146627048080568400384/2328494054002703067219004484782931471919751585969487160602269605916676223315055450845942763690581877771159615428854802721943114463834992106300185328876910271612375509166975628540839858771078495267566008071532876816826751069408153323840515037497664871689085370699991860738368371510578076683395101062439493831773194498579620513073693022191702398601471237166387045790480861932005012807234071429628725981935147069738988682858417182625\", \"683009426705008850682549700382901603742691705123356866338951397347368059105140826655486518416578697931244347554322654428162554903861783227680935341690740579867651545205562690172425016836559678937794312287639193745517811234257062356826622207475918293015140472942579713388671782202262396642735640315948612572908444501108579457520714632371056288874351015666995549139003946314085696/131769214246522869780429817236150406548549044658474416909806179734873399109656411633488099249198882165279745627038984487365589625562901914030850178330133080409420340227179447548044572594184601425691821617928130423410997853384425373999967759499571890326740433081063424903098252502791477854302204200941376983295622430177445507316706609802292121282957519571162158620971952084486375\", \"1418116259749091420309271913909337143756589314597557128553117870573928055109322864794169592355058370891251425125187770724828108988587888087023982451205475980371440423992838481547236638456717520835668859093413956339261802305597694403381021863258753441889536361061407579332570493634254542013337999844407181346815549594836374497512447969751514466481466717590255369810506813543577735080228718660747940956248427356785784199073569408/273368882980516556922532339653303822104510203916024760371844491705599093435133738774975538364241630079468712981056336655766117378160822393876348755370711942273876284944422610974149712212944211513462921649872232656449940987552227525504529710373144228818606127541937831103642415534318303187393593236209298242574677293352798419428712873685798636474667204083938875672934235816396371477146089168375198141802684403955936431884765625\", \"546411077581845999248238069684194831621691193366466972898628141511422317954477211865167402284211971296286346492698354214043840080181702652132835681239302798339667835439189275457116051279366194551632712819028177402221815140045210690908631767786711675029194359998826252332434573121740830827417293557234891406021102083555472155479148332697839972702631641910213821827820374586459319/105246945889799140338072754365901705544530661781295362563214285953881890233987516230568663143342952799036341701952267011236663118111226623815975847494372076420199418712941018288738590264475520229651370015377608638075866459684692488079223686296541020897904588347083045723167762682959422858996673894180805702299907478685374065593161226849447131100462022089783265346597553176576000\", \"2398330640958841474772606439916070050977544535580605737383995160447105736276950196885906408317628083110923322157113892928963237845914017845444295040924101784423382681801754191301860383927129006953354739240926643562987838836997453985855576402628166875869041032631651591871962852884189548538272285387092843044669499688035134181859376665409767886188304314888753894905317929877238322615838524354191263502347881033855441181420399360/461588070868590122892265681879734295007029130965626060552783760068897000195207878227714842617470320231527222074701444349530952699708435668339712860464533455345665068841333232359698449088497137068713309811942968433868609329301082001752617420002377892756821532220676085014874112083615054550278903960627185675459015343606391094523511117705747842645927349130302549554534056269331809016770715819934970200483161548527932617036185253\", \"6041015879424725383006424536130409209607854044642113747266098198777011981328765528361630516108680392500990580908509403483891763219659726090675140672989657743882183951954294745396417829943469201306594018454995862321821016087416840247422350906412007336103086620396467456181771583200365740253389107968122850063607085957109965406634738740996318415514360956028575560979203447735121436/1161752799109428422288020947061281540989708937450568100764830251908850596717606701047413407636907934320789870175907792017513896999208892282137299070761467096211814586909598705615312819596495636017728313513520193786266452836805291464826226833593878504804389728477191170027729963773716267868284479768397603444919008915279522376004326398403851684761808785381609370767169521034383625\", \"13240077436443988749179508462267267187169441948722358165090554769250505713747934643200804819418670147225695324432684266924694524337920816452346599774452681831320005286326986675907899608537972384924882996757503264622991355949039882526389342174307168805166215838138277557052303430492669193939212362638263582899713198716541723383138016564027766560215944409353427176135895982596327685665844815618402881202645610620284792793420780517248/2544223084468158291883698813309541801455311468982232546872485444308211415529998472787377800559884210837213042932180479090277285630234238711851480232520137856848809986631784843528381778520727465146661792797924458540957133423665746229799675650290296217658444899605236550972043549278128087645211909479009099766619355677984218929672461506691980442071860591767266913041147587815452007726513853820116629482732060593116624596368806566625\", \"1953999166296955830935495158735359200362904181792947794529339487489730042568305997099959302322956898299616194932283060554261566410988618045107398092345476532371402134206635235570281738377188438407703089325315446371127042537576093536896282955524842632708645655481028161471313608974238110718242273935956977555610147714316158486553633871312187084618154014921190595222799283957140353/375191165084882521037046014569185165885459082629136124177286500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"];\r\n            if(CACHE[x]) {\r\n                return Frac.quick.apply(null, CACHE[x].split('/'));\r\n            }\r\n            x = new Frac(x);\r\n            var n = 80;\r\n            var retval = new Frac(0);\r\n            var a = x.subtract(new Frac(1));\r\n            var b = x.add(new Frac(1));\r\n            for(var i = 0; i < n; i++) {\r\n                var t = new Frac(2 * i + 1);\r\n                var k = Math2.bigpow(a.divide(b), t);\r\n                var r = t.clone().invert().multiply(k);\r\n                retval = retval.add(r);\r\n\r\n            }\r\n            return retval.multiply(new Frac(2));\r\n        },\r\n        //the factorial function but using the big library instead\r\n        factorial: function (x) {\r\n            var is_int = x % 1 === 0;\r\n\r\n            /*factorial for negative integers is complex infinity according to Wolfram Alpha*/\r\n            if(is_int && x < 0)\r\n                return NaN;\r\n\r\n            if(!is_int)\r\n                return Math2.gamma(x + 1);\r\n\r\n            var retval = 1;\r\n            for(var i = 2; i <= x; i++)\r\n                retval = retval * i;\r\n            return retval;\r\n        },\r\n        //double factorial\r\n        //http://mathworld.wolfram.com/DoubleFactorial.html\r\n        dfactorial: function (x) {\r\n            if(isInt(x)) {\r\n                var even = x % 2 === 0;\r\n                /* If x = even then n = x/2 else n = (x-1)/2*/\r\n                var n = even ? x / 2 : (x + 1) / 2;\r\n                /*the return value*/\r\n                var r = new Frac(1);\r\n                /*start the loop*/\r\n                if(even)\r\n                    for(var i = 1; i <= n; i++)\r\n                        r = r.multiply(new Frac(2).multiply(new Frac(i)));\r\n                else\r\n                    for(var i = 1; i <= n; i++)\r\n                        r = r.multiply(new Frac(2).multiply(new Frac(i)).subtract(new Frac(1)));\r\n            }\r\n            else {\r\n                /*Not yet extended to bigNum*/\r\n                r = Math.pow(2, (1 + 2 * x - Math.cos(Math.PI * x)) / 4) * Math.pow(Math.PI, (Math.cos(Math.PI * x) - 1) / 4) * Math2.gamma(1 + x / 2);\r\n            }\r\n\r\n            /*done*/\r\n            return r;\r\n        },\r\n        GCD: function () {\r\n            var args = arrayUnique([].slice.call(arguments)\r\n                    .map(function (x) {\r\n                        return Math.abs(x);\r\n                    })).sort(),\r\n                    a = Math.abs(args.shift()),\r\n                    n = args.length;\r\n\r\n            while(n-- > 0) {\r\n                var b = Math.abs(args.shift());\r\n                while(true) {\r\n                    a %= b;\r\n                    if(a === 0) {\r\n                        a = b;\r\n                        break;\r\n                    }\r\n                    b %= a;\r\n                    if(b === 0)\r\n                        break;\r\n                    ;\r\n                }\r\n            }\r\n            return a;\r\n        },\r\n        QGCD: function () {\r\n            var args = [].slice.call(arguments);\r\n            var a = args[0];\r\n            for(var i = 1; i < args.length; i++) {\r\n                var b = args[i];\r\n                var sign = a.isNegative() && b.isNegative() ? -1 : 1;\r\n                a = b.gcd(a);\r\n                if(sign < 0)\r\n                    a.negate();\r\n            }\r\n            return a;\r\n        },\r\n        LCM: function (a, b) {\r\n            return (a * b) / Math2.GCD(a, b);\r\n        },\r\n        //pow but with the handling of negative numbers\r\n        //http://stackoverflow.com/questions/12810765/calculating-cubic-root-for-negative-number\r\n        pow: function (b, e) {\r\n            if(b < 0) {\r\n                if(Math.abs(e) < 1) {\r\n                    /*nth root of a negative number is imaginary when n is even*/\r\n                    if(1 / e % 2 === 0)\r\n                        return NaN;\r\n                    return -Math.pow(Math.abs(b), e);\r\n                }\r\n            }\r\n            return Math.pow(b, e);\r\n        },\r\n        factor: function (n) {\r\n            n = Number(n);\r\n            var sign = Math.sign(n); /*store the sign*/\r\n            /*move the number to absolute value*/\r\n            n = Math.abs(n);\r\n            var ifactors = Math2.ifactor(n);\r\n            var factors = new Symbol();\r\n            factors.symbols = {};\r\n            factors.group = CB;\r\n            for(var x in ifactors) {\r\n                var factor = new Symbol(1);\r\n                factor.group = P; /*cheat a little*/\r\n                factor.value = x;\r\n                factor.power = new Symbol(ifactors[x]);\r\n                factors.symbols[x] = factor;\r\n            }\r\n            factors.updateHash();\r\n\r\n            if(n === 1) {\r\n                factors = new Symbol(n);\r\n            }\r\n\r\n            /*put back the sign*/\r\n            if(sign < 0)\r\n                factors.negate();\r\n\r\n            return factors;\r\n        },\r\n        /**\r\n         * Uses trial division\r\n         * @param {Integer} n - the number being factored\r\n         * @param {object} factors -  the factors object\r\n         * @returns {object}\r\n         */\r\n        sfactor: function (n, factors) {\r\n            factors = factors || {};\r\n            var r = Math.floor(Math.sqrt(n));\r\n            var lcprime = PRIMES[PRIMES.length - 1];\r\n            /*a one-time cost... Hopefully ... And don't bother for more than a million*/\r\n            /*takes too long*/\r\n            if(r > lcprime && n < 1e6)\r\n                generatePrimes(r);\r\n            var l = PRIMES.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var prime = PRIMES[i];\r\n                /*trial division*/\r\n                while(n % prime === 0) {\r\n                    n = n / prime;\r\n                    factors[prime] = (factors[prime] || 0) + 1;\r\n                }\r\n            }\r\n            if(n > 1)\r\n                factors[n] = 1;\r\n            return factors;\r\n        },\r\n        /**\r\n         * Pollard's rho\r\n         * @param {Integer} n\r\n         * @returns {object}\r\n         */\r\n        ifactor: function (n) {\r\n            var input = new bigInt(n);\r\n\r\n            n = String(n);\r\n\r\n            if(n === '0')\r\n                return {'0': 1};\r\n            n = new bigInt(n); /*convert to bigInt for safety*/\r\n            var sign = n.sign ? -1 : 1;\r\n            n = n.abs();\r\n            var factors = {}; /*factor object being returned.*/\r\n            if(n.lt('65536')) { /*less than 2^16 just use trial division*/\r\n                factors = Math2.sfactor(n, factors);\r\n            }\r\n            else {\r\n                var add = function (e) {\r\n                    if(!e.isPrime()) {\r\n                        factors = Math2.sfactor(e, factors);\r\n                    }\r\n                    else\r\n                        factors[e] = (factors[e] || 0) + 1;\r\n                };\r\n\r\n                try {\r\n                    //set a safety\r\n                    var max = 1e3;\r\n                    var safety = 0;\r\n\r\n                    while(!n.abs().equals(1)) {\r\n                        if(n.isPrime()) {\r\n                            add(n);\r\n                            break;\r\n                        }\r\n                        else {\r\n                            function rho(c) {\r\n                                var xf = new bigInt(c),\r\n                                        cz = 2,\r\n                                        x = new bigInt(c),\r\n                                        factor = new bigInt(1);\r\n\r\n                                while(factor.equals(1)) {\r\n                                    for(var i = 0; i <= cz && factor.equals(1); i++) {\r\n                                        //trigger the safety\r\n                                        if(safety++ > max)\r\n                                            throw new Error('stopping');\r\n\r\n                                        x = x.pow(2).add(1).mod(n);\r\n                                        factor = bigInt.gcd(x.minus(xf).abs(), n);\r\n                                    }\r\n\r\n                                    cz = cz * 2;\r\n                                    xf = x;\r\n                                }\r\n                                if(factor.equals(n)) {\r\n                                    return rho(c + 1);\r\n                                }\r\n                                return factor;\r\n                            }\r\n                            var factor = rho(2);\r\n                            add(factor);\r\n                            /*divide out the factor*/\r\n                            n = n.divide(factor);\r\n                        }\r\n                    }\r\n                }\r\n                catch(e) {\r\n                    //reset factors\r\n                    factors = {};\r\n                    add(input);\r\n                }\r\n\r\n            }\r\n\r\n            /*put the sign back*/\r\n            if(sign === -1) {\r\n                var sm = arrayMin(keys(factors)); /*/get the smallest number*/\r\n                factors['-' + sm] = factors[sm];\r\n                delete factors[sm];\r\n            }\r\n\r\n            return factors;\r\n        },\r\n        //factors a number into rectangular box. If sides are primes that this will be\r\n        //their prime factors. e.g. 21 -> (7)(3), 133 -> (7)(19)\r\n        boxfactor: function (n, max) {\r\n            max = max || 200; //stop after this number of iterations\r\n            var c, r,\r\n                    d = Math.floor((5 / 12) * n), //the divisor\r\n                    i = 0, //number of iterations\r\n                    safety = false;\r\n            while(true) {\r\n                c = Math.floor(n / d);\r\n                r = n % d;\r\n                if(r === 0)\r\n                    break; //we're done\r\n                if(safety)\r\n                    return [n, 1];\r\n                d = Math.max(r, d - r);\r\n                i++;\r\n                safety = i > max;\r\n            }\r\n            return [c, d, i];\r\n        },\r\n        fib: function (n) {\r\n            var sign = Math.sign(n);\r\n            n = Math.abs(n);\r\n            sign = even(n) ? sign : Math.abs(sign);\r\n            var a = 0, b = 1, f = 1;\r\n            for(var i = 2; i <= n; i++) {\r\n                f = a + b;\r\n                a = b;\r\n                b = f;\r\n            }\r\n            return f * sign;\r\n        },\r\n        mod: function (x, y) {\r\n            return x % y;\r\n        },\r\n        //http://mathworld.wolfram.com/IntegerPart.html\r\n        integer_part: function (x) {\r\n            var sign = Math.sign(x);\r\n            return sign * Math.floor(Math.abs(x));\r\n        },\r\n        simpson: function (f, a, b, step) {\r\n            var get_value = function (f, x, side) {\r\n                var v = f(x);\r\n                var d = 0.000000000001;\r\n                if(isNaN(v)) {\r\n                    v = f(side === 1 ? x + d : x - d);\r\n                }\r\n                return v;\r\n            };\r\n\r\n            step = step || 0.0001;\r\n            //calculate the number of intervals\r\n            var n = Math.abs(Math.floor((b - a) / step));\r\n            //simpson's rule requires an even number of intervals. If it's not then add 1\r\n            if(n % 2 !== 0)\r\n                n++;\r\n            //get the interval size\r\n            var dx = (b - a) / n;\r\n            //get x0\r\n            var retval = get_value(f, a, 1);\r\n\r\n            //get the middle part 4x1+2x2+4x3 ...\r\n            //but first set a flag to see if it's even or odd.\r\n            //The first one is odd so we start there\r\n            var even = false;\r\n            //get x1\r\n            var xi = a + dx;\r\n            //the coefficient\r\n            var c, k;\r\n            //https://en.wikipedia.org/wiki/Simpson%27s_rule\r\n            for(var i = 1; i < n; i++) {\r\n                c = even ? 2 : 4;\r\n                k = c * get_value(f, xi, 1);\r\n                retval += k;\r\n                //flip the even flag\r\n                even = !even;\r\n                //increment xi\r\n                xi += dx;\r\n            }\r\n\r\n            //add xn\r\n            return (retval + get_value(f, xi, 2)) * (dx / 3);\r\n\r\n        },\r\n        /**\r\n         * https://github.com/scijs/integrate-adaptive-simpson\r\n         * @param {Function} f - the function being integrated\r\n         * @param {Number} a - lower bound\r\n         * @param {Number} b - upper bound\r\n         * @param {Number} tol - step width\r\n         * @param {Number} maxdepth\r\n         * @returns {Number}\r\n         */\r\n        num_integrate: function (f, a, b, tol, maxdepth) {\r\n            if(maxdepth < 0)\r\n                throw new Error('max depth cannot be negative');\r\n\r\n            /* This algorithm adapted from pseudocode in:*/\r\n            /* http://www.math.utk.edu/~ccollins/refs/Handouts/rich.pdf*/\r\n            function adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, depth, state) {\r\n                if(state.nanEncountered) {\r\n                    return NaN;\r\n                }\r\n                var h, f1, f2, sl, sr, s2, m, V1, V2, err;\r\n                h = b - a;\r\n                f1 = f(a + h * 0.25);\r\n                f2 = f(b - h * 0.25);\r\n                /* Simple check for NaN:*/\r\n                if(isNaN(f1)) {\r\n                    state.nanEncountered = true;\r\n                    return;\r\n                }\r\n                /* Simple check for NaN:*/\r\n                if(isNaN(f2)) {\r\n                    state.nanEncountered = true;\r\n                    return;\r\n                }\r\n\r\n                sl = h * (fa + 4 * f1 + fm) / 12;\r\n                sr = h * (fm + 4 * f2 + fb) / 12;\r\n                s2 = sl + sr;\r\n                err = (s2 - V0) / 15;\r\n\r\n                if(state.maxDepthCount > 1000 * maxdepth) {\r\n                    return;\r\n                }\r\n\r\n\r\n                if(depth > maxdepth) {\r\n                    state.maxDepthCount++;\r\n                    return s2 + err;\r\n                }\r\n                else if(Math.abs(err) < tol) {\r\n                    return s2 + err;\r\n                }\r\n                else {\r\n                    m = a + h * 0.5;\r\n                    V1 = adsimp(f, a, m, fa, f1, fm, sl, tol * 0.5, maxdepth, depth + 1, state);\r\n                    if(isNaN(V1)) {\r\n                        state.nanEncountered = true;\r\n                        return NaN;\r\n                    }\r\n                    V2 = adsimp(f, m, b, fm, f2, fb, sr, tol * 0.5, maxdepth, depth + 1, state);\r\n\r\n                    if(isNaN(V2)) {\r\n                        state.nanEncountered = true;\r\n                        return NaN;\r\n                    }\r\n\r\n                    return V1 + V2;\r\n                }\r\n            }\r\n\r\n            function integrate(f, a, b, tol, maxdepth) {\r\n                var state = {\r\n                    maxDepthCount: 0,\r\n                    nanEncountered: false\r\n                };\r\n\r\n                if(tol === undefined) {\r\n                    tol = 1e-9;\r\n                }\r\n                if(maxdepth === undefined) {\r\n                    /*Issue #458 - This was lowered because of performance issues. */\r\n                    /*This was suspected from before but is now confirmed with this issue*/\r\n                    maxdepth = 45;\r\n                }\r\n\r\n                var fa = f(a);\r\n                var fm = f(0.5 * (a + b));\r\n                var fb = f(b);\r\n\r\n                var V0 = (fa + 4 * fm + fb) * (b - a) / 6;\r\n\r\n                var result = adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, 1, state);\r\n\r\n                if(state.maxDepthCount > 0) {\r\n                    warn('integrate-adaptive-simpson: Warning: maximum recursion depth (' + maxdepth + ') reached ' + state.maxDepthCount + ' times');\r\n                }\r\n\r\n                if(state.nanEncountered) {\r\n                    throw new Error('Function does not converge over interval!');\r\n                }\r\n\r\n                return result;\r\n            }\r\n            var retval;\r\n\r\n            try {\r\n                retval = integrate(f, a, b, tol, maxdepth);\r\n            }\r\n            catch(e) {\r\n                /*fallback to non-adaptive*/\r\n                return Math2.simpson(f, a, b);\r\n            }\r\n            return nround(retval, 12);\r\n        },\r\n        //https://en.wikipedia.org/wiki/Trigonometric_integral\r\n        //CosineIntegral\r\n        Ci: function (x) {\r\n            var n = 20,\r\n                    /*roughly Euler–Mascheroni*/\r\n                    g = 0.5772156649015329,\r\n                    sum = 0;\r\n            for(var i = 1; i < n; i++) {\r\n                /*cache 2n*/\r\n                var n2 = 2 * i;\r\n                sum += (Math.pow(-1, i) * Math.pow(x, n2)) / (n2 * Math2.factorial(n2));\r\n            }\r\n            return Math.log(x) + g + sum;\r\n        },\r\n        /*SineIntegral*/\r\n        Si: function (x) {\r\n            var n = 20,\r\n                    sum = 0;\r\n            for(var i = 0; i < n; i++) {\r\n                var n2 = 2 * i;\r\n                sum += (Math.pow(-1, i) * Math.pow(x, n2 + 1)) / ((n2 + 1) * Math2.factorial(n2 + 1));\r\n            }\r\n            return sum;\r\n        },\r\n        /*ExponentialIntegral*/\r\n        Ei: function (x) {\r\n            if(Number(x) === 0)\r\n                return -Infinity;\r\n            var n = 30,\r\n                    g = 0.5772156649015328606, /*roughly Euler–Mascheroni*/\r\n                    sum = 0;\r\n            for(var i = 1; i < n; i++) {\r\n                sum += Math.pow(x, i) / (i * Math2.factorial(i));\r\n            }\r\n            return g + Math.abs(Math.log(x)) + sum;\r\n        },\r\n        /*Hyperbolic Sine Integral*/\r\n        /*http://mathworld.wolfram.com/Shi.html*/\r\n        Shi: function (x) {\r\n            var n = 30,\r\n                    sum = 0,\r\n                    k, t;\r\n            for(var i = 0; i < n; i++) {\r\n                k = 2 * i;\r\n                t = k + 1;\r\n                sum += Math.pow(x, t) / (t * t * Math2.factorial(k));\r\n            }\r\n            return sum;\r\n        },\r\n        /*the cosine integral function*/\r\n        Chi: function (x) {\r\n            var dx, g, f;\r\n            dx = 0.001;\r\n            g = 0.5772156649015328606;\r\n            f = function (t) {\r\n                return (Math.cosh(t) - 1) / t;\r\n            };\r\n            return Math.log(x) + g + Math2.num_integrate(f, 0.002, x, dx);\r\n        },\r\n        /*the log integral*/\r\n        Li: function (x) {\r\n            return Math2.Ei(Math2.bigLog(x));\r\n        },\r\n        /*the gamma incomplete function*/\r\n        gamma_incomplete: function (n, x) {\r\n            var t = n - 1,\r\n                    sum = 0,\r\n                    x = x || 0;\r\n            for(var i = 0; i < t; i++) {\r\n                sum += Math.pow(x, i) / Math2.factorial(i);\r\n            }\r\n            return Math2.factorial(t) * Math.exp(-x) * sum;\r\n        },\r\n        /*\r\n         * Heaviside step function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n         * Specification : http://mathworld.wolfram.com/HeavisideStepFunction.html\r\n         * if x > 0 then 1\r\n         * if x == 0 then 1/2\r\n         * if x < 0 then 0\r\n         */\r\n        step: function (x) {\r\n            if(x > 0)\r\n                return 1;\r\n            if(x < 0)\r\n                return 0;\r\n            return 0.5;\r\n        },\r\n        /*\r\n         * Rectangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n         * Specification : http://mathworld.wolfram.com/RectangleFunction.html\r\n         * if |x| > 1/2 then 0\r\n         * if |x| == 1/2 then 1/2\r\n         * if |x| < 1/2 then 1\r\n         */\r\n        rect: function (x) {\r\n            var x = Math.abs(x);\r\n            if(x === 0.5)\r\n                return x;\r\n            if(x > 0.5)\r\n                return 0;\r\n            return 1;\r\n        },\r\n        /*\r\n         * Sinc function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n         * Specification : http://mathworld.wolfram.com/SincFunction.html\r\n         * if x == 0 then 1\r\n         * otherwise sin(x)/x\r\n         */\r\n        sinc: function (x) {\r\n            if(x.equals(0))\r\n                return 1;\r\n            return Math.sin(x) / x;\r\n        },\r\n        /*\r\n         * Triangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n         * Specification : http://mathworld.wolfram.com/TriangleFunction.html\r\n         * if |x| >= 1 then 0\r\n         * if |x| < then 1-|x|\r\n         */\r\n        tri: function (x) {\r\n            x = Math.abs(x);\r\n            if(x >= 1)\r\n                return 0;\r\n            return 1 - x;\r\n        },\r\n        //https://en.wikipedia.org/wiki/Nth_root_algorithm\r\n        nthroot: function (A, n) {\r\n            /*make sure the input is of type Frac*/\r\n            if(!(A instanceof Frac))\r\n                A = new Frac(A.toString());\r\n            if(!(n instanceof Frac))\r\n                n = new Frac(n.toString());\r\n            if(n.equals(1))\r\n                return A;\r\n            /*begin algorithm*/\r\n            var xk = A.divide(new Frac(2)); /*x0*/\r\n            var e = new Frac(1e-15);\r\n            var dk, dk0, d0;\r\n            var a = n.clone().invert(),\r\n                    b = n.subtract(new Frac(1));\r\n            do {\r\n                var powb = Math2.bigpow(xk, b);\r\n                var dk_dec = a.multiply(A.divide(powb).subtract(xk)).toDecimal(25);\r\n                dk = Frac.create(dk_dec);\r\n                if(d0)\r\n                    break;\r\n\r\n                xk = xk.add(dk);\r\n                /*check to see if there's no change from the last xk*/\r\n                var dk_dec = dk.toDecimal();\r\n                d0 = dk0 ? dk0 === dk_dec : false;\r\n                dk0 = dk_dec;\r\n            }\r\n            while(dk.abs().gte(e))\r\n\r\n            return xk;\r\n        },\r\n        /*https://gist.github.com/jiggzson/0c5b33cbcd7b52b36132b1e96573285f*/\r\n        /*Just the square root function but big :)*/\r\n        sqrt: function (n) {\r\n            if(!(n instanceof Frac))\r\n                n = new Frac(n);\r\n            var xn, d, ld, same_delta;\r\n            var c = 0; /*counter*/\r\n            var done = false;\r\n            var delta = new Frac(1e-20);\r\n            xn = n.divide(new Frac(2));\r\n            var safety = 1000;\r\n            do {\r\n                /*break if we're not converging*/\r\n                if(c > safety)\r\n                    throw new Error('Unable to calculate square root for ' + n);\r\n                xn = xn.add(n.divide(xn)).divide(new Frac(2));\r\n                xn = new Frac(xn.decimal(30));\r\n                /*get the difference from the true square*/\r\n                d = n.subtract(xn.multiply(xn));\r\n                /*if the square of the calculated number is close enough to the number*/\r\n                /*we're getting the square root or the last delta was the same as the new delta*/\r\n                /*then we're done*/\r\n                same_delta = ld ? ld.equals(d) : false;\r\n                if(d.clone().abs().lessThan(delta) || same_delta)\r\n                    done = true;\r\n                /*store the calculated delta*/\r\n                ld = d;\r\n                c++; /*increase the counter*/\r\n            }\r\n            while(!done)\r\n\r\n            return xn;\r\n        }\r\n    };\r\n    //link the Math2 object to Settings.FUNCTION_MODULES\r\n    Settings.FUNCTION_MODULES.push(Math2);\r\n    reserveNames(Math2); //reserve the names in Math2\r\n\r\n\r\n//Polyfills ====================================================================\r\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/\r\n    Math.sign = Math.sign || function (x) {\r\n        x = +x; // convert to a number\r\n        if(x === 0 || isNaN(x)) {\r\n            return x;\r\n        }\r\n        return x > 0 ? 1 : -1;\r\n    };\r\n\r\n    Math.cosh = Math.cosh || function (x) {\r\n        var y = Math.exp(x);\r\n        return (y + 1 / y) / 2;\r\n    };\r\n\r\n    Math.sech = Math.sech || function (x) {\r\n        return 1 / Math.cosh(x);\r\n    };\r\n\r\n    Math.csch = Math.csch || function (x) {\r\n        return 1 / Math.sinh(x);\r\n    };\r\n\r\n    Math.coth = Math.coth || function (x) {\r\n        return 1 / Math.tanh(x);\r\n    };\r\n\r\n    Math.sinh = Math.sinh || function (x) {\r\n        var y = Math.exp(x);\r\n        return (y - 1 / y) / 2;\r\n    };\r\n\r\n    Math.tanh = Math.tanh || function (x) {\r\n        if(x === Infinity) {\r\n            return 1;\r\n        }\r\n        else if(x === -Infinity) {\r\n            return -1;\r\n        }\r\n        else {\r\n            var y = Math.exp(2 * x);\r\n            return (y - 1) / (y + 1);\r\n        }\r\n    };\r\n\r\n    Math.asinh = Math.asinh || function (x) {\r\n        if(x === -Infinity) {\r\n            return x;\r\n        }\r\n        else {\r\n            return Math.log(x + Math.sqrt(x * x + 1));\r\n        }\r\n    };\r\n\r\n    Math.acosh = Math.acosh || function (x) {\r\n        return Math.log(x + Math.sqrt(x * x - 1));\r\n    };\r\n\r\n    Math.atanh = Math.atanh || function (x) {\r\n        return Math.log((1 + x) / (1 - x)) / 2;\r\n    };\r\n\r\n    Math.log10 = Math.log10 || function (x) {\r\n        return Math.log(x) * Math.LOG10E;\r\n    };\r\n\r\n    Math.trunc = Math.trunc || function (x) {\r\n        if(isNaN(x)) {\r\n            return NaN;\r\n        }\r\n        if(x > 0) {\r\n            return Math.floor(x);\r\n        }\r\n        return Math.ceil(x);\r\n    };\r\n\r\n//Global functions =============================================================\r\n    /**\r\n     * This method will return a hash or a text representation of a Symbol, Matrix, or Vector.\r\n     * If all else fails it *assumes* the object has a toString method and will call that.\r\n     *\r\n     * @param {Object} obj\r\n     * @param {String} option get is as a hash\r\n     * @param {int} useGroup\r\n     * @returns {String}\r\n     */\r\n    function text(obj, option, useGroup, decp) { \r\n        var asHash = option === 'hash',\r\n                //whether to wrap numbers in brackets\r\n                wrapCondition = undefined,\r\n                opt = asHash ? undefined : option,\r\n                asDecimal = opt === 'decimal' || opt === 'decimals';\r\n\r\n        if(asDecimal && typeof decp === 'undefined')\r\n            decp = Settings.DEFAULT_DECP;\r\n\r\n        function toString(obj) {\r\n            switch(option)\r\n            {\r\n                case 'decimals':\r\n                case 'decimal':\r\n                    wrapCondition = wrapCondition || function (str) {\r\n                        return false;\r\n                    };\r\n                    return obj.valueOf();\r\n                case 'recurring':\r\n                    wrapCondition = wrapCondition || function (str) {\r\n                        return str.indexOf(\"'\") !== -1;\r\n                    };\r\n\r\n                    var str = obj.toString();\r\n                    //verify that the string is actually a fraction\r\n                    var frac = /^-?\\d+(?:\\/\\d+)?$/.exec(str);\r\n                    if(frac.length === 0)\r\n                        return str;\r\n\r\n                    //split the fraction into the numerator and denominator\r\n                    var parts = frac[0].split('/');\r\n                    var negative = false;\r\n                    var m = Number(parts[0]);\r\n                    if(m < 0) {\r\n                        m = -m;\r\n                        negative = true;\r\n                    }\r\n                    var n = Number(parts[1]);\r\n                    if(!n)\r\n                        n = 1;\r\n\r\n                    //https://softwareengineering.stackexchange.com/questions/192070/what-is-a-efficient-way-to-find-repeating-decimal#comment743574_192081\r\n                    var quotient = Math.floor(m / n), c = 10 * (m - quotient * n);\r\n                    quotient = quotient.toString() + \".\";\r\n                    while(c && c < n) {\r\n                        c *= 10;\r\n                        quotient += \"0\";\r\n                    }\r\n                    var digits = \"\", passed = [], i = 0;\r\n                    while(true) {\r\n                        if(typeof passed[c] !== 'undefined') {\r\n                            var prefix = digits.slice(0, passed[c]),\r\n                                    cycle = digits.slice(passed[c]),\r\n                                    result = quotient + prefix + \"'\" + cycle + \"'\";\r\n                            return (negative ? \"-\" : \"\") + result.replace(\"'0'\", \"\").replace(/\\.$/, \"\");\r\n                        }\r\n                        var q = Math.floor(c / n), r = c - q * n;\r\n                        passed[c] = i;\r\n                        digits += q.toString();\r\n                        i += 1;\r\n                        c = 10 * r;\r\n                    }\r\n                case 'mixed':\r\n                    wrapCondition = wrapCondition || function (str) {\r\n                        return str.indexOf('/') !== -1;\r\n                    };\r\n\r\n                    var str = obj.toString();\r\n                    //verify that the string is actually a fraction\r\n                    var frac = /^-?\\d+(?:\\/\\d+)?$/.exec(str);\r\n                    if(frac.length === 0)\r\n                        return str;\r\n\r\n                    //split the fraction into the numerator and denominator\r\n                    var parts = frac[0].split('/');\r\n                    var numer = new bigInt(parts[0]);\r\n                    var denom = new bigInt(parts[1]);\r\n                    if(denom.equals(0))\r\n                        denom = new bigInt(1);\r\n\r\n                    //return the quotient plus the remainder\r\n                    var divmod = numer.divmod(denom);\r\n                    var quotient = divmod.quotient;\r\n                    var remainder = divmod.remainder;\r\n                    var operator = parts[0][0] === '-' || quotient.equals(0) || remainder.equals(0) ? '' : '+';\r\n                    return (quotient.equals(0) ? '' : quotient.toString()) + operator + (remainder.equals(0) ? '' : (remainder.toString() + '/' + parts[1]));\r\n                case 'scientific':\r\n                    wrapCondition = wrapCondition || function (str) {\r\n                        return false;\r\n                    };\r\n                    return new Scientific(obj.valueOf()).toString(Settings.SCIENTIFIC_MAX_DECIMAL_PLACES);\r\n                default:\r\n                    wrapCondition = wrapCondition || function (str) {\r\n                        return str.indexOf('/') !== -1;\r\n                    };\r\n\r\n                    return obj.toString();\r\n            }\r\n        }\r\n\r\n        //if the object is a symbol\r\n        if(isSymbol(obj)) {\r\n            var multiplier = '',\r\n                    power = '',\r\n                    sign = '',\r\n                    group = obj.group || useGroup,\r\n                    value = obj.value;\r\n\r\n            //if the value is to be used as a hash then the power and multiplier need to be suppressed\r\n            if(!asHash) {\r\n                //use asDecimal to get the object back as a decimal\r\n                var om = toString(obj.multiplier);\r\n                if(om == '-1' && String(obj.multiplier) === '-1') {\r\n                    sign = '-';\r\n                    om = '1';\r\n                }\r\n                //only add the multiplier if it's not 1\r\n                if(om != '1')\r\n                    multiplier = om;\r\n                //use asDecimal to get the object back as a decimal\r\n                var p = obj.power ? toString(obj.power) : '';\r\n                //only add the multiplier\r\n                if(p != '1') {\r\n                    //is it a symbol\r\n                    if(isSymbol(p)) {\r\n                        power = text(p, opt);\r\n                    }\r\n                    else {\r\n                        power = p;\r\n                    }\r\n                }\r\n            }\r\n\r\n            switch(group) {\r\n                case N:\r\n                    multiplier = '';\r\n                    //round if requested\r\n                    var m = decp && asDecimal ? obj.multiplier.toDecimal(decp) : toString(obj.multiplier);\r\n                    //if it's numerical then all we need is the multiplier\r\n                    value = String(obj.multiplier) == '-1' ? '1' : m;\r\n                    power = '';\r\n                    break;\r\n                case PL:\r\n                    value = obj.collectSymbols().map(function (x) {\r\n                        var txt = text(x, opt, useGroup, decp);\r\n                        if(txt == '0')\r\n                            txt = '';\r\n                        return txt;\r\n                    }).sort().join('+').replace(/\\+\\-/g, '-');\r\n                    break;\r\n                case CP:\r\n                    value = obj.collectSymbols().map(function (x) {\r\n                        var txt = text(x, opt, useGroup, decp);\r\n                        if(txt == '0')\r\n                            txt = '';\r\n                        return txt;\r\n                    }).sort().join('+').replace(/\\+\\-/g, '-');\r\n                    break;\r\n                case CB:\r\n                    value = obj.collectSymbols(function (symbol) {\r\n                        var g = symbol.group;\r\n                        //both groups will already be in brackets if their power is greater than 1\r\n                        //so skip it.\r\n                        if((g === PL || g === CP) && (symbol.power.equals(1) && symbol.multiplier.equals(1))) {\r\n                            return inBrackets(text(symbol, opt));\r\n                        }\r\n                        return text(symbol, opt);\r\n                    }).join('*');\r\n                    break;\r\n                case EX:\r\n                    var pg = obj.previousGroup,\r\n                            pwg = obj.power.group;\r\n\r\n                    //PL are the exception. It's simpler to just collect and set the value\r\n                    if(pg === PL)\r\n                        value = obj.collectSymbols(text, opt).join('+').replace('+-', '-');\r\n                    if(!(pg === N || pg === S || pg === FN) && !asHash) {\r\n                        value = inBrackets(value);\r\n                    }\r\n\r\n                    if((pwg === CP || pwg === CB || pwg === PL || obj.power.multiplier.toString() != '1') && power) {\r\n                        power = inBrackets(power);\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            if(group === FN) {\r\n                value = obj.fname + inBrackets(obj.args.map(function (symbol) {\r\n                    return text(symbol, opt);\r\n                }).join(','));\r\n            }\r\n            //TODO: Needs to be more efficient. Maybe.\r\n            if(group === FN && obj.fname in CUSTOM_OPERATORS) {\r\n                var a = text(obj.args[0]);\r\n                var b = text(obj.args[1]);\r\n                if(obj.args[0].isComposite()) //preserve the brackets\r\n                    a = inBrackets(a);\r\n                if(obj.args[1].isComposite()) //preserve the brackets\r\n                    b = inBrackets(b);\r\n                value = a + CUSTOM_OPERATORS[obj.fname] + b;\r\n            }\r\n            //wrap the power since / is less than ^\r\n            //TODO: introduce method call isSimple\r\n            if(power && group !== EX && wrapCondition(power)) {\r\n                power = inBrackets(power);\r\n            }\r\n\r\n            //the following groups are held together by plus or minus. They can be raised to a power or multiplied\r\n            //by a multiplier and have to be in brackets to preserve the order of precedence\r\n            if(((group === CP || group === PL) && (multiplier && multiplier != '1' || sign === '-'))\r\n                    || ((group === CB || group === CP || group === PL) && (power && power != '1'))\r\n                    || !asHash && group === P && value == -1\r\n                    || obj.fname === PARENTHESIS) {\r\n\r\n                value = inBrackets(value);\r\n            }\r\n\r\n            if(decp && (option === 'decimal' || option === 'decimals' && multiplier)) {\r\n                multiplier = nround(multiplier, decp);\r\n            }\r\n\r\n\r\n            //add the sign back\r\n            var c = sign + multiplier;\r\n\r\n            if(multiplier && wrapCondition(multiplier))\r\n                c = inBrackets(c);\r\n\r\n            if(power < 0)\r\n                power = inBrackets(power);\r\n\r\n            //add the multiplication back\r\n            if(multiplier)\r\n                c = c + '*';\r\n\r\n            if(power) {\r\n                if(value === 'e' && Settings.E_TO_EXP) {\r\n                    return c + 'exp' + inBrackets(power);\r\n                }\r\n                power = Settings.POWER_OPERATOR + power;\r\n            }\r\n\r\n            //this needs serious rethinking. Must fix\r\n            if(group === EX && value.charAt(0) === '-') {\r\n                value = inBrackets(value);\r\n            }\r\n\r\n            var cv = c + value;\r\n\r\n            if(obj.parens) {\r\n                cv = inBrackets(cv);\r\n            }\r\n\r\n            return cv + power;\r\n        }\r\n        else if(isVector(obj)) {\r\n            var l = obj.elements.length,\r\n                    c = [];\r\n            for(var i = 0; i < l; i++)\r\n                c.push(obj.elements[i].text(option));\r\n            return '[' + c.join(',') + ']';\r\n        }\r\n        else {\r\n            try {\r\n                return obj.toString();\r\n            }\r\n            catch(e) {\r\n                return '';\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Calculates prime factors for a number. It first checks if the number\r\n     * is a prime number. If it's not then it will calculate all the primes \r\n     * for that number.\r\n     * @param {int} num\r\n     * @returns {Array}\r\n     */\r\n\r\n    function primeFactors(num) {\r\n        if(isPrime(num)) {\r\n            return [num];\r\n        }\r\n\r\n        var l = num, i = 1, factors = [],\r\n                epsilon = 2.2204460492503130808472633361816E-16;\r\n        while(i < l) {\r\n            var quotient = num / i;\r\n            var whole = Math.floor(quotient);\r\n            var remainder = quotient - whole;\r\n\r\n            if(remainder <= epsilon && i > 1) {\r\n                // If the prime wasn't found but calculated then save it and\r\n                // add it as a factor.\r\n                if(isPrime(i)) {\r\n                    if(PRIMES.indexOf(i) === -1) {\r\n                        PRIMES.push(i);\r\n                    }\r\n                    factors.push(i);\r\n                }\r\n\r\n                // Check if the remainder is a prime\r\n                if(isPrime(whole)) {\r\n                    factors.push(whole);\r\n                    break;\r\n                }\r\n\r\n                l = whole;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        return factors.sort(function (a, b) {\r\n            return a - b;\r\n        });\r\n    }\r\n    ;\r\n    primeFactors(314146179365)\r\n//Expression ===================================================================\r\n    /**\r\n     * This is what nerdamer returns. It's sort of a wrapper around the symbol class and\r\n     * provides the user with some useful functions. If you want to provide the user with extra\r\n     * library functions then add them to this class's prototype.\r\n     * @param {Symbol} symbol\r\n     * @returns {Expression} wraps around the Symbol class\r\n     */\r\n    function Expression(symbol) {\r\n        //we don't want arrays wrapped\r\n        this.symbol = symbol;\r\n    }\r\n    /**\r\n     * Returns stored expression at index. For first index use 1 not 0.\r\n     * @param {bool} asType\r\n     * @param {Integer} expression_number\r\n     */\r\n    Expression.getExpression = function (expression_number, asType) {\r\n        if(expression_number === 'last' || !expression_number)\r\n            expression_number = EXPRESSIONS.length;\r\n        if(expression_number === 'first')\r\n            expression_number = 1;\r\n        var index = expression_number - 1,\r\n                expression = EXPRESSIONS[index],\r\n                retval = expression ? new Expression(expression) : expression;\r\n        return retval;\r\n    };\r\n    Expression.prototype = {\r\n        /**\r\n         * Returns the text representation of the expression\r\n         * @param {String} opt - option of formatting numbers\r\n         * @param {Number} n The number of significant figures\r\n         * @returns {String}\r\n         */\r\n        text: function (opt, n) {\r\n            n = n || Settings.EXPRESSION_DECP;\r\n            opt = opt || 'decimals';\r\n            if(this.symbol.text_)\r\n                return this.symbol.text_(opt);\r\n\r\n            return text(this.symbol, opt, undefined, n);\r\n        },\r\n        /**\r\n         * Returns the latex representation of the expression\r\n         * @param {String} option - option for formatting numbers\r\n         * @returns {String}\r\n         */\r\n        latex: function (option) {\r\n            if(this.symbol.latex)\r\n                return this.symbol.latex(option);\r\n            return LaTeX.latex(this.symbol, option);\r\n        },\r\n        valueOf: function () {\r\n            return this.symbol.valueOf();\r\n        },\r\n\r\n        /**\r\n         * Evaluates the expression and tries to reduce it to a number if possible.\r\n         * If an argument is given in the form of %{integer} it will evaluate that expression.\r\n         * Other than that it will just use it's own text and reparse\r\n         * @returns {Expression}\r\n         */\r\n        evaluate: function () {\r\n\r\n            // Don't evaluate an empty vector\r\n            if(isVector(this.symbol) && this.symbol.dimensions() === 0) {\r\n                return this;\r\n            }\r\n\r\n            var first_arg = arguments[0], expression, idx = 1;\r\n\r\n            //Enable getting of expressions using the % so for example %1 should get the first expression\r\n            if(typeof first_arg === 'string') {\r\n                expression = (first_arg.charAt(0) === '%') ? Expression.getExpression(first_arg.substr(1)).text() : first_arg;\r\n            }\r\n            else if(first_arg instanceof Expression || isSymbol(first_arg)) {\r\n                expression = first_arg.text();\r\n            }\r\n            else {\r\n                expression = this.symbol.text();\r\n                idx--;\r\n            }\r\n\r\n            var subs = arguments[idx] || {};\r\n\r\n            var retval = new Expression(block('PARSE2NUMBER', function () {\r\n                return _.parse(expression, subs);\r\n            }, true));\r\n\r\n            return retval;\r\n        },\r\n        /**\r\n         * Converts a symbol to a JS function. Pass in an array of variables to use that order instead of\r\n         * the default alphabetical order\r\n         * @param vars {Array}\r\n         */\r\n        buildFunction: function (vars) {\r\n            return Build.build(this.symbol, vars);\r\n        },\r\n        /**\r\n         * Checks to see if the expression is just a plain old number\r\n         * @returns {boolean}\r\n         */\r\n        isNumber: function () {\r\n            return isNumericSymbol(this.symbol);\r\n        },\r\n        /**\r\n         * Checks to see if the expression is infinity\r\n         * @returns {boolean}\r\n         */\r\n        isInfinity: function () {\r\n            return Math.abs(this.symbol.multiplier) === Infinity;\r\n        },\r\n        /**\r\n         * Checks to see if the expression contains imaginary numbers\r\n         * @returns {boolean}\r\n         */\r\n        isImaginary: function () {\r\n            return evaluate(_.parse(this.symbol)).isImaginary();\r\n        },\r\n        /**\r\n         * Returns all the variables in the expression\r\n         * @returns {Array}\r\n         */\r\n        variables: function () {\r\n            return variables(this.symbol);\r\n        },\r\n\r\n        toString: function () {\r\n            try {\r\n                if(isArray(this.symbol))\r\n                    return '[' + this.symbol.toString() + ']';\r\n                return this.symbol.toString();\r\n            }\r\n            catch(e) {\r\n                return '';\r\n            }\r\n        },\r\n        //forces the symbol to be returned as a decimal\r\n        toDecimal: function (prec) {\r\n            Settings.precision = prec;\r\n            var dec = text(this.symbol, 'decimals');\r\n            Settings.precision = undefined;\r\n            return dec;\r\n        },\r\n        //checks to see if the expression is a fraction\r\n        isFraction: function () {\r\n            return isFraction(this.symbol);\r\n        },\r\n        //checks to see if the symbol is a multivariate polynomial\r\n        isPolynomial: function () {\r\n            return this.symbol.isPoly();\r\n        },\r\n        //performs a substitution\r\n        sub: function (symbol, for_symbol) {\r\n            return new Expression(this.symbol.sub(_.parse(symbol), _.parse(for_symbol)));\r\n        },\r\n        operation: function (otype, symbol) {\r\n            if(isExpression(symbol))\r\n                symbol = symbol.symbol;\r\n            else if(!isSymbol(symbol))\r\n                symbol = _.parse(symbol);\r\n            return new Expression(_[otype](this.symbol.clone(), symbol.clone()));\r\n        },\r\n        add: function (symbol) {\r\n            return this.operation('add', symbol);\r\n        },\r\n        subtract: function (symbol) {\r\n            return this.operation('subtract', symbol);\r\n        },\r\n        multiply: function (symbol) {\r\n            return this.operation('multiply', symbol);\r\n        },\r\n        divide: function (symbol) {\r\n            return this.operation('divide', symbol);\r\n        },\r\n        pow: function (symbol) {\r\n            return this.operation('pow', symbol);\r\n        },\r\n        expand: function () {\r\n            return new Expression(_.expand(this.symbol));\r\n        },\r\n        each: function (callback, i) {\r\n            if(this.symbol.each)\r\n                this.symbol.each(callback, i);\r\n            else if(isArray(this.symbol)) {\r\n                for(var i = 0; i < this.symbol.length; i++)\r\n                    callback.call(this.symbol, this.symbol[i], i);\r\n            }\r\n            else\r\n                callback.call(this.symbol);\r\n        },\r\n        eq: function (value) {\r\n            if(!isSymbol(value))\r\n                value = _.parse(value);\r\n            try {\r\n                var d = _.subtract(this.symbol.clone(), value);\r\n                return d.equals(0);\r\n            }\r\n            catch(e) {\r\n                return false;\r\n            }\r\n            ;\r\n        },\r\n        lt: function (value) {\r\n            if(!isSymbol(value))\r\n                value = _.parse(value);\r\n            try {\r\n                var d = evaluate(_.subtract(this.symbol.clone(), value));\r\n                return d.lessThan(0);\r\n            }\r\n            catch(e) {\r\n                return false;\r\n            }\r\n            ;\r\n        },\r\n        gt: function (value) {\r\n            if(!isSymbol(value))\r\n                value = _.parse(value);\r\n            try {\r\n                var d = evaluate(_.subtract(this.symbol.clone(), value));\r\n                return d.greaterThan(0);\r\n            }\r\n            catch(e) {\r\n                return false;\r\n            }\r\n        },\r\n        gte: function (value) {\r\n            return this.gt(value) || this.eq(value);\r\n        },\r\n        lte: function (value) {\r\n            return this.lt(value) || this.eq(value);\r\n        },\r\n\r\n        numerator: function () {\r\n            return new Expression(this.symbol.getNum());\r\n        },\r\n        denominator: function () {\r\n            return new Expression(this.symbol.getDenom());\r\n        },\r\n        hasFunction: function (f) {\r\n            return this.symbol.containsFunction(f);\r\n        },\r\n        contains: function (variable) {\r\n            return this.symbol.contains(variable);\r\n        }\r\n    };\r\n    //Aliases\r\n    Expression.prototype.toTeX = Expression.prototype.latex;\r\n\r\n    \r\n//Scientific ===================================================================\r\n    /*\r\n     * Javascript has the toExponential method but this allows you to work with string and therefore any number of digits of your choosing\r\n     * For example Scientific('464589498449496467924197545625247695464569568959124568489548454');\r\n     */\r\n\r\n    function Scientific(num) {\r\n        if(!(this instanceof Scientific))\r\n            return new Scientific(num);\r\n\r\n        num = String(typeof num === 'undefined' ? 0 : num); //convert to a string\r\n\r\n        //remove the sign\r\n        if(num.startsWith('-')) {\r\n            this.sign = -1;\r\n            //remove the sign\r\n            num = num.substr(1, num.length);\r\n        }\r\n        else {\r\n            this.sign = 1;\r\n        }\r\n\r\n        if(Scientific.isScientific(num)) {\r\n            this.fromScientific(num);\r\n        }\r\n        else {\r\n            this.convert(num);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    Scientific.prototype = {\r\n        fromScientific: function (num) {\r\n            var parts = String(num).toLowerCase().split('e');\r\n            this.coeff = parts[0];\r\n            this.exponent = parts[1];\r\n\r\n            return this;\r\n        },\r\n        convert: function (num) {\r\n            //get wholes and decimals\r\n            var parts = num.split('.');\r\n            //make zero go away\r\n            var w = parts[0] || '';\r\n            var d = parts[1] || '';\r\n            //convert zero to blank strings\r\n            w = Scientific.removeLeadingZeroes(w);\r\n            d = Scientific.removeTrailingZeroes(d);\r\n            //find the location of the decimal place which is right after the wholes\r\n            var dot_location = w.length;\r\n            //add them together so we can move the dot\r\n            var n = w + d;\r\n            //find the next number\r\n            var zeroes = Scientific.leadingZeroes(n).length;\r\n            //set the exponent\r\n            this.exponent = dot_location - (zeroes + 1);\r\n            //set the coeff but first remove leading zeroes\r\n            var coeff = Scientific.removeLeadingZeroes(n);\r\n            this.coeff = coeff.charAt(0) + '.' + (coeff.substr(1, coeff.length) || '0');\r\n\r\n            //the coeff decimal places\r\n            var dec = this.coeff.split('.')[1] || ''; //if it's undefined or zero it's going to blank\r\n\r\n            this.decp = dec === '0' ? 0 : dec.length;\r\n            //decimals\r\n            this.dec = d;\r\n            //wholes\r\n            this.wholes = w;\r\n\r\n            return this;\r\n        },\r\n        round: function (num) {\r\n            var n = this.copy();\r\n\r\n            num = Number(num); //cast to number for safety\r\n            //since we know it guaranteed to be in the format {digit}{optional dot}{optional digits}\r\n            //we can round based on this\r\n            if(num === 0)\r\n                n.coeff = n.coeff.charAt(0);\r\n            else {\r\n                //get up to n-1 digits\r\n                var rounded = this.coeff.substring(0, num + 1);\r\n                //get the next two\r\n                var next_two = this.coeff.substring(num + 1, num + 3);\r\n                //the extra digit\r\n                var ed = next_two.charAt(0);\r\n\r\n                if(next_two.charAt(1) > 4)\r\n                    ed++;\r\n\r\n                n.coeff = rounded + ed;\r\n            }\r\n\r\n            return n;\r\n        },\r\n        copy: function () {\r\n            var n = new Scientific(0);\r\n            n.coeff = this.coeff;\r\n            n.exponent = this.exponent;\r\n            n.sign = this.sign;\r\n            return n;\r\n        },\r\n        toString: function (n) {\r\n            var retval;\r\n\r\n            if(Settings.SCIENTIFIC_IGNORE_ZERO_EXPONENTS && this.exponent === 0 && this.decp < n) {\r\n                if(this.decp === 0)\r\n                    retval = this.wholes;\r\n                else\r\n                    retval = this.coeff;\r\n            }\r\n            else {\r\n                var coeff = typeof n === 'undefined' ? this.coeff : Scientific.round(this.coeff, Math.min(n, this.decp || 1));\r\n                retval = this.exponent === 0 ? coeff : coeff + 'e' + this.exponent;\r\n            }\r\n\r\n            return (this.sign === -1 ? '-' : '') + retval;\r\n        }\r\n    };\r\n\r\n    Scientific.isScientific = function (num) {\r\n        return /\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num);\r\n    };\r\n    Scientific.leadingZeroes = function (num) {\r\n        var match = num.match(/^(0*).*$/);\r\n        return match ? match[1] : '';\r\n    };\r\n    Scientific.removeLeadingZeroes = function (num) {\r\n        var match = num.match(/^0*(.*)$/);\r\n        return match ? match[1] : '';\r\n    };\r\n\r\n    Scientific.removeTrailingZeroes = function (num) {\r\n        var match = num.match(/0*$/);\r\n        return match ? num.substring(0, num.length - match[0].length) : '';\r\n    };\r\n\r\n    Scientific.round = function (c, n) {\r\n        var coeff = nround(c, n);\r\n        var m = String(coeff).split('.').pop();\r\n        var d = n - m.length;\r\n        //if we're asking for more significant figures\r\n        if(d > 0) {\r\n            coeff = coeff + (new Array(d + 1).join(0));\r\n        }\r\n        return coeff;\r\n    };\r\n\r\n//Frac =========================================================================\r\n    function Frac(n) {\r\n        if(n instanceof Frac)\r\n            return n;\r\n        if(n === undefined)\r\n            return this;\r\n        try {\r\n            if(isInt(n)) {\r\n                try {\r\n                    this.num = bigInt(n);\r\n                    this.den = bigInt(1);\r\n                }\r\n                catch(e) {\r\n                    return Frac.simple(n);\r\n                }\r\n            }\r\n            else {\r\n                var frac = n instanceof bigDec ? Fraction.quickConversion(n) : Fraction.convert(n);\r\n                this.num = new bigInt(frac[0]);\r\n                this.den = new bigInt(frac[1]);\r\n            }\r\n        }\r\n        catch(e) {\r\n            return Frac.simple(n);\r\n        }\r\n\r\n    }\r\n    //safe to use with negative numbers or other types\r\n    Frac.create = function (n) {\r\n        if(n instanceof Frac)\r\n            return n;\r\n        n = n.toString();\r\n        var is_neg = n.charAt(0) === '-'; //check if it's negative\r\n        if(is_neg)\r\n            n = n.substr(1, n.length - 1); //remove the sign\r\n        var frac = new Frac(n);\r\n        //put the sign back\r\n        if(is_neg)\r\n            frac.negate();\r\n        return frac;\r\n    };\r\n    Frac.isFrac = function (o) {\r\n        return (o instanceof Frac);\r\n    };\r\n    Frac.quick = function (n, d) {\r\n        var frac = new Frac();\r\n        frac.num = new bigInt(n);\r\n        frac.den = new bigInt(d);\r\n        return frac;\r\n    };\r\n    Frac.simple = function (n) {\r\n        var nstr = String(scientificToDecimal(n)),\r\n                m_dc = nstr.split('.'),\r\n                num = m_dc.join(''),\r\n                den = 1,\r\n                l = (m_dc[1] || '').length;\r\n        for(var i = 0; i < l; i++)\r\n            den += '0';\r\n        var frac = Frac.quick(num, den);\r\n        return frac.simplify();\r\n    };\r\n    Frac.prototype = {\r\n        multiply: function (m) {\r\n            if(this.isOne()) {\r\n                return m.clone();\r\n            }\r\n            if(m.isOne()) {\r\n                return this.clone();\r\n            }\r\n\r\n            var c = this.clone();\r\n            c.num = c.num.multiply(m.num);\r\n            c.den = c.den.multiply(m.den);\r\n\r\n            return c.simplify();\r\n        },\r\n        divide: function (m) {\r\n            if(m.equals(0))\r\n                throw new DivisionByZero('Division by zero not allowed!');\r\n            return this.clone().multiply(m.clone().invert()).simplify();\r\n        },\r\n        subtract: function (m) {\r\n            return this.clone().add(m.clone().neg());\r\n        },\r\n        neg: function () {\r\n            this.num = this.num.multiply(-1);\r\n            return this;\r\n        },\r\n        add: function (m) {\r\n            var n1 = this.den, n2 = m.den, c = this.clone();\r\n            var a = c.num, b = m.num;\r\n            if(n1.equals(n2)) {\r\n                c.num = a.add(b);\r\n            }\r\n            else {\r\n                c.num = a.multiply(n2).add(b.multiply(n1));\r\n                c.den = n1.multiply(n2);\r\n            }\r\n\r\n            return c.simplify();\r\n        },\r\n        mod: function (m) {\r\n            var a = this.clone(),\r\n                    b = m.clone();\r\n            //make their denominators even and return the mod of their numerators\r\n            a.num = a.num.multiply(b.den);\r\n            a.den = a.den.multiply(b.den);\r\n            b.num = b.num.multiply(this.den);\r\n            b.den = b.den.multiply(this.den);\r\n            a.num = a.num.mod(b.num);\r\n            return a.simplify();\r\n        },\r\n        simplify: function () {\r\n            var gcd = bigInt.gcd(this.num, this.den);\r\n\r\n            this.num = this.num.divide(gcd);\r\n            this.den = this.den.divide(gcd);\r\n            return this;\r\n        },\r\n        clone: function () {\r\n            var m = new Frac();\r\n            m.num = new bigInt(this.num);\r\n            m.den = new bigInt(this.den);\r\n            return m;\r\n        },\r\n        decimal: function (prec) {\r\n            var sign = this.num.isNegative() ? '-' : '';\r\n            if(this.num.equals(this.den)) {\r\n                return '1';\r\n            }\r\n            //go plus one for rounding\r\n            prec = prec || Settings.PRECISION;\r\n            prec++;\r\n            var narr = [],\r\n                    n = this.num.abs(),\r\n                    d = this.den;\r\n            for(var i = 0; i < prec; i++) {\r\n                var w = n.divide(d), //divide out whole\r\n                        r = n.subtract(w.multiply(d)); //get remainder\r\n\r\n                narr.push(w);\r\n                if(r.equals(0))\r\n                    break;\r\n                n = r.times(10); //shift one dec place\r\n            }\r\n            var whole = narr.shift();\r\n            if(narr.length === 0) {\r\n                return sign + whole.toString();\r\n            }\r\n\r\n            if(i === prec) {\r\n                var lt = [];\r\n                //get the last two so we can round it\r\n                for(var i = 0; i < 2; i++)\r\n                    lt.unshift(narr.pop());\r\n                //put the last digit back by rounding the last two\r\n                narr.push(Math.round(lt.join('.')));\r\n            }\r\n\r\n            var dec = whole.toString() + '.' + narr.join('');\r\n            return sign + dec;\r\n        },\r\n        toDecimal: function (prec) { \r\n            prec = prec || Settings.PRECISION;\r\n            if(prec) {\r\n                return this.decimal(prec);\r\n            }\r\n            else {\r\n                return this.num / this.den;\r\n            }\r\n        },\r\n        qcompare: function (n) {\r\n            return [this.num.multiply(n.den), n.num.multiply(this.den)];\r\n        },\r\n        equals: function (n) {\r\n            if(!isNaN(n))\r\n                n = new Frac(n);\r\n            var q = this.qcompare(n);\r\n\r\n            return q[0].equals(q[1]);\r\n        },\r\n        absEquals: function (n) {\r\n            if(!isNaN(n))\r\n                n = new Frac(n);\r\n            var q = this.qcompare(n);\r\n\r\n            return q[0].abs().equals(q[1]);\r\n        },\r\n        //lazy check to be fixed. Sufficient for now but will cause future problems\r\n        greaterThan: function (n) {\r\n            if(!isNaN(n))\r\n                n = new Frac(n);\r\n            var q = this.qcompare(n);\r\n\r\n            return q[0].gt(q[1]);\r\n        },\r\n        gte: function (n) {\r\n            return this.greaterThan(n) || this.equals(n);\r\n        },\r\n        lte: function (n) {\r\n            return this.lessThan(n) || this.equals(n);\r\n        },\r\n        lessThan: function (n) {\r\n            if(!isNaN(n))\r\n                n = new Frac(n);\r\n            var q = this.qcompare(n);\r\n\r\n            return q[0].lt(q[1]);\r\n        },\r\n        isInteger: function () {\r\n            return this.den.equals(1);\r\n        },\r\n        negate: function () {\r\n            this.num = this.num.multiply(-1);\r\n            return this;\r\n        },\r\n        invert: function () {\r\n            var t = this.den;\r\n            //why invert 0/1? It'll become 1/0 and that's a lie.\r\n            if(!this.num.equals(0)) {\r\n                var isnegative = this.num.isNegative();\r\n                this.den = this.num.abs();\r\n                this.num = t;\r\n                if(isnegative)\r\n                    this.num = this.num.multiply(-1);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        isOne: function () {\r\n            return this.num.equals(1) && this.den.equals(1);\r\n        },\r\n        sign: function () {\r\n            return this.num.isNegative() ? -1 : 1;\r\n        },\r\n        abs: function () {\r\n            this.num = this.num.abs();\r\n            return this;\r\n        },\r\n        gcd: function (f) {\r\n            return Frac.quick(bigInt.gcd(f.num, this.num), bigInt.lcm(f.den, this.den));\r\n        },\r\n        toString: function () {\r\n            return !this.den.equals(1) ? this.num.toString() + '/' + this.den.toString() : this.num.toString();\r\n        },\r\n        valueOf: function () {\r\n//            if(this.num == 24) throw new Error(999)\r\n            if(Settings.USE_BIG)\r\n                return new bigDec(this.num.toString()).div(new bigDec(this.den.toString()));\r\n            var retval = this.num / this.den;\r\n            return retval;\r\n        },\r\n        isNegative: function () {\r\n            return this.toDecimal() < 0;\r\n        }\r\n    };\r\n\r\n//Symbol =======================================================================\r\n    /**\r\n     * All symbols e.g. x, y, z, etc or functions are wrapped in this class. All symbols have a multiplier and a group.\r\n     * All symbols except for \"numbers (group N)\" have a power.\r\n     * @class Primary data type for the Parser.\r\n     * @param {String} obj\r\n     * @returns {Symbol}\r\n     */\r\n    function Symbol(obj) {\r\n        var isInfinity = obj === 'Infinity';\r\n        // This enables the class to be instantiated without the new operator\r\n        if(!(this instanceof Symbol)) {\r\n            return new Symbol(obj);\r\n        }\r\n        // Convert big numbers to a string\r\n        if(obj instanceof bigDec) {\r\n            obj = obj.toString();\r\n        }\r\n        //define numeric symbols\r\n        if(/^(\\-?\\+?\\d+)\\.?\\d*e?\\-?\\+?\\d*/i.test(obj) || obj instanceof bigDec) {\r\n            this.group = N;\r\n            this.value = CONST_HASH;\r\n            this.multiplier = new Frac(obj);\r\n        }\r\n        //define symbolic symbols\r\n        else {\r\n            this.group = S;\r\n            validateName(obj);\r\n            this.value = obj;\r\n            this.multiplier = new Frac(1);\r\n            this.imaginary = obj === Settings.IMAGINARY;\r\n            this.isInfinity = isInfinity;\r\n        }\r\n\r\n        //As of 6.0.0 we switched to infinite precision so all objects have a power\r\n        //Although this is still redundant in constants, it simplifies the logic in\r\n        //other parts so we'll keep it\r\n        this.power = new Frac(1);\r\n\r\n        // Added to silence the strict warning.\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns vanilla imaginary symbol\r\n     * @returns {Symbol}\r\n     */\r\n    Symbol.imaginary = function () {\r\n        var s = new Symbol(Settings.IMAGINARY);\r\n        s.imaginary = true;\r\n        return s;\r\n    };\r\n    /**\r\n     * Return nerdamer's representation of Infinity\r\n     * @param {int} negative -1 to return negative infinity\r\n     * @returns {Symbol}\r\n     */\r\n    Symbol.infinity = function (negative) {\r\n        var v = new Symbol('Infinity');\r\n        if(negative === -1)\r\n            v.negate();\r\n        return v;\r\n    };\r\n    Symbol.shell = function (group, value) {\r\n        var symbol = new Symbol(value);\r\n        symbol.group = group;\r\n        symbol.symbols = {};\r\n        symbol.length = 0;\r\n        return symbol;\r\n    };\r\n    //sqrt(x) -> x^(1/2)\r\n    Symbol.unwrapSQRT = function (symbol, all) {\r\n        var p = symbol.power;\r\n        if(symbol.fname === SQRT && (symbol.isLinear() || all)) {\r\n            var t = symbol.args[0].clone();\r\n            t.power = t.power.multiply(new Frac(1 / 2));\r\n            t.multiplier = t.multiplier.multiply(symbol.multiplier);\r\n            symbol = t;\r\n            if(all)\r\n                symbol.power = p.multiply(new Frac(1 / 2));\r\n        }\r\n\r\n        return symbol;\r\n    };\r\n    Symbol.hyp = function (a, b) {\r\n        a = a || new Symbol(0);\r\n        b = b || new Symbol(0);\r\n        return _.sqrt(_.add(_.pow(a.clone(), new Symbol(2)), _.pow(b.clone(), new Symbol(2))));\r\n    };\r\n    //converts to polar form array\r\n    Symbol.toPolarFormArray = function (symbol) {\r\n        var re, im, r, theta;\r\n        re = symbol.realpart();\r\n        im = symbol.imagpart();\r\n        r = Symbol.hyp(re, im);\r\n        theta = re.equals(0) ? _.parse('pi/2') : _.trig.atan(_.divide(im, re));\r\n        return [r, theta];\r\n    };\r\n    //removes parentheses\r\n    Symbol.unwrapPARENS = function (symbol) {\r\n        if(symbol.fname === '') {\r\n            var r = symbol.args[0];\r\n            r.power = r.power.multiply(symbol.power);\r\n            r.multiplier = r.multiplier.multiply(symbol.multiplier);\r\n            if(symbol.fname === '')\r\n                return Symbol.unwrapPARENS(r);\r\n            return r;\r\n        }\r\n        return symbol;\r\n    };\r\n    //quickly creates a Symbol\r\n    Symbol.create = function (value, power) {\r\n        power = power === undefined ? 1 : power;\r\n        return _.parse('(' + value + ')^(' + power + ')');\r\n    };\r\n    Symbol.prototype = {\r\n        /**\r\n         * Gets nth root accounting for rounding errors\r\n         * @param {Number} n\r\n         * @return {Number}\r\n         */\r\n        getNth: function (n) {\r\n            // First calculate the root\r\n            var root = evaluate(_.pow(_.parse(this.multiplier), _.parse(n).invert()));\r\n            // Round of any errors\r\n            var rounded = _.parse(nround(root));\r\n            // Reverse the root\r\n            var e = evaluate(_.pow(rounded, _.parse(n)));\r\n            // If the rounded root equals the original number then we're good \r\n            if(e.equals(_.parse(this.multiplier))) {\r\n                return rounded;\r\n            }\r\n            // Otherwise return the unrounded version\r\n            return root;\r\n        },\r\n        /**\r\n         * Checks if symbol is to the nth power\r\n         * @returns {Boolean}\r\n         */\r\n        isToNth: function (n) {\r\n            // Start by check in the multiplier for squareness\r\n            // First get the root but round it because currently we still depend \r\n            var root = this.getNth(n);\r\n            var nthMultiplier = isInt(root);\r\n            var nthPower;\r\n\r\n            if(this.group === CB) {\r\n                // Start by assuming that all will be square.\r\n                nthPower = true;\r\n                // All it takes is for one of the symbols to not have an even power\r\n                // e.g. x^n1*y^n2 requires that both n1 and n2 are even\r\n                this.each(function (x) {\r\n                    var isNth = x.isToNth(n);\r\n\r\n                    if(!isNth) {\r\n                        nthPower = false;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                // Check if the power is divisible by n if it's not a number.\r\n                nthPower = this.group === N ? true : isInt(_.divide(_.parse(this.power), _.parse(n)));\r\n            }\r\n\r\n            return nthMultiplier && nthPower;\r\n        },\r\n        /**\r\n         * Checks if a symbol is square\r\n         * @return {Boolean}\r\n         */\r\n        isSquare: function () {\r\n            return this.isToNth(2);\r\n        },\r\n        /**\r\n         * Checks if a symbol is cube\r\n         * @return {Boolean}\r\n         */\r\n        isCube: function () {\r\n            return this.isToNth(3);\r\n        },\r\n        /**\r\n         * Checks if a symbol is a bare variable\r\n         * @return {Boolean}\r\n         */\r\n        isSimple: function () {\r\n            return this.power.equals(1) && this.multiplier.equals(1);\r\n        },\r\n        /**\r\n         * Simplifies the power of the symbol\r\n         * @returns {Symbol} a clone of the symbol\r\n         */\r\n        powSimp: function () {\r\n            if(this.group === CB) {\r\n                var powers = [],\r\n                        sign = this.multiplier.sign();\r\n                this.each(function (x) {\r\n                    var p = x.power;\r\n                    //why waste time if I can't do anything anyway\r\n                    if(isSymbol(p) || p.equals(1))\r\n                        return this.clone();\r\n                    powers.push(p);\r\n                });\r\n                var min = new Frac(arrayMin(powers));\r\n\r\n                //handle the coefficient\r\n                //handle the multiplier\r\n                var sign = this.multiplier.sign(),\r\n                        m = this.multiplier.clone().abs(),\r\n                        mfactors = Math2.ifactor(m);\r\n                //if we have a multiplier of 6750 and a min of 2 then the factors are 5^3*5^3*2\r\n                //we can then reduce it to 2*3*5*(15)^2\r\n                var out_ = new Frac(1);\r\n                var in_ = new Frac(1);\r\n\r\n                for(var x in mfactors) {\r\n                    var n = new Frac(mfactors[x]);\r\n                    if(!n.lessThan(min)) {\r\n                        n = n.divide(min).subtract(new Frac(1));\r\n                        in_ = in_.multiply(new Frac(x)); //move the factor inside the bracket\r\n                    }\r\n\r\n                    out_ = out_.multiply(_.parse(inBrackets(x) + '^' + inBrackets(n)).multiplier);\r\n                }\r\n                var t = new Symbol(in_);\r\n                this.each(function (x) {\r\n                    x = x.clone();\r\n                    x.power = x.power.divide(min);\r\n                    t = _.multiply(t, x);\r\n                });\r\n\r\n                var xt = _.symfunction(PARENTHESIS, [t]);\r\n                xt.power = min;\r\n                xt.multiplier = sign < 0 ? out_.negate() : out_;\r\n\r\n                return xt;\r\n            }\r\n            return this.clone();\r\n        },\r\n        /**\r\n         * Checks to see if two functions are of equal value\r\n         * @param {Symbol} symbol\r\n         */\r\n        equals: function (symbol) {\r\n            if(!isSymbol(symbol))\r\n                symbol = new Symbol(symbol);\r\n            return this.value === symbol.value && this.power.equals(symbol.power)\r\n                    && this.multiplier.equals(symbol.multiplier)\r\n                    && this.group === symbol.group;\r\n        },\r\n        abs: function () {\r\n            var e = this.clone();\r\n            e.multiplier.abs();\r\n            return e;\r\n        },\r\n        // Greater than\r\n        gt: function (symbol) {\r\n            if(!isSymbol(symbol))\r\n                symbol = new Symbol(symbol);\r\n            return this.isConstant() && symbol.isConstant() && this.multiplier.greaterThan(symbol.multiplier);\r\n        },\r\n        // Greater than\r\n        gte: function (symbol) {\r\n            if(!isSymbol(symbol))\r\n                symbol = new Symbol(symbol);\r\n            return this.equals(symbol) ||\r\n                    this.isConstant() && symbol.isConstant() && this.multiplier.greaterThan(symbol.multiplier);\r\n        },\r\n        // Less than\r\n        lt: function (symbol) {\r\n            if(!isSymbol(symbol))\r\n                symbol = new Symbol(symbol);\r\n            return this.isConstant() && symbol.isConstant() && this.multiplier.lessThan(symbol.multiplier);\r\n        },\r\n        // Less than\r\n        lte: function (symbol) {\r\n            if(!isSymbol(symbol))\r\n                symbol = new Symbol(symbol);\r\n            return this.equals(symbol) ||\r\n                    this.isConstant() && symbol.isConstant() && this.multiplier.lessThan(symbol.multiplier);\r\n        },\r\n        /**\r\n         * Because nerdamer doesn't group symbols by polynomials but\r\n         * rather a custom grouping method, this has to be\r\n         * reinserted in order to make use of most algorithms. This function\r\n         * checks if the symbol meets the criteria of a polynomial.\r\n         * @param {bool} multivariate\r\n         * @returns {boolean}\r\n         */\r\n        isPoly: function (multivariate) {\r\n            var g = this.group,\r\n                    p = this.power;\r\n            //the power must be a integer so fail if it's not\r\n            if(!isInt(p) || p < 0)\r\n                return false;\r\n            //constants and first orders\r\n            if(g === N || g === S || this.isConstant(true))\r\n                return true;\r\n            var vars = variables(this);\r\n            if(g === CB && vars.length === 1) {\r\n                //the variable is assumed the only one that was found\r\n                var v = vars[0];\r\n                //if no variable then guess what!?!? We're done!!! We have a polynomial.\r\n                if(!v)\r\n                    return true;\r\n                for(var x in this.symbols) {\r\n                    var sym = this.symbols[x];\r\n                    //sqrt(x)\r\n                    if(sym.group === FN && !sym.args[0].isConstant())\r\n                        return false;\r\n                    if(!sym.contains(v) && !sym.isConstant(true))\r\n                        return false;\r\n                }\r\n                return true;\r\n            }\r\n            //PL groups. These only fail if a power is not an int\r\n            //this should handle cases such as x^2*t\r\n            if(this.isComposite() || g === CB && multivariate) {\r\n                //fail if we're not checking for multivariate polynomials\r\n                if(!multivariate && vars.length > 1)\r\n                    return false;\r\n                //loop though the symbols and check if they qualify\r\n                for(var x in this.symbols) {\r\n                    //we've already the symbols if we're not checking for multivariates at this point\r\n                    //so we check the sub-symbols\r\n                    if(!this.symbols[x].isPoly(multivariate))\r\n                        return false;\r\n                }\r\n                return true;\r\n            }\r\n            else\r\n                return false;\r\n\r\n            /*\r\n             //all tests must have passed so we must be dealing with a polynomial\r\n             return true;\r\n             */\r\n        },\r\n        //removes the requested variable from the symbol and returns the remainder\r\n        stripVar: function (x, exclude_x) {\r\n            var retval;\r\n            if((this.group === PL || this.group === S) && this.value === x)\r\n                retval = new Symbol(exclude_x ? 0 : this.multiplier);\r\n            else if(this.group === CB && this.isLinear()) {\r\n                retval = new Symbol(1);\r\n                this.each(function (s) {\r\n                    if(!s.contains(x, true))\r\n                        retval = _.multiply(retval, s.clone());\r\n                });\r\n                retval.multiplier = retval.multiplier.multiply(this.multiplier);\r\n            }\r\n            else if(this.group === CP && !this.isLinear()) {\r\n                retval = new Symbol(this.multiplier);\r\n            }\r\n            else if(this.group === CP && this.isLinear()) {\r\n                retval = new Symbol(0);\r\n                this.each(function (s) {\r\n                    if(!s.contains(x)) {\r\n                        var t = s.clone();\r\n                        t.multiplier = t.multiplier.multiply(this.multiplier);\r\n                        retval = _.add(retval, t);\r\n                    }\r\n                });\r\n                //BIG TODO!!! It doesn't make much sense\r\n                if(retval.equals(0))\r\n                    retval = new Symbol(this.multiplier);\r\n            }\r\n            else if(this.group === EX && this.power.contains(x, true)) {\r\n                retval = new Symbol(this.multiplier);\r\n            }\r\n            else if(this.group === FN && this.contains(x)) {\r\n                retval = new Symbol(this.multiplier);\r\n            }\r\n            else\r\n                //wth? This should technically be the multiplier.\r\n                //Unfortunately this method wasn't very well thought out :`(.\r\n                //should be: retval = new Symbol(this.multiplier);\r\n                //use: ((1+x^2)*sqrt(-1+x^2))^(-1) for correction.\r\n                //this will break a bunch of unit tests so be ready to for the long haul\r\n                retval = this.clone();\r\n\r\n\r\n            return retval;\r\n        },\r\n        //returns symbol in array form with x as base e.g. a*x^2+b*x+c = [c, b, a].\r\n        toArray: function (v, arr) {\r\n            arr = arr || {\r\n                arr: [],\r\n                add: function (x, idx) {\r\n                    var e = this.arr[idx];\r\n                    this.arr[idx] = e ? _.add(e, x) : x;\r\n                }\r\n            };\r\n            var g = this.group;\r\n\r\n            if(g === S && this.contains(v)) {\r\n                arr.add(new Symbol(this.multiplier), this.power);\r\n            }\r\n            else if(g === CB) {\r\n                var a = this.stripVar(v),\r\n                        x = _.divide(this.clone(), a.clone());\r\n                var p = x.isConstant() ? 0 : x.power;\r\n                arr.add(a, p);\r\n            }\r\n            else if(g === PL && this.value === v) {\r\n                this.each(function (x, p) {\r\n                    arr.add(x.stripVar(v), p);\r\n                });\r\n            }\r\n            else if(g === CP) {\r\n                //the logic: they'll be broken into symbols so e.g. (x^2+x)+1 or (a*x^2+b*x+c)\r\n                //each case is handled above\r\n                this.each(function (x) {\r\n                    x.toArray(v, arr);\r\n                });\r\n            }\r\n            else if(this.contains(v)) {\r\n                throw new NerdamerTypeError('Cannot convert to array! Exiting');\r\n            }\r\n            else {\r\n                arr.add(this.clone(), 0); //it's just a constant wrt to v\r\n            }\r\n            //fill the holes\r\n            arr = arr.arr; //keep only the array since we don't need the object anymore\r\n            for(var i = 0; i < arr.length; i++)\r\n                if(!arr[i])\r\n                    arr[i] = new Symbol(0);\r\n            return arr;\r\n        },\r\n        //checks to see if a symbol contans a function\r\n        hasFunc: function (v) {\r\n            var fn_group = this.group === FN || this.group === EX;\r\n            if(fn_group && !v || fn_group && this.contains(v))\r\n                return true;\r\n            if(this.symbols) {\r\n                for(var x in this.symbols) {\r\n                    if(this.symbols[x].hasFunc(v))\r\n                        return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        sub: function (a, b) {\r\n            a = !isSymbol(a) ? _.parse(a) : a.clone();\r\n            b = !isSymbol(b) ? _.parse(b) : b.clone();\r\n            if(a.group === N || a.group === P)\r\n                err('Cannot substitute a number. Must be a variable');\r\n            var same_pow = false,\r\n                    a_is_unit_multiplier = a.multiplier.equals(1),\r\n                    m = this.multiplier.clone(),\r\n                    retval;\r\n            /*\r\n             * In order to make the substitution the bases have to first match take\r\n             * (x+1)^x -> (x+1)=y || x^2 -> x=y^6\r\n             * In both cases the first condition is that the bases match so we begin there\r\n             * Either both are PL or both are not PL but we cannot have PL and a non-PL group match\r\n             */\r\n            if(this.value === a.value && (this.group !== PL && a.group !== PL || this.group === PL && a.group === PL)) {\r\n                //we cleared the first hurdle but a subsitution may not be possible just yet\r\n                if(a_is_unit_multiplier || a.multiplier.equals(this.multiplier)) {\r\n                    if(a.isLinear()) {\r\n                        retval = b;\r\n                    }\r\n                    else if(a.power.equals(this.power)) {\r\n                        retval = b;\r\n                        same_pow = true;\r\n                    }\r\n                    if(a.multiplier.equals(this.multiplier))\r\n                        m = new Frac(1);\r\n                }\r\n            }\r\n            //the next thing is to handle CB\r\n            else if(this.group === CB || this.previousGroup === CB) {\r\n                retval = new Symbol(1);\r\n                this.each(function (x) {\r\n                    var subbed = _.parse(x.sub(a, b)); //parse it again for safety\r\n                    retval = _.multiply(retval, subbed);\r\n\r\n                });\r\n            }\r\n            else if(this.isComposite()) {\r\n                var symbol = this.clone();\r\n\r\n                if(a.isComposite() && symbol.isComposite() && symbol.isLinear() && a.isLinear()) {\r\n                    var find = function (stack, needle) {\r\n                        for(var x in stack.symbols) {\r\n                            var sym = stack.symbols[x];\r\n                            //if the symbol equals the needle or it's within the sub-symbols we're done\r\n                            if(sym.isComposite() && find(sym, needle) || sym.equals(needle))\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    };\r\n                    //go fish\r\n                    for(var x in a.symbols) {\r\n                        if(!find(symbol, a.symbols[x]))\r\n                            return symbol.clone();\r\n                    }\r\n                    retval = _.add(_.subtract(symbol.clone(), a), b);\r\n                }\r\n                else {\r\n                    retval = new Symbol(0);\r\n                    symbol.each(function (x) {\r\n                        retval = _.add(retval, x.sub(a, b));\r\n                    });\r\n                }\r\n            }\r\n            else if(this.group === EX) {\r\n                // the parsed value could be a function so parse and sub\r\n                retval = _.parse(this.value).sub(a, b);\r\n            }\r\n            else if(this.group === FN) {\r\n                var nargs = [];\r\n                for(var i = 0; i < this.args.length; i++) {\r\n                    var arg = this.args[i];\r\n                    if(!isSymbol(arg))\r\n                        arg = _.parse(arg);\r\n                    nargs.push(arg.sub(a, b));\r\n                }\r\n                retval = _.symfunction(this.fname, nargs);\r\n            }\r\n            //if we did manage a substitution\r\n            if(retval) {\r\n                if(!same_pow) {\r\n                    //substitute the power\r\n                    var p = this.group === EX ? this.power.sub(a, b) : _.parse(this.power);\r\n                    //now raise the symbol to that power\r\n                    retval = _.pow(retval, p);\r\n                }\r\n\r\n                //transfer the multiplier\r\n                retval.multiplier = retval.multiplier.multiply(m);\r\n\r\n                //done\r\n                return retval;\r\n            }\r\n            //if all else fails\r\n            return this.clone();\r\n        },\r\n        isMonomial: function () {\r\n            if(this.group === S)\r\n                return true;\r\n            if(this.group === CB) {\r\n                for(var x in this.symbols)\r\n                    if(this.symbols[x].group !== S)\r\n                        return false;\r\n            }\r\n            else\r\n                return false;\r\n            return true;\r\n        },\r\n        isPi: function () {\r\n            return this.group === S && this.value === 'pi';\r\n        },\r\n        sign: function () {\r\n            return this.multiplier.sign();\r\n        },\r\n        isE: function () {\r\n            return this.value === 'e';\r\n        },\r\n        isSQRT: function () {\r\n            return this.fname === SQRT;\r\n        },\r\n        isConstant: function (check_all, check_symbols) {\r\n            if(check_symbols && this.group === CB) {\r\n                for(var x in this.symbols) {\r\n                    if(this.symbols[x].isConstant(true))\r\n                        return true;\r\n                }\r\n            }\r\n\r\n            if(check_all === 'functions' && this.isComposite()) {\r\n                var isConstant = true;\r\n\r\n                this.each(function (x) {\r\n                    if(!x.isConstant(check_all, check_symbols)) {\r\n                        isConstant = false;\r\n                    }\r\n                }, true);\r\n\r\n                return isConstant;\r\n            }\r\n\r\n            if(check_all === 'all' && (this.isPi() || this.isE())) {\r\n                return true;\r\n            }\r\n\r\n            if(check_all && this.group === FN) {\r\n                for(var i = 0; i < this.args.length; i++) {\r\n                    if(!this.args[i].isConstant(check_all))\r\n                        return false;\r\n                }\r\n                return true;\r\n            }\r\n\r\n            if(check_all)\r\n                return isNumericSymbol(this);\r\n            return this.value === CONST_HASH;\r\n        },\r\n        //the symbols is imaginary if\r\n        //1. n*i\r\n        //2. a+b*i\r\n        //3. a*i\r\n        isImaginary: function () {\r\n            if(this.imaginary)\r\n                return true;\r\n            else if(this.symbols) {\r\n                for(var x in this.symbols)\r\n                    if(this.symbols[x].isImaginary())\r\n                        return true;\r\n            }\r\n            return false;\r\n        },\r\n        /**\r\n         * Returns the real part of a symbol\r\n         * @returns {Symbol}\r\n         */\r\n        realpart: function () {\r\n            if(this.isConstant()) {\r\n                return this.clone();\r\n            }\r\n            else if(this.imaginary)\r\n                return new Symbol(0);\r\n            else if(this.isComposite()) {\r\n                var retval = new Symbol(0);\r\n                this.each(function (x) {\r\n                    retval = _.add(retval, x.realpart());\r\n                });\r\n                return retval;\r\n            }\r\n            else if(this.isImaginary())\r\n                return new Symbol(0);\r\n            return this.clone();\r\n        },\r\n        /*\r\n         * Return imaginary part of a symbol\r\n         * @returns {Symbol}\r\n         */\r\n        imagpart: function () {\r\n            if(this.group === S && this.isImaginary())\r\n                return new Symbol(this.multiplier);\r\n            if(this.isComposite()) {\r\n                var retval = new Symbol(0);\r\n                this.each(function (x) {\r\n                    retval = _.add(retval, x.imagpart());\r\n                });\r\n                return retval;\r\n            }\r\n            if(this.group === CB)\r\n                return this.stripVar(Settings.IMAGINARY);\r\n            return new Symbol(0);\r\n        },\r\n        isInteger: function () {\r\n            return this.isConstant() && this.multiplier.isInteger();\r\n        },\r\n        isLinear: function (wrt) {\r\n            if(wrt) {\r\n                if(this.isConstant())\r\n                    return true;\r\n                if(this.group === S) {\r\n                    if(this.value === wrt)\r\n                        return this.power.equals(1);\r\n                    else\r\n                        return true;\r\n                }\r\n\r\n                if(this.isComposite() && this.power.equals(1)) {\r\n                    for(var x in this.symbols) {\r\n                        if(!this.symbols[x].isLinear(wrt))\r\n                            return false;\r\n                    }\r\n                    return true;\r\n                }\r\n\r\n                if(this.group === CB && this.symbols[wrt])\r\n                    return this.symbols[wrt].isLinear(wrt);\r\n                return false;\r\n            }\r\n            else\r\n                return this.power.equals(1);\r\n        },\r\n        /**\r\n         * Checks to see if a symbol has a function by a specified name or within a specified list\r\n         * @param {String|String[]} names\r\n         * @returns {Boolean}\r\n         */\r\n        containsFunction: function (names) {\r\n            if(typeof names === 'string')\r\n                names = [names];\r\n            if(this.group === FN && names.indexOf(this.fname) !== -1)\r\n                return true;\r\n            if(this.symbols) {\r\n                for(var x in this.symbols) {\r\n                    if(this.symbols[x].containsFunction(names))\r\n                        return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        multiplyPower: function (p2) {\r\n            //leave out 1\r\n            if(this.group === N && this.multiplier.equals(1))\r\n                return this;\r\n\r\n            var p1 = this.power;\r\n\r\n            if(this.group !== EX && p2.group === N) {\r\n                var p = p2.multiplier;\r\n                if(this.group === N && !p.isInteger()) {\r\n                    this.convert(P);\r\n                }\r\n\r\n                this.power = p1.equals(1) ? p.clone() : p1.multiply(p);\r\n\r\n                if(this.group === P && isInt(this.power)) {\r\n                    //bring it back to an N\r\n                    this.value = Math.pow(this.value, this.power);\r\n                    this.toLinear();\r\n                    this.convert(N);\r\n                }\r\n            }\r\n            else {\r\n                if(this.group !== EX) {\r\n                    p1 = new Symbol(p1);\r\n                    this.convert(EX);\r\n                }\r\n                this.power = _.multiply(p1, p2);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        setPower: function (p, retainSign) {\r\n            //leave out 1\r\n            if(this.group === N && this.multiplier.equals(1)) {\r\n                return this;\r\n            }\r\n            if(this.group === EX && !isSymbol(p)) {\r\n                this.group = this.previousGroup;\r\n                delete this.previousGroup;\r\n                if(this.group === N) {\r\n                    this.multiplier = new Frac(this.value);\r\n                    this.value = CONST_HASH;\r\n                }\r\n                else\r\n                    this.power = p;\r\n            }\r\n            else {\r\n                var isSymbolic = false;\r\n                if(isSymbol(p)) {\r\n                    if(p.group === N) {\r\n                        //p should be the multiplier instead\r\n                        p = p.multiplier;\r\n\r\n                    }\r\n                    else {\r\n                        isSymbolic = true;\r\n                    }\r\n                }\r\n                var group = isSymbolic ? EX : P;\r\n                this.power = p;\r\n                if(this.group === N && group)\r\n                    this.convert(group, retainSign);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        /**\r\n         * Checks to see if symbol is located in the denominator\r\n         * @returns {boolean}\r\n         */\r\n        isInverse: function () {\r\n            if(this.group === EX)\r\n                return (this.power.multiplier.lessThan(0));\r\n            return this.power < 0;\r\n        },\r\n        /**\r\n         * Make a duplicate of a symbol by copying a predefined list of items.\r\n         * The name 'copy' would probably be a more appropriate name.\r\n         * to a new symbol\r\n         * @param {Symbol} c\r\n         * @returns {Symbol}\r\n         */\r\n        clone: function (c) {\r\n            var clone = c || new Symbol(0),\r\n                    //list of properties excluding power as this may be a symbol and would also need to be a clone.\r\n                    properties = [\r\n                        'value', 'group', 'length', 'previousGroup', 'imaginary', 'fname', 'args', 'isInfinity', 'scientific'],\r\n                    l = properties.length, i;\r\n            if(this.symbols) {\r\n                clone.symbols = {};\r\n                for(var x in this.symbols) {\r\n                    clone.symbols[x] = this.symbols[x].clone();\r\n                }\r\n            }\r\n\r\n            for(i = 0; i < l; i++) {\r\n                if(this[properties[i]] !== undefined) {\r\n                    clone[properties[i]] = this[properties[i]];\r\n                }\r\n            }\r\n\r\n            clone.power = this.power.clone();\r\n            clone.multiplier = this.multiplier.clone();\r\n            //add back the flag to track if this symbol is a conversion symbol\r\n            if(this.isConversion)\r\n                clone.isConversion = this.isConversion;\r\n\r\n            if(this.isUnit)\r\n                clone.isUnit = this.isUnit;\r\n\r\n            return clone;\r\n        },\r\n        /**\r\n         * Converts a symbol multiplier to one.\r\n         * @param {Boolean} keepSign Keep the multiplier as negative if the multiplier is negative and keepSign is true\r\n         * @returns {Symbol}\r\n         */\r\n        toUnitMultiplier: function (keepSign) {\r\n            this.multiplier.num = new bigInt(this.multiplier.num.isNegative() && keepSign ? -1 : 1);\r\n            this.multiplier.den = new bigInt(1);\r\n            return this;\r\n        },\r\n        /**\r\n         * Converts a Symbol's power to one.\r\n         * @returns {Symbol}\r\n         */\r\n        toLinear: function () {\r\n            // Do nothing if it's already linear\r\n            if(this.power.equals(1)) {\r\n                return this;\r\n            }\r\n            this.setPower(new Frac(1));\r\n            return this;\r\n        },\r\n        /**\r\n         * Iterates over all the sub-symbols. If no sub-symbols exist then it's called on itself\r\n         * @param {Function} fn\r\n         * @@param {Boolean} deep If true it will itterate over the sub-symbols their symbols as well\r\n         */\r\n        each: function (fn, deep) {\r\n            if(!this.symbols) {\r\n                fn.call(this, this, this.value);\r\n            }\r\n            else {\r\n                for(var x in this.symbols) {\r\n                    var sym = this.symbols[x];\r\n                    if(sym.group === PL && deep) {\r\n                        for(var y in sym.symbols) {\r\n                            fn.call(x, sym.symbols[y], y);\r\n                        }\r\n                    }\r\n                    else\r\n                        fn.call(this, sym, x);\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * A numeric value to be returned for Javascript. It will try to\r\n         * return a number as far a possible but in case of a pure symbolic\r\n         * symbol it will just return its text representation\r\n         * @returns {String|Number}\r\n         */\r\n        valueOf: function () {\r\n            if(this.group === N)\r\n                return this.multiplier.valueOf();\r\n            else if(this.power === 0) {\r\n                return 1;\r\n            }\r\n            else if(this.multiplier === 0) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return text(this, 'decimals');\r\n            }\r\n        },\r\n        /**\r\n         * Checks to see if a symbols has a particular variable within it.\r\n         * Pass in true as second argument to include the power of exponentials\r\n         * which aren't check by default.\r\n         * @example var s = _.parse('x+y+z'); s.contains('y');\r\n         * //returns true\r\n         * @param {any} variable\r\n         * @param {boolean} all\r\n         * @returns {boolean}\r\n         */\r\n        contains: function (variable, all) {\r\n            //contains expects a string\r\n            variable = String(variable);\r\n            var g = this.group;\r\n            if(this.value === variable)\r\n                return true;\r\n            if(this.symbols) {\r\n                for(var x in this.symbols) {\r\n                    if(this.symbols[x].contains(variable, all))\r\n                        return true;\r\n                }\r\n            }\r\n            if(g === FN || this.previousGroup === FN) {\r\n                for(var i = 0; i < this.args.length; i++) {\r\n                    if(this.args[i].contains(variable, all))\r\n                        return true;\r\n                }\r\n            }\r\n\r\n            if(g === EX) {\r\n                //exit only if it does\r\n                if(all && this.power.contains(variable, all)) {\r\n                    return true;\r\n                }\r\n                if(this.value === variable)\r\n                    return true;\r\n\r\n            }\r\n\r\n            return this.value === variable;\r\n        },\r\n        /**\r\n         * Negates a symbols\r\n         * @returns {boolean}\r\n         */\r\n        negate: function () {\r\n            this.multiplier.negate();\r\n            if(this.group === CP || this.group === PL)\r\n                this.distributeMultiplier();\r\n            return this;\r\n        },\r\n        /**\r\n         * Inverts a symbol\r\n         * @param {boolean} power_only\r\n         * @param {boolean} all\r\n         * @returns {boolean}\r\n         */\r\n        invert: function (power_only, all) {\r\n            //invert the multiplier\r\n            if(!power_only)\r\n                this.multiplier = this.multiplier.invert();\r\n            //invert the rest\r\n            if(isSymbol(this.power)) {\r\n                this.power.negate();\r\n            }\r\n            else if(this.group === CB && all) {\r\n                this.each(function (x) {\r\n                    return x.invert();\r\n                });\r\n            }\r\n            else {\r\n                if(this.power && this.group !== N)\r\n                    this.power.negate();\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * Symbols of group CP or PL may have the multiplier being carried by\r\n         * the top level symbol at any given time e.g. 2*(x+y+z). This is\r\n         * convenient in many cases, however in some cases the multiplier needs\r\n         * to be carried individually e.g. 2*x+2*y+2*z.\r\n         * This method distributes the multiplier over the entire symbol\r\n         * @param {boolean} all\r\n         * @returns {Symbol}\r\n         */\r\n        distributeMultiplier: function (all) {\r\n            var is_one = all ? this.power.absEquals(1) : this.power.equals(1);\r\n            if(this.symbols && is_one && this.group !== CB && !this.multiplier.equals(1)) {\r\n                for(var x in this.symbols) {\r\n                    var s = this.symbols[x];\r\n                    s.multiplier = s.multiplier.multiply(this.multiplier);\r\n                    s.distributeMultiplier();\r\n                }\r\n                this.toUnitMultiplier();\r\n            }\r\n\r\n            return this;\r\n        },\r\n        /**\r\n         * This method expands the exponent over the entire symbol just like\r\n         * distributeMultiplier\r\n         * @returns {Symbol}\r\n         */\r\n        distributeExponent: function () {\r\n            if(!this.power.equals(1)) {\r\n                var p = this.power;\r\n                for(var x in this.symbols) {\r\n                    var s = this.symbols[x];\r\n                    if(s.group === EX) {\r\n                        s.power = _.multiply(s.power, new Symbol(p));\r\n                    }\r\n                    else {\r\n                        this.symbols[x].power = this.symbols[x].power.multiply(p);\r\n                    }\r\n                }\r\n                this.toLinear();\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * This method will attempt to up-convert or down-convert one symbol\r\n         * from one group to another. Not all symbols are convertible from one\r\n         * group to another however. In that case the symbol will remain\r\n         * unchanged.\r\n         * @param {int} group\r\n         * @param {string} imaginary\r\n         */\r\n        convert: function (group, imaginary) {\r\n            if(group > FN) {\r\n                //make a clone of this symbol;\r\n                var cp = this.clone();\r\n\r\n                //attach a symbols object and upgrade the group\r\n                this.symbols = {};\r\n\r\n                if(group === CB) {\r\n                    //symbol of group CB hold symbols bound together through multiplication\r\n                    //because of commutativity this multiplier can technically be anywhere within the group\r\n                    //to keep track of it however it's easier to always have the top level carry it\r\n                    cp.toUnitMultiplier();\r\n                }\r\n                else {\r\n                    //reset the symbol\r\n                    this.toUnitMultiplier();\r\n                }\r\n\r\n                if(this.group === FN) {\r\n                    cp.args = this.args;\r\n                    delete this.args;\r\n                    delete this.fname;\r\n                }\r\n\r\n                //the symbol may originate from the symbol i but this property no longer holds true\r\n                //after copying\r\n                if(this.isImgSymbol)\r\n                    delete this.isImgSymbol;\r\n\r\n                this.toLinear();\r\n                //attach a clone of this symbol to the symbols object using its proper key\r\n                this.symbols[cp.keyForGroup(group)] = cp;\r\n                this.group = group;\r\n                //objects by default don't have a length property. However, in order to keep track of the number\r\n                //of sub-symbols we have to impliment our own.\r\n                this.length = 1;\r\n            }\r\n            else if(group === EX) {\r\n                //1^x is just one so check and make sure\r\n                if(!(this.group === N && this.multiplier.equals(1))) {\r\n                    if(this.group !== EX)\r\n                        this.previousGroup = this.group;\r\n                    if(this.group === N) {\r\n                        this.value = this.multiplier.num.toString();\r\n                        this.toUnitMultiplier();\r\n                    }\r\n                    //update the hash to reflect the accurate hash\r\n                    else\r\n                        this.value = text(this, 'hash');\r\n\r\n                    this.group = EX;\r\n                }\r\n            }\r\n            else if(group === N) {\r\n                var m = this.multiplier.toDecimal();\r\n                if(this.symbols)\r\n                    this.symbols = undefined;\r\n                new Symbol(this.group === P ? m * Math.pow(this.value, this.power) : m).clone(this);\r\n            }\r\n            else if(group === P && this.group === N) {\r\n                this.value = imaginary ? this.multiplier.num.toString() : Math.abs(this.multiplier.num.toString());\r\n                this.toUnitMultiplier(!imaginary);\r\n                this.group = P;\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * This method is one of the principal methods to make it all possible.\r\n         * It performs cleanup and prep operations whenever a symbols is\r\n         * inserted. If the symbols results in a 1 in a CB (multiplication)\r\n         * group for instance it will remove the redundant symbol. Similarly\r\n         * in a symbol of group PL or CP (symbols glued by multiplication) it\r\n         * will remove any dangling zeroes from the symbol. It will also\r\n         * up-convert or down-convert a symbol if it detects that it's\r\n         * incorrectly grouped. It should be noted that this method is not\r\n         * called directly but rather by the 'attach' method for addition groups\r\n         * and the 'combine' method for multiplication groups.\r\n         * @param {Symbol} symbol\r\n         * @param {String} action\r\n         */\r\n        insert: function (symbol, action) {\r\n            //this check can be removed but saves a lot of aggravation when trying to hunt down\r\n            //a bug. If left, you will instantly know that the error can only be between 2 symbols.\r\n            if(!isSymbol(symbol))\r\n                err('Object ' + symbol + ' is not of type Symbol!');\r\n            if(this.symbols) {\r\n                var group = this.group;\r\n                if(group > FN) {\r\n                    var key = symbol.keyForGroup(group);\r\n                    var existing = key in this.symbols ? this.symbols[key] : false; //check if there's already a symbol there\r\n                    if(action === 'add') {\r\n                        var hash = key;\r\n                        if(existing) {\r\n                            //add them together using the parser\r\n                            this.symbols[hash] = _.add(existing, symbol);\r\n                            //if the addition resulted in a zero multiplier remove it\r\n                            if(this.symbols[hash].multiplier.equals(0)) {\r\n                                delete this.symbols[hash];\r\n                                this.length--;\r\n\r\n                                if(this.length === 0) {\r\n                                    this.convert(N);\r\n                                    this.multiplier = new Frac(0);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            this.symbols[key] = symbol;\r\n                            this.length++;\r\n                        }\r\n                    }\r\n                    else {\r\n                        //check if this is of group P and unwrap before inserting\r\n                        if(symbol.group === P && isInt(symbol.power)) {\r\n                            symbol.convert(N);\r\n                        }\r\n\r\n                        //transfer the multiplier to the upper symbol but only if the symbol numeric\r\n                        if(symbol.group !== EX) {\r\n                            this.multiplier = this.multiplier.multiply(symbol.multiplier);\r\n                            symbol.toUnitMultiplier();\r\n                        }\r\n                        else {\r\n                            symbol.parens = symbol.multiplier.lessThan(0);\r\n                            this.multiplier = this.multiplier.multiply(symbol.multiplier.clone().abs());\r\n                            symbol.toUnitMultiplier(true);\r\n                        }\r\n\r\n                        if(existing) {\r\n                            //remove because the symbol may have changed\r\n                            symbol = _.multiply(remove(this.symbols, key), symbol);\r\n                            if(symbol.isConstant()) {\r\n                                this.multiplier = this.multiplier.multiply(symbol.multiplier);\r\n                                symbol = new Symbol(1); //the dirty work gets done down the line when it detects 1\r\n                            }\r\n\r\n                            this.length--;\r\n                            //clean up\r\n                        }\r\n\r\n                        //don't insert the symbol if it's 1\r\n                        if(!symbol.isOne(true)) {\r\n                            this.symbols[key] = symbol;\r\n                            this.length++;\r\n                        }\r\n                        else if(symbol.multiplier.lessThan(0)) {\r\n                            this.negate(); //put back the sign\r\n                        }\r\n                    }\r\n\r\n                    //clean up\r\n                    if(this.length === 0)\r\n                        this.convert(N);\r\n                    //update the hash\r\n                    if(this.group === CP || this.group === CB) {\r\n                        this.updateHash();\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n        //the insert method for addition\r\n        attach: function (symbol) {\r\n            if(isArray(symbol)) {\r\n                for(var i = 0; i < symbol.length; i++)\r\n                    this.insert(symbol[i], 'add');\r\n                return this;\r\n            }\r\n            return this.insert(symbol, 'add');\r\n        },\r\n        //the insert method for multiplication\r\n        combine: function (symbol) {\r\n            if(isArray(symbol)) {\r\n                for(var i = 0; i < symbol.length; i++)\r\n                    this.insert(symbol[i], 'multiply');\r\n                return this;\r\n            }\r\n            return this.insert(symbol, 'multiply');\r\n        },\r\n        /**\r\n         * This method should be called after any major \"surgery\" on a symbol.\r\n         * It updates the hash of the symbol for example if the fname of a\r\n         * function has changed it will update the hash of the symbol.\r\n         */\r\n        updateHash: function () {\r\n            if(this.group === N)\r\n                return;\r\n\r\n            if(this.group === FN) {\r\n                var contents = '',\r\n                        args = this.args,\r\n                        is_parens = this.fname === PARENTHESIS;\r\n                for(var i = 0; i < args.length; i++)\r\n                    contents += (i === 0 ? '' : ',') + text(args[i]);\r\n                var fn_name = is_parens ? '' : this.fname;\r\n                this.value = fn_name + (is_parens ? contents : inBrackets(contents));\r\n            }\r\n            else if(!(this.group === S || this.group === PL)) {\r\n                this.value = text(this, 'hash');\r\n            }\r\n        },\r\n        /**\r\n         * this function defines how every group in stored within a group of\r\n         * higher order think of it as the switchboard for the library. It\r\n         * defines the hashes for symbols.\r\n         * @param {int} group\r\n         */\r\n        keyForGroup: function (group) {\r\n            var g = this.group;\r\n            var key;\r\n\r\n            if(g === N) {\r\n                key = this.value;\r\n            }\r\n            else if(g === S || g === P) {\r\n                if(group === PL)\r\n                    key = this.power.toDecimal();\r\n                else\r\n                    key = this.value;\r\n            }\r\n            else if(g === FN) {\r\n                if(group === PL)\r\n                    key = this.power.toDecimal();\r\n                else\r\n                    key = text(this, 'hash');\r\n            }\r\n            else if(g === PL) {\r\n                //if the order is reversed then we'll assume multiplication\r\n                //TODO: possible future dilemma\r\n                if(group === CB)\r\n                    key = text(this, 'hash');\r\n                else if(group === CP) {\r\n                    if(this.power.equals(1))\r\n                        key = this.value;\r\n                    else\r\n                        key = inBrackets(text(this, 'hash')) + Settings.POWER_OPERATOR + this.power.toDecimal();\r\n                }\r\n                else if(group === PL)\r\n                    key = this.power.toString();\r\n                else\r\n                    key = this.value;\r\n                return key;\r\n            }\r\n            else if(g === CP) {\r\n                if(group === CP) {\r\n                    key = text(this, 'hash');\r\n                }\r\n                if(group === PL)\r\n                    key = this.power.toDecimal();\r\n                else\r\n                    key = this.value;\r\n            }\r\n            else if(g === CB) {\r\n                if(group === PL)\r\n                    key = this.power.toDecimal();\r\n                else\r\n                    key = text(this, 'hash');\r\n            }\r\n            else if(g === EX) {\r\n                if(group === PL)\r\n                    key = text(this.power);\r\n                else\r\n                    key = text(this, 'hash');\r\n            }\r\n\r\n            return key;\r\n        },\r\n        /**\r\n         * Symbols are typically stored in an object which works fine for most\r\n         * cases but presents a problem when the order of the symbols makes\r\n         * a difference. This function simply collects all the symbols and\r\n         * returns them as an array. If a function is supplied then that\r\n         * function is called on every symbol contained within the object.\r\n         * @param {Function} fn\r\n         * @param {Object} opt\r\n         * @param {Function} sort_fn\r\n         * @@param {Boolean} expand_symbol\r\n         * @returns {Array}\r\n         */\r\n        collectSymbols: function (fn, opt, sort_fn, expand_symbol) {\r\n            var collected = [];\r\n            if(!this.symbols)\r\n                collected.push(this);\r\n            else {\r\n                for(var x in this.symbols) {\r\n                    var symbol = this.symbols[x];\r\n                    if(expand_symbol && (symbol.group === PL || symbol.group === CP)) {\r\n                        collected = collected.concat(symbol.collectSymbols());\r\n                    }\r\n                    else\r\n                        collected.push(fn ? fn(symbol, opt) : symbol);\r\n                }\r\n            }\r\n            if(sort_fn === null)\r\n                sort_fn = undefined; //WTF Firefox? Seriously?\r\n\r\n            return collected.sort(sort_fn);//sort hopefully gives us some sort of consistency\r\n        },\r\n        /**\r\n         * Returns the latex representation of the symbol\r\n         * @param {String} option\r\n         * @returns {String}\r\n         */\r\n        latex: function (option) {\r\n            return LaTeX.latex(this, option);\r\n        },\r\n        /**\r\n         * Returns the text representation of a symbol\r\n         * @param {String} option\r\n         * @returns {String}\r\n         */\r\n        text: function (option) {\r\n            return text(this, option);\r\n        },\r\n        /**\r\n         * Checks if the function evaluates to 1. e.g. x^0 or 1 :)\r\n         * @@param {bool} abs Compares the absolute value\r\n         */\r\n        isOne: function (abs) {\r\n            var f = abs ? 'absEquals' : 'equals';\r\n            if(this.group === N)\r\n                return this.multiplier[f](1);\r\n            else\r\n                return this.power.equals(0);\r\n        },\r\n        isComposite: function () {\r\n            var g = this.group,\r\n                    pg = this.previousGroup;\r\n            return g === CP || g === PL || pg === PL || pg === CP;\r\n        },\r\n        isCombination: function () {\r\n            var g = this.group,\r\n                    pg = this.previousGroup;\r\n            return g === CB || pg === CB;\r\n        },\r\n        lessThan: function (n) {\r\n            return this.multiplier.lessThan(n);\r\n        },\r\n        greaterThan: function (n) {\r\n            if(!isSymbol(n)) {\r\n                n = new Symbol(n);\r\n            }\r\n\r\n            // We can't tell for sure if a is greater than be if they're not both numbers\r\n            if(!this.isConstant(true) || !n.isConstant(true)) {\r\n                return false;\r\n            }\r\n\r\n            return this.multiplier.greaterThan(n.multiplier);\r\n        },\r\n        /**\r\n         * Get's the denominator of the symbol if the symbol is of class CB (multiplication)\r\n         * with other classes the symbol is either the denominator or not.\r\n         * Take x^-1+x^-2. If the symbol was to be mixed such as x+x^-2 then the symbol doesn't have have an exclusive\r\n         * denominator and has to be found by looking at the actual symbols themselves.\r\n         */\r\n        getDenom: function () {\r\n            var retval, symbol;\r\n            symbol = this.clone();\r\n            //e.g. 1/(x*(x+1))\r\n            if(this.group === CB && this.power.lessThan(0))\r\n                symbol = _.expand(symbol);\r\n\r\n            //if the symbol already is the denominator... DONE!!!\r\n            if(symbol.power.lessThan(0) || symbol.group === EX && symbol.power.multiplier.lessThan(0)) {\r\n                var d = _.parse(symbol.multiplier.den);\r\n                retval = symbol.toUnitMultiplier();\r\n                retval.power.negate();\r\n                retval = _.multiply(d, retval); //put back the coeff\r\n            }\r\n            else if(symbol.group === CB) {\r\n                retval = _.parse(symbol.multiplier.den);\r\n                for(var x in symbol.symbols) {\r\n                    var s = symbol.symbols[x];\r\n                    if(s.power < 0 || s.group === EX && s.power.multiplier.lessThan(0))\r\n                        retval = _.multiply(retval, symbol.symbols[x].clone().invert());\r\n                }\r\n            }\r\n            else {\r\n                retval = _.parse(symbol.multiplier.den);\r\n            }\r\n            return retval;\r\n        },\r\n        getNum: function () {\r\n            var retval, symbol;\r\n            symbol = this.clone();\r\n            //e.g. 1/(x*(x+1))\r\n            if(symbol.group === CB && symbol.power.lessThan(0))\r\n                symbol = _.expand(symbol);\r\n            //if the symbol already is the denominator... DONE!!!\r\n            if(symbol.power.greaterThan(0) && symbol.group !== CB || symbol.group === EX && symbol.power.multiplier.greaterThan(0)) {\r\n                retval = _.multiply(_.parse(symbol.multiplier.num), symbol.toUnitMultiplier());\r\n            }\r\n            else if(symbol.group === CB) {\r\n                retval = _.parse(symbol.multiplier.num);\r\n                symbol.each(function (x) {\r\n                    if(x.power > 0 || x.group === EX && x.power.multiplier > 0) {\r\n                        retval = _.multiply(retval, x.clone());\r\n                    }\r\n                });\r\n            }\r\n//            else if(symbol.group === EX && this.previousGroup === S) {\r\n//                retval = _.multiply(_.parse(symbol.multiplier.num), symbol.toUnitMultiplier());\r\n//            }\r\n            else {\r\n                retval = _.parse(symbol.multiplier.num);\r\n            }\r\n            return retval;\r\n        },\r\n        toString: function () {\r\n            return this.text();\r\n        }\r\n    };\r\n\r\n//Parser =======================================================================\r\n    //Uses modified Shunting-yard algorithm. http://en.wikipedia.org/wiki/Shunting-yard_algorithm\r\n    function Parser() {\r\n        //Point to the local parser instead of the global one\r\n        var _ = this;\r\n        var bin = {};\r\n        var preprocessors = {names: [], actions: []};\r\n\r\n//Parser.classes ===============================================================\r\n        function Slice(upper, lower) {\r\n            this.start = upper;\r\n            this.end = lower;\r\n        }\r\n        ;\r\n        Slice.prototype.isConstant = function () {\r\n            return this.start.isConstant() && this.end.isConstant();\r\n        };\r\n        Slice.prototype.text = function () {\r\n            return text(this.start) + ':' + text(this.end);\r\n        };\r\n\r\n        /**\r\n         * Class used to collect arguments for functions\r\n         * @returns {Parser.Collection}\r\n         */\r\n        function Collection() {\r\n            this.elements = [];\r\n        }\r\n        Collection.prototype.append = function (e) {\r\n            this.elements.push(e);\r\n        };\r\n        Collection.prototype.getItems = function () {\r\n            return this.elements;\r\n        };\r\n        Collection.prototype.toString = function () {\r\n            return _.pretty_print(this.elements);\r\n        };\r\n        Collection.create = function (e) {\r\n            var collection = new Collection();\r\n            if(e)\r\n                collection.append(e);\r\n            return collection;\r\n        };\r\n\r\n        function Token(node, node_type, column) {\r\n            this.type = node_type;\r\n            this.value = node;\r\n            if(column !== undefined)\r\n                this.column = column + 1;\r\n            if(node_type === Token.OPERATOR) {\r\n                //copy everything over from the operator\r\n                var operator = operators[node];\r\n                for(var x in operator)\r\n                    this[x] = operator[x];\r\n\r\n            }\r\n            else if(node_type === Token.FUNCTION) {\r\n                this.precedence = Token.MAX_PRECEDENCE; //leave enough roon\r\n                this.leftAssoc = false;\r\n            }\r\n        }\r\n        Token.prototype.toString = function () {\r\n            return this.value;\r\n        };\r\n        Token.prototype.toString = function () {\r\n            if(this.is_prefix)\r\n                return '`' + this.value;\r\n            return this.value;\r\n        };\r\n        //some constants\r\n        Token.OPERATOR = 'OPERATOR';\r\n        Token.VARIABLE_OR_LITERAL = 'VARIABLE_OR_LITERAL';\r\n        Token.FUNCTION = 'FUNCTION';\r\n        Token.UNIT = 'UNIT';\r\n        Token.KEYWORD = 'KEYWORD';\r\n        Token.MAX_PRECEDENCE = 999;\r\n        //create link to classes\r\n        this.classes = {\r\n            Collection: Collection,\r\n            Slice: Slice,\r\n            Token: Token\r\n        };\r\n//Parser.modules ===============================================================\r\n        //object for functions which handle complex number\r\n        var complex = {\r\n            prec: undefined,\r\n            cos: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.cos(r) * Math.cosh(i));\r\n                im = _.parse(Math.sin(r) * Math.sinh(i));\r\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            sin: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.sin(r) * Math.cosh(i));\r\n                im = _.parse(Math.cos(r) * Math.sinh(i));\r\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            tan: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.sin(2 * r) / (Math.cos(2 * r) + Math.cosh(2 * i)));\r\n                im = _.parse(Math.sinh(2 * i) / (Math.cos(2 * r) + Math.cosh(2 * i)));\r\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            sec: function (r, i) {\r\n                var t = this.removeDen(this.cos(r, i));\r\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            csc: function (r, i) {\r\n                var t = this.removeDen(this.sin(r, i));\r\n                return _.add(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            cot: function (r, i) {\r\n                var t = this.removeDen(this.tan(r, i));\r\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            acos: function (r, i) {\r\n                var symbol, sq, a, b, c, squared;\r\n                symbol = this.fromArray([r, i]);\r\n                squared = _.pow(symbol.clone(), new Symbol(2));\r\n                sq = _.expand(squared); //z*z\r\n                a = _.multiply(sqrt(_.subtract(new Symbol(1), sq)), Symbol.imaginary());\r\n                b = _.expand(_.add(symbol.clone(), a));\r\n                c = log(b);\r\n                return _.expand(_.multiply(Symbol.imaginary().negate(), c));\r\n            },\r\n            asin: function (r, i) {\r\n                return _.subtract(_.parse('pi/2'), this.acos(r, i));\r\n            },\r\n            atan: function (r, i) {\r\n                // Handle i and -i\r\n                if(r.equals(0) && (i.equals(1) || i.equals(-1))) {\r\n                    // Just copy Wolfram Alpha for now. The parenthesis \r\n                    return _.parse(`${Symbol.infinity()}*${Settings.IMAGINARY}*${i}`);\r\n                }\r\n                var a, b, c, symbol;\r\n                symbol = complex.fromArray([r, i]);\r\n                a = _.expand(_.multiply(Symbol.imaginary(), symbol.clone()));\r\n                b = log(_.expand(_.subtract(new Symbol(1), a.clone())));\r\n                c = log(_.expand(_.add(new Symbol(1), a.clone())));\r\n                return _.expand(_.multiply(_.divide(Symbol.imaginary(), new Symbol(2)), _.subtract(b, c)));\r\n            },\r\n            asec: function (r, i) {\r\n                var d = this.removeDen([r, i]);\r\n                d[1].negate();\r\n                return this.acos.apply(this, d);\r\n            },\r\n            acsc: function (r, i) {\r\n                var d = this.removeDen([r, i]);\r\n                d[1].negate();\r\n                return this.asin.apply(this, d);\r\n            },\r\n            acot: function (r, i) {\r\n                var d = this.removeDen([r, i]);\r\n                d[1].negate();\r\n                return this.atan.apply(this, d);\r\n            },\r\n            //Hyperbolic trig\r\n            cosh: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.cosh(r) * Math.cos(i));\r\n                im = _.parse(Math.sinh(r) * Math.sin(i));\r\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            sinh: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.sinh(r) * Math.cos(i));\r\n                im = _.parse(Math.cosh(r) * Math.sin(i));\r\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            tanh: function (r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.sinh(2 * r) / (Math.cos(2 * i) + Math.cosh(2 * r)));\r\n                im = _.parse(Math.sin(2 * i) / (Math.cos(2 * i) + Math.cosh(2 * r)));\r\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            sech: function (r, i) {\r\n                var t = this.removeDen(this.cosh(r, i));\r\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            csch: function (r, i) {\r\n                var t = this.removeDen(this.sinh(r, i));\r\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            coth: function (r, i) {\r\n                var t = this.removeDen(this.tanh(r, i));\r\n                return _.add(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            acosh: function (r, i) {\r\n                var a, b, z;\r\n                z = this.fromArray([r, i]);\r\n                a = sqrt(_.add(z.clone(), new Symbol(1)));\r\n                b = sqrt(_.subtract(z.clone(), new Symbol(1)));\r\n                return _.expand(log(_.add(z, _.expand(_.multiply(a, b)))));\r\n            },\r\n            asinh: function (r, i) {\r\n                var a, z;\r\n                z = this.fromArray([r, i]);\r\n                a = sqrt(_.add(new Symbol(1), _.expand(_.pow(z.clone(), new Symbol(2)))));\r\n                return _.expand(log(_.add(z, a)));\r\n            },\r\n            atanh: function (r, i) {\r\n                var a, b, z;\r\n                z = this.fromArray([r, i]);\r\n                a = log(_.add(z.clone(), new Symbol(1)));\r\n                b = log(_.subtract(new Symbol(1), z));\r\n                return _.expand(_.divide(_.subtract(a, b), new Symbol(2)));\r\n            },\r\n            asech: function (r, i) {\r\n                var t = this.removeDen([r, i]);\r\n                t[1].negate();\r\n                return this.acosh.apply(this, t);\r\n            },\r\n            acsch: function (r, i) {\r\n                var t = this.removeDen([r, i]);\r\n                t[1].negate();\r\n                return this.asinh.apply(this, t);\r\n            },\r\n            acoth: function (r, i) {\r\n                var t = this.removeDen([r, i]);\r\n                t[1].negate();\r\n                return this.atanh.apply(this, t);\r\n            },\r\n            sqrt: function (symbol) {\r\n                var re, im, h, a, d;\r\n                re = symbol.realpart();\r\n                im = symbol.imagpart();\r\n                h = Symbol.hyp(re, im);\r\n                a = _.add(re.clone(), h);\r\n                d = sqrt(_.multiply(new Symbol(2), a.clone()));\r\n                return _.add(_.divide(a.clone(), d.clone()), _.multiply(_.divide(im, d), Symbol.imaginary()));\r\n            },\r\n            log: function (r, i) {\r\n                var re, im, phi;\r\n                re = log(Symbol.hyp(r, i));\r\n                phi = Settings.USE_BIG ? Symbol(bigDec.atan2(i.multiplier.toDecimal(), r.multiplier.toDecimal())) : Math.atan2(i, r);\r\n                im = _.parse(phi);\r\n                return _.add(re, _.multiply(Symbol.imaginary(), im));\r\n            },\r\n            erf(symbol, n) {\r\n                //Do nothing for now. Revisit this in the future.\r\n                return _.symfunction('erf', [symbol]);\r\n\r\n                n = n || 30;\r\n\r\n                var f = function (R, I) {\r\n                    return block('PARSE2NUMBER', function () {\r\n                        var retval = new Symbol(0);\r\n                        for(var i = 0; i < n; i++) {\r\n                            var a, b;\r\n                            a = _.parse(bigDec.exp(bigDec(i).toPower(2).neg().dividedBy(bigDec(n).pow(2).plus(bigDec(R).toPower(2).times(4)))));\r\n                            b = _.parse(format('2*({1})-e^(-(2*{0}*{1}*{2}))*(2*{1}*cosh({2}*{3})-{0}*{3}*sinh({3}*{2}))', Settings.IMAGINARY, R, I, i));\r\n                            retval = _.add(retval, _.multiply(a, b));\r\n                        }\r\n                        return _.multiply(retval, new Symbol(2));\r\n                    }, true);\r\n                };\r\n                var re, im, a, b, c, k;\r\n                re = symbol.realpart();\r\n                im = symbol.imagpart();\r\n\r\n                k = _.parse(format('(e^(-{0}^2))/pi', re));\r\n                a = _.parse(format('(1-e^(-(2*{0}*{1}*{2})))/(2*{1})', Settings.IMAGINARY, re, im));\r\n                b = f(re.toString(), im.toString());\r\n\r\n                return _.add(_.parse(Math2.erf(re.toString())), _.multiply(k, _.add(a, b)));\r\n            },\r\n            removeDen: function (symbol) {\r\n                var den, r, i, re, im;\r\n                if(isArray(symbol)) {\r\n                    r = symbol[0];\r\n                    i = symbol[1];\r\n                }\r\n                else {\r\n                    r = symbol.realpart();\r\n                    i = symbol.imagpart();\r\n                }\r\n\r\n                den = Math.pow(r, 2) + Math.pow(i, 2);\r\n                re = _.parse(r / den);\r\n                im = _.parse(i / den);\r\n                return [re, im];\r\n            },\r\n            fromArray: function (arr) {\r\n                return _.add(arr[0], _.multiply(Symbol.imaginary(), arr[1]));\r\n            },\r\n            evaluate: function (symbol, f) {\r\n                var re, im, sign;\r\n\r\n                sign = symbol.power.sign();\r\n                //remove it from under the denominator\r\n                symbol.power = symbol.power.abs();\r\n                //expand\r\n                if(symbol.power.greaterThan(1))\r\n                    symbol = _.expand(symbol);\r\n                //remove the denominator\r\n                if(sign < 0) {\r\n                    var d = this.removeDen(symbol);\r\n                    re = d[0];\r\n                    im = d[1];\r\n                }\r\n                else {\r\n                    re = symbol.realpart();\r\n                    im = symbol.imagpart();\r\n                }\r\n\r\n                if(re.isConstant('all') && im.isConstant('all'))\r\n                    return this[f].call(this, re, im);\r\n\r\n                return _.symfunction(f, [symbol]);\r\n            }\r\n        };\r\n        //object for functions which handle trig\r\n        var trig = this.trig = {\r\n            //container for trigonometric function\r\n            cos: function (symbol) {\r\n                if(symbol.equals('pi') && symbol.multiplier.den.equals(2))\r\n                    return new Symbol(0);\r\n\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.equals(new Symbol(Settings.PI / 2)))\r\n                        return new Symbol(0);\r\n                    if(symbol.isConstant()) {\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.cos(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.cos(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'cos');\r\n                    }\r\n                }\r\n                if(symbol.equals(0))\r\n                    return new Symbol(1);\r\n\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        m = symbol.multiplier.abs();\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return for 1 or -1 for multiples of pi\r\n                    if(isInt(m)) {\r\n                        retval = new Symbol(even(m) ? 1 : -1);\r\n                    }\r\n                    else {\r\n                        var n = Number(m.num), d = Number(m.den);\r\n                        if(d === 2)\r\n                            retval = new Symbol(0);\r\n                        else if(d === 3) {\r\n                            retval = _.parse('1/2');\r\n                            c = true;\r\n                        }\r\n                        else if(d === 4) {\r\n                            retval = _.parse('1/sqrt(2)');\r\n                            c = true;\r\n                        }\r\n                        else if(d === 6) {\r\n                            retval = _.parse('sqrt(3)/2');\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.symfunction('cos', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(c && (q === 2 || q === 3))\r\n                    retval.negate();\r\n\r\n                if(!retval)\r\n                    retval = _.symfunction('cos', [symbol]);\r\n\r\n                return retval;\r\n            },\r\n            sin: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        if(symbol % Math.PI === 0) {\r\n                            return new Symbol(0);\r\n                        }\r\n\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.sin(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.sin(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'sin');\r\n                }\r\n\r\n                if(symbol.equals(0))\r\n                    return new Symbol(0);\r\n\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        sign = symbol.multiplier.sign(),\r\n                        m = symbol.multiplier.abs();\r\n                symbol.multiplier = m;\r\n                if(symbol.equals('pi'))\r\n                    retval = new Symbol(0);\r\n                else if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return for 0 for multiples of pi\r\n                    if(isInt(m)) {\r\n                        retval = new Symbol(0);\r\n                    }\r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2) {\r\n                            retval = new Symbol(1);\r\n                            c = true;\r\n                        }\r\n                        else if(d == 3) {\r\n                            retval = _.parse('sqrt(3)/2');\r\n                            c = true\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = _.parse('1/sqrt(2)');\r\n                            c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = _.parse('1/2');\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.multiply(new Symbol(sign), _.symfunction('sin', [symbol]));\r\n                    }\r\n                }\r\n\r\n                if(!retval)\r\n                    retval = _.multiply(new Symbol(sign), _.symfunction('sin', [symbol]));\r\n\r\n                if(c && (q === 3 || q === 4))\r\n                    retval.negate();\r\n\r\n                return retval;\r\n            },\r\n            tan: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol % Math.PI === 0 && symbol.isLinear()) {\r\n                        return new Symbol(0);\r\n                    }\r\n                    if(symbol.isConstant()) {\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.tan(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.tan(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'tan');\r\n                }\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        m = symbol.multiplier;\r\n\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return 0 for all multiples of pi\r\n                    if(isInt(m)) {\r\n                        retval = new Symbol(0);\r\n                    }\r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2)\r\n                            throw new UndefinedError('tan is undefined for ' + symbol.toString());\r\n                        else if(d == 3) {\r\n                            retval = _.parse('sqrt(3)');\r\n                            c = true;\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = new Symbol(1);\r\n                            c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = _.parse('1/sqrt(3)');\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.symfunction('tan', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(!retval)\r\n                    retval = _.symfunction('tan', [symbol]);\r\n\r\n                if(c && (q === 2 || q === 4))\r\n                    retval.negate();\r\n\r\n                return retval;\r\n            },\r\n            sec: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(new bigDec(1).dividedBy(bigDec.cos(symbol.multiplier.toDecimal())));\r\n                        }\r\n\r\n                        return new Symbol(Math2.sec(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'sec');\r\n                    return _.parse(format('1/cos({0})', symbol));\r\n                }\r\n\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        m = symbol.multiplier.abs();\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return for 1 or -1 for multiples of pi\r\n                    if(isInt(m)) {\r\n                        retval = new Symbol(even(m) ? 1 : -1);\r\n                    }\r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2)\r\n                            throw new UndefinedError('sec is undefined for ' + symbol.toString());\r\n                        else if(d == 3) {\r\n                            retval = new Symbol(2);\r\n                            c = true;\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = _.parse('sqrt(2)');\r\n                            c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = _.parse('2/sqrt(3)');\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.symfunction('sec', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(c && (q === 2 || q === 3))\r\n                    retval.negate();\r\n\r\n                if(!retval)\r\n                    retval = _.symfunction('sec', [symbol]);\r\n\r\n                return retval;\r\n            },\r\n            csc: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(new bigDec(1).dividedBy(bigDec.sin(symbol.multiplier.toDecimal())));\r\n                        }\r\n\r\n                        return new Symbol(Math2.csc(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'csc');\r\n                    return _.parse(format('1/sin({0})', symbol));\r\n                }\r\n\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        sign = symbol.multiplier.sign(),\r\n                        m = symbol.multiplier.abs();\r\n\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return for 0 for multiples of pi\r\n                    if(isInt(m)) {\r\n                        throw new UndefinedError('csc is undefined for ' + symbol.toString());\r\n                    }\r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2) {\r\n                            retval = new Symbol(1);\r\n                            c = true;\r\n                        }\r\n                        else if(d == 3) {\r\n                            retval = _.parse('2/sqrt(3)');\r\n                            c = true\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = _.parse('sqrt(2)');\r\n                            c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = new Symbol(2);\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.multiply(new Symbol(sign), _.symfunction('csc', [symbol]));\r\n                    }\r\n                }\r\n\r\n                if(!retval)\r\n                    retval = _.multiply(new Symbol(sign), _.symfunction('csc', [symbol]));\r\n\r\n                if(c && (q === 3 || q === 4))\r\n                    retval.negate();\r\n\r\n                return retval;\r\n            },\r\n            cot: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol % (Math.PI/2) === 0) {\r\n                        return new Symbol(0);\r\n                    }\r\n                    if(symbol.isConstant()) {\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(new bigDec(1).dividedBy(bigDec.tan(symbol.multiplier.toDecimal())));\r\n                        }\r\n\r\n                        return new Symbol(Math2.cot(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'cot');\r\n                    return _.parse(format('1/tan({0})', symbol));\r\n                }\r\n                var retval,\r\n                        c = false,\r\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                        m = symbol.multiplier;\r\n\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) {\r\n                    //return 0 for all multiples of pi\r\n                    if(isInt(m)) {\r\n                        throw new UndefinedError('cot is undefined for ' + symbol.toString());\r\n                    }\r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2)\r\n                            retval = new Symbol(0);\r\n                        else if(d == 3) {\r\n                            retval = _.parse('1/sqrt(3)');\r\n                            c = true;\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = new Symbol(1);\r\n                            c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = _.parse('sqrt(3)');\r\n                            c = true;\r\n                        }\r\n                        else\r\n                            retval = _.symfunction('cot', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(!retval)\r\n                    retval = _.symfunction('cot', [symbol]);\r\n\r\n                if(c && (q === 2 || q === 4))\r\n                    retval.negate();\r\n\r\n                return retval;\r\n            },\r\n            acos: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        // Handle values in the complex domain\r\n                        if(symbol.gt(1) || symbol.lt(-1)) {\r\n                            var x = symbol.toString();\r\n                            return expand(evaluate(`pi/2-asin(${x})`));\r\n                        }\r\n                        // Handle big numbers\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.acos(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.acos(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'acos');\r\n                }\r\n                return _.symfunction('acos', arguments);\r\n            },\r\n            asin: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        // Handle values in the complex domain\r\n                        if(symbol.gt(1) || symbol.lt(-1)) {\r\n                            var i = Settings.IMAGINARY;\r\n                            var x = symbol.multiplier.toDecimal();\r\n                            return expand(evaluate(`${i}*log(sqrt(1-${x}^2)-${i}*${x})`));\r\n                        }\r\n                        // Handle big numbers\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.asin(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.asin(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'asin');\r\n                }\r\n                return _.symfunction('asin', arguments);\r\n            },\r\n            atan: function (symbol) {\r\n                var retval;\r\n                if(symbol.equals(0))\r\n                    retval = new Symbol(0);\r\n                else if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        // Handle big numbers\r\n                        if(Settings.USE_BIG) {\r\n                            return new Symbol(bigDec.atan(symbol.multiplier.toDecimal()));\r\n                        }\r\n\r\n                        return new Symbol(Math.atan(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'atan');\r\n                    return _.symfunction('atan', arguments);\r\n                }\r\n                else if(symbol.equals(-1))\r\n                    retval = _.parse('-pi/4');\r\n                else\r\n                    retval = _.symfunction('atan', arguments);\r\n                return retval;\r\n            },\r\n            asec: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.equals(0)) {\r\n                        throw new OutOfFunctionDomainError('Input is out of the domain of sec!');\r\n                    }\r\n                    if(symbol.isConstant()) {\r\n                        return trig.acos(symbol.invert());\r\n                    }\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'asec');\r\n                    }\r\n                }\r\n                return _.symfunction('asec', arguments);\r\n            },\r\n            acsc: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        return trig.asin(symbol.invert());\r\n                    }\r\n\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'acsc');\r\n                }\r\n                return _.symfunction('acsc', arguments);\r\n            },\r\n            acot: function (symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        return new _.add(_.parse('pi/2'), trig.atan(symbol).negate());\r\n                    }\r\n\r\n                    if(symbol.isImaginary())\r\n                        return complex.evaluate(symbol, 'acot');\r\n                }\r\n                return _.symfunction('acot', arguments);\r\n            },\r\n            atan2: function (a, b) {\r\n                if(a.equals(0) && b.equals(0))\r\n                    throw new UndefinedError('atan2 is undefined for 0, 0');\r\n\r\n                if(Settings.PARSE2NUMBER && a.isConstant() && b.isConstant()) {\r\n                    return new Symbol(Math.atan2(a, b));\r\n                }\r\n                return _.symfunction('atan2', arguments);\r\n            }\r\n        };\r\n        //object for functions which handle hyperbolic trig\r\n        var trigh = this.trigh = {\r\n            //container for hyperbolic trig function\r\n            cosh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.cosh(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'cosh');\r\n                    }\r\n                }\r\n\r\n                return retval = _.symfunction('cosh', arguments);\r\n            },\r\n            sinh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.sinh(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'sinh');\r\n                    }\r\n                }\r\n\r\n                return retval = _.symfunction('sinh', arguments);\r\n            },\r\n            tanh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.tanh(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'tanh');\r\n                    }\r\n                }\r\n\r\n                return retval = _.symfunction('tanh', arguments);\r\n            },\r\n            sech: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) {\r\n                        return new Symbol(Math.sech(symbol.valueOf()));\r\n                    }\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'sech');\r\n                    }\r\n                    return _.parse(format('1/cosh({0})', symbol));\r\n                }\r\n\r\n                return retval = _.symfunction('sech', arguments);\r\n            },\r\n            csch: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.csch(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'csch');\r\n                    }\r\n                    return _.parse(format('1/sinh({0})', symbol));\r\n                }\r\n\r\n                return retval = _.symfunction('csch', arguments);\r\n            },\r\n            coth: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.coth(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'coth');\r\n                    }\r\n                    return _.parse(format('1/tanh({0})', symbol));\r\n                }\r\n\r\n                return retval = _.symfunction('coth', arguments);\r\n            },\r\n            acosh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'acosh');\r\n                else if(Settings.PARSE2NUMBER)\r\n                    retval = evaluate(_.parse(format(Settings.LOG + '(({0})+sqrt(({0})^2-1))', symbol.toString())));\r\n                else\r\n                    retval = _.symfunction('acosh', arguments);\r\n                return retval;\r\n            },\r\n            asinh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'asinh');\r\n                else if(Settings.PARSE2NUMBER)\r\n                    retval = evaluate(_.parse(format(Settings.LOG + '(({0})+sqrt(({0})^2+1))', symbol.toString())));\r\n                else\r\n                    retval = _.symfunction('asinh', arguments);\r\n                return retval;\r\n            },\r\n            atanh: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'atanh');\r\n                else if(Settings.PARSE2NUMBER) {\r\n                    retval = evaluate(_.parse(format('(1/2)*' + Settings.LOG + '((1+({0}))/(1-({0})))', symbol.toString())));\r\n                }\r\n                else\r\n                    retval = _.symfunction('atanh', arguments);\r\n                return retval;\r\n            },\r\n            asech: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'asech');\r\n                else if(Settings.PARSE2NUMBER)\r\n                    retval = evaluate(log(_.add(symbol.clone().invert(), sqrt(_.subtract(_.pow(symbol, new Symbol(-2)), new Symbol(1))))));\r\n                else\r\n                    retval = _.symfunction('asech', arguments);\r\n                return retval;\r\n            },\r\n            acsch: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'acsch');\r\n                else if(Settings.PARSE2NUMBER)\r\n                    retval = evaluate(_.parse(format(Settings.LOG + '((1+sqrt(1+({0})^2))/({0}))', symbol.toString())));\r\n                else\r\n                    retval = _.symfunction('acsch', arguments);\r\n                return retval;\r\n            },\r\n            acoth: function (symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'acoth');\r\n                else if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.equals(1))\r\n                        retval = Symbol.infinity();\r\n                    else\r\n                        retval = evaluate(\r\n                                _.divide(\r\n                                        log(_.divide(_.add(symbol.clone(), new Symbol(1)), _.subtract(symbol.clone(), new Symbol(1)))),\r\n                                        new Symbol(2)));\r\n                }\r\n                else\r\n                    retval = _.symfunction('acoth', arguments);\r\n                return retval;\r\n            }\r\n        };\r\n        //list of supported units\r\n        this.units = {};\r\n        //list all the supported operators\r\n        var operators = {\r\n            '\\\\': {\r\n                precedence: 8,\r\n                operator: '\\\\',\r\n                action: 'slash',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: true,\r\n                operation: function (e) {\r\n                    return e; //bypass the slash\r\n                }\r\n            },\r\n            '!!': {\r\n                precedence: 7,\r\n                operator: '!!',\r\n                action: 'dfactorial',\r\n                prefix: false,\r\n                postfix: true,\r\n                leftAssoc: true,\r\n                operation: function (e) {\r\n                    return _.symfunction(Settings.DOUBLEFACTORIAL, [e]); //wrap it in a factorial function\r\n                }\r\n            },\r\n            '!': {\r\n                precedence: 7,\r\n                operator: '!',\r\n                action: 'factorial',\r\n                prefix: false,\r\n                postfix: true,\r\n                leftAssoc: true,\r\n                operation: function (e) {\r\n                    return factorial(e); //wrap it in a factorial function\r\n                }\r\n            },\r\n            '^': {\r\n                precedence: 6,\r\n                operator: '^',\r\n                action: 'pow',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: true\r\n            },\r\n            '**': {\r\n                precedence: 6,\r\n                operator: '**',\r\n                action: 'pow',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: true\r\n            },\r\n            '%': {\r\n                precedence: 4,\r\n                operator: '%',\r\n                action: 'percent',\r\n                prefix: false,\r\n                postfix: true,\r\n                leftAssoc: true,\r\n                overloaded: true,\r\n                overloadAction: 'mod',\r\n                overloadLeftAssoc: false,\r\n                operation: function (x) {\r\n                    return _.divide(x, new Symbol(100));\r\n                }\r\n            },\r\n            '*': {\r\n                precedence: 4,\r\n                operator: '*',\r\n                action: 'multiply',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '/': {\r\n                precedence: 4,\r\n                operator: '/',\r\n                action: 'divide',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '+': {\r\n                precedence: 3,\r\n                operator: '+',\r\n                action: 'add',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: false,\r\n                operation: function (x) {\r\n                    return x;\r\n                }\r\n            },\r\n            'plus': {\r\n                precedence: 3,\r\n                operator: 'plus',\r\n                action: 'add',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: false,\r\n                operation: function (x) {\r\n                    return x;\r\n                }\r\n            },\r\n            '-': {\r\n                precedence: 3,\r\n                operator: '-',\r\n                action: 'subtract',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: false,\r\n                operation: function (x) {\r\n                    return x.negate();\r\n                }\r\n            },\r\n            '=': {\r\n                precedence: 2,\r\n                operator: '=',\r\n                action: 'equals',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '==': {\r\n                precedence: 1,\r\n                operator: '==',\r\n                action: 'eq',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '<': {\r\n                precedence: 1,\r\n                operator: '<',\r\n                action: 'lt',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '<=': {\r\n                precedence: 1,\r\n                operator: '<=',\r\n                action: 'lte',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '>': {\r\n                precedence: 1,\r\n                operator: '>',\r\n                action: 'gt',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            '=>': {\r\n                precedence: 1,\r\n                operator: '=>',\r\n                action: 'gte',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            ',': {\r\n                precedence: 0,\r\n                operator: ',',\r\n                action: 'comma',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false\r\n            },\r\n            ':': {\r\n                precedence: 0,\r\n                operator: ',',\r\n                action: 'assign',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: false,\r\n                vectorFn: 'slice'\r\n            },\r\n            ':=': {\r\n                precedence: 0,\r\n                operator: ',',\r\n                action: 'function_assign',\r\n                prefix: false,\r\n                postfix: false,\r\n                leftAssoc: true\r\n            }\r\n        };\r\n        //brackets\r\n        var brackets = {\r\n            '(': {\r\n                type: 'round',\r\n                id: 1,\r\n                is_open: true,\r\n                is_close: false\r\n            },\r\n            ')': {\r\n                type: 'round',\r\n                id: 2,\r\n                is_open: false,\r\n                is_close: true\r\n            },\r\n            '[': {\r\n                type: 'square',\r\n                id: 3,\r\n                is_open: true,\r\n                is_close: false,\r\n                maps_to: 'vector'\r\n            },\r\n            ']': {\r\n                type: 'square',\r\n                id: 4,\r\n                is_open: false,\r\n                is_close: true\r\n            },\r\n            '{': {\r\n                type: 'curly',\r\n                id: 5,\r\n                is_open: true,\r\n                is_close: false,\r\n                maps_to: 'Set'\r\n            },\r\n            '}': {\r\n                type: 'curly',\r\n                id: 6,\r\n                is_open: false,\r\n                is_close: true\r\n            }\r\n        };\r\n        // Supported functions.\r\n        // Format: function_name: [mapped_function, number_of_parameters]\r\n        var functions = this.functions = {\r\n            'cos': [trig.cos, 1],\r\n            'sin': [trig.sin, 1],\r\n            'tan': [trig.tan, 1],\r\n            'sec': [trig.sec, 1],\r\n            'csc': [trig.csc, 1],\r\n            'cot': [trig.cot, 1],\r\n            'acos': [trig.acos, 1],\r\n            'asin': [trig.asin, 1],\r\n            'atan': [trig.atan, 1],\r\n            'arccos': [trig.acos, 1],\r\n            'arcsin': [trig.asin, 1],\r\n            'arctan': [trig.atan, 1],\r\n            'asec': [trig.asec, 1],\r\n            'acsc': [trig.acsc, 1],\r\n            'acot': [trig.acot, 1],\r\n            'atan2': [trig.atan2, 2],\r\n            'acoth': [trigh.acoth, 1],\r\n            'asech': [trigh.asech, 1],\r\n            'acsch': [trigh.acsch, 1],\r\n            'sinh': [trigh.sinh, 1],\r\n            'cosh': [trigh.cosh, 1],\r\n            'tanh': [trigh.tanh, 1],\r\n            'asinh': [trigh.asinh, 1],\r\n            'sech': [trigh.sech, 1],\r\n            'csch': [trigh.csch, 1],\r\n            'coth': [trigh.coth, 1],\r\n            'acosh': [trigh.acosh, 1],\r\n            'atanh': [trigh.atanh, 1],\r\n            'log10': [, 1],\r\n            'exp': [exp, 1],\r\n            'radians': [radians, 1],\r\n            'degrees': [degrees, 1],\r\n            'min': [min, -1],\r\n            'max': [max, -1],\r\n            'erf': [, 1],\r\n            'floor': [, 1],\r\n            'ceil': [, 1],\r\n            'trunc': [, 1],\r\n            'Si': [, 1],\r\n            'step': [, 1],\r\n            'rect': [, 1],\r\n            'sinc': [sinc, 1],\r\n            'tri': [, 1],\r\n            'sign': [sign, 1],\r\n            'Ci': [, 1],\r\n            'Ei': [, 1],\r\n            'Shi': [, 1],\r\n            'Chi': [, 1],\r\n            'Li': [, 1],\r\n            'fib': [, 1],\r\n            'fact': [factorial, 1],\r\n            'factorial': [factorial, 1],\r\n            'continued_fraction': [continued_fraction, [1, 2]],\r\n            'dfactorial': [, 1],\r\n            'gamma_incomplete': [, [1, 2]],\r\n            'round': [round, [1, 2]],\r\n            'scientific': [scientific, [1, 2]],\r\n            'mod': [mod, 2],\r\n            'pfactor': [pfactor, 1],\r\n            'vector': [vector, -1],\r\n            'matrix': [matrix, -1],\r\n            'Set': [set, -1],\r\n            'imatrix': [imatrix, -1],\r\n            'parens': [parens, -1],\r\n            'sqrt': [sqrt, 1],\r\n            'cbrt': [cbrt, 1],\r\n            'nthroot': [nthroot, 2],\r\n            'log': [log, [1, 2]],\r\n            'expand': [expandall, 1],\r\n            'abs': [abs, 1],\r\n            'invert': [invert, 1],\r\n            'determinant': [determinant, 1],\r\n            'size': [size, 1],\r\n            'transpose': [transpose, 1],\r\n            'dot': [dot, 2],\r\n            'cross': [cross, 2],\r\n            'vecget': [vecget, 2],\r\n            'vecset': [vecset, 3],\r\n            'vectrim': [vectrim, [1, 2]],\r\n            'matget': [matget, 3],\r\n            'matset': [matset, 4],\r\n            'matgetrow': [matgetrow, 2],\r\n            'matsetrow': [matsetrow, 3],\r\n            'matgetcol': [matgetcol, 2],\r\n            'matsetcol': [matsetcol, 3],\r\n            'rationalize': [rationalize, 1],\r\n            'IF': [IF, 3],\r\n            'is_in': [is_in, 2],\r\n            //imaginary support\r\n            'realpart': [realpart, 1],\r\n            'imagpart': [imagpart, 1],\r\n            'conjugate': [conjugate, 1],\r\n            'arg': [arg, 1],\r\n            'polarform': [polarform, 1],\r\n            'rectform': [rectform, 1],\r\n            'sort': [sort, [1, 2]],\r\n            'integer_part': [, 1],\r\n            'union': [union, 2],\r\n            'contains': [contains, 2],\r\n            'intersection': [intersection, 2],\r\n            'difference': [difference, 2],\r\n            'intersects': [intersects, 2],\r\n            'is_subset': [is_subset, 2],\r\n            //system support\r\n            'print': [print, -1]\r\n        };\r\n\r\n        //error handler\r\n        this.error = err;\r\n        //this function is used to comb through the function modules and find a function given its name\r\n        var findFunction = function (fname) {\r\n            var fmodules = Settings.FUNCTION_MODULES,\r\n                    l = fmodules.length;\r\n            for(var i = 0; i < l; i++) {\r\n                var fmodule = fmodules[i];\r\n                if(fname in fmodule)\r\n                    return fmodule[fname];\r\n            }\r\n            err('The function ' + fname + ' is undefined!');\r\n        };\r\n\r\n        /**\r\n         * This method gives the ability to override operators with new methods.\r\n         * @param {String} which\r\n         * @param {Function} with_what\r\n         */\r\n        this.override = function (which, with_what) {\r\n            if(!bin[which])\r\n                bin[which] = [];\r\n            bin[which].push(this[which]);\r\n            this[which] = with_what;\r\n        };\r\n\r\n        /**\r\n         * Restores a previously overridden operator\r\n         * @param {String} what\r\n         */\r\n        this.restore = function (what) {\r\n            if(this[what])\r\n                this[what] = bin[what].pop();\r\n        };\r\n\r\n        /**\r\n         * This method is supposed to behave similarly to the override method but it does not override\r\n         * the existing function rather it only extends it\r\n         * @param {String} what\r\n         * @param {Function} with_what\r\n         * @param {boolean} force_call\r\n         */\r\n        this.extend = function (what, with_what, force_call) {\r\n            var _ = this,\r\n                    extended = this[what];\r\n            if(typeof extended === 'function' && typeof with_what === 'function') {\r\n                var f = this[what];\r\n                this[what] = function (a, b) {\r\n                    if(isSymbol(a) && isSymbol(b) && !force_call)\r\n                        return f.call(_, a, b);\r\n                    else\r\n                        return with_what.call(_, a, b, f);\r\n                };\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Generates library's representation of a function. It's a fancy way of saying a symbol with\r\n         * a few extras. The most important thing is that that it gives a fname and\r\n         * an args property to the symbols in addition to changing its group to FN\r\n         * @param {String} fn_name\r\n         * @param {Array} params\r\n         * @returns {Symbol}\r\n         */\r\n        this.symfunction = function (fn_name, params) {\r\n            //call the proper function and return the result;\r\n            var f = new Symbol(fn_name);\r\n            f.group = FN;\r\n            if(typeof params === 'object')\r\n                params = [].slice.call(params);//ensure an array\r\n            f.args = params;\r\n            f.fname = fn_name === PARENTHESIS ? '' : fn_name;\r\n            f.updateHash();\r\n            return f;\r\n        };\r\n\r\n        /**\r\n         * An internal function call for the Parser. This will either trigger a real\r\n         * function call if it can do so or just return a symbolic representation of the\r\n         * function using symfunction.\r\n         * @param {String} fn_name\r\n         * @param {Array} args\r\n         * @param {int} allowed_args\r\n         * @returns {Symbol}\r\n         */\r\n        this.callfunction = function (fn_name, args, allowed_args) {\r\n            var fn_settings = functions[fn_name];\r\n\r\n            if(!fn_settings)\r\n                err('Nerdamer currently does not support the function ' + fn_name);\r\n\r\n            var num_allowed_args = fn_settings[1] || allowed_args, //get the number of allowed arguments\r\n                    fn = fn_settings[0], //get the mapped function\r\n                    retval;\r\n            //We want to be able to call apply on the arguments or create a symfunction. Both require\r\n            //an array so make sure to wrap the argument in an array.\r\n            if(!(args instanceof Array))\r\n                args = args !== undefined ? [args] : [];\r\n\r\n            if(num_allowed_args !== -1) {\r\n                var is_array = isArray(num_allowed_args),\r\n                        min_args = is_array ? num_allowed_args[0] : num_allowed_args,\r\n                        max_args = is_array ? num_allowed_args[1] : num_allowed_args,\r\n                        num_args = args.length;\r\n\r\n                var error_msg = fn_name + ' requires a {0} of {1} arguments. {2} provided!';\r\n\r\n                if(num_args < min_args)\r\n                    err(format(error_msg, 'minimum', min_args, num_args));\r\n                if(num_args > max_args)\r\n                    err(format(error_msg, 'maximum', max_args, num_args));\r\n            }\r\n\r\n            /*\r\n             * The following are very important to the how nerdamer constructs functions!\r\n             * Assumption 1 - if fn is undefined then handling of the function is purely numeric. This\r\n             *     enables us to reuse Math, Math2, ..., any function from Settings.FUNCTIONS_MODULES entry\r\n             * Assumption 2 - if fn is defined then that function takes care of EVERYTHING including symbolics\r\n             * Assumption 3 - if the user calls symbolics on a function that returns a numeric value then\r\n             *     they are expecting a symbolic output.\r\n             */\r\n            //check if arguments are all numers\r\n            var numericArgs = allNumbers(args);\r\n            //Big number support. Check if Big number is requested and the arguments are all numeric and, not imaginary\r\n//            if (Settings.USE_BIG && numericArgs) {\r\n//                retval = Big[fn_name].apply(undefined, args);\r\n//            }\r\n//            else {\r\n            if(!fn) {\r\n                //Remember assumption 1. No function defined so it MUST be numeric in nature\r\n                fn = findFunction(fn_name);\r\n                if(Settings.PARSE2NUMBER && numericArgs)\r\n                    retval = bigConvert(fn.apply(fn, args));\r\n                else\r\n                    retval = _.symfunction(fn_name, args);\r\n            }\r\n            else {\r\n                //Remember assumption 2. The function is defined so it MUST handle all aspects including numeric values\r\n                retval = fn.apply(fn_settings[2], args);\r\n            }\r\n//            }\r\n\r\n            return retval;\r\n        };\r\n        /**\r\n         * Build a regex based on the operators currently loaded. These operators are to be ignored when\r\n         * substituting spaces for multiplication\r\n         */\r\n        this.operator_filter_regex = (function () {\r\n            //we only want the operators which are singular since those are the ones\r\n            //that nerdamer uses anyway\r\n            var ostr = '^\\\\' + Object.keys(operators).filter(function (x) {\r\n                if(x.length === 1)\r\n                    return x;\r\n            }).join('\\\\');\r\n            //create a regex which captures all spaces between characters except those\r\n            //have an operator on one end\r\n            return new RegExp('([' + ostr + '])\\\\s+([' + ostr + '])');\r\n        })();\r\n\r\n        /**\r\n         * Replaces nerdamer.setOperator\r\n         * @param {object} operator\r\n         * @param {boolean} shift\r\n         */\r\n        this.setOperator = function (operator, action, shift) {\r\n            var name = operator.operator; //take the name to be the symbol\r\n            operators[name] = operator;\r\n            if(action)\r\n                this[operator.action] = action;\r\n            //make the parser aware of the operator\r\n            _[name] = operator.operation;\r\n            //make the action available to the parser if infix\r\n            if(!operator.action && !(operator.prefix || operator.postif)) {\r\n                operator.action = name;\r\n            }\r\n            //if this operator is exclusive then all successive operators should be shifted\r\n            if(shift === 'over' || shift === 'under') {\r\n                var precedence = operator.precedence;\r\n\r\n                for(var x in operators) {\r\n                    var o = operators[x];\r\n                    var condition = shift === 'over' ? o.precedence >= precedence : o.precedence > precedence;\r\n                    if(condition)\r\n                        o.precedence++;\r\n                }\r\n                ;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Gets an opererator by its symbol\r\n         * @param {String} operator\r\n         * @returns {Object}\r\n         */\r\n        this.getOperator = function (operator) {\r\n            return operators[operator];\r\n        };\r\n\r\n        this.aliasOperator = function (o, n) {\r\n            var t = {};\r\n            var operator = operators[o];\r\n            //copy everything over to the new operator\r\n            for(var x in operator) {\r\n                t[x] = operator[x];\r\n            }\r\n            //update the symbol\r\n            t.operator = n;\r\n\r\n            this.setOperator(t);\r\n        };\r\n\r\n        /**\r\n         * Returns the list of operators. Caution! Can break parser!\r\n         * @returns {object}\r\n         */\r\n        this.getOperators = function () {\r\n            //will replace this with some cloning action in the future\r\n            return operators;\r\n        };\r\n\r\n        this.getBrackets = function () {\r\n            return brackets;\r\n        };\r\n        /*\r\n         * Preforms preprocessing on the string. Useful for making early modification before\r\n         * sending to the parser\r\n         * @param {String} e\r\n         */\r\n        var prepare_expression = function (e) {\r\n            /*\r\n             * Since variables cannot start with a number, the assumption is made that when this occurs the\r\n             * user intents for this to be a coefficient. The multiplication symbol in then added. The same goes for\r\n             * a side-by-side close and open parenthesis\r\n             */\r\n            e = String(e);\r\n            //apply preprocessors\r\n            for(var i = 0; i < preprocessors.actions.length; i++)\r\n                e = preprocessors.actions[i].call(this, e);\r\n\r\n            //e = e.split(' ').join('');//strip empty spaces\r\n            //replace multiple spaces with one space\r\n            e = e.replace(/\\s+/g, ' ');\r\n\r\n            //only even bother to check if the string contains e. This regex is painfully slow and might need a better solution. e.g. hangs on (0.06/3650))^(365)\r\n            if(/e/gi.test(e)) {\r\n                e = e.replace(/\\-*\\d+\\.*\\d*e\\+?\\-?\\d+/gi, function (x) {\r\n                    return scientificToDecimal(x);\r\n                });\r\n            }\r\n            //replace scientific numbers\r\n\r\n            //allow omission of multiplication after coefficients\r\n            e = e.replace(Settings.IMPLIED_MULTIPLICATION_REGEX, function () {\r\n                var str = arguments[4],\r\n                        group1 = arguments[1],\r\n                        group2 = arguments[2],\r\n                        start = arguments[3],\r\n                        first = str.charAt(start),\r\n                        before = '',\r\n                        d = '*';\r\n                if(!first.match(/[\\+\\-\\/\\*]/))\r\n                    before = str.charAt(start - 1);\r\n                if(before.match(/[a-z]/i))\r\n                    d = '';\r\n                return group1 + d + group2;\r\n            })\r\n                    .replace(/([a-z0-9_]+)/gi, function (match, a) {\r\n                        if(Settings.USE_MULTICHARACTER_VARS === false && !(a in functions)) {\r\n                            if(!isNaN(a))\r\n                                return a;\r\n                            return a.split('').join('*');\r\n                        }\r\n                        return a;\r\n                    })\r\n                    //allow omission of multiplication sign between brackets\r\n                    .replace(/\\)\\(/g, ')*(') || '0';\r\n            //replace x(x+a) with x*(x+a)\r\n            while(true) {\r\n                var e_org = e; //store the original\r\n                e = e.replace(/([a-z0-9_]+)(\\()|(\\))([a-z0-9]+)/gi, function (match, a, b, c, d) {\r\n                    var g1 = a || c,\r\n                            g2 = b || d;\r\n                    if(g1 in functions) //create a passthrough for functions\r\n                        return g1 + g2;\r\n                    return g1 + '*' + g2;\r\n                });\r\n                //if the original equals the replace we're done\r\n                if(e_org === e)\r\n                    break;\r\n            }\r\n            return e;\r\n        };\r\n        //delay setting of constants until Settings is ready\r\n        this.initConstants = function () {\r\n            this.CONSTANTS = {\r\n                E: new Symbol(Settings.E),\r\n                PI: new Symbol(Settings.PI)\r\n            };\r\n        };\r\n        /*\r\n         * Debugging method used to better visualize vector and arrays\r\n         * @param {object} o\r\n         * @returns {String}\r\n         */\r\n        this.pretty_print = function (o) {\r\n            if(Array.isArray(o)) {\r\n                var s = o.map(x => _.pretty_print(x)).join(', ');\r\n                if(o.type === 'vector')\r\n                    return 'vector<' + s + '>';\r\n                return '(' + s + ')';\r\n            }\r\n            return o.toString();\r\n        };\r\n        this.peekers = {\r\n            pre_operator: [],\r\n            post_operator: [],\r\n            pre_function: [],\r\n            post_function: []\r\n        };\r\n\r\n        this.callPeekers = function (name) {\r\n            if(Settings.callPeekers) {\r\n                var peekers = this.peekers[name];\r\n                //remove the first items and stringify\r\n                var args = arguments2Array(arguments).slice(1).map(stringify);\r\n                //call each one of the peekers\r\n                for(var i = 0; i < peekers.length; i++) {\r\n                    peekers[i].apply(null, args);\r\n                }\r\n            }\r\n        };\r\n        /*\r\n         * Tokenizes the string\r\n         * @param {String} e\r\n         * @returns {Token[]}\r\n         */\r\n        this.tokenize = function (e) {\r\n            //cast to String\r\n            e = String(e);\r\n            //remove multiple white spaces and spaces at beginning and end of string\r\n            e = e.trim().replace(/\\s+/g, ' ');\r\n            //remove spaces before and after brackets\r\n            for(var x in brackets) {\r\n                var regex = new RegExp(brackets[x].is_close ? '\\\\s+\\\\' + x : '\\\\' + x + '\\\\s+', 'g');\r\n                e = e.replace(regex, x);\r\n            }\r\n\r\n            var col = 0; //the column position\r\n            var L = e.length; //expression length\r\n            var lpos = 0; //marks beginning of next token\r\n            var tokens = []; //the tokens container\r\n            var scopes = [tokens]; //initiate with the tokens as the highest scope\r\n            var target = scopes[0]; //the target to which the tokens are added. This can swing up or down\r\n            var depth = 0;\r\n            var open_brackets = [];\r\n            var has_space = false; //marks if an open space character was found\r\n            var SPACE = ' ';\r\n            var EMPTY_STRING = '';\r\n            var COMMA = ',';\r\n            var MINUS = '-';\r\n            var MULT = '*';\r\n            //Possible source of bug. Review\r\n            /*\r\n             //gets the next space\r\n             var next_space = function(from) {\r\n             for(var i=from; i<L; i++) {\r\n             if(e.charAt(i) === ' ')\r\n             return i;\r\n             }\r\n             \r\n             return L; //assume the end of the string instead\r\n             };\r\n             */\r\n            /**\r\n             * Adds a scope to tokens\r\n             * @param {String} scope_type\r\n             * @param {int} column\r\n             * @returns {undefined}\r\n             */\r\n            var addScope = function (scope_type, column) {\r\n                var new_scope = []; //create a new scope\r\n                if(scope_type !== undefined) {\r\n                    new_scope.type = scope_type;\r\n                }\r\n                new_scope.column = column; //mark the column of the scope\r\n                scopes.push(new_scope); //add it to the list of scopes\r\n                target.push(new_scope); //add it to the tokens list since now it's a scope\r\n                target = new_scope; //point to it\r\n                depth++; //go down one in scope\r\n            };\r\n            /**\r\n             * Goes up in scope by one\r\n             * @returns {undefined}\r\n             */\r\n            var goUp = function () {\r\n                scopes.pop(); //remove the scope from the scopes stack\r\n                target = scopes[--depth]; //point the above scope\r\n            };\r\n            /**\r\n             * Extracts all the operators from the expression string starting at postion start_at\r\n             * @param {int} start_at\r\n             * @returns {String}\r\n             */\r\n            var get_operator_str = function (start_at) {\r\n                start_at = start_at !== undefined ? start_at : col;\r\n                //mark the end of the operator as the start since we're just going\r\n                //to be walking along the string\r\n                var end = start_at + 1;\r\n                //just keep moving along\r\n                while(e.charAt(end++) in operators) {\r\n                }\r\n                //remember that we started at one position ahead. The beginning operator is what triggered\r\n                //this function to be called in the first place. String.CharAt is zero based so we now\r\n                //have to correct two places. The initial increment + the extra++ at the end of end during\r\n                //the last iteration.\r\n                return e.substring(start_at, end - 1);\r\n            };\r\n            /**\r\n             * Breaks operator up in to several different operators as defined in operators\r\n             * @param {String} operator_str\r\n             * @returns {String[]}\r\n             */\r\n            var chunkify = function (operator_str) {\r\n                var start = col - operator_str.length; //start of operator\r\n                var _operators = [];\r\n                var operator = operator_str.charAt(0);\r\n                //grab the largest possible chunks but start at 2 since we already know\r\n                //that the first character is an operator\r\n\r\n                for(var i = 1, L = operator_str.length; i < L; i++) {\r\n                    var ch = operator_str.charAt(i);\r\n                    var o = operator + ch;\r\n                    //since the operator now is undefined then the last operator\r\n                    //was the largest possible combination.\r\n                    if(!(o in operators)) {\r\n                        _operators.push(new Token(operator, Token.OPERATOR, start + i));\r\n                        operator = ch;\r\n                    }\r\n                    else\r\n                        operator = o;//now the operator is the larger chunk\r\n                }\r\n                //add the last operator\r\n                _operators.push(new Token(operator, Token.OPERATOR, start + i));\r\n                return _operators;\r\n            };\r\n\r\n            /**\r\n             * Is used to add a token to the tokens array. Makes sure that no empty token is added\r\n             * @param {int} at\r\n             * @param {String} token\r\n             * @returns {undefined}\r\n             */\r\n            var add_token = function (at, token) {\r\n                //grab the token if we're not supplied one\r\n                if(token === undefined)\r\n                    token = e.substring(lpos, at);\r\n                //only add it if it's not an empty string\r\n                if(token in _.units)\r\n                    target.push(new Token(token, Token.UNIT, lpos));\r\n                else if(token !== '')\r\n                    target.push(new Token(token, Token.VARIABLE_OR_LITERAL, lpos));\r\n            };\r\n            /**\r\n             * Adds a function to the output\r\n             * @param {String} f\r\n             * @returns {undefined}\r\n             */\r\n            var add_function = function (f) {\r\n                target.push(new Token(f, Token.FUNCTION, lpos));\r\n            };\r\n            /**\r\n             * Tokens are found between operators so this marks the location of where the last token was found\r\n             * @param {int} position\r\n             * @returns {undefined}\r\n             */\r\n            var set_last_position = function (position) {\r\n                lpos = position + 1;\r\n            };\r\n            /**\r\n             * When a operator is found and added, especially a combo operator, then the column location\r\n             * has to be adjusted to the end of the operator\r\n             * @returns {undefined}\r\n             */\r\n            var adjust_column_position = function () {\r\n                lpos = lpos + operator_str.length - 2;\r\n                col = lpos - 1;\r\n            };\r\n            for(; col < L; col++) {\r\n                var ch = e.charAt(col);\r\n                if(ch in operators) {\r\n                    add_token(col);\r\n                    //is the last token numeric?\r\n                    var last_token_is_numeric = target[0] && isNumber(target[0]);\r\n                    //is this character multiplication?\r\n                    var is_multiplication = last_token_is_numeric && ch === MULT;\r\n                    //if we're in a new scope then go up by one but if the space\r\n                    //is right befor an operator then it makes no sense to go up in scope\r\n                    //consider sin -x. The last position = current position at the minus sign\r\n                    //this means that we're going for sin(x) -x which is wrong\r\n                    //Ignore comma since comma is still part of the existing scope.\r\n                    if(has_space && lpos < col && !(ch === COMMA || is_multiplication)) {\r\n                        has_space = false;\r\n                        goUp();\r\n                    }\r\n                    //mark the last position that a\r\n                    set_last_position(col + 1);\r\n                    var operator_str = get_operator_str(col);\r\n\r\n                    adjust_column_position();\r\n                    target.push.apply(target, chunkify(operator_str));\r\n                }\r\n                else if(ch in brackets) {\r\n                    var bracket = brackets[ch];\r\n\r\n                    if(bracket.is_open) {\r\n                        //mark the bracket\r\n                        open_brackets.push([bracket, lpos]);\r\n                        var f = e.substring(lpos, col);\r\n                        if(f in functions) {\r\n                            add_function(f);\r\n                        }\r\n                        else if(f !== '') {\r\n                            //assume multiplication\r\n                            //TODO: Add the multiplication to stack\r\n                            target.push(new Token(f, Token.VARIABLE_OR_LITERAL, lpos));\r\n                        }\r\n                        //go down one in scope\r\n                        addScope(bracket.maps_to, col);\r\n                    }\r\n                    else if(bracket.is_close) {\r\n                        //get the matching bracket\r\n                        var pair = open_brackets.pop();\r\n                        //throw errors accordingly\r\n                        //missing open bracket\r\n                        if(!pair)\r\n                            throw new ParityError('Missing open bracket for bracket at: ' + (col + 1));\r\n                        //incorrect pair\r\n                        else if(pair[0].id !== bracket.id - 1)\r\n                            throw new ParityError('Parity error');\r\n\r\n                        add_token(col);\r\n                        goUp();\r\n                    }\r\n                    set_last_position(col);\r\n                }\r\n                else if(ch === SPACE) {\r\n                    var prev = e.substring(lpos, col); //look back\r\n                    var nxt = e.charAt(col + 1); //look forward\r\n                    if(has_space) {\r\n\r\n                        if(prev in operators) {\r\n                            target.push(new Token(prev, Token.OPERATOR, col));\r\n                        }\r\n                        else {\r\n                            add_token(undefined, prev);\r\n                            //we're at the closing space\r\n                            goUp(); //go up in scope if we're at a space\r\n\r\n                            //assume multiplication if it's not an operator except for minus\r\n                            var is_operator = nxt in operators;\r\n\r\n                            if((is_operator && operators[nxt].value === MINUS) || !is_operator) {\r\n                                target.push(new Token(MULT, Token.OPERATOR, col));\r\n                            }\r\n                        }\r\n                        has_space = false; //remove the space\r\n                    }\r\n                    else {\r\n                        //we're at the closing space\r\n                        //check if it's a function\r\n                        var f = e.substring(lpos, col);\r\n\r\n                        if(f in functions) {\r\n                            //there's no need to go up in scope if the next character is an operator\r\n                            has_space = true; //mark that a space was found\r\n                            add_function(f);\r\n                            addScope();\r\n                        }\r\n                        else if(f in operators) {\r\n                            target.push(new Token(f, Token.OPERATOR, col));\r\n                        }\r\n                        else {\r\n                            add_token(undefined, f);\r\n                            //peek ahead to the next character\r\n                            var nxt = e.charAt(col + 1);\r\n\r\n                            //If it's a number then add the multiplication operator to the stack but make sure that the next character\r\n                            //is not an operator\r\n\r\n                            if(prev !== EMPTY_STRING && nxt !== EMPTY_STRING && !(prev in operators) && !(nxt in operators))\r\n                                target.push(new Token(MULT, Token.OPERATOR, col));\r\n                        }\r\n                        //Possible source of bug. Review\r\n                        /*\r\n                         //space can mean multiplication so add the symbol if the is encountered\r\n                         if(/\\d+|\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(f)) {\r\n                         var next = e.charAt(col+1);\r\n                         var next_is_operator = next in operators;\r\n                         var ns = next_space(col+1);\r\n                         var next_word = e.substring(col+1, ns);\r\n                         //the next can either be a prefix operator or no operator\r\n                         if((next_is_operator && operators[next].prefix) || !(next_is_operator || next_word in operators))\r\n                         target.push(new Token('*', Token.OPERATOR, col));\r\n                         }\r\n                         */\r\n                    }\r\n                    set_last_position(col); //mark this location\r\n                }\r\n            }\r\n            //check that all brackets were closed\r\n            if(open_brackets.length) {\r\n                var b = open_brackets.pop();\r\n                throw new ParityError('Missing closed bracket for bracket at ' + (b[1] + 1));\r\n            }\r\n            //add the last token\r\n            add_token(col);\r\n\r\n            return tokens;\r\n        };\r\n        /*\r\n         * Puts token array in Reverse Polish Notation\r\n         * @param {Token[]} tokens\r\n         * @returns {Token[]}\r\n         */\r\n        this.toRPN = function (tokens) {\r\n            var fn = tokens.type;\r\n            var l = tokens.length, i;\r\n            var output = [];\r\n            var stack = [];\r\n            var prefixes = [];\r\n            var collapse = function (target, destination) {\r\n                while(target.length)\r\n                    destination.push(target.pop());\r\n            };\r\n            //mark all the prefixes and add them to the stack\r\n            for(i = 0; i < l; i++) {\r\n                var token = tokens[i];\r\n                if(token.type !== Token.OPERATOR)\r\n                    break;\r\n                if(!token.prefix)\r\n                    throw new OperatorError('Not a prefix operator');\r\n                token.is_prefix = true;\r\n                stack.push(token);\r\n            }\r\n            //begin with remaining tokens\r\n            for(; i < l; i++) {\r\n                var e = tokens[i];\r\n                if(e.type === Token.OPERATOR) {\r\n                    var operator = e;\r\n\r\n                    //create the option for the operator being overloaded\r\n                    if(operator.overloaded) {\r\n                        var next = tokens[i + 1];\r\n                        //if it's followed by a number or variable then we assume it's not a postfix operator\r\n                        if(next && next.type === Token.VARIABLE_OR_LITERAL) {\r\n                            operator.postfix = false;\r\n                            //override the original function with the overload function\r\n                            operator.action = operator.overloadAction;\r\n                            operator.leftAssoc = operator.overloadLeftAssoc;\r\n                        }\r\n                    }\r\n\r\n                    //if the stack is not empty\r\n                    while(stack.length) {\r\n                        var last = stack[stack.length - 1];\r\n                        //if (there is an operator at the top of the operator stack with greater precedence)\r\n                        //or (the operator at the top of the operator stack has equal precedence and is left associative)) ~ wikipedia\r\n                        //the !prefixes.length makes sure that the operator on stack isn't prematurely taken fromt he stack.\r\n                        if(!(last.precedence > operator.precedence || !operator.leftAssoc && last.precedence === operator.precedence))\r\n                            break;\r\n                        output.push(stack.pop());\r\n                    }\r\n\r\n                    //change the behavior of the operator if it's a vector and we've been asked to do so\r\n                    if((fn === 'vector' || fn === 'set') && 'vectorFn' in operator)\r\n                        operator.action = operator.vectorFn;\r\n\r\n\r\n                    //if the operator is a postfix operator then we're ready to go since it belongs\r\n                    //to the preceding token. However the output cannot be empty. It must have either\r\n                    //an operator or a variable/literal\r\n                    if(operator.postfix) {\r\n                        var previous = tokens[i - 1];\r\n                        if(!previous)\r\n                            throw new OperatorError(\"Unexpected prefix operator '\" + e.value + \"'! at \" + e.column);\r\n                        else if(previous.type === Token.OPERATOR) {\r\n                            //a postfix can only be followed by a postfix\r\n                            if(!previous.postfix)\r\n                                throw new OperatorError(\"Unexpected prefix operator '\" + previous.value + \"'! at \" + previous.column);\r\n                        }\r\n                    }\r\n                    else {\r\n                        //we must be at an infix so point the operator this\r\n                        do {\r\n                            //the first one is an infix operator all others have to be prefix operators so jump to the end\r\n                            var next = tokens[i + 1]; //take a look ahead\r\n                            var next_is_operator = next ? next.type === Token.OPERATOR : false; //check if it's an operator\r\n                            if(next_is_operator) {\r\n                                //if it's not a prefix operator then it not in the right place\r\n                                if(!next.prefix) {\r\n                                    throw new OperatorError('A prefix operator was expected at ' + next.column);\r\n                                }\r\n                                //mark it as a confirmed prefix\r\n                                next.is_prefix = true;\r\n                                //add it to the prefixes\r\n                                prefixes.push(next);\r\n                                i++;\r\n                            }\r\n                        }\r\n                        while(next_is_operator)\r\n                    }\r\n\r\n                    //if it's a prefix it should be on a special stack called prefixes\r\n                    //we do this to hold on to prefixes because of left associative operators.\r\n                    //they belong to the variable/literal but if placed on either the stack\r\n                    //or output there's no way of knowing this. I might be wrong so I welcome\r\n                    //any discussion about this.\r\n\r\n                    if(operator.is_prefix) //ADD ALL EXCEPTIONS FOR ADDING TO PREFIX STACK HERE. !!!\r\n                        prefixes.push(operator);\r\n                    else\r\n                        stack.push(operator);\r\n                    //move the prefixes to the stack\r\n                    while(prefixes.length) {\r\n                        if(operator.leftAssoc || !operator.leftAssoc && prefixes[prefixes.length - 1].precedence >= operator.precedence) //revisit for commas\r\n                            stack.push(prefixes.pop());\r\n                        else\r\n                            break;\r\n                    }\r\n                }\r\n                else if(e.type === Token.VARIABLE_OR_LITERAL) {\r\n                    //move prefixes to stack at beginning of scope\r\n                    if(output.length === 0)\r\n                        collapse(prefixes, stack);\r\n                    //done with token\r\n                    output.push(e);\r\n                    var last_on_stack = stack[stack.length - 1];\r\n                    //then move all the prefixes to the output\r\n                    if(!last_on_stack || !last_on_stack.leftAssoc)\r\n                        collapse(prefixes, output);\r\n                }\r\n                else if(e.type === Token.FUNCTION) {\r\n                    stack.push(e);\r\n                }\r\n                else if(e.type === Token.UNIT) {\r\n                    //if it's a unit it belongs on the stack since it's tied to the previous token\r\n                    output.push(e);\r\n                }\r\n                //if it's an additonal scope then put that into RPN form\r\n                if(Array.isArray(e)) {\r\n                    output.push(this.toRPN(e));\r\n                    if(e.type)\r\n                        output.push(new Token(e.type, Token.FUNCTION, e.column)); //since it's hidden it needs no column\r\n\r\n                }\r\n            }\r\n            //collapse the remainder of the stack and prefixes to output\r\n            collapse(stack, output);\r\n            collapse(prefixes, output);\r\n\r\n            return output;\r\n        };\r\n        /*\r\n         * Parses the tokens\r\n         * @param {Tokens[]} rpn\r\n         * @param {object} substitutions\r\n         * @returns {Symbol}\r\n         */\r\n        this.parseRPN = function (rpn, substitutions) {\r\n            try {\r\n                //default substitutions\r\n                substitutions = substitutions || {};\r\n                //prepare the substitutions.\r\n                //we first parse them out as-is\r\n                for(var x in substitutions)\r\n                    substitutions[x] = _.parse(substitutions[x], {});\r\n\r\n                //Although technically constants,\r\n                //pi and e are only available when evaluating the expression so add to the subs.\r\n                //Doing this avoids rounding errors\r\n                //link e and pi\r\n                if(Settings.PARSE2NUMBER) {\r\n                    //use the value provided if the individual for some strange reason prefers this.\r\n                    //one reason could be to sub e but not pi or vice versa\r\n                    if(!('e' in substitutions))\r\n                        substitutions.e = new Symbol(Settings.E);\r\n                    if((!('pi' in substitutions)))\r\n                        substitutions.pi = new Symbol(Settings.PI);\r\n                }\r\n\r\n                var Q = [];\r\n                for(var i = 0, l = rpn.length; i < l; i++) {\r\n                    var e = rpn[i];\r\n\r\n                    //Arrays indicate a new scope so parse that out\r\n                    if(Array.isArray(e)) {\r\n                        e = this.parseRPN(e, substitutions);\r\n                    }\r\n\r\n                    if(e) {\r\n                        if(e.type === Token.OPERATOR) {\r\n                            if(e.is_prefix || e.postfix)\r\n                                //resolve the operation assocated with the prefix\r\n                                Q.push(e.operation(Q.pop()));\r\n                            else {\r\n                                var b = Q.pop();\r\n                                var a = Q.pop();\r\n                                //Throw an error if the RH value is empty. This cannot be a postfix since we already checked\r\n                                if(typeof a === 'undefined')\r\n                                    throw new OperatorError(e + ' is not a valid postfix operator at ' + e.column);\r\n\r\n                                var is_comma = e.action === 'comma';\r\n                                //convert Sets to Vectors on all operations at this point. Sets are only recognized functions or individually\r\n                                if(a instanceof Set && !is_comma)\r\n                                    a = Vector.fromSet(a);\r\n\r\n                                if(b instanceof Set && !is_comma)\r\n                                    b = Vector.fromSet(b);\r\n\r\n                                //call all the pre-operators\r\n                                this.callPeekers('pre_operator', a, b, e);\r\n\r\n                                var ans = _[e.action](a, b);\r\n\r\n                                //call all the pre-operators\r\n                                this.callPeekers('post_operator', ans, a, b, e);\r\n\r\n                                Q.push(ans);\r\n                            }\r\n                        }\r\n                        else if(e.type === Token.FUNCTION) {\r\n                            var args = Q.pop();\r\n                            var parent = args.parent; //make a note of the parent\r\n                            if(!(args instanceof Collection))\r\n                                args = Collection.create(args);\r\n                            //the return value may be a vector. If it is then we check\r\n                            //Q to see if there's another vector on the stack. If it is then\r\n                            //we check if has elements. If it does then we know that we're dealing\r\n                            //with an \"getter\" object and return the requested values\r\n\r\n                            //call the function. This is the _.callfunction method in nerdamer\r\n                            //call the function. This is the _.callfunction method in nerdamer\r\n                            var fn_name = e.value;\r\n                            var fn_args = args.getItems();\r\n\r\n                            //call the pre-function peekers\r\n                            this.callPeekers('pre_function', fn_name, fn_args);\r\n\r\n                            var ret = _.callfunction(fn_name, fn_args);\r\n\r\n                            //call the post-function peekers\r\n                            this.callPeekers('post_function', ret, fn_name, fn_args);\r\n\r\n                            var last = Q[Q.length - 1];\r\n                            var next = rpn[i + 1];\r\n                            var next_is_comma = next && next.type === Token.OPERATOR && next.value === ',';\r\n\r\n                            if(!next_is_comma && ret instanceof Vector && last && last.elements && !(last instanceof Collection)) {\r\n                                //remove the item from the queue\r\n                                var item = Q.pop();\r\n\r\n                                var getter = ret.elements[0];\r\n                                //check if it's symbolic. If so put it back and add the item to the stack\r\n                                if(!getter.isConstant()) {\r\n                                    item.getter = getter;\r\n                                    Q.push(item);\r\n                                    Q.push(ret);\r\n                                }\r\n                                else if(getter instanceof Slice) {\r\n                                    //if it's a Slice return the slice\r\n                                    Q.push(Vector.fromArray(item.elements.slice(getter.start, getter.end)));\r\n                                }\r\n                                else {\r\n                                    var index = Number(getter);\r\n                                    var il = item.elements.length;\r\n                                    //support for negative indices\r\n                                    if(index < 0)\r\n                                        index = il + index;\r\n                                    //it it's still out of bounds\r\n                                    if(index < 0 || index >= il) //index should no longer be negative since it's been reset above\r\n                                        //range error\r\n                                        throw new OutOfRangeError('Index out of range ' + (e.column + 1));\r\n\r\n                                    var element = item.elements[index];\r\n                                    //cyclic but we need to mark this for future reference\r\n                                    item.getter = index;\r\n                                    element.parent = item;\r\n\r\n                                    Q.push(element);\r\n                                }\r\n                            }\r\n                            else {\r\n                                //extend the parent reference\r\n                                if(parent)\r\n                                    ret.parent = parent;\r\n                                Q.push(ret);\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            var subbed;\r\n                            var v = e.value;\r\n\r\n                            if(v in Settings.ALIASES)\r\n                                e = _.parse(Settings.ALIASES[e]);\r\n                            //wrap it in a symbol if need be\r\n                            else if(e.type === Token.VARIABLE_OR_LITERAL)\r\n                                e = new Symbol(v);\r\n                            else if(e.type === Token.UNIT) {\r\n                                e = new Symbol(v);\r\n                                e.isUnit = true;\r\n                            }\r\n\r\n                            //make substitutions\r\n                            //Always constants first. This avoids the being overridden\r\n                            if(v in _.CONSTANTS) {\r\n                                subbed = e;\r\n                                e = new Symbol(_.CONSTANTS[v]);\r\n                            }\r\n                            //next substitutions. This allows declared variable to be overridden\r\n                            //check if the values match to avoid erasing the multiplier.\r\n                            //Example:/e = 3*a. substutiting a for a will wipe out the multiplier.\r\n                            else if(v in substitutions && v !== substitutions[v].toString()) {\r\n                                subbed = e;\r\n                                e = substitutions[v].clone();\r\n                            }\r\n                            //next declare variables\r\n                            else if(v in VARS) {\r\n                                subbed = e;\r\n                                e = VARS[v].clone();\r\n                            }\r\n                            //make notation of what it was before\r\n                            if(subbed)\r\n                                e.subbed = subbed;\r\n\r\n                            Q.push(e);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                var retval = Q[0];\r\n\r\n                if(['undefined', 'string', 'number'].indexOf(typeof retval) !== -1) {\r\n                    throw new UnexpectedTokenError('Unexpected token!');\r\n                }\r\n\r\n                return retval;\r\n            }\r\n            catch(error) {\r\n                var rethrowErrors = [OutOfFunctionDomainError];\r\n                // Rethrow certain errors in the same class to preserve them\r\n                rethrowErrors.forEach(function (E) {\r\n                    if(error instanceof E) {\r\n                        throw new E(error.message + ': ' + e.column);\r\n                    }\r\n                });\r\n\r\n                throw new ParseError(error.message + ': ' + e.column);\r\n            }\r\n        };\r\n        /**\r\n         * This is the method that triggers the parsing of the string. It generates a parse tree but processes\r\n         * it right away. The operator functions are called when their respective operators are reached. For instance\r\n         * + with cause this.add to be called with the left and right hand values. It works by walking along each\r\n         * character of the string and placing the operators on the stack and values on the output. When an operator\r\n         * having a lower order than the last is reached then the stack is processed from the last operator on the\r\n         * stack.\r\n         * @param {String} token\r\n         */\r\n\r\n        function Node(token) {\r\n            this.type = token.type;\r\n            this.value = token.value;\r\n            //the incoming token may already be a Node type\r\n            this.left = token.left;\r\n            this.right = token.right;\r\n        }\r\n\r\n        Node.prototype.toString = function () {\r\n            var left = this.left ? this.left.toString() + '---' : '';\r\n            var right = this.right ? '---' + this.right.toString() : '';\r\n            return left + '(' + this.value + ')' + right;\r\n        };\r\n\r\n        Node.prototype.toHTML = function (depth, indent) {\r\n            depth = depth || 0;\r\n            indent = typeof indent === 'undefined' ? 4 : indent;\r\n            var tab = function (n) {\r\n                return ' '.repeat(indent * n);\r\n            };\r\n            var html = '';\r\n            var left = this.left ? tab(depth + 1) + '<li>\\n' + this.left.toHTML(depth + 2, indent) + tab(depth + 1) + '</li> \\n' : '';\r\n            var right = this.right ? tab(depth + 1) + '<li>\\n' + this.right.toHTML(depth + 2, indent) + tab(depth + 1) + '</li>\\n' : '';\r\n            var html = tab(depth) + '<div class=\"' + this.type.toLowerCase() + '\"><span>' + this.value + '</span></div>' + tab(depth) + '\\n';\r\n            if(left || right) {\r\n                html += tab(depth) + '<ul>\\n' + left + right + tab(depth) + '</ul>\\n';\r\n            }\r\n            html += '';\r\n            return html;\r\n        };\r\n\r\n        this.tree = function (tokens) {\r\n            var Q = [];\r\n            for(var i = 0; i < tokens.length; i++) {\r\n                var e = tokens[i];\r\n                //Arrays indicate a new scope so parse that out\r\n                if(Array.isArray(e)) {\r\n                    e = this.tree(e);\r\n                    //if it's a comma then it's just arguments\r\n                    Q.push(e);\r\n                    continue;\r\n                }\r\n                if(e.type === Token.OPERATOR) {\r\n                    if(e.is_prefix || e.postfix) {\r\n                        //prefixes go to the left, postfix to the right\r\n                        var location = e.is_prefix ? 'left' : 'right';\r\n                        var last = Q.pop();\r\n                        e = new Node(e);\r\n                        e[location] = last;\r\n                        Q.push(e);\r\n                    }\r\n                    else {\r\n                        e = new Node(e);\r\n                        e.right = Q.pop();\r\n                        e.left = Q.pop();\r\n                        Q.push(e);\r\n                    }\r\n                }\r\n                else if(e.type === Token.FUNCTION) {\r\n                    e = new Node(e);\r\n                    var args = Q.pop();\r\n                    e.right = args;\r\n                    if(e.value === 'object') {\r\n                        //check if Q has a value\r\n                        var last = Q[Q.length - 1];\r\n                        if(last) {\r\n                            while(last.right) {\r\n                                last = last.right;\r\n                            }\r\n                            last.right = e;\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    Q.push(e);\r\n                }\r\n                else {\r\n                    Q.push(new Node(e));\r\n                }\r\n            }\r\n\r\n            return Q[0];\r\n        };\r\n        this.parse = function (e, substitutions) {\r\n            e = prepare_expression(e);\r\n            substitutions = substitutions || {};\r\n            //three passes but easier to debug\r\n            var tokens = this.tokenize(e);\r\n            var rpn = this.toRPN(tokens);\r\n            return this.parseRPN(rpn, substitutions);\r\n        };\r\n        /**\r\n         * TODO: Switch to Parser.tokenize for this method\r\n         * Reads a string into an array of Symbols and operators\r\n         * @param {String} expression_string\r\n         * @returns {Array}\r\n         */\r\n        this.toObject = function (expression_string) {\r\n            var objectify = function (tokens) {\r\n                var output = [];\r\n                for(var i = 0, l = tokens.length; i < l; i++) {\r\n                    var token = tokens[i];\r\n                    var v = token.value;\r\n                    if(token.type === Token.VARIABLE_OR_LITERAL) {\r\n                        output.push(new Symbol(v));\r\n                    }\r\n                    else if(token.type === Token.FUNCTION) {\r\n                        //jump ahead since the next object are the arguments\r\n                        i++;\r\n                        //create a symbolic function and stick it on output\r\n                        var f = _.symfunction(v, objectify(tokens[i]));\r\n                        f.isConversion = true;\r\n                        output.push(f);\r\n                    }\r\n                    else if(token.type === Token.OPERATOR) {\r\n                        output.push(v);\r\n                    }\r\n                    else {\r\n                        output.push(objectify(token));\r\n                    }\r\n                }\r\n\r\n                return output;\r\n            };\r\n            return objectify(_.tokenize(expression_string));\r\n        };\r\n\r\n        // A helper method for toTeX\r\n        var chunkAtCommas = function (arr) {\r\n            var j, k = 0, chunks = [[]];\r\n            for(var j = 0, l = arr.length; j < l; j++) {\r\n                if(arr[j] === ',') {\r\n                    k++;\r\n                    chunks[k] = [];\r\n                }\r\n                else {\r\n                    chunks[k].push(arr[j]);\r\n                }\r\n            }\r\n            return chunks;\r\n        };\r\n\r\n        // Helper method for toTeX\r\n        var rem_brackets = function (str) {\r\n            return str.replace(/^\\\\left\\((.+)\\\\right\\)$/g, function (str, a) {\r\n                if(a)\r\n                    return a;\r\n                return str;\r\n            });\r\n        };\r\n\r\n        var remove_redundant_powers = function (arr) {\r\n            // The filtered array\r\n            var narr = [];\r\n\r\n            while(arr.length) {\r\n                // Remove the element from the front\r\n                var e = arr.shift();\r\n                var next = arr[0];\r\n                var next_is_array = isArray(next);\r\n                var next_is_minus = next === '-';\r\n\r\n                // Remove redundant plusses \r\n                if(e === '^') {\r\n                    if(next === '+') {\r\n                        arr.shift();\r\n                    }\r\n                    else if(next_is_array && next[0] === '+') {\r\n                        next.shift();\r\n                    }\r\n\r\n                    // Remove redundant parentheses\r\n                    if(next_is_array && next.length === 1) {\r\n                        arr.unshift(arr.shift()[0]);\r\n                    }\r\n                }\r\n\r\n                // Check if it's a negative power\r\n                if(e === '^' && (next_is_array && next[0] === '-' || next_is_minus)) {\r\n                    // If so:\r\n                    // - Remove it from the new array, place a one and a division sign in that array and put it back\r\n                    var last = narr.pop();\r\n                    // Check if it's something multiplied by\r\n                    var before = narr[narr.length - 1];\r\n                    var before_last = '1';\r\n\r\n                    if(before === '*') {\r\n                        narr.pop();\r\n                        // For simplicity we just pop it. \r\n                        before_last = narr.pop();\r\n                    }\r\n                    // Implied multiplication\r\n                    else if(isArray(before)) {\r\n                        before_last = narr.pop();\r\n                    }\r\n\r\n                    narr.push(before_last, '/', last, e);\r\n\r\n                    // Remove the negative sign from the power \r\n                    if(next_is_array) {\r\n                        next.shift();\r\n                    }\r\n                    else {\r\n                        arr.shift();\r\n                    }\r\n\r\n                    // Remove it from the array so we don't end up with redundant parentheses if we can\r\n                    if(next_is_array && next.length === 1) {\r\n                        narr.push(arr.shift()[0]);\r\n                    }\r\n                }\r\n                else {\r\n                    narr.push(e);\r\n                }\r\n            }\r\n\r\n            return narr;\r\n        };\r\n        /*\r\n         * Convert expression or object to LaTeX\r\n         * @param {String} expression_or_obj\r\n         * @param {object} opt\r\n         * @returns {String}\r\n         */\r\n        this.toTeX = function (expression_or_obj, opt) {\r\n            opt = opt || {};\r\n            // Add decimal option as per issue #579. Consider passing an object to Latex.latex as option instead of string\r\n            var decimals = opt.decimals === true ? 'decimals' : undefined;\r\n\r\n            var obj = typeof expression_or_obj === 'string' ? this.toObject(expression_or_obj) : expression_or_obj,\r\n                    TeX = [],\r\n                    cdot = typeof opt.cdot === 'undefined' ? '\\\\cdot' : opt.cdot; //set omit cdot to true by default\r\n\r\n            // Remove negative powers as per issue #570\r\n            obj = remove_redundant_powers(obj);\r\n\r\n            if(isArray(obj)) {\r\n                var nobj = [], a, b;\r\n                //first handle ^\r\n                for(var i = 0; i < obj.length; i++) {\r\n                    a = obj[i];\r\n\r\n                    if(obj[i + 1] === '^') {\r\n                        b = obj[i + 2];\r\n                        nobj.push(LaTeX.braces(this.toTeX([a])) + '^' + LaTeX.braces(this.toTeX([b])));\r\n                        i += 2;\r\n                    }\r\n                    else {\r\n                        nobj.push(a);\r\n                    }\r\n                }\r\n                obj = nobj;\r\n            }\r\n\r\n            for(var i = 0, l = obj.length; i < l; i++) {\r\n                var e = obj[i];\r\n\r\n                // Convert * to cdot\r\n                if(e === '*') {\r\n                    e = cdot;\r\n                }\r\n\r\n                if(isSymbol(e)) {\r\n                    if(e.group === FN) {\r\n                        var fname = e.fname, f;\r\n\r\n                        if(fname === SQRT) {\r\n                            f = '\\\\sqrt' + LaTeX.braces(this.toTeX(e.args));\r\n                        }\r\n                        else if(fname === ABS) {\r\n                            f = LaTeX.brackets(this.toTeX(e.args), 'abs');\r\n                        }\r\n                        else if(fname === PARENTHESIS) {\r\n                            f = LaTeX.brackets(this.toTeX(e.args), 'parens');\r\n                        }\r\n                        else if(fname === Settings.LOG10) {\r\n                            f = '\\\\' + Settings.LOG10_LATEX + '\\\\left( ' + this.toTeX(e.args) + '\\\\right)';\r\n                        }\r\n                        else if(fname === 'integrate') {\r\n                            /* Retrive [Expression, x] */\r\n                            var chunks = chunkAtCommas(e.args);\r\n                            /* Build TeX */\r\n                            var expr = LaTeX.braces(this.toTeX(chunks[0])),\r\n                                    dx = this.toTeX(chunks[1]);\r\n                            f = '\\\\int ' + expr + '\\\\, d' + dx;\r\n                        }\r\n                        else if(fname === 'defint') {\r\n                            var chunks = chunkAtCommas(e.args),\r\n                                    expr = LaTeX.braces(this.toTeX(chunks[0])),\r\n                                    dx = this.toTeX(chunks[3]),\r\n                                    lb = this.toTeX(chunks[1]),\r\n                                    ub = this.toTeX(chunks[2]);\r\n                            f = '\\\\int\\\\limits_{' + lb + '}^{' + ub + '} ' + expr + '\\\\, d' + dx;\r\n\r\n                        }\r\n                        else if(fname === 'diff') {\r\n                            var chunks = chunkAtCommas(e.args);\r\n                            var dx = '', expr = LaTeX.braces(this.toTeX(chunks[0]));\r\n                            /* Handle cases: one argument provided, we need to guess the variable, and assume n = 1 */\r\n                            if(chunks.length === 1) {\r\n                                var vars = [];\r\n                                for(j = 0; j < chunks[0].length; j++) {\r\n                                    if(chunks[0][j].group === 3) {\r\n                                        vars.push(chunks[0][j].value);\r\n                                    }\r\n                                }\r\n                                vars.sort();\r\n                                dx = vars.length > 0 ? ('\\\\frac{d}{d ' + vars[0] + '}') : '\\\\frac{d}{d x}';\r\n                            }\r\n                            /* If two arguments, we have expression and variable, we assume n = 1 */\r\n                            else if(chunks.length === 2) {\r\n                                dx = '\\\\frac{d}{d ' + chunks[1] + '}';\r\n                            }\r\n                            /* If we have more than 2 arguments, we assume we've got everything */\r\n                            else {\r\n                                dx = '\\\\frac{d^{' + chunks[2] + '}}{d ' + this.toTeX(chunks[1]) + '^{' + chunks[2] + '}}';\r\n                            }\r\n\r\n                            f = dx + '\\\\left(' + expr + '\\\\right)';\r\n\r\n                        }\r\n                        else if(fname === 'sum' || fname === 'product') {\r\n                            // Split e.args into 4 parts based on locations of , symbols.\r\n                            var argSplit = [[], [], [], []], j = 0, i;\r\n                            for(i = 0; i < e.args.length; i++) {\r\n                                if(e.args[i] === ',') {\r\n                                    j++;\r\n                                    continue;\r\n                                }\r\n                                argSplit[j].push(e.args[i]);\r\n                            }\r\n                            // Then build TeX string.\r\n                            f = (fname === 'sum' ? '\\\\sum_' : '\\\\prod_') + LaTeX.braces(this.toTeX(argSplit[1]) + ' = ' + this.toTeX(argSplit[2]));\r\n                            f += '^' + LaTeX.braces(this.toTeX(argSplit[3])) + LaTeX.braces(this.toTeX(argSplit[0]));\r\n                        }\r\n                        else if(fname === 'limit') {\r\n                            var args = chunkAtCommas(e.args).map(function (x) {\r\n                                if(Array.isArray(x))\r\n                                    return _.toTeX(x.join(''));\r\n                                return _.toTeX(String(x));\r\n                            });\r\n                            f = '\\\\lim_' + LaTeX.braces(args[1] + '\\\\to ' + args[2]) + ' ' + LaTeX.braces(args[0]);\r\n                        }\r\n                        else if(fname === FACTORIAL || fname === DOUBLEFACTORIAL) {\r\n                            f = this.toTeX(e.args) + (fname === FACTORIAL ? '!' : '!!');\r\n                        }\r\n                        else {\r\n                            f = LaTeX.latex(e, decimals);\r\n                            //f = '\\\\mathrm'+LaTeX.braces(fname.replace(/_/g, '\\\\_')) + LaTeX.brackets(this.toTeX(e.args), 'parens');\r\n                        }\r\n\r\n                        TeX.push(f);\r\n                    }\r\n                    else {\r\n                        TeX.push(LaTeX.latex(e, decimals));\r\n                    }\r\n                }\r\n                else if(isArray(e)) {\r\n                    TeX.push(LaTeX.brackets(this.toTeX(e)));\r\n                }\r\n                else {\r\n                    if(e === '/')\r\n                        TeX.push(LaTeX.frac(rem_brackets(TeX.pop()), rem_brackets(this.toTeX([obj[++i]]))));\r\n                    else\r\n                        TeX.push(e);\r\n                }\r\n            }\r\n\r\n            return TeX.join(' ');\r\n        };\r\n\r\n//Parser.functions ==============================================================\r\n        /* Although parens is not a \"real\" function it is important in some cases when the\r\n         * symbol must carry parenthesis. Once set you don't have to worry about it anymore\r\n         * as the parser will get rid of it at the first opportunity\r\n         */\r\n        function parens(symbol) {\r\n            if(Settings.PARSE2NUMBER) {\r\n                return symbol;\r\n            }\r\n            return _.symfunction('parens', [symbol]);\r\n        }\r\n\r\n        function abs(symbol) {\r\n\r\n            //|-∞| = ∞\r\n            if(symbol.isInfinity) {\r\n                return Symbol.infinity();\r\n            }\r\n            if(symbol.multiplier.lessThan(0))\r\n                symbol.multiplier.negate();\r\n\r\n            if(symbol.isImaginary()) {\r\n                var re = symbol.realpart();\r\n                var im = symbol.imagpart();\r\n                if(re.isConstant() && im.isConstant())\r\n                    return sqrt(_.add(_.pow(re, new Symbol(2)), _.pow(im, new Symbol(2))));\r\n            }\r\n            else if(isNumericSymbol(symbol) || even(symbol.power)) {\r\n                return symbol;\r\n            }\r\n\r\n            if(symbol.isComposite()) {\r\n                var ms = [];\r\n                symbol.each(function (x) {\r\n                    ms.push(x.multiplier);\r\n                });\r\n                var gcd = Math2.QGCD.apply(null, ms);\r\n                if(gcd.lessThan(0)) {\r\n                    symbol.multiplier = symbol.multiplier.multiply(new Frac(-1));\r\n                    symbol.distributeMultiplier();\r\n                }\r\n            }\r\n\r\n            //convert |n*x| to n*|x|\r\n            var m = _.parse(symbol.multiplier);\r\n            symbol.toUnitMultiplier();\r\n\r\n            return _.multiply(m, _.symfunction(ABS, [symbol]));\r\n        }\r\n        /**\r\n         * The factorial function\r\n         * @param {Symbol} symbol\r\n         * @return {Symbol}\r\n         */\r\n        function factorial(symbol) {\r\n            var retval;\r\n            if(isVector(symbol)) {\r\n                var V = new Vector();\r\n                symbol.each(function (x, i) {\r\n                    //i start at one.\r\n                    V.set(i - 1, factorial(x));\r\n                });\r\n                return V;\r\n            }\r\n            if(isMatrix(symbol)) {\r\n                var M = new Matrix();\r\n                symbol.each(function (x, i, j) {\r\n                    //i start at one.\r\n                    M.set(i, j, factorial(x));\r\n                });\r\n                return M;\r\n            }\r\n            if(Settings.PARSE2NUMBER && symbol.isConstant()) {\r\n                if(isInt(symbol)) {\r\n                    retval = Math2.bigfactorial(symbol);\r\n                }\r\n                else {\r\n                    retval = Math2.gamma(symbol.multiplier.add(new Frac(1)).toDecimal());\r\n                }\r\n\r\n                retval = bigConvert(retval);\r\n                return retval;\r\n            }\r\n            else if(symbol.isConstant()) {\r\n                var den = symbol.getDenom();\r\n                if(den.equals(2)) {\r\n                    var num = symbol.getNum();\r\n                    var a, b, c, n;\r\n\r\n                    if(!symbol.multiplier.isNegative()) {\r\n                        n = _.add(num, new Symbol(1)).multiplier.divide(new Frac(2));\r\n                        a = Math2.bigfactorial(new Frac(2).multiply(n));\r\n                        b = _.pow(new Symbol(4), new Symbol(n)).multiplier.multiply(Math2.bigfactorial(n));\r\n                    }\r\n                    else {\r\n                        n = _.subtract(num.negate(), new Symbol(1)).multiplier.divide(new Frac(2));\r\n                        a = _.pow(new Symbol(-4), new Symbol(n)).multiplier.multiply(Math2.bigfactorial(n));\r\n                        b = Math2.bigfactorial(new Frac(2).multiply(n));\r\n                    }\r\n                    c = a.divide(b);\r\n                    return _.multiply(_.parse('sqrt(pi)'), new Symbol(c));\r\n                }\r\n            }\r\n            return _.symfunction(FACTORIAL, [symbol]);\r\n        }\r\n        ;\r\n        /**\r\n         * Returns the continued fraction of a number\r\n         * @param {Symbol} symbol\r\n         * @param {Symbol} n\r\n         * @returns {Symbol}\r\n         */\r\n        function continued_fraction(symbol, n) {\r\n            var _symbol = evaluate(symbol);\r\n            if(_symbol.isConstant()) {\r\n                var cf = Math2.continuedFraction(_symbol, n);\r\n                //convert the fractions array to a new Vector\r\n                var fractions = Vector.fromArray(cf.fractions.map(function (x) {\r\n                    return new Symbol(x);\r\n                }));\r\n                return Vector.fromArray([new Symbol(cf.sign), new Symbol(cf.whole), fractions]);\r\n            }\r\n            return _.symfunction('continued_fraction', arguments);\r\n        }\r\n        /**\r\n         * Returns the error function\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function erf(symbol) {\r\n            var _symbol = evaluate(symbol);\r\n\r\n            if(_symbol.isConstant()) {\r\n                return Math2.erf(_symbol);\r\n            }\r\n            else if(_symbol.isImaginary()) {\r\n                return complex.erf(symbol);\r\n            }\r\n            return _.symfunction('erf', arguments);\r\n        }\r\n        ;\r\n        /**\r\n         * The mod function\r\n         * @param {Symbol} symbol1\r\n         * @param {Symbol} symbol2\r\n         * @returns {Symbol}\r\n         */\r\n        function mod(symbol1, symbol2) {\r\n            if(symbol1.isConstant() && symbol2.isConstant()) {\r\n                var retval = new Symbol(1);\r\n                retval.multiplier = retval.multiplier.multiply(symbol1.multiplier.mod(symbol2.multiplier));\r\n                return retval;\r\n            }\r\n            //try to see if division has remainder of zero\r\n            var r = _.divide(symbol1.clone(), symbol2.clone());\r\n            if(isInt(r))\r\n                return new Symbol(0);\r\n            return _.symfunction('mod', [symbol1, symbol2]);\r\n        }\r\n        /**\r\n         * A branghing function\r\n         * @param {Boolean} condition\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        function IF(condition, a, b) {\r\n            if(typeof condition !== 'boolean')\r\n                if(isNumericSymbol(condition))\r\n                    condition = !!Number(condition);\r\n            if(condition)\r\n                return a;\r\n            return b;\r\n        }\r\n        /**\r\n         *\r\n         * @param {Matrix|Vector|Set|Collection} obj\r\n         * @param {Symbol} item\r\n         * @returns {Boolean}\r\n         */\r\n        function is_in(obj, item) {\r\n            if(isMatrix(obj)) {\r\n                for(var i = 0, l = obj.rows(); i < l; i++) {\r\n                    for(var j = 0, l2 = obj.cols(); j < l2; j++) {\r\n                        var element = obj.elements[i][j];\r\n                        if(element.equals(item))\r\n                            return new Symbol(1);\r\n                    }\r\n                }\r\n            }\r\n            else if(obj.elements) {\r\n                for(var i = 0, l = obj.elements.length; i < l; i++) {\r\n                    if(obj.elements[i].equals(item))\r\n                        return new Symbol(1);\r\n                }\r\n            }\r\n\r\n            return new Symbol(0);\r\n        }\r\n\r\n        /**\r\n         * A symbolic extension for sinc\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function sinc(symbol) {\r\n            if(Settings.PARSE2NUMBER) {\r\n                if(symbol.isConstant()) {\r\n                    return new Symbol(Math2.sinc(symbol));\r\n                }\r\n                return _.parse(format('sin({0})/({0})', symbol));\r\n            }\r\n            return _.symfunction('sinc', [symbol]);\r\n        }\r\n\r\n        /**\r\n         * A symbolic extension for exp. This will auto-convert all instances of exp(x) to e^x.\r\n         * Thanks @ Happypig375\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function exp(symbol) {\r\n            if(symbol.fname === Settings.LOG && symbol.isLinear()) {\r\n                return _.pow(symbol.args[0], Symbol.create(symbol.multiplier));\r\n            }\r\n            return _.parse(format('e^({0})', symbol));\r\n        }\r\n\r\n        /**\r\n         * Converts value degrees to radians\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function radians(symbol) {\r\n            return _.parse(format('({0})*pi/180', symbol));\r\n        }\r\n\r\n        /**\r\n         * Converts value from radians to degrees\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function degrees(symbol) {\r\n            return _.parse(format('({0})*180/pi', symbol));\r\n        }\r\n\r\n        function nroots(symbol) {\r\n            var a, b;\r\n            if(symbol.group === FN && symbol.fname === '') {\r\n                a = Symbol.unwrapPARENS(_.parse(symbol).toLinear());\r\n                b = _.parse(symbol.power);\r\n            }\r\n            else if(symbol.group === P) {\r\n                a = _.parse(symbol.value);\r\n                b = _.parse(symbol.power);\r\n            }\r\n\r\n            if(a && b && a.group === N && b.group === N) {\r\n                var _roots = [];\r\n                var parts = Symbol.toPolarFormArray(symbol);\r\n                var r = _.parse(a).abs().toString();\r\n                //https://en.wikipedia.org/wiki/De_Moivre%27s_formula\r\n                var x = arg(a).toString();\r\n                var n = b.multiplier.den.toString();\r\n                var p = b.multiplier.num.toString();\r\n\r\n                var formula = \"(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})\";\r\n                for(var i = 0; i < n; i++) {\r\n                    var t = evaluate(_.parse(format(\"(({0})+2*pi*({1}))/({2})\", x, i, n))).multiplier.toDecimal();\r\n                    _roots.push(evaluate(_.parse(format(formula, r, n, Settings.IMAGINARY, t, p))));\r\n                }\r\n                return Vector.fromArray(_roots);\r\n            }\r\n            else if(symbol.isConstant(true)) {\r\n                var sign = symbol.sign();\r\n                var x = evaluate(symbol.abs());\r\n                var root = _.sqrt(x);\r\n\r\n                var _roots = [root.clone(), root.negate()];\r\n\r\n                if(sign < 0)\r\n                    _roots = _roots.map(function (x) {\r\n                        return _.multiply(x, Symbol.imaginary());\r\n                    });\r\n            }\r\n            else {\r\n                _roots = [_.parse(symbol)];\r\n            }\r\n\r\n            return Vector.fromArray(_roots);\r\n        }\r\n\r\n        /**\r\n         * Rationalizes a symbol\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function rationalize(symbol) {\r\n            if(symbol.isComposite()) {\r\n                var retval = new Symbol(0);\r\n                var num, den, retnum, retden, a, b, n, d;\r\n                symbol.each(function (x) {\r\n                    num = x.getNum();\r\n                    den = x.getDenom();\r\n                    retnum = retval.getNum();\r\n                    retden = retval.getDenom();\r\n                    a = _.multiply(den, retnum);\r\n                    b = _.multiply(num, retden);\r\n                    n = _.expand(_.add(a, b));\r\n                    d = _.multiply(retden, den);\r\n                    retval = _.divide(n, d);\r\n                }, true);\r\n\r\n                return retval;\r\n            }\r\n            return symbol;\r\n        }\r\n\r\n        /**\r\n         * The square root function\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function sqrt(symbol) {\r\n            if(!isSymbol(symbol)) {\r\n                symbol = _.parse(symbol);\r\n            }\r\n            \r\n            // Exit early for EX\r\n            if(symbol.group === EX) {\r\n                return _.symfunction(SQRT, [symbol]);\r\n            }\r\n\r\n            if(symbol.fname === '' && symbol.power.equals(1))\r\n                symbol = symbol.args[0];\r\n\r\n            var is_negative = symbol.multiplier.sign() < 0;\r\n\r\n            if(Settings.PARSE2NUMBER) {\r\n                if(symbol.isConstant() && !is_negative) {\r\n                    return new Symbol(bigDec.sqrt(symbol.multiplier.toDecimal()));\r\n                }\r\n                else if(symbol.isImaginary()) {\r\n                    return complex.sqrt(symbol);\r\n                }\r\n                else if(symbol.group === S) {\r\n                    return _.symfunction('sqrt', [symbol]);\r\n                }\r\n            }\r\n\r\n            var img, retval,\r\n                    isConstant = symbol.isConstant();\r\n\r\n            if(symbol.group === CB && symbol.isLinear()) {\r\n                var m = sqrt(Symbol(symbol.multiplier));\r\n                for(var s in symbol.symbols) {\r\n                    var x = symbol.symbols[s];\r\n                    m = _.multiply(m, sqrt(x));\r\n                }\r\n\r\n                retval = m;\r\n            }\r\n            //if the symbol is already sqrt then it's that symbol^(1/4) and we can unwrap it\r\n            else if(symbol.fname === SQRT) {\r\n                var s = symbol.args[0];\r\n                var ms = symbol.multiplier;\r\n                s.setPower(symbol.power.multiply(new Frac(0.25)));\r\n                retval = s;\r\n                //grab the multiplier\r\n                if(!ms.equals(1))\r\n                    retval = _.multiply(sqrt(_.parse(ms)), retval);\r\n            }\r\n            //if the symbol is a fraction then we don't keep can unwrap it. For instance\r\n            //no need to keep sqrt(x^(1/3))\r\n            else if(!symbol.power.isInteger()) {\r\n                symbol.setPower(symbol.power.multiply(new Frac(0.5)));\r\n                retval = symbol;\r\n            }\r\n            else if(symbol.multiplier < 0 && symbol.group === S) {\r\n                var a = _.parse(symbol.multiplier).negate();\r\n                var b = _.parse(symbol).toUnitMultiplier().negate();\r\n                retval = _.multiply(_.symfunction(Settings.SQRT, [b]), sqrt(a));\r\n            }\r\n            else {\r\n\r\n                //Related to issue #401. Since sqrt(a)*sqrt(b^-1) relates in issues, we'll change the form\r\n                //to sqrt(a)*sqrt(b)^1 for better simplification\r\n                //the sign of the power\r\n                var sign = symbol.power.sign();\r\n                //remove the sign\r\n                symbol.power = symbol.power.abs();\r\n\r\n                //if the symbols is imagary then we place in the imaginary part. We'll return it\r\n                //as a product\r\n                if(isConstant && symbol.multiplier.lessThan(0)) {\r\n                    img = Symbol.imaginary();\r\n                    symbol.multiplier = symbol.multiplier.abs();\r\n                }\r\n\r\n                var q = symbol.multiplier.toDecimal(),\r\n                        qa = Math.abs(q),\r\n                        t = Math.sqrt(qa);\r\n\r\n                var m;\r\n                //it's a perfect square so take the square\r\n                if(isInt(t)) {\r\n                    m = new Symbol(t);\r\n                }\r\n                else if(isInt(q)) {\r\n                    var factors = Math2.ifactor(q);\r\n                    var tw = 1;\r\n                    for(var x in factors) {\r\n                        var n = factors[x],\r\n                                nn = (n - (n % 2)); //get out the whole numbers\r\n                        if(nn) { //if there is a whole number ...\r\n                            var w = Math.pow(x, nn);\r\n                            tw *= Math.pow(x, nn / 2); //add to total wholes\r\n                            q /= w; //reduce the number by the wholes\r\n                        }\r\n                    }\r\n                    m = _.multiply(_.symfunction(SQRT, [new Symbol(q)]), new Symbol(tw));\r\n                }\r\n                else {\r\n                    //reduce the numerator and denominator using prime factorization\r\n                    var c = [new Symbol(symbol.multiplier.num), new Symbol(symbol.multiplier.den)];\r\n                    var r = [new Symbol(1), new Symbol(1)];\r\n                    var sq = [new Symbol(1), new Symbol(1)];\r\n                    for(var i = 0; i < 2; i++) {\r\n                        var n = c[i];\r\n                        //get the prime factors and loop through each.\r\n                        pfactor(n).each(function (x) {\r\n                            x = Symbol.unwrapPARENS(x);\r\n                            var b = x.clone().toLinear();\r\n                            var p = Number(x.power);\r\n                            //We'll consider it safe to use the native Number since 2^1000 is already a pretty huge number\r\n                            var rem = p % 2; //get the remainder. This will be 1 if 3 since sqrt(n^2) = n where n is positive\r\n                            var w = (p - rem) / 2; //get the whole numbers of n/2\r\n                            r[i] = _.multiply(r[i], _.pow(b, new Symbol(w)));\r\n                            sq[i] = _.multiply(sq[i], sqrt(_.pow(b, new Symbol(rem))));\r\n                        });\r\n                    }\r\n                    m = _.divide(_.multiply(r[0], sq[0]), _.multiply(r[1], sq[1]));\r\n                }\r\n\r\n\r\n                //strip the multiplier since we already took the sqrt\r\n                symbol = symbol.toUnitMultiplier(true);\r\n                //if the symbol is one just return one and not the sqrt function\r\n                if(symbol.isOne()) {\r\n                    retval = symbol;\r\n                }\r\n                else if(even(symbol.power.toString())) {\r\n                    //just raise it to the 1/2\r\n                    retval = _.pow(symbol.clone(), new Symbol(0.5));\r\n                }\r\n                else {\r\n                    retval = _.symfunction(SQRT, [symbol]);\r\n                }\r\n\r\n                //put back the sign that was removed earlier\r\n                if(sign < 0)\r\n                    retval.power.negate();\r\n\r\n                if(m)\r\n                    retval = _.multiply(m, retval);\r\n\r\n                if(img)\r\n                    retval = _.multiply(img, retval);\r\n            }\r\n\r\n            if(is_negative && Settings.PARSE2NUMBER)\r\n                return _.parse(retval);\r\n\r\n            return retval;\r\n        }\r\n\r\n        /**\r\n         * The cube root function\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function cbrt(symbol) {\r\n            if(!symbol.isConstant(true)) {\r\n                var retval;\r\n\r\n                var n = symbol.power / 3;\r\n                //take the cube root of the multplier\r\n                var m = _.pow(_.parse(symbol.multiplier), new Symbol(1 / 3));\r\n                //strip the multiplier\r\n                var sym = symbol.toUnitMultiplier();\r\n\r\n                //simplify the power\r\n                if(isInt(n)) {\r\n                    retval = _.pow(sym.toLinear(), _.parse(n));\r\n                }\r\n                else {\r\n                    if(sym.group === CB) {\r\n                        retval = new Symbol(1);\r\n                        sym.each(function (x) {\r\n                            retval = _.multiply(retval, cbrt(x));\r\n                        });\r\n                    }\r\n                    else {\r\n                        retval = _.symfunction('cbrt', [sym]);\r\n                    }\r\n                }\r\n\r\n                return _.multiply(m, retval);\r\n            }\r\n            return nthroot(symbol, new Symbol(3));\r\n        }\r\n\r\n        function scientific(symbol, sigfigs) {\r\n            //Just set the flag and keep it moving. Symbol.toString will deal with how to\r\n            //display this\r\n            symbol.scientific = sigfigs || 10;\r\n            return symbol;\r\n        }\r\n\r\n        /**\r\n         *\r\n         * @param {Symbol} num - the number being raised\r\n         * @param {Symbol} p - the exponent\r\n         * @param {type} prec - the precision wanted\r\n         * @param {bool} asbig - true if a bigDecimal is wanted\r\n         * @returns {Symbol}\r\n         */\r\n        function nthroot(num, p, prec, asbig) {\r\n            //clone p and convert to a number if possible\r\n            p = evaluate(_.parse(p));\r\n\r\n            //cannot calculate if p = 0. nthroot(0, 0) => 0^(1/0) => undefined\r\n            if(p.equals(0)) {\r\n                throw new UndefinedError('Unable to calculate nthroots of zero');\r\n            }\r\n\r\n            //Stop computation if it negative and even since we have an imaginary result\r\n            if(num < 0 && even(p))\r\n                throw new Error('Cannot calculate nthroot of negative number for even powers');\r\n\r\n            //return non numeric values unevaluated\r\n            if(!num.isConstant(true)) {\r\n                return _.symfunction('nthroot', arguments);\r\n            }\r\n\r\n            //evaluate numeric values\r\n            if(num.group !== N) {\r\n                num = evaluate(num);\r\n            }\r\n\r\n            //default is to return a big value\r\n            if(typeof asbig === 'undefined')\r\n                asbig = true;\r\n\r\n            prec = prec || 25;\r\n\r\n            var sign = num.sign();\r\n            var retval;\r\n            var ans;\r\n\r\n            if(sign < 0) {\r\n                num = abs(num); //remove the sign\r\n            }\r\n\r\n            if(isInt(num) && p.isConstant()) {\r\n\r\n                if(num < 18446744073709551616) {\r\n                    //2^64\r\n                    ans = Frac.create(Math.pow(num, 1 / p));\r\n                }\r\n                else {\r\n                    ans = Math2.nthroot(num, p);\r\n                }\r\n\r\n                var retval;\r\n                if(asbig) {\r\n                    retval = new Symbol(ans);\r\n                }\r\n                retval = new Symbol(ans.toDecimal(prec));\r\n\r\n                return _.multiply(new Symbol(sign), retval);\r\n            }\r\n        }\r\n\r\n        function pfactor(symbol) {\r\n            //Fix issue #458 | nerdamer(\"sqrt(1-(3.3333333550520926e-7)^2)\").evaluate().text()\r\n            //More Big Number issues >:(\r\n            if(symbol.greaterThan(9.999999999998891e+41) || symbol.equals(-1))\r\n                return symbol;\r\n            //Fix issue #298\r\n            if(symbol.equals(Math.PI))\r\n                return new Symbol(Math.PI);\r\n            //evaluate the symbol to merge constants\r\n            symbol = evaluate(symbol.clone());\r\n\r\n            if(symbol.isConstant()) {\r\n                var retval = new Symbol(1);\r\n                var m = symbol.toString();\r\n                if(isInt(m)) {\r\n                    var factors = Math2.ifactor(m);\r\n                    for(var factor in factors) {\r\n                        var p = factors[factor];\r\n                        retval = _.multiply(retval, _.symfunction('parens', [new Symbol(factor).setPower(new Frac(p))]));\r\n                    }\r\n                }\r\n                else {\r\n                    var n = pfactor(new Symbol(symbol.multiplier.num));\r\n                    var d = pfactor(new Symbol(symbol.multiplier.den));\r\n                    retval = _.multiply(_.symfunction('parens', [n]), _.symfunction('parens', [d]).invert());\r\n                }\r\n            }\r\n            else\r\n                retval = _.symfunction('pfactor', arguments);\r\n            return retval;\r\n        }\r\n\r\n        /**\r\n         * Get's the real part of a complex number. Return number if real\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function realpart(symbol) {\r\n            return symbol.realpart();\r\n        }\r\n\r\n        /**\r\n         * Get's the imaginary part of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function imagpart(symbol) {\r\n            return symbol.imagpart();\r\n        }\r\n\r\n        /**\r\n         * Computes the conjugate of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function conjugate(symbol) {\r\n            var re = symbol.realpart();\r\n            var im = symbol.imagpart();\r\n            return _.add(re, _.multiply(im.negate(), Symbol.imaginary()));\r\n        }\r\n\r\n        /**\r\n         * Returns the arugment of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function arg(symbol) {\r\n            var re = symbol.realpart();\r\n            var im = symbol.imagpart();\r\n            if(re.isConstant() && im.isConstant())\r\n                return new Symbol(Math.atan2(im, re));\r\n            return _.symfunction('atan2', [im, re]);\r\n        }\r\n\r\n        /**\r\n         * Returns the arugment of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function arg(symbol) {\r\n            var re = symbol.realpart();\r\n            var im = symbol.imagpart();\r\n            if(re.isConstant() && im.isConstant()) {\r\n                if(im.equals(0) && re.equals(-1)) {\r\n                    return _.parse('pi');\r\n                }\r\n                else if(im.equals(1) && re.equals(0)) {\r\n                    return _.parse('pi/2');\r\n                }\r\n                else if(im.equals(1) && re.equals(1)) {\r\n                    return _.parse('pi/4');\r\n                }\r\n                return new Symbol(Math.atan2(im, re));\r\n            }\r\n            return _.symfunction('atan2', [im, re]);\r\n        }\r\n\r\n        /**\r\n         * Returns the polarform of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function polarform(symbol) {\r\n            var p, r, e, theta;\r\n            p = Symbol.toPolarFormArray(symbol);\r\n            theta = p[1];\r\n            r = p[0];\r\n            e = _.parse(format('e^({0}*({1}))', Settings.IMAGINARY, theta));\r\n            return _.multiply(r, e);\r\n        }\r\n\r\n        /**\r\n         * Returns the rectangular form of a complex number. Does not work for symbolic coefficients\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function rectform(symbol) {\r\n            //TODO: e^((i*pi)/4)\r\n            var original = symbol.clone();\r\n            try {\r\n                var f, p, q, s, h, d, n;\r\n                f = decompose_fn(symbol, 'e', true);\r\n                p = _.divide(f.x.power, Symbol.imaginary());\r\n                q = evaluate(trig.tan(p));\r\n                s = _.pow(f.a, new Symbol(2));\r\n                d = q.getDenom(true);\r\n                n = q.getNum();\r\n                h = Symbol.hyp(n, d);\r\n                //check\r\n                if(h.equals(f.a)) {\r\n                    return _.add(d, _.multiply(Symbol.imaginary(), n));\r\n                }\r\n                else {\r\n                    return original;\r\n                }\r\n            }\r\n            catch(e) {\r\n                return original;\r\n            }\r\n        }\r\n\r\n        function symMinMax(f, args) {\r\n            args.map(function (x) {\r\n                x.numVal = evaluate(x).multiplier;\r\n            });\r\n            var l, a, b, a_val, b_val;\r\n            while(true) {\r\n                l = args.length;\r\n                if(l < 2)\r\n                    return args[0];\r\n                a = args.pop();\r\n                b = args[l - 2];\r\n                if(f === 'min' ? a.numVal < b.numVal : a.numVal > b.numVal) {\r\n                    args.pop();\r\n                    args.push(a);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Returns maximum of a set of numbers\r\n         * @returns {Symbol}\r\n         */\r\n        function max() {\r\n            var args = [].slice.call(arguments);\r\n            if(allSame(args))\r\n                return args[0];\r\n            if(allNumbers(args))\r\n                return new Symbol(Math.max.apply(null, args));\r\n            if(Settings.SYMBOLIC_MIN_MAX && allConstants(args))\r\n                return symMinMax('max', args);\r\n            return _.symfunction('max', args);\r\n        }\r\n\r\n        /**\r\n         * Returns minimum of a set of numbers\r\n         * @returns {Symbol}\r\n         */\r\n        function min() {\r\n            var args = [].slice.call(arguments);\r\n            if(allSame(args))\r\n                return args[0];\r\n            if(allNumbers(args))\r\n                return new Symbol(Math.min.apply(null, args));\r\n            if(Settings.SYMBOLIC_MIN_MAX && allConstants(args))\r\n                return symMinMax('min', args);\r\n            return _.symfunction('min', args);\r\n        }\r\n\r\n        /**\r\n         * Returns the sign of a number\r\n         * @param {Symbol} x\r\n         * @returns {Symbol}\r\n         */\r\n        function sign(x) {\r\n            if(x.isConstant(true))\r\n                return new Symbol(Math.sign(evaluate(x)));\r\n            return _.symfunction('sign', arguments);\r\n        }\r\n\r\n        function sort(symbol, opt) {\r\n            opt = opt ? opt.toString() : 'asc';\r\n            var getval = function (e) {\r\n                if(e.group === N)\r\n                    return e.multiplier;\r\n                if(e.group === FN) {\r\n                    if(e.fname === '')\r\n                        return getval(e.args[0]);\r\n                    return e.fname;\r\n                }\r\n                if(e.group === S)\r\n                    return e.power;\r\n\r\n                return e.value;\r\n            };\r\n            var symbols = isVector(symbol) ? symbol.elements : symbol.collectSymbols();\r\n            return new Vector(symbols.sort(function (a, b) {\r\n                var aval = getval(a),\r\n                        bval = getval(b);\r\n                if(opt === 'desc')\r\n                    return bval - aval;\r\n                return aval - bval;\r\n            }));\r\n        }\r\n\r\n        /**\r\n         * The log function\r\n         * @param {Symbol} symbol\r\n         * @param {Symbol} base\r\n         * @returns {Symbol}\r\n         */\r\n        function log(symbol, base) {\r\n\r\n            if(symbol.equals(1)) {\r\n                return new Symbol(0);\r\n            }\r\n\r\n            var retval;\r\n\r\n            if(symbol.fname === SQRT && symbol.multiplier.equals(1)) {\r\n                retval = _.divide(log(symbol.args[0]), new Symbol(2));\r\n\r\n                if(symbol.power.sign() < 0) {\r\n                    retval.negate();\r\n                }\r\n\r\n                // Exit early\r\n                return retval;\r\n            }\r\n\r\n            //log(0) is undefined so complain\r\n            if(symbol.equals(0)) {\r\n                throw new UndefinedError(Settings.LOG + '(0) is undefined!');\r\n            }\r\n\r\n            //deal with imaginary values\r\n            if(symbol.isImaginary()) {\r\n                return complex.evaluate(symbol, Settings.LOG);\r\n            }\r\n\r\n            if(symbol.isConstant() && typeof base !== 'undefined' && base.isConstant()) {\r\n                var log_sym = Math.log(symbol);\r\n                var log_base = Math.log(base);\r\n                retval = new Symbol(log_sym / log_base);\r\n            }\r\n            else if(symbol.group === EX && symbol.power.multiplier.lessThan(0) || symbol.power.toString() === '-1') {\r\n                symbol.power.negate();\r\n                //move the negative outside but keep the positive inside :)\r\n                retval = log(symbol).negate();\r\n            }\r\n            else if(symbol.value === 'e' && symbol.multiplier.equals(1)) {\r\n                var p = symbol.power;\r\n                retval = isSymbol(p) ? p : new Symbol(p);\r\n            }\r\n            else if(symbol.group === FN && symbol.fname === 'exp') {\r\n                var s = symbol.args[0];\r\n                if(symbol.multiplier.equals(1))\r\n                    retval = _.multiply(s, new Symbol(symbol.power));\r\n                else\r\n                    retval = _.symfunction(Settings.LOG, [symbol]);\r\n            }\r\n            else if(Settings.PARSE2NUMBER && isNumericSymbol(symbol)) {\r\n                // Parse for safety.\r\n                symbol = _.parse(symbol);\r\n\r\n                var img_part;\r\n                if(symbol.multiplier.lessThan(0)) {\r\n                    symbol.negate();\r\n                    img_part = _.multiply(new Symbol(Math.PI), new Symbol('i'));\r\n                }\r\n\r\n                retval = new Symbol(Math.log(symbol.multiplier.toDecimal()));\r\n\r\n                if(img_part) {\r\n                    retval = _.add(retval, img_part);\r\n                }\r\n\r\n            }\r\n            else {\r\n                var s;\r\n                if(!symbol.power.equals(1) && !symbol.contains('e')) {\r\n                    s = symbol.group === EX ? symbol.power : new Symbol(symbol.power);\r\n                    symbol.toLinear();\r\n                }\r\n                //log(a,a) = 1 since the base is allowed to be changed.\r\n                //This was pointed out by Happypig375 in issue #280\r\n                if(arguments.length > 1 && allSame(arguments)) {\r\n                    retval = new Symbol(1);\r\n                }\r\n                else {\r\n                    retval = _.symfunction(Settings.LOG, arguments);\r\n                }\r\n\r\n                if(s)\r\n                    retval = _.multiply(s, retval);\r\n            }\r\n\r\n            return retval;\r\n        }\r\n\r\n        /**\r\n         * Round a number up to s decimal places\r\n         * @param {Number} x\r\n         * @param {int} s - the number of decimal places\r\n         * @returns {undefined}\r\n         */\r\n        function round(x, s) {\r\n            var sIsConstant = s && s.isConstant() || typeof s === 'undefined';\r\n            if(x.isConstant() && sIsConstant) {\r\n                var v, e, exp, retval;\r\n                v = x;\r\n                //round the coefficient of then number but not the actual decimal value\r\n                //we know this because a negative number was passed\r\n                if(s && s.lessThan(0)) {\r\n                    s = abs(s);\r\n                    //convert the number to exponential form\r\n                    e = Number(x).toExponential().toString().split('e');\r\n                    //point v to the coefficient of then number\r\n                    v = e[0];\r\n                    //set the expontent\r\n                    exp = e[1];\r\n                }\r\n                //round the number to the requested precision\r\n                retval = new Symbol(nround(v, Number(s || 0)));\r\n                //if there's a exponent then put it back\r\n                return _.multiply(retval, _.pow(new Symbol(10), new Symbol(exp || 0)))\r\n            }\r\n\r\n\r\n            return _.symfunction('round', arguments);\r\n        }\r\n\r\n        /**\r\n         * Gets the quadrant of the trig function\r\n         * @param {Frac} m\r\n         * @returns {Int}\r\n         */\r\n        function getQuadrant(m) {\r\n            var v = m % 2, quadrant;\r\n\r\n            if(v < 0)\r\n                v = 2 + v; //put it in terms of pi\r\n\r\n            if(v >= 0 && v <= 0.5)\r\n                quadrant = 1;\r\n            else if(v > 0.5 && v <= 1)\r\n                quadrant = 2;\r\n            else if(v > 1 && v <= 1.5)\r\n                quadrant = 3;\r\n            else\r\n                quadrant = 4;\r\n            return quadrant;\r\n        }\r\n\r\n        /*\r\n         * Serves as a bridge between numbers and bigNumbers\r\n         * @param {Frac|Number} n\r\n         * @returns {Symbol}\r\n         */\r\n        function bigConvert(n) {\r\n            if(!isFinite(n)) {\r\n                var sign = Math.sign(n);\r\n                var r = new Symbol(String(Math.abs(n)));\r\n                r.multiplier = r.multiplier.multiply(new Frac(sign));\r\n                return r;\r\n            }\r\n            if(isSymbol(n))\r\n                return n;\r\n            if(typeof n === 'number') {\r\n                try {\r\n                    n = Frac.simple(n);\r\n                }\r\n                catch(e) {\r\n                    n = new Frac(n);\r\n                }\r\n            }\r\n\r\n            var symbol = new Symbol(0);\r\n            symbol.multiplier = n;\r\n            return symbol;\r\n        }\r\n        ;\r\n\r\n        function clean(symbol) {\r\n            // handle functions with numeric values\r\n            // handle denominator within denominator\r\n            // handle trig simplifications\r\n            var g = symbol.group, retval;\r\n            //Now let's get to work\r\n            if(g === CP) {\r\n                var num = symbol.getNum(),\r\n                        den = symbol.getDenom() || new Symbol(1),\r\n                        p = Number(symbol.power),\r\n                        factor = new Symbol(1);\r\n                if(Math.abs(p) === 1) {\r\n                    den.each(function (x) {\r\n                        if(x.group === CB) {\r\n                            factor = _.multiply(factor, clean(x.getDenom()));\r\n                        }\r\n                        else if(x.power.lessThan(0)) {\r\n                            factor = _.multiply(factor, clean(x.clone().toUnitMultiplier()));\r\n                        }\r\n                    });\r\n\r\n                    var new_den = new Symbol(0);\r\n                    //now divide out the factor and add to new den\r\n                    den.each(function (x) {\r\n                        new_den = _.add(_.divide(x, factor.clone()), new_den);\r\n                    });\r\n\r\n                    factor.invert(); //invert so it can be added to the top\r\n                    var new_num;\r\n                    if(num.isComposite()) {\r\n                        new_num = new Symbol(0);\r\n                        num.each(function (x) {\r\n                            new_num = _.add(_.multiply(clean(x), factor.clone()), new_num);\r\n                        });\r\n                    }\r\n                    else\r\n                        new_num = _.multiply(factor, num);\r\n\r\n                    retval = _.divide(new_num, new_den);\r\n                }\r\n            }\r\n            else if(g === CB) {\r\n                retval = new Symbol(1);\r\n                symbol.each(function (x) {\r\n                    retval = _.multiply(retval, _.clean(x));\r\n                });\r\n            }\r\n            else if(g === FN) {\r\n                if(symbol.args.length === 1 && symbol.args[0].isConstant())\r\n                    retval = block('PARSE2NUMBER', function () {\r\n                        return _.parse(symbol);\r\n                    }, true);\r\n            }\r\n\r\n            if(!retval)\r\n                retval = symbol;\r\n\r\n            return retval;\r\n        }\r\n\r\n        /**\r\n         * A wrapper for the expand function\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function expandall(symbol, opt) {\r\n            opt = opt || {\r\n                expand_denominator: true,\r\n                expand_functions: true\r\n            };\r\n            return expand(symbol, opt);\r\n        }\r\n        /**\r\n         * Expands a symbol\r\n         * @param symbol\r\n         */\r\n        // Old expand\r\n        function expand(symbol, opt) {\r\n            if(Array.isArray(symbol)) {\r\n                return symbol.map(function (x) {\r\n                    return expand(x, opt);\r\n                });\r\n            }\r\n            opt = opt || {};\r\n            //deal with parenthesis\r\n            if(symbol.group === FN && symbol.fname === '') {\r\n                var f = expand(symbol.args[0], opt);\r\n                var x = expand(_.pow(f, _.parse(symbol.power)), opt);\r\n                return _.multiply(_.parse(symbol.multiplier), x).distributeMultiplier();\r\n            }\r\n            // We can expand these groups so no need to waste time. Just return and be done.\r\n            if([N, P, S].indexOf(symbol.group) !== -1) {\r\n                return symbol; //nothing to do\r\n            }\r\n\r\n            var original = symbol.clone();\r\n\r\n            // Set up a try-catch block. If anything goes wrong then we simply return the original symbol\r\n            try {\r\n                // Store the power and multiplier\r\n                var m = symbol.multiplier.toString();\r\n                var p = Number(symbol.power);\r\n                var retval = symbol;\r\n\r\n                // Handle (a+b)^2 | (x+x^2)^2\r\n                if(symbol.isComposite() && isInt(symbol.power) && symbol.power > 0) {\r\n                    var n = p - 1;\r\n                    // Strip the expression of it's multiplier and power. We'll call it f. The power will be p and the multiplier m.\r\n                    var f = new Symbol(0);\r\n\r\n                    symbol.each(function (x) {\r\n                        f = _.add(f, expand(_.parse(x), opt));\r\n                    });\r\n\r\n                    var expanded = _.parse(f);\r\n\r\n                    for(var i = 0; i < n; i++) {\r\n                        expanded = mix(expanded, f, opt);\r\n                    }\r\n\r\n                    retval = _.multiply(_.parse(m), expanded).distributeMultiplier();\r\n                }\r\n                else if(symbol.group === FN && opt.expand_functions === true) {\r\n                    var args = [];\r\n                    // Expand function the arguments\r\n                    symbol.args.forEach(function (x) {\r\n                        args.push(expand(x, opt));\r\n                    });\r\n                    // Put back the power and multiplier\r\n                    retval = _.pow(_.symfunction(symbol.fname, args), _.parse(symbol.power));\r\n                    retval = _.multiply(retval, _.parse(symbol.multiplier));\r\n                }\r\n                else if(symbol.isComposite() && isInt(symbol.power) && symbol.power < 0 && opt.expand_denominator === true) {\r\n                    // Invert it. Expand it and then re-invert it.\r\n                    symbol = symbol.invert();\r\n                    retval = expand(symbol, opt);\r\n                    retval.invert();\r\n                }\r\n                else if(symbol.group === CB) {\r\n                    var rank = function (s) {\r\n                        switch(s.group) {\r\n                            case CP:\r\n                                return 0;\r\n                            case PL:\r\n                                return 1;\r\n                            case CB:\r\n                                return 2;\r\n                            case FN:\r\n                                return 3;\r\n                            default:\r\n                                return 4;\r\n                        }\r\n                    };\r\n                    // Consider (a+b)(c+d). The result will be (a*c+a*d)+(b*c+b*d).\r\n                    // We start by moving collecting the symbols. We want others>FN>CB>PL>CP\r\n                    var symbols = symbol.collectSymbols().sort(function (a, b) {\r\n                        return rank(b) - rank(a);\r\n                    })\r\n                            // Distribute the power to each symbol and expand\r\n                            .map(function (s) {\r\n                                var x = _.pow(s, _.parse(p));\r\n                                var e = expand(x, opt);\r\n                                return e;\r\n                            });\r\n\r\n                    var f = symbols.pop();\r\n\r\n                    // If the first symbols isn't a composite then we're done\r\n                    if(f.isComposite() && f.isLinear()) {\r\n                        symbols.forEach(function (s) {\r\n                            f = mix(f, s, opt);\r\n                        });\r\n\r\n                        // If f is of group PL or CP then we can expand some more\r\n                        if(f.isComposite()) {\r\n                            if(f.power > 1) {\r\n                                f = expand(_.pow(f, _.parse(f.power)), opt);\r\n                            }\r\n                            // Put back the multiplier\r\n                            retval = _.multiply(_.parse(m), f).distributeMultiplier();\r\n                            ;\r\n                        }\r\n                        else {\r\n                            // Everything is expanded at this point so if it's still a CB\r\n                            // then just return the symbol\r\n                            retval = f;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Just multiply back in the expanded form of each\r\n                        retval = f;\r\n                        symbols.forEach(function (s) {\r\n                            retval = _.multiply(retval, s);\r\n                        });\r\n                        // Put back the multiplier\r\n                        retval = _.multiply(retval, _.parse(m)).distributeMultiplier();\r\n                    }\r\n\r\n                    // TODO: This exists solely as a quick fix for sqrt(11)*sqrt(33) not simplifying.\r\n                    if(retval.group === CB) {\r\n                        retval = _.parse(retval);\r\n                    }\r\n                }\r\n                else {\r\n                    // Otherwise just return the expression\r\n                    retval = symbol;\r\n                }\r\n                // Final cleanup and return\r\n                return retval;\r\n            }\r\n            catch(e) {\r\n                return original;\r\n            }\r\n\r\n            return original;\r\n        }\r\n\r\n        /**\r\n         * Returns an identity matrix of nxn\r\n         * @param {Number} n\r\n         * @returns {Matrix}\r\n         */\r\n        function imatrix(n) {\r\n            return Matrix.identity(n);\r\n        }\r\n\r\n        /**\r\n         * Retrieves and item from a vector\r\n         * @param {Vector} vector\r\n         * @param {Number} index\r\n         * @returns {Vector|Symbol}\r\n         */\r\n        function vecget(vector, index) {\r\n            if(index.isConstant() && isInt(index))\r\n                return vector.elements[index];\r\n            return _.symfunction('vecget', arguments);\r\n        }\r\n\r\n        /**\r\n         * Removes duplicates from a vector\r\n         * @param {Vector} vector\r\n         * @param {Number} tolerance\r\n         * @returns {Vector}\r\n         */\r\n        function vectrim(vector, tolerance) {\r\n            tolerance = typeof tolerance === 'undefined' ? 1e-14 : tolerance;\r\n\r\n            vector = vector.clone();\r\n\r\n            tolerance = Number(tolerance);\r\n            //place algebraic solutions first\r\n            vector.elements.sort(function (a, b) {\r\n                return b.group - a.group;\r\n            });\r\n            //depending on the start point we may have duplicates so we need to clean those up a bit.\r\n            //start by creating an object with the solution and the numeric value. This way we don't destroy algebraic values\r\n            vector.elements = removeDuplicates(vector.elements, function (a, b) {\r\n                var diff = Number(_.subtract(evaluate(a), evaluate(b)).abs());\r\n                return diff <= tolerance;\r\n            });\r\n\r\n            return vector;\r\n        }\r\n\r\n        /**\r\n         * Set a value for a vector at a given index\r\n         * @param {Vector} vector\r\n         * @param {Number} index\r\n         * @param {Symbol} value\r\n         * @returns {Vector}\r\n         */\r\n        function vecset(vector, index, value) {\r\n            if(!index.isConstant)\r\n                return _.symfunction('vecset', arguments);\r\n            vector.elements[index] = value;\r\n            return vector;\r\n        }\r\n\r\n        function matget(matrix, i, j) {\r\n            if(i.isConstant() && j.isConstant())\r\n                return matrix.elements[i][j];\r\n            return _.symfunction('matget', arguments);\r\n        }\r\n\r\n        function matgetrow(matrix, i) {\r\n            if(i.isConstant())\r\n                return new Matrix(matrix.elements[i]);\r\n            return _.symfunction('matgetrow', arguments);\r\n        }\r\n\r\n        function matsetrow(matrix, i, x) {\r\n            //handle symbolics\r\n            if(!i.isConstant())\r\n                return _.symfunction('matsetrow', arguments);\r\n            if(matrix.elements[i].length !== x.elements.length)\r\n                throw new DimensionError('Matrix row must match row dimensions!');\r\n            var M = matrix.clone();\r\n            M.elements[i] = x.clone().elements;\r\n            return M;\r\n        }\r\n\r\n        function matgetcol(matrix, col_index) {\r\n            //handle symbolics\r\n            if(!col_index.isConstant())\r\n                return _.symfunction('matgetcol', arguments);\r\n            col_index = Number(col_index);\r\n            var M = Matrix.fromArray([]);\r\n            matrix.each(function (x, i, j) {\r\n                if(j === col_index) {\r\n                    M.elements.push([x.clone()]);\r\n                }\r\n            });\r\n            return M;\r\n        }\r\n\r\n        function matsetcol(matrix, j, col) {\r\n            //handle symbolics\r\n            if(!j.isConstant())\r\n                return _.symfunction('matsetcol', arguments);\r\n            j = Number(j);\r\n            if(matrix.rows() !== col.elements.length)\r\n                throw new DimensionError('Matrix columns must match number of columns!');\r\n            col.each(function (x, i) {\r\n                matrix.set(i - 1, j, x.elements[0].clone());\r\n            });\r\n            return matrix;\r\n        }\r\n\r\n\r\n        function matset(matrix, i, j, value) {\r\n            matrix.elements[i][j] = value;\r\n            return matrix;\r\n        }\r\n\r\n        //the constructor for vectors\r\n        function vector() {\r\n            return new Vector([].slice.call(arguments));\r\n        }\r\n\r\n        //the constructor for matrices\r\n        function matrix() {\r\n            return Matrix.fromArray(arguments);\r\n        }\r\n\r\n        //the constructor for sets\r\n        function set() {\r\n            return Set.fromArray(arguments);\r\n        }\r\n\r\n        function determinant(symbol) {\r\n            if(isMatrix(symbol)) {\r\n                return symbol.determinant();\r\n            }\r\n            return symbol;\r\n        }\r\n\r\n        function size(symbol) {\r\n            var retval;\r\n            if(isMatrix(symbol))\r\n                retval = [new Symbol(symbol.cols()), new Symbol(symbol.rows())];\r\n            else if(isVector(symbol) || isSet(symbol))\r\n                retval = new Symbol(symbol.elements.length);\r\n            else\r\n                err('size expects a matrix or a vector');\r\n            return retval;\r\n        }\r\n\r\n        function dot(vec1, vec2) {\r\n            if(isVector(vec1) && isVector(vec2))\r\n                return vec1.dot(vec2);\r\n            err('function dot expects 2 vectors');\r\n        }\r\n\r\n        function cross(vec1, vec2) {\r\n            if(isVector(vec1) && isVector(vec2))\r\n                return vec1.cross(vec2);\r\n            err('function cross expects 2 vectors');\r\n        }\r\n\r\n        function transpose(mat) {\r\n            if(isMatrix(mat))\r\n                return mat.transpose();\r\n            err('function transpose expects a matrix');\r\n        }\r\n\r\n        function invert(mat) {\r\n            if(isMatrix(mat))\r\n                return mat.invert();\r\n            err('invert expects a matrix');\r\n        }\r\n\r\n        //basic set functions\r\n        function union(set1, set2) {\r\n            return set1.union(set2);\r\n        }\r\n\r\n        function intersection(set1, set2) {\r\n            return set1.intersection(set2);\r\n        }\r\n\r\n        function contains(set1, e) {\r\n            return set1.contains(e);\r\n        }\r\n\r\n        function difference(set1, set2) {\r\n            return set1.difference(set2);\r\n        }\r\n\r\n        function intersects(set1, set2) {\r\n            return new Symbol(Number(set1.intersects(set2)));\r\n        }\r\n\r\n        function is_subset(set1, set2) {\r\n            return new Symbol(Number(set1.is_subset(set2)));\r\n        }\r\n\r\n        function print() {\r\n            arguments2Array(arguments).map(function (x) {\r\n                console.log(x.toString());\r\n            });\r\n        }\r\n\r\n        function testSQRT(symbol) {\r\n            //wrap the symbol in sqrt. This eliminates one more check down the line.\r\n            if(!isSymbol(symbol.power) && symbol.power.absEquals(0.5)) {\r\n                var sign = symbol.power.sign();\r\n                //don't devide the power directly. Notice the use of toString. This makes it possible\r\n                //to use a bigNumber library in the future\r\n                var retval = sqrt(symbol.group === P ? new Symbol(symbol.value) : symbol.toLinear());\r\n                //place back the sign of the power\r\n                if(sign < 0)\r\n                    retval.invert();\r\n                return retval;\r\n            }\r\n            return symbol;\r\n        }\r\n\r\n        //try to reduce a symbol by pulling its power\r\n        function testPow(symbol) {\r\n            if(symbol.group === P) {\r\n                var v = symbol.value;\r\n\r\n                var fct = primeFactors(v)[0];\r\n\r\n                //safety\r\n                if(!fct) {\r\n                    warn('Unable to compute prime factors. This should not happen. Please review and report.');\r\n                    return symbol;\r\n                }\r\n\r\n                var n = new Frac(Math.log(v) / Math.log(fct)),\r\n                        p = n.multiply(symbol.power);\r\n\r\n                //we don't want a more complex number than before\r\n                if(p.den > symbol.power.den)\r\n                    return symbol;\r\n\r\n                if(isInt(p))\r\n                    symbol = Symbol(Math.pow(fct, p));\r\n                else\r\n                    symbol = new Symbol(fct).setPower(p);\r\n            }\r\n\r\n            return symbol;\r\n        }\r\n\r\n        //Link the functions to the parse so they're available outside of the library.\r\n        //This is strictly for convenience and may be deprecated.\r\n        this.expand = expand;\r\n        this.round = round;\r\n        this.clean = clean;\r\n        this.sqrt = sqrt;\r\n        this.cbrt = cbrt;\r\n        this.abs = abs;\r\n        this.log = log;\r\n        this.rationalize = rationalize;\r\n        this.nthroot = nthroot;\r\n        this.arg = arg;\r\n        this.conjugate = conjugate;\r\n        this.imagpart = imagpart;\r\n        this.realpart = realpart;\r\n\r\n        //TODO:\r\n        //Utilize the function below instead of the linked function\r\n        this.getFunction = function (name) {\r\n            return functions[name][0];\r\n        };\r\n\r\n//Parser.methods ===============================================================\r\n        this.addPreprocessor = function (name, action, order, shift_cells) {\r\n            var names = preprocessors.names;\r\n            var actions = preprocessors.actions;\r\n            if((typeof action !== 'function')) //the person probably forgot to specify a name\r\n                throw new PreprocessorError('Incorrect parameters. Function expected!');\r\n            if(!order) {\r\n                names.push(name);\r\n                actions.push(action);\r\n            }\r\n            else {\r\n                if(shift_cells) {\r\n                    names.splice(order, 0, name);\r\n                    actions.splice(order, 0, action);\r\n                }\r\n                else {\r\n                    names[order] = name;\r\n                    actions[order] = action;\r\n                }\r\n            }\r\n        };\r\n\r\n        this.getPreprocessors = function () {\r\n            var preprocessors = {};\r\n            for(var i = 0, l = preprocessors.names.length; i < l; i++) {\r\n                var name = preprocessors.names[i];\r\n                preprocessors[name] = {\r\n                    order: i,\r\n                    action: preprocessors.actions[i]\r\n                };\r\n            }\r\n            return preprocessors;\r\n        };\r\n\r\n        this.removePreprocessor = function (name, shift_cells) {\r\n            var i = preprocessors.names.indexOf(name);\r\n            if(shift_cells) {\r\n                remove(preprocessors.names, i);\r\n                remove(preprocessors.actions, i);\r\n            }\r\n            else {\r\n                preprocessors.names[i] = undefined;\r\n                preprocessors.actions[i] = undefined;\r\n            }\r\n        };\r\n\r\n        //The loader for functions which are not part of Math2\r\n        this.mapped_function = function () {\r\n            var subs = {},\r\n                    params = this.params;\r\n\r\n            for(var i = 0; i < params.length; i++) {\r\n                subs[params[i]] = String(arguments[i]);\r\n            }\r\n\r\n            return _.parse(this.body, subs);\r\n        };\r\n        /**\r\n         * Adds two symbols\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.add = function (a, b) {\r\n            var aIsSymbol = isSymbol(a),\r\n                    bIsSymbol = isSymbol(b);\r\n            //we're dealing with two symbols\r\n            if(aIsSymbol && bIsSymbol) {\r\n                //forward the adding of symbols with units to the Unit module\r\n                if(a.unit || b.unit) {\r\n                    return _.Unit.add(a, b);\r\n                }\r\n                //handle Infinity\r\n                //https://www.encyclopediaofmath.org/index.php/Infinity\r\n                if(a.isInfinity || b.isInfinity) {\r\n                    var aneg = a.multiplier.lessThan(0),\r\n                            bneg = b.multiplier.lessThan(0);\r\n\r\n                    if(a.isInfinity && b.isInfinity && aneg !== bneg) {\r\n                        throw new UndefinedError('(' + a + ')+(' + b + ') is not defined!');\r\n                    }\r\n\r\n                    var inf = Symbol.infinity();\r\n                    if(bneg)\r\n                        inf.negate();\r\n                    return inf;\r\n                }\r\n\r\n                if(a.isComposite() && a.isLinear() && b.isComposite() && b.isLinear()) {\r\n                    a.distributeMultiplier();\r\n                    b.distributeMultiplier();\r\n                    // Fix for issue #606\r\n                    if(b.length > a.length && a.group === b.group) {\r\n                        [a, b] = [b, a];\r\n                    }\r\n                }\r\n                \r\n                //no need to waste time on zeroes\r\n                if(a.multiplier.equals(0))\r\n                    return b;\r\n                if(b.multiplier.equals(0))\r\n                    return a;\r\n\r\n                if(a.isConstant() && b.isConstant() && Settings.PARSE2NUMBER) {\r\n                    var result = new Symbol(a.multiplier.add(b.multiplier).toDecimal(Settings.PRECISION));\r\n                    return result;\r\n                }\r\n\r\n                var g1 = a.group,\r\n                        g2 = b.group,\r\n                        ap = a.power.toString(),\r\n                        bp = b.power.toString();\r\n\r\n                //always keep the greater group on the left.\r\n                if(g1 < g2 || (g1 === g2 && ap > bp && bp > 0)) {\r\n                    return this.add(b, a);\r\n                }\r\n\r\n                /*note to self: Please don't forget about this dilemma ever again. In this model PL and CB goes crazy\r\n                 * because it doesn't know which one to prioritize. */\r\n                //correction to PL dilemma\r\n                if(g1 === CB && g2 === PL && a.value === b.value) {\r\n                    //swap\r\n                    var t = a;\r\n                    a = b;\r\n                    b = t;\r\n                    g1 = a.group;\r\n                    g2 = b.group;\r\n                    ap = a.power.toString();\r\n                    bp = b.power.toString();\r\n                }\r\n\r\n                var powEQ = ap === bp,\r\n                        v1 = a.value,\r\n                        v2 = b.value,\r\n                        aIsComposite = a.isComposite(),\r\n                        bIsComposite = b.isComposite(),\r\n                        h1, h2, result;\r\n\r\n                if(aIsComposite)\r\n                    h1 = text(a, 'hash');\r\n                if(bIsComposite)\r\n                    h2 = text(b, 'hash');\r\n\r\n                if(g1 === CP && g2 === CP && b.isLinear() && !a.isLinear() && h1 !== h2) {\r\n                    return this.add(b, a);\r\n                }\r\n\r\n                //PL & PL should compare hashes and not values e.g. compare x+x^2 with x+x^3 and not x with x\r\n                if(g1 === PL && g2 === PL) {\r\n                    v1 = h1;\r\n                    v2 = h2;\r\n                }\r\n\r\n                var PN = g1 === P && g2 === N,\r\n                        PNEQ = a.value === b.multiplier.toString(),\r\n                        valEQ = (v1 === v2 || h1 === h2 && h1 !== undefined || (PN && PNEQ));\r\n\r\n                //equal values, equal powers\r\n                if(valEQ && powEQ && g1 === g2) {\r\n                    //make sure to convert N to something P can work with\r\n                    if(PN)\r\n                        b = b.convert(P);//CL\r\n\r\n                    //handle PL\r\n                    if(g1 === PL && (g2 === S || g2 === P)) {\r\n                        a.distributeMultiplier();\r\n                        result = a.attach(b);\r\n                    }\r\n                    else {\r\n                        result = a;//CL\r\n                        if(a.multiplier.isOne() && b.multiplier.isOne() && g1 === CP && a.isLinear() && b.isLinear()) {\r\n                            for(var s in b.symbols) {\r\n                                var x = b.symbols[s];\r\n                                result.attach(x);\r\n                            }\r\n                        }\r\n                        else\r\n                            result.multiplier = result.multiplier.add(b.multiplier);\r\n                    }\r\n                }\r\n                //equal values uneven powers\r\n                else if(valEQ && g1 !== PL) {\r\n                    //break the tie for e.g. (x+1)+((x+1)^2+(x+1)^3)\r\n                    if(g1 === CP && g2 === PL) {\r\n                        b.insert(a, 'add');\r\n                        result = b;\r\n                    }\r\n                    else {\r\n                        result = Symbol.shell(PL).attach([a, b]);\r\n                        //update the hash\r\n                        result.value = g1 === PL ? h1 : v1;\r\n                    }\r\n                }\r\n                else if(aIsComposite && a.isLinear()) {\r\n                    var canIterate = g1 === g2,\r\n                            bothPL = g1 === PL && g2 === PL;\r\n\r\n                    //we can only iterate group PL if they values match\r\n                    if(bothPL)\r\n                        canIterate = a.value === b.value;\r\n                    //distribute the multiplier over the entire symbol\r\n                    a.distributeMultiplier();\r\n\r\n                    if(b.isComposite() && b.isLinear() && canIterate) {\r\n                        b.distributeMultiplier();\r\n                        //CL\r\n                        for(var s in b.symbols) {\r\n                            var x = b.symbols[s];\r\n                            a.attach(x);\r\n                        }\r\n                        result = a;\r\n                    }\r\n                    //handle cases like 2*(x+x^2)^2+2*(x+x^2)^3+4*(x+x^2)^2\r\n                    else if(bothPL && a.value !== h2 || g1 === PL && !valEQ) {\r\n                        result = Symbol.shell(CP).attach([a, b]);\r\n                        result.updateHash();\r\n\r\n                    }\r\n                    else {\r\n                        result = a.attach(b);\r\n                    }\r\n                }\r\n                else {\r\n                    if(g1 === FN && a.fname === SQRT && g2 !== EX && b.power.equals(0.5)) {\r\n                        var m = b.multiplier.clone();\r\n                        b = sqrt(b.toUnitMultiplier().toLinear());\r\n                        b.multiplier = m;\r\n                    }\r\n                    //fix for issue #3 and #159\r\n                    if(a.length === 2 && b.length === 2 && even(a.power) && even(b.power)) {\r\n                        result = _.add(expand(a), expand(b));\r\n                    }\r\n                    else {\r\n                        result = Symbol.shell(CP).attach([a, b]);\r\n                        result.updateHash();\r\n                    }\r\n                }\r\n\r\n                if(result.multiplier.equals(0))\r\n                    result = new Symbol(0);\r\n\r\n                //make sure to remove unnecessary wraps\r\n                if(result.length === 1) {\r\n                    var m = result.multiplier;\r\n                    result = firstObject(result.symbols);\r\n                    result.multiplier = result.multiplier.multiply(m);\r\n                }\r\n\r\n                return result;\r\n            }\r\n            else {\r\n                //keep symbols to the right\r\n                if(bIsSymbol && !aIsSymbol) {\r\n                    var t = a;\r\n                    a = b;\r\n                    b = t; //swap\r\n                    t = bIsSymbol;\r\n                    bIsSymbol = aIsSymbol;\r\n                    aIsSymbol = t;\r\n                }\r\n\r\n                var bIsMatrix = isMatrix(b);\r\n\r\n                if(aIsSymbol && bIsMatrix) {\r\n                    var M = new Matrix();\r\n                    b.eachElement(function (e, i, j) {\r\n                        M.set(i, j, _.add(a.clone(), e));\r\n                    });\r\n\r\n                    b = M\r\n                }\r\n                else {\r\n                    if(isMatrix(a) && bIsMatrix) {\r\n                        b = a.add(b);\r\n                    }\r\n                    else if(aIsSymbol && isVector(b)) {\r\n                        b.each(function (x, i) {\r\n                            i--;\r\n                            b.elements[i] = _.add(a.clone(), b.elements[i]);\r\n                        });\r\n                    }\r\n                    else {\r\n                        if(isVector(a) && isVector(b)) {\r\n                            b.each(function (x, i) {\r\n                                i--;\r\n                                b.elements[i] = _.add(a.elements[i], b.elements[i]);\r\n                            });\r\n                        }\r\n                        else if(isVector(a) && isMatrix(b)) {\r\n                            //try to convert a to a matrix\r\n                            return _.add(b, a);\r\n                        }\r\n                        else if(isMatrix(a) && isVector(b)) {\r\n                            if(b.elements.length === a.rows()) {\r\n                                var M = new Matrix(), l = a.cols();\r\n                                b.each(function (e, i) {\r\n                                    var row = [];\r\n                                    for(var j = 0; j < l; j++) {\r\n                                        row.push(_.add(a.elements[i - 1][j].clone(), e.clone()));\r\n                                    }\r\n                                    M.elements.push(row);\r\n                                });\r\n                                return M;\r\n                            }\r\n                            else\r\n                                err('Dimensions must match!');\r\n                        }\r\n                    }\r\n                }\r\n                return b;\r\n            }\r\n\r\n        };\r\n        /**\r\n         * Gets called when the parser finds the - operator. Not the prefix operator. See this.add\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.subtract = function (a, b) {\r\n            var aIsSymbol = aIsSymbol = isSymbol(a),\r\n                    bIsSymbol = isSymbol(b), t;\r\n\r\n            if(aIsSymbol && bIsSymbol) {\r\n                if(a.unit || b.unit) {\r\n                    return _.Unit.subtract(a, b);\r\n                }\r\n                return this.add(a, b.negate());\r\n            }\r\n            else {\r\n                if(bIsSymbol && isVector(a)) {\r\n                    b = a.map(function (x) {\r\n                        return _.subtract(x, b.clone());\r\n                    });\r\n                }\r\n                else if(aIsSymbol && isVector(b)) {\r\n                    b = b.map(function (x) {\r\n                        return _.subtract(a.clone(), x);\r\n                    });\r\n                }\r\n                else if(isVector(a) && isVector(b)) {\r\n                    if(a.dimensions() === b.dimensions())\r\n                        b = a.subtract(b);\r\n                    else\r\n                        _.error('Unable to subtract vectors. Dimensions do not match.');\r\n                }\r\n                else if(isMatrix(a) && isVector(b)) {\r\n                    if(b.elements.length === a.rows()) {\r\n                        var M = new Matrix(), l = a.cols();\r\n                        b.each(function (e, i) {\r\n                            var row = [];\r\n                            for(var j = 0; j < l; j++) {\r\n                                row.push(_.subtract(a.elements[i - 1][j].clone(), e.clone()));\r\n                            }\r\n                            M.elements.push(row);\r\n                        });\r\n                        return M;\r\n                    }\r\n                    else\r\n                        err('Dimensions must match!');\r\n                }\r\n                else if(isVector(a) && isMatrix(b)) {\r\n                    var M = b.clone().negate();\r\n                    return _.add(M, a);\r\n                }\r\n                else if(isMatrix(a) && isMatrix(b)) {\r\n                    b = a.subtract(b);\r\n                }\r\n                else if(isMatrix(a) && bIsSymbol) {\r\n                    var M = new Matrix();\r\n                    a.each(function (x, i, j) {\r\n                        M.set(i, j, _.subtract(x, b.clone()));\r\n                    });\r\n                    b = M;\r\n                }\r\n                else if(aIsSymbol && isMatrix(b)) {\r\n                    var M = new Matrix();\r\n                    b.each(function (x, i, j) {\r\n                        M.set(i, j, _.subtract(a.clone(), x));\r\n                    });\r\n                    b = M;\r\n                }\r\n                return b;\r\n            }\r\n        };\r\n        /**\r\n         * Gets called when the parser finds the * operator. See this.add\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.multiply = function (a, b) {\r\n            var aIsSymbol = isSymbol(a),\r\n                    bIsSymbol = isSymbol(b);\r\n            //we're dealing with function assignment here\r\n            if(aIsSymbol && b instanceof Collection) {\r\n                b.elements.push(a);\r\n                return b;\r\n            }\r\n            if(aIsSymbol && bIsSymbol) {\r\n                //if it has a unit then add it and return it right away.\r\n                if(b.isUnit) {\r\n                    var result = a.clone();\r\n                    a.unit = b;\r\n                    return result;\r\n                }\r\n                \r\n                //if it has units then just forward that problem to the unit module\r\n                if(a.unit || b.unit) {\r\n                    return _.Unit.multiply(a, b);\r\n                }\r\n\r\n                //handle Infinty\r\n                if(a.isInfinity || b.isInfinity) {\r\n                    if(a.equals(0) || b.equals(0))\r\n                        throw new UndefinedError(a + '*' + b + ' is undefined!');\r\n                    //x/infinity\r\n                    if(b.power.lessThan(0)) {\r\n                        if(!a.isInfinity) {\r\n                            return new Symbol(0);\r\n                        }\r\n                        else {\r\n                            throw new UndefinedError('Infinity/Infinity is not defined!');\r\n                        }\r\n                    }\r\n\r\n                    var sign = a.multiplier.multiply(b.multiplier).sign(),\r\n                            inf = Symbol.infinity();\r\n                    if(a.isConstant() || b.isConstant() || (a.isInfinity && b.isInfinity)) {\r\n                        if(sign < 0)\r\n                            inf.negate();\r\n\r\n                        return inf;\r\n                    }\r\n                }\r\n                //the quickies\r\n                if(a.isConstant() && b.isConstant() && Settings.PARSE2NUMBER) {\r\n                    var t = new bigDec(a.multiplier.toDecimal()).times(new bigDec(b.multiplier.toDecimal())).toFixed();\r\n                    var retval = new Symbol(t);\r\n                    return retval;\r\n                }\r\n\r\n                //don't waste time\r\n                if(a.isOne()) {\r\n                    return b.clone();\r\n                }\r\n                if(b.isOne()) {\r\n                    return a.clone();\r\n                }\r\n\r\n                if(a.multiplier.equals(0) || b.multiplier.equals(0))\r\n                    return new Symbol(0);\r\n\r\n                if(b.group > a.group && !(b.group === CP))\r\n                    return this.multiply(b, a);\r\n                //correction for PL/CB dilemma\r\n                if(a.group === CB && b.group === PL && a.value === b.value) {\r\n                    var t = a;\r\n                    a = b;\r\n                    b = t;//swap\r\n                }\r\n\r\n                var g1 = a.group,\r\n                        g2 = b.group,\r\n                        bnum = b.multiplier.num,\r\n                        bden = b.multiplier.den;\r\n\r\n                if(g1 === FN && a.fname === SQRT && !b.isConstant() && a.args[0].value === b.value && !a.args[0].multiplier.lessThan(0)) {\r\n                    //unwrap sqrt\r\n                    var a_pow = a.power;\r\n                    var a_multiplier = _.parse(a.multiplier);\r\n                    a = _.multiply(a_multiplier, a.args[0].clone());\r\n                    a.setPower(new Frac(0.5).multiply(a_pow));\r\n                    g1 = a.group;\r\n                }\r\n                //simplify n/sqrt(n). Being very specific\r\n                else if(g1 === FN && a.fname === SQRT && a.multiplier.equals(1) && a.power.equals(-1) && b.isConstant() && a.args[0].equals(b)) {\r\n                    a = _.symfunction(SQRT, [b.clone()]);\r\n                    b = new Symbol(1);\r\n                }\r\n                ;\r\n\r\n                var v1 = a.value,\r\n                        v2 = b.value,\r\n                        sign = new Frac(a.sign()),\r\n                        //since P is just a morphed version of N we need to see if they relate\r\n                        ONN = (g1 === P && g2 === N && b.multiplier.equals(a.value)),\r\n                        //don't multiply the multiplier of b since that's equal to the value of a\r\n                        m = ONN ? new Frac(1).multiply(a.multiplier).abs() : a.multiplier.multiply(b.multiplier).abs(),\r\n                        result = a.clone().toUnitMultiplier();\r\n                b = b.clone().toUnitMultiplier(true);\r\n\r\n                //further simplification of sqrt\r\n                if(g1 === FN && g2 === FN) {\r\n                    var u = a.args[0].clone();\r\n                    var v = b.args[0].clone();\r\n                    if(a.fname === SQRT && b.fname === SQRT && a.isLinear() && b.isLinear()) {\r\n\r\n                        var q = _.divide(u, v).invert();\r\n                        if(q.gt(1) && isInt(q)) {\r\n                            //b contains a factor a which can be moved to a\r\n                            result = _.multiply(a.args[0].clone(), sqrt(q.clone()));\r\n                            b = new Symbol(1);\r\n                        }\r\n                    }\r\n                    //simplify factorial but only if\r\n                    //1 - It's division so b will have a negative power\r\n                    //2 - We're not dealing with factorials of numbers\r\n                    else if(a.fname === FACTORIAL && b.fname === FACTORIAL && !u.isConstant() && !v.isConstant() && b.power < 0) {\r\n                        //assume that n = positive\r\n                        var d = _.subtract(u.clone(), v.clone());\r\n\r\n                        //if it's not numeric then we don't know if we can simplify so just return\r\n                        if(d.isConstant()) {\r\n\r\n                            //there will never be a case where d == 0 since this will already have\r\n                            //been handled at the beginning of this function\r\n                            t = new Symbol(1);\r\n                            if(d < 0) {\r\n                                //If d is negative then the numerator is larger so expand that\r\n                                for(var i = 0, n = Math.abs(d); i <= n; i++) {\r\n                                    var s = _.add(u.clone(), new Symbol(i));\r\n                                    t = _.multiply(t, s);\r\n                                }\r\n\r\n                                result = _.multiply(_.pow(u, new Symbol(a.power)), _.pow(t, new Symbol(b.power)));\r\n\r\n                                b = new Symbol(1);\r\n                            }\r\n                            else {\r\n                                //Otherwise the denominator is larger so expand that\r\n                                for(var i = 0, n = Math.abs(d); i <= n; i++) {\r\n                                    var s = _.add(v.clone(), new Symbol(i));\r\n                                    t = _.multiply(t, s);\r\n                                }\r\n\r\n                                result = _.multiply(_.pow(t, new Symbol(a.power)), _.pow(v, new Symbol(b.power)));\r\n\r\n                                b = new Symbol(1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                //if both are PL then their hashes have to match\r\n                if(v1 === v2 && g1 === PL && g1 === g2) {\r\n                    v1 = a.text('hash');\r\n                    v2 = b.text('hash');\r\n                }\r\n\r\n                //same issue with (x^2+1)^x*(x^2+1)\r\n                //EX needs an exception when multiplying because it needs to recognize\r\n                //that (x+x^2)^x has the same hash as (x+x^2). The latter is kept as x\r\n                if(g2 === EX && b.previousGroup === PL && g1 === PL) {\r\n                    v1 = text(a, 'hash', EX);\r\n                }\r\n\r\n                if((v1 === v2 || ONN) && !(g1 === PL && (g2 === S || g2 === P || g2 === FN)) && !(g1 === PL && g2 === CB)) {\r\n                    var p1 = a.power,\r\n                            p2 = b.power,\r\n                            isSymbolP1 = isSymbol(p1),\r\n                            isSymbolP2 = isSymbol(p2),\r\n                            toEX = (isSymbolP1 || isSymbolP2);\r\n                    //TODO: this needs cleaning up\r\n                    if(g1 === PL && g2 !== PL && b.previousGroup !== PL && p1.equals(1)) {\r\n                        result = new Symbol(0);\r\n                        a.each(function (x) {\r\n                            result = _.add(result, _.multiply(x, b.clone()));\r\n                        }, true);\r\n                    }\r\n                    else {\r\n                        //add the powers\r\n                        result.power = toEX ? _.add(\r\n                                !(isSymbol(p1)) ? new Symbol(p1) : p1,\r\n                                !(isSymbol(p2)) ? new Symbol(p2) : p2\r\n                                ) : (g1 === N /*don't add powers for N*/ ? p1 : p1.add(p2));\r\n\r\n                        //eliminate zero power values and convert them to numbers\r\n                        if(result.power.equals(0))\r\n                            result = result.convert(N);\r\n\r\n                        //properly convert to EX\r\n                        if(toEX)\r\n                            result.convert(EX);\r\n\r\n                        //take care of imaginaries\r\n                        if(a.imaginary && b.imaginary) {\r\n                            var isEven = even(result.power % 2);\r\n                            if(isEven) {\r\n                                result = new Symbol(1);\r\n                                m.negate();\r\n                            }\r\n                        }\r\n\r\n                        //cleanup: this causes the LaTeX generator to get confused as to how to render the symbol\r\n                        if(result.group !== EX && result.previousGroup)\r\n                            result.previousGroup = undefined;\r\n                        //the sign for b is floating around. Remember we are assuming that the odd variable will carry\r\n                        //the sign but this isn't true if they're equals symbols\r\n                        result.multiplier = result.multiplier.multiply(b.multiplier);\r\n                    }\r\n                }\r\n                else if(g1 === CB && a.isLinear()) {\r\n                    if(g2 === CB)\r\n                        b.distributeExponent();\r\n                    if(g2 === CB && b.isLinear()) {\r\n                        for(var s in b.symbols) {\r\n                            var x = b.symbols[s];\r\n                            result = result.combine(x);\r\n                        }\r\n                        result.multiplier = result.multiplier.multiply(b.multiplier);\r\n                    }\r\n                    else {\r\n                        result.combine(b);\r\n                    }\r\n                }\r\n                else {\r\n                    //the multiplier was already handled so nothing left to do\r\n                    if(g1 !== N) {\r\n                        if(g1 === CB) {\r\n                            result.distributeExponent();\r\n                            result.combine(b);\r\n                        }\r\n                        else if(!b.isOne()) {\r\n                            var bm = b.multiplier.clone();\r\n                            b.toUnitMultiplier();\r\n                            result = Symbol.shell(CB).combine([result, b]);\r\n                            //transfer the multiplier to the outside\r\n                            result.multiplier = result.multiplier.multiply(bm);\r\n                        }\r\n                    }\r\n                    else {\r\n                        result = b.clone().toUnitMultiplier();\r\n                    }\r\n                }\r\n\r\n                if(result.group === P) {\r\n                    var logV = Math.log(result.value),\r\n                            n1 = Math.log(bnum) / logV,\r\n                            n2 = Math.log(bden) / logV,\r\n                            ndiv = m.num / bnum,\r\n                            ddiv = m.den / bden;\r\n                    //we don't want to divide by zero no do we? Strange things happen.\r\n                    if(n1 !== 0 && isInt(n1) && isInt(ndiv)) {\r\n                        result.power = result.power.add(new Frac(n1));\r\n                        m.num /= bnum; //BigInt? Keep that in mind for the future.\r\n                    }\r\n                    if(n2 !== 0 && isInt(n2) && isInt(ddiv)) {\r\n                        result.power = result.power.subtract(new Frac(n2));\r\n                        m.den /= bden; //BigInt? Keep that in mind for the future.\r\n                    }\r\n                }\r\n\r\n                //unpack CB if length is only one\r\n                if(result.length === 1) {\r\n                    var t = result.multiplier;\r\n                    //transfer the multiplier\r\n                    result = firstObject(result.symbols);\r\n                    result.multiplier = result.multiplier.multiply(t);\r\n                }\r\n\r\n                //reduce square root\r\n                var ps = result.power.toString();\r\n                if(even(ps) && result.fname === SQRT) {\r\n                    //grab the sign of the symbol\r\n                    sign = sign * result.sign();\r\n                    var p = result.power;\r\n                    result = result.args[0];\r\n                    result = _.multiply(new Symbol(m), _.pow(result, new Symbol(p.divide(new Frac(2)))));\r\n                    //flip it back to the correct sign\r\n                    if(sign < 0)\r\n                        result.negate()\r\n                }\r\n                else {\r\n                    result.multiplier = result.multiplier.multiply(m).multiply(sign);\r\n                    if(result.group === CP && result.isImaginary())\r\n                        result.distributeMultiplier();\r\n                }\r\n\r\n                //back convert group P to a simpler group N if possible\r\n                if(result.group === P && isInt(result.power.toDecimal()))\r\n                    result = result.convert(N);\r\n\r\n                return result;\r\n            }\r\n            else {\r\n                //****** Matrices & Vector *****//\r\n                if(bIsSymbol && !aIsSymbol) { //keep symbols to the right\r\n                    t = a;\r\n                    a = b;\r\n                    b = t; //swap\r\n                    t = bIsSymbol;\r\n                    bIsSymbol = aIsSymbol;\r\n                    aIsSymbol = t;\r\n                }\r\n\r\n                var isMatrixB = isMatrix(b), isMatrixA = isMatrix(a);\r\n                if(aIsSymbol && isMatrixB) {\r\n                    var M = new Matrix();\r\n                    b.eachElement(function (e, i, j) {\r\n                        M.set(i, j, _.multiply(a.clone(), e));\r\n                    });\r\n\r\n                    b = M;\r\n                }\r\n                else {\r\n                    if(isMatrixA && isMatrixB) {\r\n                        b = a.multiply(b);\r\n                    }\r\n                    else if(aIsSymbol && isVector(b)) {\r\n                        b.each(function (x, i) {\r\n                            i--;\r\n                            b.elements[i] = _.multiply(a.clone(), b.elements[i]);\r\n                        });\r\n                    }\r\n                    else {\r\n                        if(isVector(a) && isVector(b)) {\r\n                            b.each(function (x, i) {\r\n                                i--;\r\n                                b.elements[i] = _.multiply(a.elements[i], b.elements[i]);\r\n                            });\r\n                        }\r\n                        else if(isVector(a) && isMatrix(b)) {\r\n                            //try to convert a to a matrix\r\n                            return this.multiply(b, a);\r\n                        }\r\n                        else if(isMatrix(a) && isVector(b)) {\r\n                            if(b.elements.length === a.rows()) {\r\n                                var M = new Matrix(), l = a.cols();\r\n                                b.each(function (e, i) {\r\n                                    var row = [];\r\n                                    for(var j = 0; j < l; j++) {\r\n                                        row.push(_.multiply(a.elements[i - 1][j].clone(), e.clone()));\r\n                                    }\r\n                                    M.elements.push(row);\r\n                                });\r\n                                return M;\r\n                            }\r\n                            else\r\n                                err('Dimensions must match!');\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return b;\r\n            }\r\n        };\r\n        /**\r\n         * Gets called when the parser finds the / operator. See this.add\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.divide = function (a, b) {\r\n            var aIsSymbol = isSymbol(a),\r\n                    bIsSymbol = isSymbol(b);\r\n\r\n            if(aIsSymbol && bIsSymbol) {\r\n                //forward to Unit division\r\n                if(a.unit || b.unit) {\r\n                    return _.Unit.divide(a, b);\r\n                }\r\n                var result;\r\n                if(b.equals(0))\r\n                    throw new DivisionByZero('Division by zero not allowed!');\r\n\r\n                if(a.isConstant() && b.isConstant()) {\r\n                    result = a.clone();\r\n                    result.multiplier = result.multiplier.divide(b.multiplier);\r\n                }\r\n                else {\r\n                    b.invert();\r\n                    result = _.multiply(a, b);\r\n                }\r\n                return result;\r\n            }\r\n            else {\r\n                //******* Vectors & Matrices *********//\r\n                var isVectorA = isVector(a), isVectorB = isVector(b);\r\n                if(aIsSymbol && isVectorB) {\r\n                    b = b.map(function (x) {\r\n                        return _.divide(a.clone(), x);\r\n                    });\r\n                }\r\n                else if(isVectorA && bIsSymbol) {\r\n                    b = a.map(function (x) {\r\n                        return _.divide(x, b.clone());\r\n                    });\r\n                }\r\n                else if(isVectorA && isVectorB) {\r\n                    if(a.dimensions() === b.dimensions()) {\r\n                        b = b.map(function (x, i) {\r\n                            return _.divide(a.elements[--i], x);\r\n                        });\r\n                    }\r\n                    else\r\n                        _.error('Cannot divide vectors. Dimensions do not match!');\r\n                }\r\n                else {\r\n                    var isMatrixA = isMatrix(a), isMatrixB = isMatrix(b);\r\n                    if(isMatrixA && bIsSymbol) {\r\n                        var M = new Matrix();\r\n                        a.eachElement(function (x, i, j) {\r\n                            M.set(i, j, _.divide(x, b.clone()));\r\n                        });\r\n                        b = M;\r\n                    }\r\n                    else if(aIsSymbol && isMatrixB) {\r\n                        var M = new Matrix();\r\n                        b.eachElement(function (x, i, j) {\r\n                            M.set(i, j, _.divide(a.clone(), x));\r\n                        });\r\n                        b = M;\r\n                    }\r\n                    else if(isMatrixA && isMatrixB) {\r\n                        var M = new Matrix();\r\n                        if(a.rows() === b.rows() && a.cols() === b.cols()) {\r\n                            a.eachElement(function (x, i, j) {\r\n                                M.set(i, j, _.divide(x, b.elements[i][j]));\r\n                            });\r\n                            b = M;\r\n                        }\r\n                        else {\r\n                            _.error('Dimensions do not match!');\r\n                        }\r\n                    }\r\n                    else if(isMatrixA && isVectorB) {\r\n                        if(a.cols() === b.dimensions()) {\r\n                            var M = new Matrix();\r\n                            a.eachElement(function (x, i, j) {\r\n                                M.set(i, j, _.divide(x, b.elements[i].clone()));\r\n                            });\r\n                            b = M;\r\n                        }\r\n                        else {\r\n                            _.error('Unable to divide matrix by vector.');\r\n                        }\r\n                    }\r\n                }\r\n                return b;\r\n            }\r\n        };\r\n        /**\r\n         * Gets called when the parser finds the ^ operator. See this.add\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.pow = function (a, b) {\r\n            var aIsSymbol = isSymbol(a),\r\n                    bIsSymbol = isSymbol(b);\r\n            if(aIsSymbol && bIsSymbol) {\r\n                //it has units then it's the Unit module's problem\r\n                if(a.unit || b.unit) {\r\n                    return _.Unit.pow(a, b);\r\n                }\r\n                \r\n                // Handle abs\r\n                if(a.group === FN && a.fname === ABS && even(b)) {\r\n                    var m = a.multiplier.clone();\r\n                    var raised = _.pow(a.args[0], b);\r\n                    raised.multiplier = m;\r\n                    return raised;\r\n                }\r\n                \r\n                // Handle infinity\r\n                if(a.isInfinity || b.isInfinity) {\r\n                    if(a.isInfinity && b.isInfinity)\r\n                        throw new UndefinedError('(' + a + ')^(' + b + ') is undefined!');\r\n\r\n                    if(a.isConstant() && b.isInfinity) {\r\n                        if(a.equals(0)) {\r\n                            if(b.lessThan(0))\r\n                                throw new UndefinedError('0^Infinity is undefined!');\r\n                            return new Symbol(0);\r\n                        }\r\n                        if(a.equals(1))\r\n                            throw new UndefinedError('1^' + b.toString() + ' is undefined!');\r\n                        //a^-oo\r\n                        if(b.lessThan(0))\r\n                            return new Symbol(0);\r\n                        //a^oo\r\n                        if(!a.lessThan(0))\r\n                            return Symbol.infinity();\r\n                    }\r\n\r\n                    if(a.isInfinity && b.isConstant()) {\r\n                        if(b.equals(0))\r\n                            throw new UndefinedError(a + '^0 is undefined!');\r\n                        if(b.lessThan(0))\r\n                            return new Symbol(0);\r\n                        return _.multiply(Symbol.infinity(), _.pow(new Symbol(a.sign()), b.clone()));\r\n                    }\r\n                }\r\n\r\n                var aIsZero = a.equals(0);\r\n                var bIsZero = b.equals(0);\r\n                if(aIsZero && bIsZero)\r\n                    throw new UndefinedError('0^0 is undefined!');\r\n\r\n                // Return 0 right away if possible\r\n                if(aIsZero && b.isConstant() && b.multiplier.greaterThan(0))\r\n                    return new Symbol(0);\r\n\r\n                if(bIsZero)\r\n                    return new Symbol(1);\r\n\r\n                var bIsConstant = b.isConstant(),\r\n                        aIsConstant = a.isConstant(),\r\n                        bIsInt = b.isInteger(),\r\n                        m = a.multiplier,\r\n                        result = a.clone();\r\n\r\n                // 0^0, 1/0, etc. Complain.\r\n                if(aIsConstant && bIsConstant && a.equals(0) && b.lessThan(0))\r\n                    throw new UndefinedError('Division by zero is not allowed!');\r\n\r\n                // Compute imaginary numbers right away\r\n                if(Settings.PARSE2NUMBER && aIsConstant && bIsConstant && a.sign() < 0 && evenFraction(b)) {\r\n                    var k, re, im;\r\n                    k = Math.PI * b;\r\n                    re = new Symbol(Math.cos(k));\r\n                    im = _.multiply(Symbol.imaginary(), new Symbol(Math.sin(k)));\r\n                    return _.add(re, im);\r\n                }\r\n\r\n                // Imaginary number under negative nthroot or to the n\r\n                if(Settings.PARSE2NUMBER && a.isImaginary() && bIsConstant && isInt(b) && !b.lessThan(0)) {\r\n                    var re, im, r, theta, nre, nim, phi;\r\n                    re = a.realpart();\r\n                    im = a.imagpart();\r\n                    if(re.isConstant('all') && im.isConstant('all')) {\r\n                        phi = Settings.USE_BIG ? Symbol(bigDec.atan2(i.multiplier.toDecimal(), r.multiplier.toDecimal()).times(b.toString())) : Math.atan2(im, re) * b;\r\n                        theta = new Symbol(phi);\r\n                        r = _.pow(Symbol.hyp(re, im), b);\r\n                        nre = _.multiply(r.clone(), _.trig.cos(theta.clone()));\r\n                        nim = _.multiply(r, _.trig.sin(theta));\r\n                        return _.add(nre, _.multiply(Symbol.imaginary(), nim));\r\n                    }\r\n                }\r\n\r\n                // Take care of the symbolic part\r\n                result.toUnitMultiplier();\r\n                //simpifly sqrt\r\n                if(result.group === FN && result.fname === SQRT && !bIsConstant) {\r\n                    var s = result.args[0];\r\n                    s.multiplyPower(new Symbol(0.5));\r\n                    s.multiplier.multiply(result.multiplier);\r\n                    s.multiplyPower(b);\r\n                    result = s;\r\n                }\r\n                else {\r\n                    var sign = m.sign();\r\n                    //handle cases such as (-a^3)^(1/4)\r\n                    if(evenFraction(b) && sign < 0) {\r\n                        // Swaperoo\r\n                        // First put the sign back on the symbol\r\n                        result.negate();\r\n                        // Wrap it in brackets\r\n                        result = _.symfunction(PARENTHESIS, [result]);\r\n                        // Move the sign back the exterior and let nerdamer handle the rest\r\n                        result.negate();\r\n                    }\r\n\r\n                    result.multiplyPower(b);\r\n                }\r\n\r\n                if(aIsConstant && bIsConstant && Settings.PARSE2NUMBER) {\r\n                    var c;\r\n                    //remove the sign\r\n                    if(sign < 0) {\r\n                        a.negate();\r\n                        if(b.multiplier.den.equals(2))\r\n                            //we know that the numerator has to be odd and therefore it's i\r\n                            c = new Symbol(Settings.IMAGINARY);\r\n                        else if(isInt(b.multiplier)) {\r\n                            if(even(b.multiplier))\r\n                                c = new Symbol(1);\r\n                            else\r\n                                c = new Symbol(-1);\r\n                        }\r\n                        else if(!even(b.multiplier.den)) {\r\n                            c = new Symbol(Math.pow(sign, b.multiplier.num));\r\n                        }\r\n                        else {\r\n                            c = _.pow(_.symfunction(PARENTHESIS, [new Symbol(sign)]), b.clone());\r\n                        }\r\n                    }\r\n\r\n                    result = new Symbol(Math.pow(a.multiplier.toDecimal(), b.multiplier.toDecimal()));\r\n\r\n                    //result = new Symbol(Math2.bigpow(a.multiplier, b.multiplier));\r\n                    //put the back sign\r\n                    if(c)\r\n                        result = _.multiply(result, c);\r\n                }\r\n                else if(bIsInt && !m.equals(1)) {\r\n                    var abs_b = b.abs();\r\n                    // Provide fall back to JS until big number implementation is improved\r\n                    if(abs_b.gt(Settings.MAX_EXP)) {\r\n                        if(b.sign() < 0)\r\n                            return new Symbol(0);\r\n                        return Symbol.infinity();\r\n                    }\r\n                    else {\r\n                        var p = b.multiplier.toDecimal();\r\n                        var sgn = Math.sign(p);\r\n                        p = Math.abs(p);\r\n                        var multiplier = new Frac(1);\r\n                        multiplier.num = m.num.pow(p);\r\n                        multiplier.den = m.den.pow(p);\r\n                        if(sgn < 0)\r\n                            multiplier.invert();\r\n                        //multiplying is justified since after mulltiplyPower if it was of group P it will now be of group N\r\n                        result.multiplier = result.multiplier.multiply(multiplier);\r\n                    }\r\n                }\r\n                else {\r\n                    var sign = a.sign();\r\n                    if(b.isConstant() && a.isConstant() && !b.multiplier.den.equals(1) && sign < 0) {\r\n                        //we know the sign is negative so if the denominator for b == 2 then it's i\r\n                        if(b.multiplier.den.equals(2)) {\r\n                            var i = new Symbol(Settings.IMAGINARY);\r\n                            a.negate();//remove the sign\r\n                            //if the power is negative then i is negative\r\n                            if(b.lessThan(0)) {\r\n                                i.negate();\r\n                                b.negate();//remove the sign from the power\r\n                            }\r\n                            //pull the power normally and put back the imaginary\r\n                            result = _.multiply(_.pow(a, b), i);\r\n                        }\r\n                        else {\r\n                            var aa = a.clone();\r\n                            aa.multiplier.negate();\r\n                            result = _.pow(_.symfunction(PARENTHESIS, [new Symbol(sign)]), b.clone());\r\n                            var _a = _.pow(new Symbol(aa.multiplier.num), b.clone());\r\n                            var _b = _.pow(new Symbol(aa.multiplier.den), b.clone());\r\n                            var r = _.divide(_a, _b);\r\n                            result = _.multiply(result, r);\r\n                        }\r\n                    }\r\n                    else if(Settings.PARSE2NUMBER && b.isImaginary()) {\r\n                        //4^(i + 2) = e^(- (2 - 4 i) π n + (2 + i) log(4))\r\n\r\n                        var re = b.realpart();\r\n                        var im = b.imagpart();\r\n                        /*\r\n                         if(b.group === CP && false) {\r\n                         var ex = _.pow(a.clone(), re);\r\n                         var xi = _.multiply(_.multiply(ex.clone(), trig.sin(im.clone())), Symbol.imaginary());\r\n                         var xa = _.multiply(trig.cos(im), ex);\r\n                         result = _.add(xi, xa);\r\n                         }\r\n                         else {\r\n                         */\r\n                        var aa = a.clone().toLinear();\r\n                        var a1 = _.pow(aa.clone(), re);\r\n                        var log_a = log(aa.clone());\r\n                        var b1 = trig.cos(_.multiply(im.clone(), log_a));\r\n                        var c1 = _.multiply(trig.sin(_.multiply(im, log(aa))), Symbol.imaginary());\r\n                        result = _.multiply(a1, _.add(b1, c1));\r\n                        result = _.expand(_.parse(result));\r\n                        /*\r\n                         }   \r\n                         */\r\n                    }\r\n                    else {\r\n                        //b is a symbol\r\n                        var neg_num = a.group === N && sign < 0,\r\n                            num = testSQRT(new Symbol(neg_num ? m.num : Math.abs(m.num)).setPower(b.clone())),\r\n                            den = testSQRT(new Symbol(m.den).setPower(b.clone()).invert());\r\n\r\n                        //eliminate imaginary if possible\r\n                        if(a.imaginary) {\r\n                            if(bIsInt) {\r\n                                var s, p, n;\r\n                                s = Math.sign(b);\r\n                                p = abs(b);\r\n                                n = p % 4;\r\n                                result = new Symbol(even(n) ? -1 : Settings.IMAGINARY);\r\n                                if(n === 0 || s < 0 && (n === 1) || s > 0 && (n === 3)) {\r\n                                    result.negate();\r\n                                }\r\n                            }\r\n                            else {\r\n                                //assume i = sqrt(-1) -> (-1)^(1/2)\r\n                                var nr = b.multiplier.multiply(Frac.quick(1, 2)),\r\n                                        //the denominator denotes the power so raise to it. It will turn positive it round\r\n                                        tn = Math.pow(-1, nr.num);\r\n                                result = even(nr.den) ? new Symbol(-1).setPower(nr, true) : new Symbol(tn);\r\n                            }\r\n                        }\r\n                        //ensure that the sign is carried by the symbol and not the multiplier\r\n                        //this enables us to check down the line if the multiplier can indeed be transferred\r\n                        if(sign < 0 && !neg_num)\r\n                            result.negate();\r\n\r\n                        //retain the absolute value\r\n                        if(bIsConstant && a.group !== EX) {\r\n                            var evenr = even(b.multiplier.den),\r\n                                    evenp = even(a.power),\r\n                                    n = result.power.toDecimal(),\r\n                                    evennp = even(n);\r\n                            if(evenr && evenp && !evennp) {\r\n                                if(n === 1)\r\n                                    result = _.symfunction(ABS, [result]);\r\n                                else if(!isInt(n)) {\r\n                                    var p = result.power;\r\n                                    result = _.symfunction(ABS, [result.toLinear()]).setPower(p);\r\n                                }\r\n                                else {\r\n                                    result = _.multiply(_.symfunction(ABS, [result.clone().toLinear()]),\r\n                                            result.clone().setPower(new Frac(n - 1)));\r\n                                }\r\n                                //quick workaround. Revisit\r\n                                if(Settings.POSITIVE_MULTIPLIERS && result.fname === ABS)\r\n                                    result = result.args[0];\r\n                            }\r\n                        }\r\n                        //multiply out sqrt\r\n                        if(b.equals(2) && result.group === CB) {\r\n                            var _result = new Symbol(1);\r\n                            result.each(function (sym) {\r\n                                _result = _.multiply(_result, _.pow(sym, b));\r\n                            });\r\n                            result = _result;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                result = testSQRT(result);\r\n\r\n                // Don't multiply until we've tested the remaining symbol\r\n                if(num && den) {\r\n                    result = _.multiply(result, testPow(_.multiply(num, den)));\r\n                }\r\n\r\n                // Reduce square root\r\n                if(result.fname === SQRT) {\r\n                    var isEX = result.group === EX;\r\n                    var t = isEX ? result.power.multiplier.toString() : result.power.toString();\r\n                    if(even(t)) {\r\n                        var pt = isEX ? _.divide(result.power, new Symbol(2)) : new Symbol(result.power.divide(new Frac(2))),\r\n                                m = result.multiplier;\r\n                        result = _.pow(result.args[0], pt);\r\n                        result.multiplier = result.multiplier.multiply(m);\r\n                    }\r\n                }\r\n                // Detect Euler's identity\r\n                else if(!Settings.IGNORE_E && result.isE() && result.group === EX && result.power.contains('pi')\r\n                        && result.power.contains(Settings.IMAGINARY) && b.group === CB) {\r\n                    var theta = b.stripVar(Settings.IMAGINARY);\r\n                    result = _.add(trig.cos(theta), _.multiply(Symbol.imaginary(), trig.sin(theta)));\r\n                }\r\n\r\n                return result;\r\n            }\r\n            else {\r\n                if(isVector(a) && bIsSymbol) {\r\n                    a = a.map(function (x) {\r\n                        return _.pow(x, b.clone());\r\n                    });\r\n                }\r\n                else if(isMatrix(a) && bIsSymbol) {\r\n                    var M = new Matrix();\r\n                    a.eachElement(function (x, i, j) {\r\n                        M.set(i, j, _.pow(x, b.clone()));\r\n                    });\r\n                    a = M;\r\n                }\r\n                else if(aIsSymbol && isMatrix(b)) {\r\n                    var M = new Matrix();\r\n                    b.eachElement(function (x, i, j) {\r\n                        M.set(i, j, _.pow(a.clone(), x));\r\n                    });\r\n                    a = M;\r\n                }\r\n                return a;\r\n            }\r\n        };\r\n        // Gets called when the parser finds the , operator.\r\n        // Commas return a Collector object which is roughly an array\r\n        this.comma = function (a, b) {\r\n            if(!(a instanceof Collection))\r\n                a = Collection.create(a);\r\n            a.append(b);\r\n            return a;\r\n        };\r\n        // Link to modulus\r\n        this.mod = function (a, b) {\r\n            return mod(a, b);\r\n        };\r\n        // Used to slice elements from arrays\r\n        this.slice = function (a, b) {\r\n            return new Slice(a, b);\r\n        };\r\n        // The equality setter\r\n        this.equals = function (a, b) {\r\n            // Equality can only be set for group S so complain it's not\r\n            if(a.group !== S && !a.isLinear())\r\n                err('Cannot set equality for ' + a.toString());\r\n            VARS[a.value] = b.clone();\r\n            return b;\r\n        };\r\n        // Percent\r\n        this.percent = function (a) {\r\n            return _.divide(a, new Symbol(100));\r\n        };\r\n        // Set variable\r\n        this.assign = function (a, b) {\r\n            if(a instanceof Collection && b instanceof Collection) {\r\n                a.elements.map(function (x, i) {\r\n                    return _.assign(x, b.elements[i]);\r\n                });\r\n                return Vector.fromArray(b.elements);\r\n            }\r\n            if(a.parent) {\r\n                // It's referring to the parent instead. The current item can be discarded\r\n                var e = a.parent;\r\n                e.elements[e.getter] = b;\r\n                delete e.getter;\r\n                return e;\r\n            }\r\n\r\n            if(a.group !== S)\r\n                throw new NerdamerValueError('Cannot complete operation. Incorrect LH value for ' + a);\r\n            VARS[a.value] = b;\r\n            return b;\r\n        };\r\n        this.function_assign = function (a, b) {\r\n            var f = a.elements.pop();\r\n            return setFunction(f, a.elements, b);\r\n        };\r\n        // Function to quickly convert bools to Symbols\r\n        var bool2Symbol = function (x) {\r\n            return new Symbol(x === true ? 1 : 0);\r\n        };\r\n        //check for equality\r\n        this.eq = function (a, b) {\r\n            return bool2Symbol(a.equals(b));\r\n        };\r\n        //checks for greater than\r\n        this.gt = function (a, b) {\r\n            return bool2Symbol(a.gt(b));\r\n        };\r\n        //checks for greater than equal\r\n        this.gte = function (a, b) {\r\n            return bool2Symbol(a.gte(b));\r\n        };\r\n        //checks for less than\r\n        this.lt = function (a, b) {\r\n            return bool2Symbol(a.lt(b));\r\n        };\r\n        //checks for less than equal\r\n        this.lte = function (a, b) {\r\n            return bool2Symbol(a.lte(b));\r\n        };\r\n        // wraps the factorial\r\n        this.factorial = function (a) {\r\n            return this.symfunction(FACTORIAL, [a]);\r\n        };\r\n        // wraps the double factorial\r\n        this.dfactorial = function (a) {\r\n            return this.symfunction(DOUBLEFACTORIAL, [a]);\r\n        };\r\n    }\r\n    ;\r\n\r\n    /* \"STATIC\" */\r\n    // converts a number to a fraction.\r\n    var Fraction = {\r\n        /**\r\n         * Converts a decimal to a fraction\r\n         * @param {number} value\r\n         * @param {object} opts\r\n         * @returns {Array} - an array containing the denominator and the numerator\r\n         */\r\n        convert: function (value, opts) {\r\n            var frac;\r\n            if(value === 0) {\r\n                frac = [0, 1];\r\n            }\r\n            else {\r\n                if(value < 1e-6 || value > 1e20) {\r\n                    var qc = this.quickConversion(Number(value));\r\n                    if(qc[1] <= 1e20) {\r\n                        var abs = Math.abs(value);\r\n                        var sign = value / abs;\r\n                        frac = this.fullConversion(abs.toFixed((qc[1] + '').length - 1));\r\n                        frac[0] = frac[0] * sign;\r\n                    }\r\n                    else {\r\n                        frac = qc;\r\n                    }\r\n                }\r\n                else {\r\n                    frac = this.fullConversion(value);\r\n                }\r\n            }\r\n            return frac;\r\n        },\r\n        /**\r\n         * If the fraction is too small or too large this gets called instead of fullConversion method\r\n         * @param {number} dec\r\n         * @returns {Array} - an array containing the denominator and the numerator\r\n         */\r\n        quickConversion: function (value) {\r\n            var stripSign = function (s) {\r\n                // Explicitely convert to a string\r\n                if(typeof s !== 'string') {\r\n                    s = s.toString();\r\n                }\r\n\r\n                var sign = '';\r\n\r\n                // Remove and store the sign\r\n                var start = s.charAt(0);\r\n                if(start === '-') {\r\n                    s = s.substr(1, s.length);\r\n                    sign = '-';\r\n                }\r\n                else if(start === '+') {\r\n                    // Just remove the plus sign\r\n                    s = s.substr(1, s.length);\r\n                }\r\n\r\n                return {\r\n                    sign: sign,\r\n                    value: s\r\n                };\r\n            };\r\n\r\n\r\n            function convert(value) {\r\n                // Explicitely convert to a decimal\r\n                if(Scientific.isScientific(value)) {\r\n                    value = scientificToDecimal(value);\r\n                }\r\n\r\n                // Split the value into the sign and the value\r\n                var nparts = stripSign(value);\r\n\r\n                // Split it at the decimal. We'll refer to it as the coeffient parts\r\n                var cparts = nparts.value.split('.');\r\n\r\n                // Combine the entire number by removing leading zero and adding the decimal part\r\n                // This would be teh same as moving the decimal point to the end\r\n                var num;\r\n                // We're dealing with integers\r\n                if(cparts.length === 1) {\r\n                    num = cparts[0];\r\n                }\r\n                else {\r\n                    num = cparts[0] + cparts[1];\r\n                }\r\n                var n = cparts[1] ? cparts[1].length : 0;\r\n                // Generate the padding for the zeros\r\n                var den = `1${'0'.repeat(n)}`;\r\n\r\n                if(num !== '0') {\r\n                    num = num.replace(/^0+/, '');\r\n                }\r\n                return [nparts.sign + num, den];\r\n            }\r\n\r\n            return convert(value);\r\n        },\r\n        /**\r\n         * Returns a good approximation of a fraction. This method gets called by convert\r\n         * http://mathforum.org/library/drmath/view/61772.html\r\n         * Decimal To Fraction Conversion - A Simpler Version\r\n         * Dr Peterson\r\n         * @param {number} dec\r\n         * @returns {Array} - an array containing the denominator and the numerator\r\n         */\r\n        fullConversion: function (dec) {\r\n            var done = false;\r\n            // you can adjust the epsilon to a larger number if you don't need very high precision\r\n            var n1 = 0, d1 = 1, n2 = 1, d2 = 0, n = 0, q = dec, epsilon = 1e-16;\r\n            while(!done) {\r\n                n++;\r\n                if(n > 10000) {\r\n                    done = true;\r\n                }\r\n                var a = Math.floor(q);\r\n                var num = n1 + a * n2;\r\n                var den = d1 + a * d2;\r\n                var e = (q - a);\r\n                if(e < epsilon) {\r\n                    done = true;\r\n                }\r\n                q = 1 / e;\r\n                n1 = n2;\r\n                d1 = d2;\r\n                n2 = num;\r\n                d2 = den;\r\n                if(Math.abs(num / den - dec) < epsilon || n > 30) {\r\n                    done = true;\r\n                }\r\n            }\r\n            return [num, den];\r\n        }\r\n    };\r\n    //Depends on Fraction\r\n\r\n    //The latex generator\r\n    var LaTeX = {\r\n        parser: (function () {\r\n            // create a parser and strip it from everything except the items that you need\r\n            var keep = ['classes', 'setOperator', 'getOperators', 'getBrackets', 'tokenize', 'toRPN', 'tree', 'units'];\r\n            var parser = new Parser();\r\n            for(var x in parser) {\r\n                if(keep.indexOf(x) === -1)\r\n                    delete parser[x];\r\n            }\r\n            // declare the operators\r\n            parser.setOperator({\r\n                precedence: 8,\r\n                operator: '\\\\',\r\n                action: 'slash',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: true,\r\n                operation: function (e) {\r\n                    return e; // bypass the slash\r\n                }\r\n            });\r\n            parser.setOperator({\r\n                precedence: 8,\r\n                operator: '\\\\,',\r\n                action: 'slash_comma',\r\n                prefix: true,\r\n                postfix: false,\r\n                leftAssoc: true,\r\n                operation: function (e) {\r\n                    return e; // bypass the slash\r\n                }\r\n            });\r\n            // have braces not map to anything. We want them to be return as-is\r\n            var brackets = parser.getBrackets();\r\n            brackets['{'].maps_to = undefined;\r\n            return parser;\r\n        })(),\r\n        space: '~',\r\n        dot: ' \\\\cdot ',\r\n        // grab a list of supported functions but remove the excluded ones found in exclFN\r\n\r\n        latex: function (symbol, option) {\r\n            // it might be an array\r\n            if(symbol.clone) {\r\n                symbol = symbol.clone(); // leave original as-is\r\n            }\r\n            if(symbol instanceof _.classes.Collection)\r\n                symbol = symbol.elements;\r\n\r\n            if(isArray(symbol)) {\r\n                var LaTeXArray = [];\r\n                for(var i = 0; i < symbol.length; i++) {\r\n                    var sym = symbol[i];\r\n                    //This way I can generate LaTeX on an array of strings.\r\n                    if(!isSymbol(sym))\r\n                        sym = _.parse(sym);\r\n                    LaTeXArray.push(this.latex(sym, option));\r\n                }\r\n                return this.brackets(LaTeXArray.join(', '), 'square');\r\n            }\r\n\r\n            else if(isMatrix(symbol)) {\r\n                var TeX = '\\\\begin{pmatrix}\\n';\r\n                for(var i = 0; i < symbol.elements.length; i++) {\r\n                    var rowTeX = [],\r\n                            e = symbol.elements[i];\r\n                    for(var j = 0; j < e.length; j++) {\r\n                        rowTeX.push(this.latex(e[j], option));\r\n                    }\r\n                    TeX += rowTeX.join(' & ');\r\n                    if(i < symbol.elements.length - 1) {\r\n                        TeX += '\\\\\\\\\\n';\r\n                    }\r\n                }\r\n                TeX += '\\\\end{pmatrix}';\r\n                return TeX;\r\n            }\r\n\r\n            else if(isVector(symbol)) {\r\n                var TeX = '\\\\left[';\r\n                for(var i = 0; i < symbol.elements.length; i++) {\r\n                    TeX += this.latex(symbol.elements[i], option) + ' ' + (i !== symbol.elements.length - 1 ? ',\\\\,' : '');\r\n                }\r\n                TeX += '\\\\right]';\r\n                return TeX;\r\n            }\r\n\r\n            else if(isSet(symbol)) {\r\n                var TeX = '\\\\{';\r\n                for(var i = 0; i < symbol.elements.length; i++) {\r\n                    TeX += this.latex(symbol.elements[i], option) + ' ' + (i !== symbol.elements.length - 1 ? ',\\\\,' : '');\r\n                }\r\n                TeX += '\\\\}';\r\n                return TeX;\r\n            }\r\n\r\n            symbol = symbol.clone();\r\n\r\n            var decimal = (option === 'decimal' || option === 'decimals'),\r\n                    power = symbol.power,\r\n                    invert = isNegative(power),\r\n                    negative = symbol.multiplier.lessThan(0);\r\n\r\n            if(symbol.group === P && decimal) {\r\n                return String(symbol.multiplier.toDecimal() * Math.pow(symbol.value, symbol.power.toDecimal()));\r\n            }\r\n            else {\r\n                symbol.multiplier = symbol.multiplier.abs();\r\n\r\n                // if the user wants the result in decimal format then return it as such by placing it at the top part\r\n                var m_array;\r\n\r\n                if(decimal) {\r\n                    var m = String(symbol.multiplier.toDecimal());\r\n                    // if(String(m) === '1' && !decimal) m = '';\r\n                    m_array = [m, ''];\r\n                }\r\n                else {\r\n                    m_array = [symbol.multiplier.num, symbol.multiplier.den];\r\n                }\r\n                // get the value as a two part array\r\n                var v_array = this.value(symbol, invert, option, negative),\r\n                        p;\r\n                // make it all positive since we know whether to push the power to the numerator or denominator already.\r\n                if(invert)\r\n                    power.negate();\r\n                // the power is simple since it requires no additional formatting. We can get it to a\r\n                // string right away. pass in true to neglect unit powers\r\n                if(decimal) {\r\n                    p = isSymbol(power) ? LaTeX.latex(power, option) : String(power.toDecimal());\r\n                    if(String(p) === '1')\r\n                        p = '';\r\n                }\r\n                // get the latex representation\r\n                else if(isSymbol(power))\r\n                    p = this.latex(power, option);\r\n                // get it as a fraction\r\n                else\r\n                    p = this.formatFrac(power, true);\r\n                // use this array to specify if the power is getting attached to the top or the bottom\r\n                var p_array = ['', ''],\r\n                        // stick it to the top or the bottom. If it's negative then the power gets placed on the bottom\r\n                        index = invert ? 1 : 0;\r\n                p_array[index] = p;\r\n\r\n                // special case group P and decimal\r\n                var retval = (negative ? '-' : '') + this.set(m_array, v_array, p_array, symbol.group === CB);\r\n\r\n                return retval.replace(/\\+\\-/gi, '-');\r\n            }\r\n\r\n        },\r\n        // greek mapping\r\n        greek: {\r\n            alpha: '\\\\alpha',\r\n            beta: '\\\\beta',\r\n            gamma: '\\\\gamma',\r\n            delta: '\\\\delta',\r\n            epsilon: '\\\\epsilon',\r\n            zeta: '\\\\zeta',\r\n            eta: '\\\\eta',\r\n            theta: '\\\\theta',\r\n            iota: '\\\\iota',\r\n            kappa: '\\\\kappa',\r\n            lambda: '\\\\lambda',\r\n            mu: '\\\\mu',\r\n            nu: '\\\\nu',\r\n            xi: '\\\\xi',\r\n            omnikron: '\\\\omnikron',\r\n            pi: '\\\\pi',\r\n            rho: '\\\\rho',\r\n            sigma: '\\\\sigma',\r\n            tau: '\\\\tau',\r\n            upsilon: '\\\\upsilon',\r\n            phi: '\\\\phi',\r\n            chi: '\\\\chi',\r\n            psi: '\\\\psi',\r\n            omega: '\\\\omega',\r\n            Gamma: '\\\\Gamma',\r\n            Delta: '\\\\Delta',\r\n            Epsilon: '\\\\Epsilon',\r\n            Theta: '\\\\Theta',\r\n            Lambda: '\\\\Lambda',\r\n            Xi: '\\\\Xi',\r\n            Pi: '\\\\Pi',\r\n            Sigma: '\\\\Sigma',\r\n            Phi: '\\\\Phi',\r\n            Psi: '\\\\Psi',\r\n            Omega: '\\\\Omega'\r\n        },\r\n        symbols: {\r\n            arccos: '\\\\arccos',\r\n            cos: '\\\\cos',\r\n            csc: '\\\\csc',\r\n            exp: '\\\\exp',\r\n            ker: '\\\\ker',\r\n            limsup: '\\\\limsup',\r\n            min: '\\\\min',\r\n            sinh: '\\\\sinh',\r\n            arcsin: '\\\\arcsin',\r\n            cosh: '\\\\cosh',\r\n            deg: '\\\\deg',\r\n            gcd: '\\\\gcd',\r\n            lg: '\\\\lg',\r\n            ln: '\\\\ln',\r\n            Pr: '\\\\Pr',\r\n            sqrt: '\\\\sqrt',\r\n            sup: '\\\\sup',\r\n            arctan: '\\\\arctan',\r\n            cot: '\\\\cot',\r\n            det: '\\\\det',\r\n            hom: '\\\\hom',\r\n            lim: '\\\\lim',\r\n            log: '\\\\log',\r\n            LN: '\\\\LN',\r\n            sec: '\\\\sec',\r\n            tan: '\\\\tan',\r\n            arg: '\\\\arg',\r\n            coth: '\\\\coth',\r\n            dim: '\\\\dim',\r\n            inf: '\\\\inf',\r\n            liminf: '\\\\liminf',\r\n            max: '\\\\max',\r\n            sin: '\\\\sin',\r\n            tanh: '\\\\tanh'\r\n        },\r\n        // get the raw value of the symbol as an array\r\n        value: function (symbol, inverted, option, negative) {\r\n            var group = symbol.group,\r\n                    previousGroup = symbol.previousGroup,\r\n                    v = ['', ''],\r\n                    index = inverted ? 1 : 0;\r\n            /*if(group === N) // do nothing since we want to return top & bottom blank; */\r\n            if(symbol.isInfinity) {\r\n                v[index] = '\\\\infty';\r\n            }\r\n            else if(group === S || group === P || previousGroup === S || previousGroup === P || previousGroup === N) {\r\n                var value = this.formatSubscripts(symbol.value);\r\n                if(value.replace)\r\n                    value = value.replace(/(.+)_$/, '$1\\\\_');\r\n                // split it so we can check for instances of alpha as well as alpha_b\r\n                var t_varray = String(value).split('_');\r\n                var greek = this.greek[t_varray[0]];\r\n                if(greek) {\r\n                    t_varray[0] = greek;\r\n                    value = t_varray.join('_');\r\n                }\r\n                var symbol = this.symbols[t_varray[0]];\r\n                if(symbol) {\r\n                    t_varray[0] = symbol;\r\n                    value = t_varray.join('_');\r\n                }\r\n                v[index] = value;\r\n            }\r\n            else if(group === FN || previousGroup === FN) {\r\n                var name,\r\n                        input = [],\r\n                        fname = symbol.fname;\r\n                // collect the arguments\r\n                for(var i = 0; i < symbol.args.length; i++) {\r\n                    var arg = symbol.args[i], item;\r\n                    if(typeof arg === 'string')\r\n                        item = arg;\r\n                    else {\r\n                        item = this.latex(arg, option);\r\n                    }\r\n                    input.push(item);\r\n                }\r\n\r\n                if(fname === SQRT) {\r\n                    v[index] = '\\\\sqrt' + this.braces(input.join(','));\r\n                }\r\n                else if(fname === ABS) {\r\n                    v[index] = this.brackets(input.join(','), 'abs');\r\n                }\r\n                else if(fname === PARENTHESIS) {\r\n                    v[index] = this.brackets(input.join(','), 'parens');\r\n                }\r\n                else if(fname === 'limit') {\r\n                    v[index] = ' \\\\lim\\\\limits_{' + input[1] + ' \\\\to ' + input[2] + '} ' + input[0];\r\n                }\r\n                else if(fname === 'integrate') {\r\n                    v[index] = '\\\\int' + this.braces(input[0]) + this.braces('d' + input[1]);\r\n                }\r\n                else if(fname === 'defint') {\r\n                    v[index] = '\\\\int\\\\limits_' + this.braces(input[1]) + '^' + this.braces(input[2]) + ' ' + input[0] + ' d' + input[3];\r\n                }\r\n                else if(fname === FACTORIAL || fname === DOUBLEFACTORIAL) {\r\n                    var arg = symbol.args[0];\r\n                    if(arg.power.equals(1) && (arg.isComposite() || arg.isCombination())) {\r\n                        input[0] = this.brackets(input[0]);\r\n                    }\r\n                    v[index] = input[0] + (fname === FACTORIAL ? '!' : '!!');\r\n                }\r\n                else if(fname === 'floor') {\r\n                    v[index] = '\\\\left \\\\lfloor' + this.braces(input[0]) + '\\\\right \\\\rfloor';\r\n                }\r\n                else if(fname === 'ceil') {\r\n                    v[index] = '\\\\left \\\\lceil' + this.braces(input[0]) + '\\\\right \\\\rceil';\r\n                }\r\n                // capture log(a, b)\r\n                else if(fname === Settings.LOG && input.length > 1) {\r\n                    v[index] = '\\\\mathrm' + this.braces(Settings.LOG) + '_' + this.braces(input[1]) + this.brackets(input[0]);\r\n                }\r\n                // capture log(a, b)\r\n                else if(fname === Settings.LOG10) {\r\n                    v[index] = '\\\\mathrm' + this.braces(Settings.LOG) + '_' + this.braces(10) + this.brackets(input[0]);\r\n                }\r\n                else if(fname === 'sum') {\r\n                    var a = input[0],\r\n                            b = input[1],\r\n                            c = input[2],\r\n                            d = input[3];\r\n                    v[index] = '\\\\sum\\\\limits_{' + this.braces(b) + '=' + this.braces(c) + '}^' + this.braces(d) + ' ' + this.braces(a) + '';\r\n                }\r\n                else if(fname === 'product') {\r\n                    var a = input[0],\r\n                            b = input[1],\r\n                            c = input[2],\r\n                            d = input[3];\r\n                    v[index] = '\\\\prod\\\\limits_{' + this.braces(b) + '=' + this.braces(c) + '}^' + this.braces(d) + ' ' + this.braces(a) + '';\r\n                }\r\n                else if(fname === 'nthroot') {\r\n                    v[index] = '\\\\sqrt[' + input[1] + ']' + this.braces(input[0]);\r\n                }\r\n                else if(fname === 'mod') {\r\n                    v[index] = input[0] + ' \\\\bmod ' + input[1];\r\n                }\r\n                else if(fname === 'realpart') {\r\n                    v[index] = '\\\\operatorname{Re}' + this.brackets(input[0]);\r\n                }\r\n                else if(fname === 'imagpart') {\r\n                    v[index] = '\\\\operatorname{Im}' + this.brackets(input[0]);\r\n                }\r\n                else {\r\n                    var name = fname !== '' ? '\\\\mathrm' + this.braces(fname.replace(/_/g, '\\\\_')) : '';\r\n                    if(symbol.isConversion)\r\n                        v[index] = name + this.brackets(input.join(''), 'parens');\r\n                    else\r\n                        v[index] = name + this.brackets(input.join(','), 'parens');\r\n                }\r\n            }\r\n            else if(symbol.isComposite()) {\r\n                var collected = symbol.collectSymbols().sort(\r\n                        group === CP || previousGroup === CP ?\r\n                        function (a, b) {\r\n                            return b.group - a.group;\r\n                        } :\r\n                        function (a, b) {\r\n                            var x = isSymbol(a.power) ? -1 : a.power;\r\n                            var y = isSymbol(b.power) ? -1 : b.power;\r\n                            return y - x;\r\n                        }\r\n                ),\r\n                        symbols = [],\r\n                        l = collected.length;\r\n                for(var i = 0; i < l; i++) {\r\n                    symbols.push(LaTeX.latex(collected[i], option));\r\n                }\r\n                var value = symbols.join('+');\r\n\r\n                v[index] = !(symbol.isLinear() && symbol.multiplier.equals(1)) || negative ? this.brackets(value, 'parens') : value;\r\n            }\r\n            else if(group === CB || previousGroup === EX || previousGroup === CB) {\r\n                if(group === CB)\r\n                    symbol.distributeExponent();\r\n                // This almost feels a little like cheating but I need to know if I should be wrapping the symbol\r\n                // in brackets or not. We'll do this by checking the value of the numerator and then comparing it\r\n                // to whether the symbol value is \"simple\" or not.\r\n                var denominator = [],\r\n                        numerator = [];\r\n                // Generate a profile\r\n                var den_map = [], num_map = [], num_c = 0, den_c = 0;\r\n                var setBrackets = function (container, map, counter) {\r\n                    if(counter > 1 && map.length > 0) {\r\n                        var l = map.length;\r\n                        for(var i = 0; i < l; i++) {\r\n                            var idx = map[i], item = container[idx];\r\n                            if(!(/^\\\\left\\(.+\\\\right\\)\\^\\{.+\\}$/g.test(item) || /^\\\\left\\(.+\\\\right\\)$/g.test(item))) {\r\n                                container[idx] = LaTeX.brackets(item, 'parens');\r\n                            }\r\n                        }\r\n                    }\r\n                    return container;\r\n                };\r\n\r\n                // Generate latex for each of them\r\n                symbol.each(function (x) {\r\n                    var isDenom = isNegative(x.power),\r\n                            laTex;\r\n\r\n                    if(isDenom) {\r\n                        laTex = LaTeX.latex(x.invert(), option);\r\n                        den_c++;\r\n                        if(x.isComposite()) {\r\n                            if(symbol.multiplier.den != 1 && Math.abs(x.power) == 1)\r\n                                laTex = LaTeX.brackets(laTex, 'parens');\r\n                            den_map.push(denominator.length); // make a note of where the composite was found\r\n                        }\r\n\r\n                        denominator.push(laTex);\r\n                    }\r\n                    else {\r\n                        laTex = LaTeX.latex(x, option);\r\n                        num_c++;\r\n                        if(x.isComposite()) {\r\n                            if(symbol.multiplier.num != 1 && Math.abs(x.power) == 1)\r\n                                laTex = LaTeX.brackets(laTex, 'parens');\r\n                            num_map.push(numerator.length);   // make a note of where the composite was found\r\n                        }\r\n                        numerator.push(laTex);\r\n                    }\r\n                });\r\n\r\n                // Apply brackets\r\n                setBrackets(numerator, num_map, num_c);\r\n                v[0] = numerator.join(this.dot); // collapse the numerator into one string\r\n\r\n                setBrackets(denominator, den_map, den_c);\r\n                v[1] = denominator.join(this.dot);\r\n            }\r\n\r\n            return v;\r\n        },\r\n        set: function (m, v, p, combine_power) {\r\n            var isBracketed = function (v) {\r\n                return /^\\\\left\\(.+\\\\right\\)$/.test(v);\r\n            };\r\n            // format the power if it exists\r\n            if(p)\r\n                p = this.formatP(p);\r\n            // group CB will have to be wrapped since the power applies to both it's numerator and denominator\r\n            if(combine_power) {\r\n                // POSSIBLE BUG: If powers for group CB format wrong, investigate this since I might have overlooked something\r\n                // the assumption is that in every case the denonimator should be empty when dealing with CB. I can't think\r\n                // of a case where this isn't true\r\n                var tp = p[0];\r\n                p[0] = ''; // temporarily make p blank\r\n            }\r\n\r\n            // merge v and p. Not that v MUST be first since the order matters\r\n            v = this.merge(v, p);\r\n            var mn = m[0], md = m[1], vn = v[0], vd = v[1];\r\n            // filters\r\n            // if the top has a variable but the numerator is one drop it\r\n            if(vn && Number(mn) === 1)\r\n                mn = '';\r\n            // if denominator is 1 drop it always\r\n            if(Number(md) === 1)\r\n                md = '';\r\n            // prepare the top portion but check that it's not already bracketed. If it is then leave out the cdot\r\n            var top = this.join(mn, vn, !isBracketed(vn) ? this.dot : '');\r\n\r\n            // prepare the bottom portion but check that it's not already bracketed. If it is then leave out the cdot\r\n            var bottom = this.join(md, vd, !isBracketed(vd) ? this.dot : '');\r\n            // format the power if it exists\r\n            // make it a fraction if both top and bottom exists\r\n            if(top && bottom) {\r\n                var frac = this.frac(top, bottom);\r\n                if(combine_power && tp)\r\n                    frac = this.brackets(frac) + tp;\r\n                return frac;\r\n            }\r\n            // otherwise only the top exists so return that\r\n            else\r\n                return top;\r\n        },\r\n        merge: function (a, b) {\r\n            var r = [];\r\n            for(var i = 0; i < 2; i++)\r\n                r[i] = a[i] + b[i];\r\n            return r;\r\n        },\r\n        // joins together two strings if both exist\r\n        join: function (n, d, glue) {\r\n            if(!n && !d)\r\n                return '';\r\n            if(n && !d)\r\n                return n;\r\n            if(d && !n)\r\n                return d;\r\n            return n + glue + d;\r\n        },\r\n        /**\r\n         * Places subscripts in braces for proper formatting\r\n         * @param {String} v\r\n         * @returns {String}\r\n         */\r\n        formatSubscripts: function (v) {\r\n            // Split it at the underscore\r\n            var arr = v.toString().split('_');\r\n\r\n            var name = '';\r\n\r\n            // Loop over all entries except the first one\r\n            while(arr.length > 1) {\r\n                // Wrap all in braces except for the last one\r\n                if(arr.length > 0) {\r\n                    name = '_' + this.braces(arr.pop() + name);\r\n                }\r\n            }\r\n\r\n            return arr[0] + name;\r\n        },\r\n        formatP: function (p_array) {\r\n            for(var i = 0; i < 2; i++) {\r\n                var p = p_array[i];\r\n                if(p)\r\n                    p_array[i] = '^' + this.braces(p);\r\n            }\r\n            return p_array;\r\n        },\r\n        /**\r\n         * formats the fractions accordingly.\r\n         * @param {Frac} f\r\n         * @param {bool} is_pow\r\n         */\r\n        formatFrac: function (f, is_pow) {\r\n            var n = f.num.toString(),\r\n                    d = f.den.toString();\r\n            // no need to have x^1\r\n            if(is_pow && n === '1' && d === '1')\r\n                return '';\r\n            // no need to have x/1\r\n            if(d === '1')\r\n                return n;\r\n            return this.frac(n, d);\r\n        },\r\n        frac: function (n, d) {\r\n            return '\\\\frac' + this.braces(n) + this.braces(d);\r\n        },\r\n        braces: function (e) {\r\n            return '{' + e + '}';\r\n        },\r\n        brackets: function (e, typ) {\r\n            typ = typ || 'parens';\r\n            var bracketTypes = {\r\n                parens: ['(', ')'],\r\n                square: ['[', ']'],\r\n                brace: ['{', '}'],\r\n                abs: ['|', '|'],\r\n                angle: ['\\\\langle', '\\\\rangle']\r\n            };\r\n            var bracket = bracketTypes[typ];\r\n            return '\\\\left' + bracket[0] + e + '\\\\right' + bracket[1];\r\n        },\r\n        /**\r\n         * Removes extreneous tokens\r\n         * @param {Tokens[]} tokens\r\n         * @returns {Tokens[]}\r\n         */\r\n        filterTokens: function (tokens) {\r\n            var filtered = [];\r\n\r\n            // Copy over the type of the scope\r\n            if(isArray(tokens)) {\r\n                filtered.type = tokens.type;\r\n            }\r\n\r\n            // the items that need to be disposed\r\n            var d = ['\\\\', 'left', 'right', 'big', 'Big', 'large', 'Large'];\r\n            for(var i = 0, l = tokens.length; i < l; i++) {\r\n                var token = tokens[i];\r\n                var next_token = tokens[i + 1];\r\n                if(token.value === '\\\\' && next_token.value === '\\\\') {\r\n                    filtered.push(token);\r\n                }\r\n                else if(isArray(token)) {\r\n                    filtered.push(LaTeX.filterTokens(token));\r\n                }\r\n                else if(d.indexOf(token.value) === -1) {\r\n                    filtered.push(token);\r\n                }\r\n            }\r\n            return filtered;\r\n        },\r\n        /*\r\n         * Parses tokens from LaTeX string. Does not do any error checking\r\n         * @param {Tokens[]} rpn\r\n         * @returns {String}\r\n         */\r\n        parse: function (raw_tokens) {\r\n            var i, l;\r\n            var retval = '';\r\n            var tokens = this.filterTokens(raw_tokens);\r\n            var replace = {\r\n                'cdot': '',\r\n                'times': '',\r\n                'infty': 'Infinity'\r\n            };\r\n            // get the next token\r\n            var next = function (n) {\r\n                return tokens[(typeof n === 'undefined' ? ++i : i += n)];\r\n            };\r\n            var parse_next = function () {\r\n                return LaTeX.parse(next());\r\n            };\r\n            var get = function (token) {\r\n                if(token in replace) {\r\n                    return replace[token];\r\n                }\r\n                // A quirk with implicit multiplication forces us to check for *\r\n                if(token === '*' && tokens[i + 1].value === '&') {\r\n                    next(2); // skip this and the &\r\n                    return ',';\r\n                }\r\n\r\n                if(token === '&') {\r\n                    next();\r\n                    return ','; // Skip the *\r\n                }\r\n                // If it's the end of a row, return the row separator\r\n                if(token === '\\\\') {\r\n                    return '],[';\r\n                }\r\n                return token;\r\n            };\r\n\r\n            // start parsing the tokens\r\n            for(i = 0, l = tokens.length; i < l; i++) {\r\n                var token = tokens[i];\r\n                // fractions\r\n                if(token.value === 'frac') {\r\n                    // parse and wrap it in brackets\r\n                    var n = parse_next();\r\n                    var d = parse_next();\r\n                    retval += n + '/' + d;\r\n                }\r\n                else if(token.value in LaTeX.symbols) {\r\n                    if(token.value === SQRT && tokens[i + 1].type === 'vector' && tokens[i + 2].type === 'Set') {\r\n                        var base = parse_next();\r\n                        var expr = parse_next();\r\n                        retval += (expr + '^' + inBrackets('1/' + base));\r\n                    }\r\n                    else {\r\n                        retval += token.value + parse_next();\r\n                    }\r\n                }\r\n                else if(token.value === 'int') {\r\n                    var f = parse_next();\r\n                    // skip the comma\r\n                    i++;\r\n                    // get the variable of integration\r\n                    var dx = next().value;\r\n                    dx = get(dx.substring(1, dx.length));\r\n                    retval += 'integrate' + inBrackets(f + ',' + dx);\r\n                }\r\n                else if(token.value === 'int_') {\r\n                    var l = parse_next(); // lower\r\n                    i++; // skip the ^\r\n                    var u = next().value; // upper\r\n                    // if it is in brackets\r\n                    if (u === undefined) {\r\n                        i--;\r\n                        var u = parse_next();\r\n                    }\r\n                    var f = parse_next(); // function\r\n                    \r\n                    // get the variable of integration\r\n                    var dx = next().value;\r\n                    // skip the comma\r\n                    if (dx === ',') {\r\n                        var dx = next().value;\r\n                    }\r\n                    // if 'd', skip\r\n                    if (dx === 'differentialD') {\r\n                        // skip the *\r\n                        i++;\r\n                        var dx = next().value;\r\n                    }\r\n                    if (dx === 'mathrm') {\r\n                        // skip the mathrm{d}\r\n                        i++;\r\n                        var dx = next().value;\r\n                    }\r\n                    retval += 'defint' + inBrackets(f + ',' + l + ',' + u + ',' + dx);\r\n                }\r\n                else if(token.value && token.value.startsWith('int_')) {\r\n                    // var l = parse_next(); // lower\r\n                    var l = token.value.replace('int_', '')\r\n                    console.log('uppernow')\r\n                    i++; // skip the ^\r\n                    var u = next().value; // upper\r\n                    // if it is in brackets\r\n                    if (u === undefined) {\r\n                        i--;\r\n                        var u = parse_next();\r\n                    }\r\n                    var f = parse_next(); // function\r\n                    \r\n                    // get the variable of integration\r\n                    var dx = next().value;\r\n                    // skip the comma\r\n                    if (dx === ',') {\r\n                        var dx = next().value;\r\n                    }\r\n                    // if 'd', skip\r\n                    if (dx === 'differentialD') {\r\n                        // skip the *\r\n                        i++;\r\n                        var dx = next().value;\r\n                    }\r\n                    if (dx === 'mathrm') {\r\n                        // skip the mathrm{d}\r\n                        i++;\r\n                        var dx = next().value;\r\n                    }\r\n                    retval += 'defint' + inBrackets(f + ',' + l + ',' + u + ',' + dx);\r\n                }\r\n                else if(token.value === 'mathrm') {\r\n                    var f = tokens[++i][0].value;\r\n                    retval += f + parse_next();\r\n                }\r\n                // sum and product\r\n                else if(token.value === 'sum_' || token.value === 'prod_') {\r\n                    var fn = token.value === 'sum_' ? 'sum' : 'product';\r\n                    var nxt = next();\r\n                    i++; // skip the caret\r\n                    var end = parse_next();\r\n                    var f = parse_next();\r\n                    retval += fn + inBrackets([f, get(nxt[0]), get(nxt[2]), get(end)].join(','));\r\n                }\r\n                else if(token.value === 'lim_') {\r\n                    var nxt = next();\r\n                    retval += 'limit' + inBrackets([parse_next(), get(nxt[0]), get(nxt[2])].join(','));\r\n                }\r\n                else if(token.value === 'begin') {\r\n                    var nxt = next();\r\n                    if(Array.isArray(nxt)) {\r\n                        var v = nxt[0].value;\r\n                        if(v === 'matrix') {\r\n                            // Start a matrix\r\n                            retval += 'matrix([';\r\n                        }\r\n                    }\r\n                }\r\n                else if(token.value === 'end') {\r\n                    var nxt = next();\r\n                    if(Array.isArray(nxt)) {\r\n                        var v = nxt[0].value;\r\n                        if(v === 'matrix') {\r\n                            // End a matrix\r\n                            retval += '])';\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if(Array.isArray(token)) {\r\n                        retval += get(LaTeX.parse(token));\r\n                    }\r\n                    else {\r\n                        retval += get(token.value.toString());\r\n                    }\r\n                }\r\n            }\r\n\r\n            return inBrackets(retval);\r\n        }\r\n    };\r\n//Vector =======================================================================\r\n    function Vector(v) {\r\n        if(isVector(v))\r\n            this.elements = v.items.slice(0);\r\n        else if(isArray(v))\r\n            this.elements = v.slice(0);\r\n        else\r\n            this.elements = [].slice.call(arguments);\r\n    }\r\n    /*\r\n     * Generates a pre-filled array\r\n     * @param {type} n\r\n     * @param {type} val\r\n     * @returns {unresolved}\r\n     */\r\n    Vector.arrayPrefill = function (n, val) {\r\n        var a = [];\r\n        val = val || 0;\r\n        for(var i = 0; i < n; i++)\r\n            a[i] = val;\r\n        return a;\r\n    };\r\n    /**\r\n     * Generate a vector from and array\r\n     * @param {type} a\r\n     * @returns {unresolved}\r\n     */\r\n    Vector.fromArray = function (a) {\r\n        var v = new Vector();\r\n        v.elements = a;\r\n        return v;\r\n    };\r\n\r\n    /**\r\n     * Convert a Set to a Vector\r\n     * @param {Set} set\r\n     * @returns {Vector}\r\n     */\r\n    Vector.fromSet = function (set) {\r\n        return Vector.fromArray(set.elements);\r\n    };\r\n\r\n    //Ported from Sylvester.js\r\n    Vector.prototype = {\r\n        custom: true,\r\n        // Returns element i of the vector\r\n        e: function (i) {\r\n            return (i < 1 || i > this.elements.length) ? null : this.elements[i - 1];\r\n        },\r\n\r\n        set: function (i, val) {\r\n            if(!isSymbol(val))\r\n                val = new Symbol(val);\r\n            this.elements[i] = val;\r\n        },\r\n\r\n        // Returns the number of elements the vector has\r\n        dimensions: function () {\r\n            return this.elements.length;\r\n        },\r\n\r\n        // Returns the modulus ('length') of the vector\r\n        modulus: function () {\r\n            return block('SAFE', function () {\r\n                return _.pow((this.dot(this.clone())), new Symbol(0.5));\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns true iff the vector is equal to the argument\r\n        eql: function (vector) {\r\n            var n = this.elements.length;\r\n            var V = vector.elements || vector;\r\n            if(n !== V.length) {\r\n                return false;\r\n            }\r\n            do {\r\n                if(Math.abs(_.subtract(this.elements[n - 1], V[n - 1]).valueOf()) > PRECISION) {\r\n                    return false;\r\n                }\r\n            }\r\n            while(--n);\r\n            return true;\r\n        },\r\n\r\n        // Returns a clone of the vector\r\n        clone: function () {\r\n            var V = new Vector(),\r\n                    l = this.elements.length;\r\n            for(var i = 0; i < l; i++) {\r\n                //Rule: all items within the vector must have a clone method.\r\n                V.elements.push(this.elements[i].clone());\r\n            }\r\n            if(this.getter) {\r\n                V.getter = this.getter.clone();\r\n            }\r\n            return V;\r\n        },\r\n\r\n        // Maps the vector to another vector according to the given function\r\n        map: function (fn) {\r\n            var elements = [];\r\n            this.each(function (x, i) {\r\n                elements.push(fn(x, i));\r\n            });\r\n\r\n            return new Vector(elements);\r\n        },\r\n\r\n        // Calls the iterator for each element of the vector in turn\r\n        each: function (fn) {\r\n            var n = this.elements.length, k = n, i;\r\n            do {\r\n                i = k - n;\r\n                fn(this.elements[i], i + 1);\r\n            }\r\n            while(--n);\r\n        },\r\n\r\n        // Returns a new vector created by normalizing the receiver\r\n        toUnitVector: function () {\r\n            return block('SAFE', function () {\r\n                var r = this.modulus();\r\n                if(r.valueOf() === 0) {\r\n                    return this.clone();\r\n                }\r\n                return this.map(function (x) {\r\n                    return _.divide(x, r);\r\n                });\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the angle between the vector and the argument (also a vector)\r\n        angleFrom: function (vector) {\r\n            return block('SAFE', function () {\r\n                var V = vector.elements || vector;\r\n                var n = this.elements.length;\r\n                if(n !== V.length) {\r\n                    return null;\r\n                }\r\n                var dot = new Symbol(0), mod1 = new Symbol(0), mod2 = new Symbol(0);\r\n                // Work things out in parallel to save time\r\n                this.each(function (x, i) {\r\n                    dot = _.add(dot, _.multiply(x, V[i - 1]));\r\n                    mod1 = _.add(mod1, _.multiply(x, x));// will not conflict in safe block\r\n                    mod2 = _.add(mod2, _.multiply(V[i - 1], V[i - 1]));// will not conflict in safe block\r\n                });\r\n                mod1 = _.pow(mod1, new Symbol(0.5));\r\n                mod2 = _.pow(mod2, new Symbol(0.5));\r\n                var product = _.multiply(mod1, mod2);\r\n                if(product.valueOf() === 0) {\r\n                    return null;\r\n                }\r\n                var theta = _.divide(dot, product);\r\n                var theta_val = theta.valueOf();\r\n                if(theta_val < -1) {\r\n                    theta = -1;\r\n                }\r\n                if(theta_val > 1) {\r\n                    theta = 1;\r\n                }\r\n                return new Symbol(Math.acos(theta));\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns true iff the vector is parallel to the argument\r\n        isParallelTo: function (vector) {\r\n            var angle = this.angleFrom(vector).valueOf();\r\n            return (angle === null) ? null : (angle <= PRECISION);\r\n        },\r\n\r\n        // Returns true iff the vector is antiparallel to the argument\r\n        isAntiparallelTo: function (vector) {\r\n            var angle = this.angleFrom(vector).valueOf();\r\n            return (angle === null) ? null : (Math.abs(angle - Math.PI) <= PRECISION);\r\n        },\r\n\r\n        // Returns true iff the vector is perpendicular to the argument\r\n        isPerpendicularTo: function (vector) {\r\n            var dot = this.dot(vector);\r\n            return (dot === null) ? null : (Math.abs(dot) <= PRECISION);\r\n        },\r\n\r\n        // Returns the result of adding the argument to the vector\r\n        add: function (vector) {\r\n            return block('SAFE', function () {\r\n                var V = vector.elements || vector;\r\n                if(this.elements.length !== V.length) {\r\n                    return null;\r\n                }\r\n                return this.map(function (x, i) {\r\n                    return _.add(x, V[i - 1]);\r\n                });\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the result of subtracting the argument from the vector\r\n        subtract: function (vector) {\r\n            return block('SAFE', function () {\r\n                var V = vector.elements || vector;\r\n                if(this.elements.length !== V.length) {\r\n                    return null;\r\n                }\r\n                return this.map(function (x, i) {\r\n                    return _.subtract(x, V[i - 1]);\r\n                });\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the result of multiplying the elements of the vector by the argument\r\n        multiply: function (k) {\r\n            return this.map(function (x) {\r\n                return x.clone() * k.clone();\r\n            });\r\n        },\r\n\r\n        x: function (k) {\r\n            return this.multiply(k);\r\n        },\r\n\r\n        // Returns the scalar product of the vector with the argument\r\n        // Both vectors must have equal dimensionality\r\n        dot: function (vector) {\r\n            return block('SAFE', function () {\r\n                var V = vector.elements || vector;\r\n                var product = new Symbol(0), n = this.elements.length;\r\n                if(n !== V.length) {\r\n                    return null;\r\n                }\r\n                do {\r\n                    product = _.add(product, _.multiply(this.elements[n - 1], V[n - 1]));\r\n                }\r\n                while(--n);\r\n                return product;\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the vector product of the vector with the argument\r\n        // Both vectors must have dimensionality 3\r\n        cross: function (vector) {\r\n            var B = vector.elements || vector;\r\n            if(this.elements.length !== 3 || B.length !== 3) {\r\n                return null;\r\n            }\r\n            var A = this.elements;\r\n            return block('SAFE', function () {\r\n                return new Vector([\r\n                    _.subtract(_.multiply(A[1], B[2]), _.multiply(A[2], B[1])),\r\n                    _.subtract(_.multiply(A[2], B[0]), _.multiply(A[0], B[2])),\r\n                    _.subtract(_.multiply(A[0], B[1]), _.multiply(A[1], B[0]))\r\n                ]);\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the (absolute) largest element of the vector\r\n        max: function () {\r\n            var m = 0, n = this.elements.length, k = n, i;\r\n            do {\r\n                i = k - n;\r\n                if(Math.abs(this.elements[i].valueOf()) > Math.abs(m.valueOf())) {\r\n                    m = this.elements[i];\r\n                }\r\n            }\r\n            while(--n);\r\n            return m;\r\n        },\r\n        magnitude: function () {\r\n            var magnitude = new Symbol(0);\r\n            this.each(function (e) {\r\n                magnitude = _.add(magnitude, _.pow(e, new Symbol(2)));\r\n            });\r\n            return _.sqrt(magnitude);\r\n        },\r\n        // Returns the index of the first match found\r\n        indexOf: function (x) {\r\n            var index = null, n = this.elements.length, k = n, i;\r\n            do {\r\n                i = k - n;\r\n                if(index === null && this.elements[i].valueOf() === x.valueOf()) {\r\n                    index = i + 1;\r\n                }\r\n            }\r\n            while(--n);\r\n            return index;\r\n        },\r\n        text: function (x) {\r\n            return text(this);\r\n        },\r\n        toString: function () {\r\n            return this.text();\r\n        },\r\n        latex: function (option) {\r\n            var tex = [];\r\n            for(var i = 0; i < this.elements.length; i++) {\r\n                tex.push(LaTeX.latex.call(LaTeX, this.elements[i], option));\r\n            }\r\n            return '[' + tex.join(', ') + ']';\r\n        }\r\n    };\r\n\r\n//Matrix =======================================================================\r\n    function Matrix() {\r\n        var m = arguments,\r\n                l = m.length, i, el = [];\r\n        if(isMatrix(m)) { // if it's a matrix then make a clone\r\n            for(i = 0; i < l; i++) {\r\n                el.push(m[i].slice(0));\r\n            }\r\n        }\r\n        else {\r\n            var row, lw, rl;\r\n            for(i = 0; i < l; i++) {\r\n                row = m[i];\r\n                if(isVector(row))\r\n                    row = row.elements;\r\n                if(!isArray(row))\r\n                    row = [row];\r\n                rl = row.length;\r\n                if(lw && lw !== rl)\r\n                    err('Unable to create Matrix. Row dimensions do not match!');\r\n                el.push(row);\r\n                lw = rl;\r\n            }\r\n        }\r\n        this.elements = el;\r\n    }\r\n    Matrix.identity = function (n) {\r\n        var m = new Matrix();\r\n        for(var i = 0; i < n; i++) {\r\n            m.elements.push([]);\r\n            for(var j = 0; j < n; j++) {\r\n                m.set(i, j, i === j ? new Symbol(1) : new Symbol(0));\r\n            }\r\n        }\r\n        return m;\r\n    };\r\n    Matrix.fromArray = function (arr) {\r\n        function F(args) {\r\n            return Matrix.apply(this, args);\r\n        }\r\n        F.prototype = Matrix.prototype;\r\n\r\n        return new F(arr);\r\n    };\r\n    Matrix.zeroMatrix = function (rows, cols) {\r\n        var m = new Matrix();\r\n        for(var i = 0; i < rows; i++) {\r\n            m.elements.push(Vector.arrayPrefill(cols, new Symbol(0)));\r\n        }\r\n        return m;\r\n    };\r\n    Matrix.prototype = {\r\n        // needs be true to let the parser know not to try to cast it to a symbol\r\n        custom: true,\r\n        get: function (row, column) {\r\n            if(!this.elements[row])\r\n                return undefined;\r\n            return this.elements[row][column];\r\n        },\r\n        map: function (f, raw_values) {\r\n            var M = new Matrix();\r\n            this.each(function (e, i, j) {\r\n                M.set(i, j, f.call(M, e), raw_values);\r\n            });\r\n            return M;\r\n        },\r\n        set: function (row, column, value, raw) {\r\n            if(!this.elements[row])\r\n                this.elements[row] = [];\r\n            this.elements[row][column] = raw ? value : (isSymbol(value) ? value : new Symbol(value));\r\n        },\r\n        cols: function () {\r\n            return this.elements[0].length;\r\n        },\r\n        rows: function () {\r\n            return this.elements.length;\r\n        },\r\n        row: function (n) {\r\n            if(!n || n > this.cols())\r\n                return [];\r\n            return this.elements[n - 1];\r\n        },\r\n        col: function (n) {\r\n            var nr = this.rows(),\r\n                    col = [];\r\n            if(n > this.cols() || !n)\r\n                return col;\r\n            for(var i = 0; i < nr; i++) {\r\n                col.push(this.elements[i][n - 1]);\r\n            }\r\n            return col;\r\n        },\r\n        eachElement: function (fn) {\r\n            var nr = this.rows(),\r\n                    nc = this.cols(), i, j;\r\n            for(i = 0; i < nr; i++) {\r\n                for(j = 0; j < nc; j++) {\r\n                    fn.call(this, this.elements[i][j], i, j);\r\n                }\r\n            }\r\n        },\r\n        // ported from Sylvester.js\r\n        determinant: function () {\r\n            if(!this.isSquare()) {\r\n                return null;\r\n            }\r\n            var M = this.toRightTriangular();\r\n            var det = M.elements[0][0], n = M.elements.length - 1, k = n, i;\r\n            do {\r\n                i = k - n + 1;\r\n                det = _.multiply(det, M.elements[i][i]);\r\n            }\r\n            while(--n);\r\n            return det;\r\n        },\r\n        isSquare: function () {\r\n            return this.elements.length === this.elements[0].length;\r\n        },\r\n        isSingular: function () {\r\n            return this.isSquare() && this.determinant() === 0;\r\n        },\r\n        augment: function (m) {\r\n            var r = this.rows(), rr = m.rows();\r\n            if(r !== rr)\r\n                err(\"Cannot augment matrix. Rows don't match.\");\r\n            for(var i = 0; i < r; i++) {\r\n                this.elements[i] = this.elements[i].concat(m.elements[i]);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        clone: function () {\r\n            var r = this.rows(), c = this.cols(),\r\n                    m = new Matrix();\r\n            for(var i = 0; i < r; i++) {\r\n                m.elements[i] = [];\r\n                for(var j = 0; j < c; j++) {\r\n                    var symbol = this.elements[i][j];\r\n                    m.elements[i][j] = isSymbol(symbol) ? symbol.clone() : symbol;\r\n                }\r\n            }\r\n            return m;\r\n        },\r\n        // ported from Sylvester.js\r\n        invert: function () {\r\n            if(!this.isSquare())\r\n                err('Matrix is not square!');\r\n            return block('SAFE', function () {\r\n                var ni = this.elements.length, ki = ni, i, j;\r\n                var imatrix = Matrix.identity(ni);\r\n                var M = this.augment(imatrix).toRightTriangular();\r\n                var np, kp = M.elements[0].length, p, els, divisor;\r\n                var inverse_elements = [], new_element;\r\n                // Matrix is non-singular so there will be no zeros on the diagonal\r\n                // Cycle through rows from last to first\r\n                do {\r\n                    i = ni - 1;\r\n                    // First, normalise diagonal elements to 1\r\n                    els = [];\r\n                    np = kp;\r\n                    inverse_elements[i] = [];\r\n                    divisor = M.elements[i][i];\r\n                    do {\r\n                        p = kp - np;\r\n                        new_element = _.divide(M.elements[i][p], divisor.clone());\r\n                        els.push(new_element);\r\n                        // Shuffle of the current row of the right hand side into the results\r\n                        // array as it will not be modified by later runs through this loop\r\n                        if(p >= ki) {\r\n                            inverse_elements[i].push(new_element);\r\n                        }\r\n                    }\r\n                    while(--np);\r\n                    M.elements[i] = els;\r\n                    // Then, subtract this row from those above it to\r\n                    // give the identity matrix on the left hand side\r\n                    for(j = 0; j < i; j++) {\r\n                        els = [];\r\n                        np = kp;\r\n                        do {\r\n                            p = kp - np;\r\n                            els.push(_.subtract(M.elements[j][p].clone(), _.multiply(M.elements[i][p].clone(), M.elements[j][i].clone())));\r\n                        }\r\n                        while(--np);\r\n                        M.elements[j] = els;\r\n                    }\r\n                }\r\n                while(--ni);\r\n                return Matrix.fromArray(inverse_elements);\r\n            }, undefined, this);\r\n        },\r\n        // ported from Sylvester.js\r\n        toRightTriangular: function () {\r\n            return block('SAFE', function () {\r\n                var M = this.clone(), els, fel, nel,\r\n                        n = this.elements.length, k = n, i, np, kp = this.elements[0].length, p;\r\n                do {\r\n                    i = k - n;\r\n                    fel = M.elements[i][i];\r\n                    if(fel.valueOf() === 0) {\r\n                        for(var j = i + 1; j < k; j++) {\r\n                            nel = M.elements[j][i];\r\n                            if(nel && nel.valueOf() !== 0) {\r\n                                els = [];\r\n                                np = kp;\r\n                                do {\r\n                                    p = kp - np;\r\n                                    els.push(_.add(M.elements[i][p].clone(), M.elements[j][p].clone()));\r\n                                }\r\n                                while(--np);\r\n                                M.elements[i] = els;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    var fel = M.elements[i][i];\r\n                    if(fel.valueOf() !== 0) {\r\n                        for(j = i + 1; j < k; j++) {\r\n                            var multiplier = _.divide(M.elements[j][i].clone(), M.elements[i][i].clone());\r\n                            els = [];\r\n                            np = kp;\r\n                            do {\r\n                                p = kp - np;\r\n                                // Elements with column numbers up to an including the number\r\n                                // of the row that we're subtracting can safely be set straight to\r\n                                // zero, since that's the point of this routine and it avoids having\r\n                                // to loop over and correct rounding errors later\r\n                                els.push(p <= i ? new Symbol(0) :\r\n                                        _.subtract(M.elements[j][p].clone(), _.multiply(M.elements[i][p].clone(), multiplier.clone())));\r\n                            }\r\n                            while(--np);\r\n                            M.elements[j] = els;\r\n                        }\r\n                    }\r\n                }\r\n                while(--n);\r\n\r\n                return M;\r\n            }, undefined, this);\r\n        },\r\n        transpose: function () {\r\n            var rows = this.elements.length, cols = this.elements[0].length;\r\n            var M = new Matrix(), ni = cols, i, nj, j;\r\n\r\n            do {\r\n                i = cols - ni;\r\n                M.elements[i] = [];\r\n                nj = rows;\r\n                do {\r\n                    j = rows - nj;\r\n                    M.elements[i][j] = this.elements[j][i].clone();\r\n                }\r\n                while(--nj);\r\n            }\r\n            while(--ni);\r\n            return M;\r\n        },\r\n        // Returns true if the matrix can multiply the argument from the left\r\n        canMultiplyFromLeft: function (matrix) {\r\n            var l = isMatrix(matrix) ? matrix.elements.length : matrix.length;\r\n            // this.columns should equal matrix.rows\r\n            return (this.elements[0].length === l);\r\n        },\r\n        sameSize: function (matrix) {\r\n            return this.rows() === matrix.rows() && this.cols() === matrix.cols();\r\n        },\r\n        multiply: function (matrix) {\r\n            return block('SAFE', function () {\r\n                var M = matrix.elements || matrix;\r\n                if(!this.canMultiplyFromLeft(M)) {\r\n                    if(this.sameSize(matrix)) {\r\n                        var MM = new Matrix();\r\n                        var rows = this.rows();\r\n                        for(var i = 0; i < rows; i++) {\r\n                            var e = _.multiply(new Vector(this.elements[i]), new Vector(matrix.elements[i]));\r\n                            MM.elements[i] = e.elements;\r\n                        }\r\n                        return MM;\r\n                    }\r\n                    return null;\r\n                }\r\n                var ni = this.elements.length, ki = ni, i, nj, kj = M[0].length, j;\r\n                var cols = this.elements[0].length, elements = [], sum, nc, c;\r\n                do {\r\n                    i = ki - ni;\r\n                    elements[i] = [];\r\n                    nj = kj;\r\n                    do {\r\n                        j = kj - nj;\r\n                        sum = new Symbol(0);\r\n                        nc = cols;\r\n                        do {\r\n                            c = cols - nc;\r\n                            sum = _.add(sum, _.multiply(this.elements[i][c], M[c][j]));\r\n                        }\r\n                        while(--nc);\r\n                        elements[i][j] = sum;\r\n                    }\r\n                    while(--nj);\r\n                }\r\n                while(--ni);\r\n                return Matrix.fromArray(elements);\r\n            }, undefined, this);\r\n        },\r\n        add: function (matrix, callback) {\r\n            var M = new Matrix();\r\n            if(this.sameSize(matrix)) {\r\n                this.eachElement(function (e, i, j) {\r\n                    var result = _.add(e.clone(), matrix.elements[i][j].clone());\r\n                    if(callback) {\r\n                        result = callback.call(M, result, e, matrix.elements[i][j]);\r\n                    }\r\n                    M.set(i, j, result);\r\n                });\r\n            }\r\n            return M;\r\n        },\r\n        subtract: function (matrix, callback) {\r\n            var M = new Matrix();\r\n            if(this.sameSize(matrix)) {\r\n                this.eachElement(function (e, i, j) {\r\n                    var result = _.subtract(e.clone(), matrix.elements[i][j].clone());\r\n                    if(callback) {\r\n                        result = callback.call(M, result, e, matrix.elements[i][j]);\r\n                    }\r\n                    M.set(i, j, result);\r\n                });\r\n            }\r\n            return M;\r\n        },\r\n        negate: function () {\r\n            this.each(function (e) {\r\n                return e.negate();\r\n            });\r\n            return this;\r\n        },\r\n        toVector: function () {\r\n            if(this.rows() === 1 || this.cols() === 1) {\r\n                var v = new Vector();\r\n                v.elements = this.elements;\r\n                return v;\r\n            }\r\n            return this;\r\n        },\r\n        toString: function (newline, to_decimal) {\r\n            var l = this.rows(),\r\n                    s = [];\r\n            newline = newline === undefined ? '\\n' : newline;\r\n            for(var i = 0; i < l; i++) {\r\n                s.push('[' + this.elements[i].map(function (x) {\r\n                    var v = to_decimal ? x.multiplier.toDecimal() : x.toString();\r\n                    return x !== undefined ? v : '';\r\n                }).join(',') + ']');\r\n            }\r\n            return 'matrix' + inBrackets(s.join(','));\r\n        },\r\n        text: function () {\r\n            return 'matrix(' + this.elements.toString('') + ')';\r\n        },\r\n        latex: function (option) {\r\n            var cols = this.cols(), elements = this.elements;\r\n            return format('\\\\begin{vmatrix}{0}\\\\end{vmatrix}', function () {\r\n                var tex = [];\r\n                for(var row in elements) {\r\n                    var row_tex = [];\r\n                    for(var i = 0; i < cols; i++) {\r\n                        row_tex.push(LaTeX.latex.call(LaTeX, elements[row][i], option));\r\n                    }\r\n                    tex.push(row_tex.join(' & '));\r\n                }\r\n                return tex.join(' \\\\cr ');\r\n            });\r\n        }\r\n    };\r\n    // aliases\r\n    Matrix.prototype.each = Matrix.prototype.eachElement;\r\n\r\n\r\n    function Set(set) {\r\n        this.elements = [];\r\n        // if the first object isn't an array, convert it to one.\r\n        if(!isVector(set))\r\n            set = Vector.fromArray(arguments);\r\n\r\n        if(set) {\r\n            var elements = set.elements;\r\n            for(var i = 0, l = elements.length; i < l; i++) {\r\n                this.add(elements[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    Set.fromArray = function (arr) {\r\n        function F(args) {\r\n            return Set.apply(this, args);\r\n        }\r\n        F.prototype = Set.prototype;\r\n\r\n        return new F(arr);\r\n    };\r\n\r\n    Set.prototype = {\r\n        add: function (x) {\r\n            if(!this.contains(x))\r\n                this.elements.push(x.clone());\r\n        },\r\n        contains: function (x) {\r\n            for(var i = 0; i < this.elements.length; i++) {\r\n                var e = this.elements[i];\r\n                if(x.equals(e))\r\n                    return true;\r\n            }\r\n            return false;\r\n        },\r\n        each: function (f) {\r\n            var elements = this.elements;\r\n            var set = new Set();\r\n            for(var i = 0, l = elements.length; i < l; i++) {\r\n                var e = elements[i];\r\n                f.call(this, e, set, i);\r\n            }\r\n            return set;\r\n        },\r\n        clone: function () {\r\n            var set = new Set();\r\n            this.each(function (e) {\r\n                set.add(e.clone());\r\n            });\r\n            return set;\r\n        },\r\n        union: function (set) {\r\n            var _union = this.clone();\r\n            set.each(function (e) {\r\n                _union.add(e);\r\n            });\r\n\r\n            return _union;\r\n        },\r\n        difference: function (set) {\r\n            var diff = this.clone();\r\n            set.each(function (e) {\r\n                diff.remove(e);\r\n            });\r\n            return diff;\r\n        },\r\n        remove: function (element) {\r\n            for(var i = 0, l = this.elements.length; i < l; i++) {\r\n                var e = this.elements[i];\r\n                if(e.equals(element)) {\r\n                    remove(this.elements, i);\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        intersection: function (set) {\r\n            var _intersection = new Set();\r\n            var A = this;\r\n            set.each(function (e) {\r\n                if(A.contains(e)) {\r\n                    _intersection.add(e);\r\n                }\r\n                ;\r\n            });\r\n\r\n            return _intersection;\r\n        },\r\n        intersects: function (set) {\r\n            return this.intersection(set).elements.length > 0;\r\n        },\r\n        is_subset: function (set) {\r\n            var elements = set.elements;\r\n            for(var i = 0, l = elements.length; i < l; i++) {\r\n                if(!this.contains(elements[i])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n        toString: function () {\r\n            return '{' + this.elements.join(',') + '}';\r\n        }\r\n    };\r\n\r\n//build ========================================================================\r\n    var Build = {\r\n        dependencies: {\r\n            _rename: {\r\n                'Math2.factorial': 'factorial'\r\n            },\r\n            factorial: {\r\n                'Math2.gamma': Math2.gamma\r\n            },\r\n            gamma_incomplete: {\r\n                'Math2.factorial': Math2.factorial\r\n            },\r\n            Li: {\r\n                'Math2.Ei': Math2.Ei,\r\n                'Math2.bigLog': Math2.bigLog,\r\n                'Frac': Frac\r\n            },\r\n            Ci: {\r\n                'Math2.factorial': Math2.factorial\r\n            },\r\n            Ei: {\r\n                'Math2.factorial': Math2.factorial\r\n            },\r\n            Si: {\r\n                'Math2.factorial': Math2.factorial\r\n            },\r\n            Shi: {\r\n                'Math2.factorial': Math2.factorial\r\n            },\r\n            Chi: {\r\n                'isInt': isInt,\r\n                'nround': nround,\r\n                'Math2.num_integrate': Math2.num_integrate\r\n            },\r\n            factor: {\r\n                'Math2.ifactor': Math2.ifactor,\r\n                'Symbol': Symbol\r\n            },\r\n            num_integrate: {\r\n                'Math2.simpson': Math2.simpson,\r\n                'nround': nround\r\n            },\r\n            fib: {\r\n                'even': even\r\n            }\r\n        },\r\n        /* Some functions need to be made numeric safe. Build checks if there's a\r\n         * reformat option and calls that instead when compiling the function string.\r\n         */\r\n        reformat: {\r\n            // this simply extends the build function\r\n            diff: function (symbol, deps) {\r\n                var v = symbol.args[1].toString();\r\n                var f = 'var f = ' + Build.build(symbol.args[0].toString(), [v]) + ';';\r\n                deps[1] += 'var diff = ' + Math2.diff.toString() + ';';\r\n                deps[1] += f;\r\n\r\n                return ['diff(f)(' + v + ')', deps];\r\n            }\r\n        },\r\n        getProperName: function (f) {\r\n            var map = {\r\n                continued_fraction: 'continuedFraction'\r\n            };\r\n            return map[f] || f;\r\n        },\r\n        // assumes that dependences are at max 2 levels\r\n        compileDependencies: function (f, deps) {\r\n            // grab the predefined dependiences\r\n            var dependencies = Build.dependencies[f];\r\n\r\n            // the dependency string\r\n            var dep_string = deps && deps[1] ? deps[1] : '';\r\n\r\n            // the functions to be replaced\r\n            var replacements = deps && deps[0] ? deps[0] : {};\r\n\r\n            // loop through them and add them to the list\r\n            for(var x in dependencies) {\r\n                if(typeof dependencies[x] === 'object')\r\n                    continue; // skip object\r\n                var components = x.split('.'); //Math.f becomes f\r\n                // if the function isn't part of an object then reference the function itself\r\n                dep_string += 'var ' + (components.length > 1 ? components[1] : components[0]) + '=' + dependencies[x] + ';';\r\n                replacements[x] = components.pop();\r\n            }\r\n\r\n            return [replacements, dep_string];\r\n        },\r\n        getArgsDeps: function (symbol, dependencies) {\r\n            var args = symbol.args;\r\n            for(var i = 0; i < args.length; i++) {\r\n                symbol.args[i].each(function (x) {\r\n                    if(x.group === FN)\r\n                        dependencies = Build.compileDependencies(x.fname, dependencies);\r\n                });\r\n            }\r\n            return dependencies;\r\n        },\r\n        build: function (symbol, arg_array) {\r\n            symbol = block('PARSE2NUMBER', function () {\r\n                return _.parse(symbol);\r\n            }, true);\r\n            var args = variables(symbol);\r\n            var supplements = [];\r\n            var dependencies = [];\r\n            var ftext = function (symbol, xports) {\r\n                //Fix for #545 - Parentheses confuse build.\r\n                if(symbol.fname === '') {\r\n                    symbol = Symbol.unwrapPARENS(symbol);\r\n                }\r\n                xports = xports || [];\r\n                var c = [],\r\n                        group = symbol.group,\r\n                        prefix = '';\r\n\r\n                var ftext_complex = function (group) {\r\n                    var d = group === CB ? '*' : '+',\r\n                            cc = [];\r\n\r\n                    for(var x in symbol.symbols) {\r\n                        var sym = symbol.symbols[x],\r\n                                ft = ftext(sym, xports)[0];\r\n                        // wrap it in brackets if it's group PL or CP\r\n                        if(sym.isComposite())\r\n                            ft = inBrackets(ft);\r\n                        cc.push(ft);\r\n                    }\r\n                    var retval = cc.join(d);\r\n                    retval = retval && !symbol.multiplier.equals(1) ? inBrackets(retval) : retval;\r\n                    return retval;\r\n                },\r\n                        ftext_function = function (bn) {\r\n                            var retval;\r\n                            if(bn in Math)\r\n                                retval = 'Math.' + bn;\r\n                            else {\r\n                                bn = Build.getProperName(bn);\r\n                                if(supplements.indexOf(bn) === -1) { // make sure you're not adding the function twice\r\n                                    //Math2 functions aren't part of the standard javascript\r\n                                    //Math library and must be exported.\r\n                                    xports.push('var ' + bn + ' = ' + Math2[bn].toString() + '; ');\r\n                                    supplements.push(bn);\r\n                                }\r\n                                retval = bn;\r\n                            }\r\n                            retval = retval + inBrackets(symbol.args.map(function (x) {\r\n                                return ftext(x, xports)[0];\r\n                            }).join(','));\r\n\r\n                            return retval;\r\n                        };\r\n\r\n                // the multiplier\r\n                if(group === N)\r\n                    c.push(symbol.multiplier.toDecimal());\r\n                else if(symbol.multiplier.equals(-1))\r\n                    prefix = '-';\r\n                else if(!symbol.multiplier.equals(1))\r\n                    c.push(symbol.multiplier.toDecimal());\r\n                // the value\r\n                var value;\r\n\r\n                if(group === S || group === P)\r\n                    value = symbol.value;\r\n                else if(group === FN) {\r\n                    dependencies = Build.compileDependencies(symbol.fname, dependencies);\r\n                    dependencies = Build.getArgsDeps(symbol, dependencies);\r\n                    if(Build.reformat[symbol.fname]) {\r\n                        var components = Build.reformat[symbol.fname](symbol, dependencies);\r\n                        dependencies = components[1];\r\n                        value = components[0];\r\n                    }\r\n                    else {\r\n                        value = ftext_function(symbol.fname);\r\n                    }\r\n\r\n                }\r\n                else if(group === EX) {\r\n                    var pg = symbol.previousGroup;\r\n                    if(pg === N || pg === S)\r\n                        value = symbol.value;\r\n                    else if(pg === FN) {\r\n                        value = ftext_function(symbol.fname);\r\n                        dependencies = Build.compileDependencies(symbol.fname, dependencies);\r\n                        dependencies = Build.getArgsDeps(symbol, dependencies);\r\n                    }\r\n                    else\r\n                        value = ftext_complex(symbol.previousGroup);\r\n                }\r\n                else {\r\n                    value = ftext_complex(symbol.group);\r\n                }\r\n\r\n                if(symbol.group !== N && !symbol.power.equals(1)) {\r\n                    var pow = ftext(_.parse(symbol.power));\r\n                    xports.push(pow[1]);\r\n                    value = 'Math.pow' + inBrackets(value + ',' + pow[0]);\r\n                }\r\n\r\n                if(value)\r\n                    c.push(prefix + value);\r\n\r\n                return [c.join('*'), xports.join('').replace(/\\n+\\s+/g, ' ')];\r\n            };\r\n            if(arg_array) {\r\n                // Fix for issue #546\r\n                // Disable argument checking since it's a bit presumptuous.\r\n                // Consider f(x) = 5; If I explicitely pass in an argument array contain x \r\n                // this check will fail and complain since the function doesn't contain x.\r\n                /*\r\n                 for (var i = 0; i < args.length; i++) {\r\n                 var arg = args[i];\r\n                 if (arg_array.indexOf(arg) === -1)\r\n                 err(arg + ' not found in argument array');\r\n                 }\r\n                 */\r\n                args = arg_array;\r\n            }\r\n\r\n            var f_array = ftext(symbol);\r\n\r\n            // make all the substitutions;\r\n            for(var x in dependencies[0]) {\r\n                var alias = dependencies[0][x];\r\n                f_array[1] = f_array[1].replace(x, alias);\r\n                dependencies[1] = dependencies[1].replace(x, alias);\r\n            }\r\n\r\n            var f = new Function(args, (dependencies[1] || '') + f_array[1] + ' return ' + f_array[0] + ';');\r\n\r\n            return f;\r\n        }\r\n    };\r\n\r\n\r\n//finalize =====================================================================\r\n    /* FINALIZE */\r\n    (function () {\r\n        reserveNames(_.CONSTANTS);\r\n        reserveNames(_.functions);\r\n        _.initConstants();\r\n        //bug fix for error but needs to be revisited\r\n        if(!_.error)\r\n            _.error = err;\r\n\r\n        //Store the log and log10 functions\r\n        Settings.LOG_FNS = {\r\n            log: _.functions['log'],\r\n            log10: _.functions['log10']\r\n        };\r\n\r\n    })();\r\n\r\n    /* END FINALIZE */\r\n\r\n//Core =========================================================================\r\n    var Utils = {\r\n        allSame: allSame,\r\n        allNumeric: allNumeric,\r\n        arguments2Array: arguments2Array,\r\n        arrayAddSlices: arrayAddSlices,\r\n        arrayClone: arrayClone,\r\n        arrayMax: arrayMax,\r\n        arrayMin: arrayMin,\r\n        arrayEqual: arrayEqual,\r\n        arrayUnique: arrayUnique,\r\n        arrayGetVariables: arrayGetVariables,\r\n        arraySum: arraySum,\r\n        block: block,\r\n        build: Build.build,\r\n        clearU: clearU,\r\n        comboSort: comboSort,\r\n        compare: compare,\r\n        convertToVector: convertToVector,\r\n        customError: customError,\r\n        customType: customType,\r\n        decompose_fn: decompose_fn,\r\n        each: each,\r\n        evaluate: evaluate,\r\n        even: even,\r\n        evenFraction: evenFraction,\r\n        fillHoles: fillHoles,\r\n        firstObject: firstObject,\r\n        format: format,\r\n        generatePrimes: generatePrimes,\r\n        getCoeffs: getCoeffs,\r\n        getU: getU,\r\n        importFunctions: importFunctions,\r\n        inBrackets: inBrackets,\r\n        isArray: isArray,\r\n        isExpression: isExpression,\r\n        isFraction: isFraction,\r\n        isInt: isInt,\r\n        isMatrix: isMatrix,\r\n        isNegative: isNegative,\r\n        isNumericSymbol: isNumericSymbol,\r\n        isPrime: isPrime,\r\n        isReserved: isReserved,\r\n        isSymbol: isSymbol,\r\n        isVariableSymbol: isVariableSymbol,\r\n        isVector: isVector,\r\n        keys: keys,\r\n        knownVariable: knownVariable,\r\n        nroots: nroots,\r\n        remove: remove,\r\n        reserveNames: reserveNames,\r\n        range: range,\r\n        round: nround,\r\n        sameSign: sameSign,\r\n        scientificToDecimal: scientificToDecimal,\r\n        separate: separate,\r\n        stringReplace: stringReplace,\r\n        text: text,\r\n        validateName: validateName,\r\n        variables: variables,\r\n        warn: warn\r\n    };\r\n\r\n    //This contains all the parts of nerdamer and enables nerdamer's internal functions\r\n    //to be used.\r\n    var C = {\r\n        groups: Groups,\r\n        Symbol: Symbol,\r\n        Expression: Expression,\r\n        Frac: Frac,\r\n        Vector: Vector,\r\n        Matrix: Matrix,\r\n        Parser: Parser,\r\n        Scientific: Scientific,\r\n        Fraction: Fraction,\r\n        Math2: Math2,\r\n        LaTeX: LaTeX,\r\n        Utils: Utils,\r\n        PARSER: _,\r\n        PARENTHESIS: PARENTHESIS,\r\n        Settings: Settings,\r\n        err: err,\r\n        bigInt: bigInt,\r\n        bigDec: bigDec,\r\n        exceptions: exceptions\r\n    };\r\n\r\n//libExports ===================================================================\r\n    /**\r\n     *\r\n     * @param {String} expression the expression to be evaluated\r\n     * @param {Object} subs the object containing the variable values\r\n     * @param {Integer} location a specific location in the equation list to\r\n     * insert the evaluated expression\r\n     * @param {String} option additional options\r\n     * @returns {Expression}\r\n     */\r\n    var libExports = function (expression, subs, option, location) {\r\n        // Initiate the numer flag\r\n        var numer = false;\r\n\r\n        // Is the user declaring a function?\r\n        var fndec = /^([a-z_][a-z\\d\\_]*)\\(([a-z_,\\s]*)\\):=(.+)$/gi.exec(expression);\r\n        if(fndec)\r\n            return nerdamer.setFunction(fndec[1], fndec[2].split(','), fndec[3]);\r\n\r\n        // var variable, fn, args;\r\n        // Convert any expression passed in to a string\r\n        if(expression instanceof Expression)\r\n            expression = expression.toString();\r\n\r\n        // Convert it to an array for simplicity\r\n        if(!isArray(option)) {\r\n            option = typeof option === 'undefined' ? [] : [option];\r\n        }\r\n\r\n        option.forEach(function (o) {\r\n            // Turn on the numer flag if requested\r\n            if(o === 'numer') {\r\n                numer = true;\r\n                return;\r\n            }\r\n            // Wrap it in a function if requested. This only holds true for\r\n            // functions that take a single argument which is the expression\r\n            var f = _.functions[option];\r\n            // If there's a function and it takes a single argument, then wrap\r\n            // the expression in it\r\n            if(f && f[1] === 1) {\r\n                expression = `${o}(${expression})`;\r\n            }\r\n        });\r\n\r\n        var e = block('PARSE2NUMBER', function () {\r\n            return _.parse(expression, subs);\r\n        }, numer || Settings.PARSE2NUMBER);\r\n\r\n        if(location) {\r\n            EXPRESSIONS[location - 1] = e;\r\n        }\r\n        else {\r\n            EXPRESSIONS.push(e);\r\n        }\r\n\r\n        return new Expression(e);\r\n    };\r\n    /**\r\n     * Converts expression into rpn form\r\n     * @param {String} expression\r\n     * @returns {Token[]}\r\n     */\r\n    libExports.rpn = function (expression) {\r\n        return _.tokenize(_.toRPN(expression));\r\n    };\r\n\r\n    /**\r\n     * Generates LaTeX from expression string\r\n     * @param {String} e\r\n     * @param {object} opt\r\n     * @returns {String}\r\n     */\r\n    libExports.convertToLaTeX = function (e, opt) {\r\n        return _.toTeX(e, opt);\r\n    };\r\n\r\n    /**\r\n     * Converts latex to text - Very very very basic at the moment\r\n     * @param {String} e\r\n     * @returns {String}\r\n     */\r\n    libExports.convertFromLaTeX = function (e) {\r\n        var txt = LaTeX.parse(_.tokenize(e));\r\n        return new Expression(_.parse(txt));\r\n    };\r\n\r\n    /**\r\n     * Get the version of nerdamer or a loaded add-on\r\n     * @param {String} add_on - The add-on being checked\r\n     * @returns {String} returns the version of nerdamer\r\n     */\r\n    libExports.version = function (add_on) {\r\n        if(add_on) {\r\n            try {\r\n                return C[add_on].version;\r\n            }\r\n            catch(e) {\r\n                return \"No module named \" + add_on + \" found!\";\r\n            }\r\n        }\r\n        return version;\r\n    };\r\n\r\n    /**\r\n     * Get nerdamer generated warnings\r\n     * @returns {String[]}\r\n     */\r\n    libExports.getWarnings = function () {\r\n        return WARNINGS;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {String} constant The name of the constant to be set\r\n     * @param {mixed} value The value of the constant\r\n     * @returns {Object} Returns the nerdamer object\r\n     */\r\n    libExports.setConstant = function (constant, value) {\r\n        validateName(constant);\r\n        if(!isReserved(constant)) {\r\n            //fix for issue #127\r\n            if(value === 'delete' || value === '') {\r\n                delete _.CONSTANTS[constant];\r\n            }\r\n            else {\r\n                if(isNaN(value))\r\n                    throw new NerdamerTypeError('Constant must be a number!');\r\n                _.CONSTANTS[constant] = value;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Returns the value of a previously set constant\r\n     * @param {type} constant\r\n     * @returns {String}\r\n     */\r\n    libExports.getConstant = function (constant) {\r\n        return String(_.constant[constant]);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {String} name The name of the function\r\n     * @param {Array} params_array A list containing the parameter name of the functions\r\n     * @param {String} body The body of the function\r\n     * @returns {Boolean} returns true if succeeded and falls on fail\r\n     * @example nerdamer.setFunction('f',['x'], 'x^2+2');\r\n     */\r\n    libExports.setFunction = setFunction;\r\n\r\n    /**\r\n     *\r\n     * @returns {C} Exports the nerdamer core functions and objects\r\n     */\r\n    libExports.getCore = function () {\r\n        return C;\r\n    };\r\n\r\n    libExports.getExpression = libExports.getEquation = Expression.getExpression;\r\n\r\n    /**\r\n     *\r\n     * @param {Boolean} asArray The returned names are returned as an array if this is set to true;\r\n     * @returns {String|Array}\r\n     */\r\n    libExports.reserved = function (asArray) {\r\n        if(asArray) {\r\n            return RESERVED;\r\n        }\r\n        return RESERVED.join(', ');\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {Integer} equation_number the number of the equation to clear.\r\n     * If 'all' is supplied then all equations are cleared\r\n     * @param {Boolean} keep_EXPRESSIONS_fixed use true if you don't want to keep EXPRESSIONS length fixed\r\n     * @returns {Object} Returns the nerdamer object\r\n     */\r\n    libExports.clear = function (equation_number, keep_EXPRESSIONS_fixed) {\r\n        if(equation_number === 'all') {\r\n            EXPRESSIONS = [];\r\n        }\r\n        else if(equation_number === 'last') {\r\n            EXPRESSIONS.pop();\r\n        }\r\n        else if(equation_number === 'first') {\r\n            EXPRESSIONS.shift();\r\n        }\r\n        else {\r\n            var index = !equation_number ? EXPRESSIONS.length : equation_number - 1;\r\n            keep_EXPRESSIONS_fixed === true ? EXPRESSIONS[index] = undefined : remove(EXPRESSIONS, index);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Alias for nerdamer.clear('all')\r\n     */\r\n    libExports.flush = function () {\r\n        this.clear('all');\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {Boolean} asObject\r\n     * @param {Boolean} asLaTeX\r\n     * @param {String|String[]} option\r\n     * @returns {Array}\r\n     */\r\n    libExports.expressions = function (asObject, asLaTeX, option) {\r\n        var result = asObject ? {} : [];\r\n        for(var i = 0; i < EXPRESSIONS.length; i++) {\r\n            var eq = asLaTeX ? LaTeX.latex(EXPRESSIONS[i], option) : text(EXPRESSIONS[i], option);\r\n            asObject ? result[i + 1] = eq : result.push(eq);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    //the method for registering modules\r\n    libExports.register = function (obj) {\r\n        var core = this.getCore();\r\n\r\n        if(isArray(obj)) {\r\n            for(var i = 0; i < obj.length; i++) {\r\n                if(obj)\r\n                    this.register(obj[i]);\r\n            }\r\n        }\r\n        else if(obj && Settings.exclude.indexOf(obj.name) === -1) {\r\n            //make sure all the dependencies are available\r\n            if(obj.dependencies) {\r\n                for(var i = 0; i < obj.dependencies.length; i++)\r\n                    if(!core[obj.dependencies[i]])\r\n                        throw new Error(format('{0} requires {1} to be loaded!', obj.name, obj.dependencies[i]));\r\n            }\r\n            //if no parent object is provided then the function does not have an address and cannot be called directly\r\n            var parent_obj = obj.parent,\r\n                    fn = obj.build.call(core); //call constructor to get function\r\n            if(parent_obj) {\r\n                if(!core[parent_obj])\r\n                    core[obj.parent] = {};\r\n\r\n                var ref_obj = parent_obj === 'nerdamer' ? this : core[parent_obj];\r\n                //attach the function to the core\r\n                ref_obj[obj.name] = fn;\r\n            }\r\n            if(obj.visible)\r\n                _.functions[obj.name] = [fn, obj.numargs]; //make the function available\r\n\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {String} name variable name\r\n     * @returns {boolean} validates if the profided string is a valid variable name\r\n     */\r\n    libExports.validateName = validateName;\r\n\r\n    /**\r\n     * @param {String} varname variable name\r\n     * @returns {boolean} validates if the profided string is a valid variable name\r\n     */\r\n    libExports.validVarName = function (varname) {\r\n        try {\r\n            validateName(varname);\r\n            return RESERVED.indexOf(varname) === -1;\r\n        }\r\n        catch(e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @returns {Array} Array of functions currently supported by nerdamer\r\n     */\r\n    libExports.supported = function () {\r\n        return keys(_.functions);\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @returns {Number} The number equations/expressions currently loaded\r\n     */\r\n    libExports.numEquations = libExports.numExpressions = function () {\r\n        return EXPRESSIONS.length;\r\n    };\r\n    /* END EXPORTS */\r\n\r\n    /**\r\n     *\r\n     * @param {String} v variable to be set\r\n     * @param {String} val value of variable. This can be a variable expression or number\r\n     * @returns {Object} Returns the nerdamer object\r\n     */\r\n    libExports.setVar = function (v, val) {\r\n        validateName(v);\r\n        //check if it's not already a constant\r\n        if(v in _.CONSTANTS)\r\n            err('Cannot set value for constant ' + v);\r\n        if(val === 'delete' || val === '')\r\n            delete VARS[v];\r\n        else {\r\n            VARS[v] = isSymbol(val) ? val : _.parse(val);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Returns the value of a set variable\r\n     * @param {type} v\r\n     * @returns {varies}\r\n     */\r\n    libExports.getVar = function (v) {\r\n        return VARS[v];\r\n    };\r\n    /**\r\n     * Clear the variables from the VARS object\r\n     * @returns {Object} Returns the nerdamer object\r\n     */\r\n    libExports.clearVars = function () {\r\n        VARS = {};\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {Function} loader\r\n     * @returns {nerdamer}\r\n     */\r\n    libExports.load = function (loader) {\r\n        loader.call(this);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @param {String} output - output format. Can be 'object' (just returns the VARS object), 'text' or 'latex'. Default: 'text'\r\n     * @param {String|String[]} option\r\n     * @returns {Object} Returns an object with the variables\r\n     */\r\n    libExports.getVars = function (output, option) {\r\n        output = output || 'text';\r\n        var variables = {};\r\n        if(output === 'object')\r\n            variables = VARS;\r\n        else {\r\n            for(var v in VARS) {\r\n                if(output === 'latex') {\r\n                    variables[v] = VARS[v].latex(option);\r\n                }\r\n                else if(output === 'text') {\r\n                    variables[v] = VARS[v].text(option);\r\n                }\r\n            }\r\n        }\r\n        return variables;\r\n    };\r\n\r\n    /**\r\n     * Set the value of a setting\r\n     * @param {String} setting The setting to be changed\r\n     * @param {boolean} value\r\n     */\r\n    libExports.set = function (setting, value) {\r\n        //current options:\r\n        //PARSE2NUMBER, suppress_errors\r\n        if(typeof setting === 'object')\r\n            for(var x in setting) {\r\n                libExports.set(x, setting[x]);\r\n            }\r\n\r\n        var disallowed = ['SAFE'];\r\n        if(disallowed.indexOf(setting) !== -1)\r\n            err('Cannot modify setting: ' + setting);\r\n\r\n        if(setting === 'PRECISION') {\r\n            bigDec.set({precision: value});\r\n            Settings.PRECISION = value;\r\n\r\n            // Avoid that nerdamer puts out garbage after 21 decimal place\r\n            if(value > 21) {\r\n                this.set('USE_BIG', true);\r\n            }\r\n        }\r\n        else if(setting === 'USE_LN' && value === true) {\r\n            //set log as LN\r\n            Settings.LOG = 'LN';\r\n            //set log10 as log\r\n            Settings.LOG10 = 'log';\r\n            //point the functions in the right direction\r\n            _.functions['log'] = Settings.LOG_FNS.log10; //log is now log10\r\n            //the log10 function must be explicitly set\r\n            _.functions['log'][0] = function (x) {\r\n                if(x.isConstant())\r\n                    return new Symbol(Math.log10(x));\r\n                return _.symfunction(Settings.LOG10, [x]);\r\n            };\r\n            _.functions['LN'] = Settings.LOG_FNS.log; //LN is now log\r\n\r\n            //remove log10\r\n            delete _.functions['log10'];\r\n        }\r\n        else\r\n            Settings[setting] = value;\r\n    };\r\n\r\n    /**\r\n     * Get the value of a setting\r\n     * @param {type} setting\r\n     * @returns {undefined}\r\n     */\r\n    libExports.get = function (setting) {\r\n        return Settings[setting];\r\n    };\r\n\r\n    /**\r\n     * This functions makes internal functions available externally\r\n     * @param {bool} override Override the functions when calling updateAPI if it exists\r\n     */\r\n    libExports.updateAPI = function (override) {\r\n        //Map internal functions to external ones\r\n        var linker = function (fname) {\r\n            return function () {\r\n                var args = [].slice.call(arguments);\r\n                for(var i = 0; i < args.length; i++)\r\n                    args[i] = _.parse(args[i]);\r\n                return new Expression(block('PARSE2NUMBER', function () {\r\n                    return _.callfunction(fname, args);\r\n                }));\r\n            };\r\n        };\r\n        //perform the mapping\r\n        for(var x in _.functions)\r\n            if(!(x in libExports) || override)\r\n                libExports[x] = linker(x);\r\n    };\r\n\r\n    libExports.replaceFunction = function (name, fn, num_args) {\r\n        var existing = _.functions[name];\r\n        var new_num_args = typeof num_args === 'undefined' ? existing[1] : num_args;\r\n        _.functions[name] = [fn.call(undefined, existing[0], C), new_num_args];\r\n    };\r\n\r\n    libExports.setOperator = function (operator, shift) {\r\n        _.setOperator(operator, shift);\r\n    };\r\n\r\n    libExports.getOperator = function (operator) {\r\n        return _.getOperator(operator);\r\n    };\r\n\r\n    libExports.aliasOperator = function (operator, withOperator) {\r\n        _.aliasOperator(operator, withOperator);\r\n    };\r\n\r\n    libExports.tree = function (expression) {\r\n        return _.tree(_.toRPN(_.tokenize(expression)));\r\n    };\r\n\r\n    libExports.htmlTree = function (expression, indent) {\r\n        var tree = this.tree(expression);\r\n\r\n        return '<div class=\"tree\">\\n' +\r\n                '    <ul>\\n' +\r\n                '        <li>\\n' +\r\n                tree.toHTML(3, indent) + '\\n' +\r\n                '        </li>\\n' +\r\n                '    </ul>\\n' +\r\n                '</div>';\r\n    };\r\n\r\n    libExports.addPeeker = function (name, f) {\r\n        if(_.peekers[name])\r\n            _.peekers[name].push(f);\r\n    };\r\n\r\n    libExports.removePeeker = function (name, f) {\r\n        remove(_.peekers[name], f);\r\n    };\r\n\r\n    libExports.parse = function (e) {\r\n        return String(e).split(';').map(function (x) {\r\n            return _.parse(x);\r\n        });\r\n    };\r\n\r\n    libExports.updateAPI();\r\n\r\n    return libExports; //Done\r\n//imports ======================================================================\r\n})({\r\n    //https://github.com/peterolson/BigInteger.js\r\n    bigInt: (function(){\r\n        var bigInt=function(undefined){\"use strict\";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),LOG_MAX_INT=Math.log(MAX_INT);function Integer(v,radix){if(typeof v===\"undefined\")return Integer[0];if(typeof radix!==\"undefined\")return+radix===10?parseValue(v):parseBase(v,radix);return parseValue(v)}function BigInteger(value,sign){this.value=value;this.sign=sign;this.isSmall=false}BigInteger.prototype=Object.create(Integer.prototype);function SmallInteger(value){this.value=value;this.sign=value<0;this.isSmall=true}SmallInteger.prototype=Object.create(Integer.prototype);function isPrecise(n){return-MAX_INT<n&&n<MAX_INT}function smallToArray(n){if(n<1e7)return[n];if(n<1e14)return[n%1e7,Math.floor(n/1e7)];return[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)]}function arrayToSmall(arr){trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0){switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE}}return arr}function trim(v){var i=v.length;while(v[--i]===0);v.length=i+1}function createArray(length){var x=new Array(length);var i=-1;while(++i<length){x[i]=0}return x}function truncate(n){if(n>0)return Math.floor(n);return Math.ceil(n)}function add(a,b){var l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE,sum,i;for(i=0;i<l_b;i++){sum=a[i]+b[i]+carry;carry=sum>=base?1:0;r[i]=sum-carry*base}while(i<l_a){sum=a[i]+carry;carry=sum===base?1:0;r[i++]=sum-carry*base}if(carry>0)r.push(carry);return r}function addAny(a,b){if(a.length>=b.length)return add(a,b);return add(b,a)}function addSmall(a,carry){var l=a.length,r=new Array(l),base=BASE,sum,i;for(i=0;i<l;i++){sum=a[i]-base+carry;carry=Math.floor(sum/base);r[i]=sum-carry*base;carry+=1}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.subtract(n.negate())}var a=this.value,b=n.value;if(n.isSmall){return new BigInteger(addSmall(a,Math.abs(b)),this.sign)}return new BigInteger(addAny(a,b),this.sign)};BigInteger.prototype.plus=BigInteger.prototype.add;SmallInteger.prototype.add=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.subtract(n.negate())}var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b))}return new BigInteger(addSmall(b,Math.abs(a)),a<0)};SmallInteger.prototype.plus=SmallInteger.prototype.add;function subtract(a,b){var a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE,i,difference;for(i=0;i<b_l;i++){difference=a[i]-borrow-b[i];if(difference<0){difference+=base;borrow=1}else borrow=0;r[i]=difference}for(i=b_l;i<a_l;i++){difference=a[i]-borrow;if(difference<0)difference+=base;else{r[i++]=difference;break}r[i]=difference}for(;i<a_l;i++){r[i]=a[i]}trim(r);return r}function subtractAny(a,b,sign){var value;if(compareAbs(a,b)>=0){value=subtract(a,b)}else{value=subtract(b,a);sign=!sign}value=arrayToSmall(value);if(typeof value===\"number\"){if(sign)value=-value;return new SmallInteger(value)}return new BigInteger(value,sign)}function subtractSmall(a,b,sign){var l=a.length,r=new Array(l),carry=-b,base=BASE,i,difference;for(i=0;i<l;i++){difference=a[i]+carry;carry=Math.floor(difference/base);difference%=base;r[i]=difference<0?difference+base:difference}r=arrayToSmall(r);if(typeof r===\"number\"){if(sign)r=-r;return new SmallInteger(r)}return new BigInteger(r,sign)}BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.add(n.negate())}var a=this.value,b=n.value;if(n.isSmall)return subtractSmall(a,Math.abs(b),this.sign);return subtractAny(a,b,this.sign)};BigInteger.prototype.minus=BigInteger.prototype.subtract;SmallInteger.prototype.subtract=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.add(n.negate())}var b=n.value;if(n.isSmall){return new SmallInteger(a-b)}return subtractSmall(b,Math.abs(a),a>=0)};SmallInteger.prototype.minus=SmallInteger.prototype.subtract;BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)};SmallInteger.prototype.negate=function(){var sign=this.sign;var small=new SmallInteger(-this.value);small.sign=!sign;return small};BigInteger.prototype.abs=function(){return new BigInteger(this.value,false)};SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))};function multiplyLong(a,b){var a_l=a.length,b_l=b.length,l=a_l+b_l,r=createArray(l),base=BASE,product,carry,i,a_i,b_j;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j){b_j=b[j];product=a_i*b_j+r[i+j];carry=Math.floor(product/base);r[i+j]=product-carry*base;r[i+j+1]+=carry}}trim(r);return r}function multiplySmall(a,b){var l=a.length,r=new Array(l),base=BASE,carry=0,product,i;for(i=0;i<l;i++){product=a[i]*b+carry;carry=Math.floor(product/base);r[i]=product-carry*base}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}function shiftLeft(x,n){var r=[];while(n-- >0)r.push(0);return r.concat(x)}function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n);var ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,d));var product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),n)),shiftLeft(bd,2*n));trim(product);return product}function useKaratsuba(l1,l2){return-.012*l1-.012*l2+15e-6*l1*l2>0}BigInteger.prototype.multiply=function(v){var n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign,abs;if(n.isSmall){if(b===0)return Integer[0];if(b===1)return this;if(b===-1)return this.negate();abs=Math.abs(b);if(abs<BASE){return new BigInteger(multiplySmall(a,abs),sign)}b=smallToArray(abs)}if(useKaratsuba(a.length,b.length))return new BigInteger(multiplyKaratsuba(a,b),sign);return new BigInteger(multiplyLong(a,b),sign)};BigInteger.prototype.times=BigInteger.prototype.multiply;function multiplySmallAndArray(a,b,sign){if(a<BASE){return new BigInteger(multiplySmall(b,a),sign)}return new BigInteger(multiplyLong(b,smallToArray(a)),sign)}SmallInteger.prototype._multiplyBySmall=function(a){if(isPrecise(a.value*this.value)){return new SmallInteger(a.value*this.value)}return multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign)};BigInteger.prototype._multiplyBySmall=function(a){if(a.value===0)return Integer[0];if(a.value===1)return this;if(a.value===-1)return this.negate();return multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign)};SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this)};SmallInteger.prototype.times=SmallInteger.prototype.multiply;function square(a){var l=a.length,r=createArray(l+l),base=BASE,product,carry,i,a_i,a_j;for(i=0;i<l;i++){a_i=a[i];carry=0-a_i*a_i;for(var j=i;j<l;j++){a_j=a[j];product=2*(a_i*a_j)+r[i+j]+carry;carry=Math.floor(product/base);r[i+j]=product-carry*base}r[i+l]=carry}trim(r);return r}BigInteger.prototype.square=function(){return new BigInteger(square(this.value),false)};SmallInteger.prototype.square=function(){var value=this.value*this.value;if(isPrecise(value))return new SmallInteger(value);return new BigInteger(square(smallToArray(Math.abs(this.value))),false)};function divMod1(a,b){var a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda),quotientDigit,shift,carry,borrow,i,l,q;if(remainder.length<=a_l)remainder.push(0);divisor.push(0);divisorMostSignificantDigit=divisor[b_l-1];for(shift=a_l-b_l;shift>=0;shift--){quotientDigit=base-1;if(remainder[shift+b_l]!==divisorMostSignificantDigit){quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit)}carry=0;borrow=0;l=divisor.length;for(i=0;i<l;i++){carry+=quotientDigit*divisor[i];q=Math.floor(carry/base);borrow+=remainder[shift+i]-(carry-q*base);carry=q;if(borrow<0){remainder[shift+i]=borrow+base;borrow=-1}else{remainder[shift+i]=borrow;borrow=0}}while(borrow!==0){quotientDigit-=1;carry=0;for(i=0;i<l;i++){carry+=remainder[shift+i]-base+divisor[i];if(carry<0){remainder[shift+i]=carry+base;carry=0}else{remainder[shift+i]=carry;carry=1}}borrow+=carry}result[shift]=quotientDigit}remainder=divModSmall(remainder,lambda)[0];return[arrayToSmall(result),arrayToSmall(remainder)]}function divMod2(a,b){var a_l=a.length,b_l=b.length,result=[],part=[],base=BASE,guess,xlen,highx,highy,check;while(a_l){part.unshift(a[--a_l]);trim(part);if(compareAbs(part,b)<0){result.push(0);continue}xlen=part.length;highx=part[xlen-1]*base+part[xlen-2];highy=b[b_l-1]*base+b[b_l-2];if(xlen>b_l){highx=(highx+1)*base}guess=Math.ceil(highx/highy);do{check=multiplySmall(b,guess);if(compareAbs(check,part)<=0)break;guess--}while(guess);result.push(guess);part=subtract(part,check)}result.reverse();return[arrayToSmall(result),arrayToSmall(part)]}function divModSmall(value,lambda){var length=value.length,quotient=createArray(length),base=BASE,i,q,remainder,divisor;remainder=0;for(i=length-1;i>=0;--i){divisor=remainder*base+value[i];q=truncate(divisor/lambda);remainder=divisor-q*lambda;quotient[i]=q|0}return[quotient,remainder|0]}function divModAny(self,v){var value,n=parseValue(v);var a=self.value,b=n.value;var quotient;if(b===0)throw new Error(\"Cannot divide by zero\");if(self.isSmall){if(n.isSmall){return[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)]}return[Integer[0],self]}if(n.isSmall){if(b===1)return[self,Integer[0]];if(b==-1)return[self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<BASE){value=divModSmall(a,abs);quotient=arrayToSmall(value[0]);var remainder=value[1];if(self.sign)remainder=-remainder;if(typeof quotient===\"number\"){if(self.sign!==n.sign)quotient=-quotient;return[new SmallInteger(quotient),new SmallInteger(remainder)]}return[new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)]}b=smallToArray(abs)}var comparison=compareAbs(a,b);if(comparison===-1)return[Integer[0],self];if(comparison===0)return[Integer[self.sign===n.sign?1:-1],Integer[0]];if(a.length+b.length<=200)value=divMod1(a,b);else value=divMod2(a,b);quotient=value[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;if(typeof quotient===\"number\"){if(qSign)quotient=-quotient;quotient=new SmallInteger(quotient)}else quotient=new BigInteger(quotient,qSign);if(typeof mod===\"number\"){if(mSign)mod=-mod;mod=new SmallInteger(mod)}else mod=new BigInteger(mod,mSign);return[quotient,mod]}BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return{quotient:result[0],remainder:result[1]}};SmallInteger.prototype.divmod=BigInteger.prototype.divmod;BigInteger.prototype.divide=function(v){return divModAny(this,v)[0]};SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide;BigInteger.prototype.mod=function(v){return divModAny(this,v)[1]};SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod;BigInteger.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,value,x,y;if(b===0)return Integer[1];if(a===0)return Integer[0];if(a===1)return Integer[1];if(a===-1)return n.isEven()?Integer[1]:Integer[-1];if(n.sign){return Integer[0]}if(!n.isSmall)throw new Error(\"The exponent \"+n.toString()+\" is too large.\");if(this.isSmall){if(isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value))}x=this;y=Integer[1];while(true){if(b&1===1){y=y.times(x);--b}if(b===0)break;b/=2;x=x.square()}return y};SmallInteger.prototype.pow=BigInteger.prototype.pow;BigInteger.prototype.modPow=function(exp,mod){exp=parseValue(exp);mod=parseValue(mod);if(mod.isZero())throw new Error(\"Cannot take modPow with modulus 0\");var r=Integer[1],base=this.mod(mod);while(exp.isPositive()){if(base.isZero())return Integer[0];if(exp.isOdd())r=r.multiply(base).mod(mod);exp=exp.divide(2);base=base.square().mod(mod)}return r};SmallInteger.prototype.modPow=BigInteger.prototype.modPow;function compareAbs(a,b){if(a.length!==b.length){return a.length>b.length?1:-1}for(var i=a.length-1;i>=0;i--){if(a[i]!==b[i])return a[i]>b[i]?1:-1}return 0}BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall)return 1;return compareAbs(a,b)};SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;if(n.isSmall){b=Math.abs(b);return a===b?0:a>b?1:-1}return-1};BigInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(this.sign!==n.sign){return n.sign?1:-1}if(n.isSmall){return this.sign?-1:1}return compareAbs(a,b)*(this.sign?-1:1)};BigInteger.prototype.compareTo=BigInteger.prototype.compare;SmallInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall){return a==b?0:a>b?1:-1}if(a<0!==n.sign){return a<0?-1:1}return a<0?1:-1};SmallInteger.prototype.compareTo=SmallInteger.prototype.compare;BigInteger.prototype.equals=function(v){return this.compare(v)===0};SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals;BigInteger.prototype.notEquals=function(v){return this.compare(v)!==0};SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals;BigInteger.prototype.greater=function(v){return this.compare(v)>0};SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater;BigInteger.prototype.lesser=function(v){return this.compare(v)<0};SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser;BigInteger.prototype.greaterOrEquals=function(v){return this.compare(v)>=0};SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals;BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0};SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals;BigInteger.prototype.isEven=function(){return(this.value[0]&1)===0};SmallInteger.prototype.isEven=function(){return(this.value&1)===0};BigInteger.prototype.isOdd=function(){return(this.value[0]&1)===1};SmallInteger.prototype.isOdd=function(){return(this.value&1)===1};BigInteger.prototype.isPositive=function(){return!this.sign};SmallInteger.prototype.isPositive=function(){return this.value>0};BigInteger.prototype.isNegative=function(){return this.sign};SmallInteger.prototype.isNegative=function(){return this.value<0};BigInteger.prototype.isUnit=function(){return false};SmallInteger.prototype.isUnit=function(){return Math.abs(this.value)===1};BigInteger.prototype.isZero=function(){return false};SmallInteger.prototype.isZero=function(){return this.value===0};BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v);var value=n.value;if(value===0)return false;if(value===1)return true;if(value===2)return this.isEven();return this.mod(n).equals(Integer[0])};SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy;function isBasicPrime(v){var n=v.abs();if(n.isUnit())return false;if(n.equals(2)||n.equals(3)||n.equals(5))return true;if(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))return false;if(n.lesser(49))return true}function millerRabinTest(n,a){var nPrev=n.prev(),b=nPrev,r=0,d,t,i,x;while(b.isEven())b=b.divide(2),r++;next:for(i=0;i<a.length;i++){if(n.lesser(a[i]))continue;x=bigInt(a[i]).modPow(b,n);if(x.equals(Integer[1])||x.equals(nPrev))continue;for(d=r-1;d!=0;d--){x=x.square().mod(n);if(x.isUnit())return false;if(x.equals(nPrev))continue next}return false}return true}BigInteger.prototype.isPrime=function(strict){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var bits=n.bitLength();if(bits<=64)return millerRabinTest(n,[2,325,9375,28178,450775,9780504,1795265022]);var logN=Math.log(2)*bits;var t=Math.ceil(strict===true?2*Math.pow(logN,2):logN);for(var a=[],i=0;i<t;i++){a.push(bigInt(i+2))}return millerRabinTest(n,a)};SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime;BigInteger.prototype.isProbablePrime=function(iterations){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var t=iterations===undefined?5:iterations;for(var a=[],i=0;i<t;i++){a.push(bigInt.randBetween(2,n.minus(2)))}return millerRabinTest(n,a)};SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime;BigInteger.prototype.modInv=function(n){var t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs(),q,lastT,lastR;while(!newR.equals(bigInt.zero)){q=r.divide(newR);lastT=t;lastR=r;t=newT;r=newR;newT=lastT.subtract(q.multiply(newT));newR=lastR.subtract(q.multiply(newR))}if(!r.equals(1))throw new Error(this.toString()+\" and \"+n.toString()+\" are not co-prime\");if(t.compare(0)===-1){t=t.add(n)}if(this.isNegative()){return t.negate()}return t};SmallInteger.prototype.modInv=BigInteger.prototype.modInv;BigInteger.prototype.next=function(){var value=this.value;if(this.sign){return subtractSmall(value,1,this.sign)}return new BigInteger(addSmall(value,1),this.sign)};SmallInteger.prototype.next=function(){var value=this.value;if(value+1<MAX_INT)return new SmallInteger(value+1);return new BigInteger(MAX_INT_ARR,false)};BigInteger.prototype.prev=function(){var value=this.value;if(this.sign){return new BigInteger(addSmall(value,1),true)}return subtractSmall(value,1,this.sign)};SmallInteger.prototype.prev=function(){var value=this.value;if(value-1>-MAX_INT)return new SmallInteger(value-1);return new BigInteger(MAX_INT_ARR,true)};var powersOfTwo=[1];while(2*powersOfTwo[powersOfTwo.length-1]<=BASE)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return(typeof n===\"number\"||typeof n===\"string\")&&+Math.abs(n)<=BASE||n instanceof BigInteger&&n.value.length<=1}BigInteger.prototype.shiftLeft=function(n){if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}n=+n;if(n<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;while(n>=powers2Length){result=result.multiply(highestPower2);n-=powers2Length-1}return result.multiply(powersOfTwo[n])};SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft;BigInteger.prototype.shiftRight=function(n){var remQuo;if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}n=+n;if(n<0)return this.shiftLeft(-n);var result=this;while(n>=powers2Length){if(result.isZero()||result.isNegative()&&result.isUnit())return result;remQuo=divModAny(result,highestPower2);result=remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];n-=powers2Length-1}remQuo=divModAny(result,powersOfTwo[n]);return remQuo[1].isNegative()?remQuo[0].prev():remQuo[0]};SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight;function bitwise(x,y,fn){y=parseValue(y);var xSign=x.isNegative(),ySign=y.isNegative();var xRem=xSign?x.not():x,yRem=ySign?y.not():y;var xDigit=0,yDigit=0;var xDivMod=null,yDivMod=null;var result=[];while(!xRem.isZero()||!yRem.isZero()){xDivMod=divModAny(xRem,highestPower2);xDigit=xDivMod[1].toJSNumber();if(xSign){xDigit=highestPower2-1-xDigit}yDivMod=divModAny(yRem,highestPower2);yDigit=yDivMod[1].toJSNumber();if(ySign){yDigit=highestPower2-1-yDigit}xRem=xDivMod[0];yRem=yDivMod[0];result.push(fn(xDigit,yDigit))}var sum=fn(xSign?1:0,ySign?1:0)!==0?bigInt(-1):bigInt(0);for(var i=result.length-1;i>=0;i-=1){sum=sum.multiply(highestPower2).add(bigInt(result[i]))}return sum}BigInteger.prototype.not=function(){return this.negate().prev()};SmallInteger.prototype.not=BigInteger.prototype.not;BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b})};SmallInteger.prototype.and=BigInteger.prototype.and;BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b})};SmallInteger.prototype.or=BigInteger.prototype.or;BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b})};SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(n){var v=n.value,x=typeof v===\"number\"?v|LOBMASK_I:v[0]+v[1]*BASE|LOBMASK_BI;return x&-x}function integerLogarithm(value,base){if(base.compareTo(value)<=0){var tmp=integerLogarithm(value,base.square(base));var p=tmp.p;var e=tmp.e;var t=p.multiply(base);return t.compareTo(value)<=0?{p:t,e:e*2+1}:{p:p,e:e*2}}return{p:bigInt(1),e:0}}BigInteger.prototype.bitLength=function(){var n=this;if(n.compareTo(bigInt(0))<0){n=n.negate().subtract(bigInt(1))}if(n.compareTo(bigInt(0))===0){return bigInt(0)}return bigInt(integerLogarithm(n,bigInt(2)).e).add(bigInt(1))};SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;function max(a,b){a=parseValue(a);b=parseValue(b);return a.greater(b)?a:b}function min(a,b){a=parseValue(a);b=parseValue(b);return a.lesser(b)?a:b}function gcd(a,b){a=parseValue(a).abs();b=parseValue(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;var c=Integer[1],d,t;while(a.isEven()&&b.isEven()){d=Math.min(roughLOB(a),roughLOB(b));a=a.divide(d);b=b.divide(d);c=c.multiply(d)}while(a.isEven()){a=a.divide(roughLOB(a))}do{while(b.isEven()){b=b.divide(roughLOB(b))}if(a.greater(b)){t=b;b=a;a=t}b=b.subtract(a)}while(!b.isZero());return c.isUnit()?a:a.multiply(c)}function lcm(a,b){a=parseValue(a).abs();b=parseValue(b).abs();return a.divide(gcd(a,b)).multiply(b)}function randBetween(a,b){a=parseValue(a);b=parseValue(b);var low=min(a,b),high=max(a,b);var range=high.subtract(low).add(1);if(range.isSmall)return low.add(Math.floor(Math.random()*range));var length=range.value.length-1;var result=[],restricted=true;for(var i=length;i>=0;i--){var top=restricted?range.value[i]:BASE;var digit=truncate(Math.random()*top);result.unshift(digit);if(digit<top)restricted=false}result=arrayToSmall(result);return low.add(typeof result===\"number\"?new SmallInteger(result):new BigInteger(result,false))}var parseBase=function(text,base){var length=text.length;var i;var absBase=Math.abs(base);for(var i=0;i<length;i++){var c=text[i].toLowerCase();if(c===\"-\")continue;if(/[a-z0-9]/.test(c)){if(/[0-9]/.test(c)&&+c>=absBase){if(c===\"1\"&&absBase===1)continue;throw new Error(c+\" is not a valid digit in base \"+base+\".\")}else if(c.charCodeAt(0)-87>=absBase){throw new Error(c+\" is not a valid digit in base \"+base+\".\")}}}if(2<=base&&base<=36){if(length<=LOG_MAX_INT/Math.log(base)){var result=parseInt(text,base);if(isNaN(result)){throw new Error(c+\" is not a valid digit in base \"+base+\".\")}return new SmallInteger(parseInt(text,base))}}base=parseValue(base);var digits=[];var isNegative=text[0]===\"-\";for(i=isNegative?1:0;i<text.length;i++){var c=text[i].toLowerCase(),charCode=c.charCodeAt(0);if(48<=charCode&&charCode<=57)digits.push(parseValue(c));else if(97<=charCode&&charCode<=122)digits.push(parseValue(c.charCodeAt(0)-87));else if(c===\"<\"){var start=i;do{i++}while(text[i]!==\">\");digits.push(parseValue(text.slice(start+1,i)))}else throw new Error(c+\" is not a valid character\")}return parseBaseFromArray(digits,base,isNegative)};function parseBaseFromArray(digits,base,isNegative){var val=Integer[0],pow=Integer[1],i;for(i=digits.length-1;i>=0;i--){val=val.add(digits[i].times(pow));pow=pow.times(base)}return isNegative?val.negate():val}function stringify(digit){if(digit<=35){return\"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(digit)}return\"<\"+digit+\">\"}function toBase(n,base){base=bigInt(base);if(base.isZero()){if(n.isZero())return{value:[0],isNegative:false};throw new Error(\"Cannot convert nonzero numbers to base 0.\")}if(base.equals(-1)){if(n.isZero())return{value:[0],isNegative:false};if(n.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-n)).map(Array.prototype.valueOf,[1,0])),isNegative:false};var arr=Array.apply(null,Array(+n-1)).map(Array.prototype.valueOf,[0,1]);arr.unshift([1]);return{value:[].concat.apply([],arr),isNegative:false}}var neg=false;if(n.isNegative()&&base.isPositive()){neg=true;n=n.abs()}if(base.equals(1)){if(n.isZero())return{value:[0],isNegative:false};return{value:Array.apply(null,Array(+n)).map(Number.prototype.valueOf,1),isNegative:neg}}var out=[];var left=n,divmod;while(left.isNegative()||left.compareAbs(base)>=0){divmod=left.divmod(base);left=divmod.quotient;var digit=divmod.remainder;if(digit.isNegative()){digit=base.minus(digit).abs();left=left.next()}out.push(digit.toJSNumber())}out.push(left.toJSNumber());return{value:out.reverse(),isNegative:neg}}function toBaseString(n,base){var arr=toBase(n,base);return(arr.isNegative?\"-\":\"\")+arr.value.map(stringify).join(\"\")}BigInteger.prototype.toArray=function(radix){return toBase(this,radix)};SmallInteger.prototype.toArray=function(radix){return toBase(this,radix)};BigInteger.prototype.toString=function(radix){if(radix===undefined)radix=10;if(radix!==10)return toBaseString(this,radix);var v=this.value,l=v.length,str=String(v[--l]),zeros=\"0000000\",digit;while(--l>=0){digit=String(v[l]);str+=zeros.slice(digit.length)+digit}var sign=this.sign?\"-\":\"\";return sign+str};SmallInteger.prototype.toString=function(radix){if(radix===undefined)radix=10;if(radix!=10)return toBaseString(this,radix);return String(this.value)};BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()};BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10)};BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf;SmallInteger.prototype.valueOf=function(){return this.value};SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf;function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return new SmallInteger(x);throw new Error(\"Invalid integer: \"+v)}var sign=v[0]===\"-\";if(sign)v=v.slice(1);var split=v.split(/e/i);if(split.length>2)throw new Error(\"Invalid integer: \"+split.join(\"e\"));if(split.length===2){var exp=split[1];if(exp[0]===\"+\")exp=exp.slice(1);exp=+exp;if(exp!==truncate(exp)||!isPrecise(exp))throw new Error(\"Invalid integer: \"+exp+\" is not a valid exponent.\");var text=split[0];var decimalPlace=text.indexOf(\".\");if(decimalPlace>=0){exp-=text.length-decimalPlace-1;text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1)}if(exp<0)throw new Error(\"Cannot include negative exponent part for integers\");text+=new Array(exp+1).join(\"0\");v=text}var isValid=/^([0-9][0-9]*)$/.test(v);if(!isValid)throw new Error(\"Invalid integer: \"+v);var r=[],max=v.length,l=LOG_BASE,min=max-l;while(max>0){r.push(+v.slice(min,max));min-=l;if(min<0)min=0;max-=l}trim(r);return new BigInteger(r,sign)}function parseNumberValue(v){if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+\" is not an integer.\");return new SmallInteger(v)}return parseStringValue(v.toString())}function parseValue(v){if(typeof v===\"number\"){return parseNumberValue(v)}if(typeof v===\"string\"){return parseStringValue(v)}return v}for(var i=0;i<1e3;i++){Integer[i]=new SmallInteger(i);if(i>0)Integer[-i]=new SmallInteger(-i)}Integer.one=Integer[1];Integer.zero=Integer[0];Integer.minusOne=Integer[-1];Integer.max=max;Integer.min=min;Integer.gcd=gcd;Integer.lcm=lcm;Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger};Integer.randBetween=randBetween;Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative)};return Integer}();if(typeof module!==\"undefined\"&&module.hasOwnProperty(\"exports\")){module.exports=bigInt}if(typeof define===\"function\"&&define.amd){define(\"big-integer\",[],function(){return bigInt})}\r\n        return bigInt;\r\n    })(),\r\n    /*\r\n     *  decimal.js v10.2.1\r\n     *  An arbitrary-precision Decimal type for JavaScript.\r\n     *  https://github.com/MikeMcl/decimal.js\r\n     *  Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n     *  MIT Licence\r\n     */\r\n    bigDec: function(n){\"use strict\";var e,i,t,r,s=9e15,o=1e9,u=\"0123456789abcdef\",c=\"2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058\",f=\"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789\",a={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-s,maxE:s,crypto:!1},h=!0,d=\"[DecimalError] \",l=d+\"Invalid argument: \",p=d+\"Precision limit exceeded\",g=d+\"crypto unavailable\",m=Math.floor,w=Math.pow,v=/^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,N=/^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,b=/^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,E=/^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,x=1e7,y=7,M=c.length-1,q=f.length-1,O={name:\"[object Decimal]\"};function D(n){var e,i,t,r=n.length-1,s=\"\",o=n[0];if(r>0){for(s+=o,e=1;e<r;e++)t=n[e]+\"\",(i=y-t.length)&&(s+=k(i)),s+=t;o=n[e],(i=y-(t=o+\"\").length)&&(s+=k(i))}else if(0===o)return\"0\";for(;o%10==0;)o/=10;return s+o}function F(n,e,i){if(n!==~~n||n<e||n>i)throw Error(l+n)}function A(n,e,i,t){var r,s,o,u;for(s=n[0];s>=10;s/=10)--e;return--e<0?(e+=y,r=0):(r=Math.ceil((e+1)/y),e%=y),s=w(10,y-e),u=n[r]%s|0,null==t?e<3?(0==e?u=u/100|0:1==e&&(u=u/10|0),o=i<4&&99999==u||i>3&&49999==u||5e4==u||0==u):o=(i<4&&u+1==s||i>3&&u+1==s/2)&&(n[r+1]/s/100|0)==w(10,e-2)-1||(u==s/2||0==u)&&0==(n[r+1]/s/100|0):e<4?(0==e?u=u/1e3|0:1==e?u=u/100|0:2==e&&(u=u/10|0),o=(t||i<4)&&9999==u||!t&&i>3&&4999==u):o=((t||i<4)&&u+1==s||!t&&i>3&&u+1==s/2)&&(n[r+1]/s/1e3|0)==w(10,e-3)-1,o}function S(n,e,i){for(var t,r,s=[0],o=0,c=n.length;o<c;){for(r=s.length;r--;)s[r]*=e;for(s[0]+=u.indexOf(n.charAt(o++)),t=0;t<s.length;t++)s[t]>i-1&&(void 0===s[t+1]&&(s[t+1]=0),s[t+1]+=s[t]/i|0,s[t]%=i)}return s.reverse()}O.absoluteValue=O.abs=function(){var n=new this.constructor(this);return n.s<0&&(n.s=1),P(n)},O.ceil=function(){return P(new this.constructor(this),this.e+1,2)},O.comparedTo=O.cmp=function(n){var e,i,t,r,s=this,o=s.d,u=(n=new s.constructor(n)).d,c=s.s,f=n.s;if(!o||!u)return c&&f?c!==f?c:o===u?0:!o^c<0?1:-1:NaN;if(!o[0]||!u[0])return o[0]?c:u[0]?-f:0;if(c!==f)return c;if(s.e!==n.e)return s.e>n.e^c<0?1:-1;for(e=0,i=(t=o.length)<(r=u.length)?t:r;e<i;++e)if(o[e]!==u[e])return o[e]>u[e]^c<0?1:-1;return t===r?0:t>r^c<0?1:-1},O.cosine=O.cos=function(){var n,e,i=this,t=i.constructor;return i.d?i.d[0]?(n=t.precision,e=t.rounding,t.precision=n+Math.max(i.e,i.sd())+y,t.rounding=1,i=function(n,e){var i,t,r=e.d.length;r<32?(i=Math.ceil(r/3),t=(1/z(4,i)).toString()):(i=16,t=\"2.3283064365386962890625e-10\");n.precision+=i,e=J(n,1,e.times(t),new n(1));for(var s=i;s--;){var o=e.times(e);e=o.times(o).minus(o).times(8).plus(1)}return n.precision-=i,e}(t,G(t,i)),t.precision=n,t.rounding=e,P(2==r||3==r?i.neg():i,n,e,!0)):new t(1):new t(NaN)},O.cubeRoot=O.cbrt=function(){var n,e,i,t,r,s,o,u,c,f,a=this,d=a.constructor;if(!a.isFinite()||a.isZero())return new d(a);for(h=!1,(s=a.s*w(a.s*a,1/3))&&Math.abs(s)!=1/0?t=new d(s.toString()):(i=D(a.d),(s=((n=a.e)-i.length+1)%3)&&(i+=1==s||-2==s?\"0\":\"00\"),s=w(i,1/3),n=m((n+1)/3)-(n%3==(n<0?-1:2)),(t=new d(i=s==1/0?\"5e\"+n:(i=s.toExponential()).slice(0,i.indexOf(\"e\")+1)+n)).s=a.s),o=(n=d.precision)+3;;)if(f=(c=(u=t).times(u).times(u)).plus(a),t=Z(f.plus(a).times(u),f.plus(c),o+2,1),D(u.d).slice(0,o)===(i=D(t.d)).slice(0,o)){if(\"9999\"!=(i=i.slice(o-3,o+1))&&(r||\"4999\"!=i)){+i&&(+i.slice(1)||\"5\"!=i.charAt(0))||(P(t,n+1,1),e=!t.times(t).times(t).eq(a));break}if(!r&&(P(u,n+1,0),u.times(u).times(u).eq(a))){t=u;break}o+=4,r=1}return h=!0,P(t,n,d.rounding,e)},O.decimalPlaces=O.dp=function(){var n,e=this.d,i=NaN;if(e){if(i=((n=e.length-1)-m(this.e/y))*y,n=e[n])for(;n%10==0;n/=10)i--;i<0&&(i=0)}return i},O.dividedBy=O.div=function(n){return Z(this,new this.constructor(n))},O.dividedToIntegerBy=O.divToInt=function(n){var e=this.constructor;return P(Z(this,new e(n),0,1,1),e.precision,e.rounding)},O.equals=O.eq=function(n){return 0===this.cmp(n)},O.floor=function(){return P(new this.constructor(this),this.e+1,3)},O.greaterThan=O.gt=function(n){return this.cmp(n)>0},O.greaterThanOrEqualTo=O.gte=function(n){var e=this.cmp(n);return 1==e||0===e},O.hyperbolicCosine=O.cosh=function(){var n,e,i,t,r,s=this,o=s.constructor,u=new o(1);if(!s.isFinite())return new o(s.s?1/0:NaN);if(s.isZero())return u;i=o.precision,t=o.rounding,o.precision=i+Math.max(s.e,s.sd())+4,o.rounding=1,(r=s.d.length)<32?e=(1/z(4,n=Math.ceil(r/3))).toString():(n=16,e=\"2.3283064365386962890625e-10\"),s=J(o,1,s.times(e),new o(1),!0);for(var c,f=n,a=new o(8);f--;)c=s.times(s),s=u.minus(c.times(a.minus(c.times(a))));return P(s,o.precision=i,o.rounding=t,!0)},O.hyperbolicSine=O.sinh=function(){var n,e,i,t,r=this,s=r.constructor;if(!r.isFinite()||r.isZero())return new s(r);if(e=s.precision,i=s.rounding,s.precision=e+Math.max(r.e,r.sd())+4,s.rounding=1,(t=r.d.length)<3)r=J(s,2,r,r,!0);else{n=(n=1.4*Math.sqrt(t))>16?16:0|n,r=J(s,2,r=r.times(1/z(5,n)),r,!0);for(var o,u=new s(5),c=new s(16),f=new s(20);n--;)o=r.times(r),r=r.times(u.plus(o.times(c.times(o).plus(f))))}return s.precision=e,s.rounding=i,P(r,e,i,!0)},O.hyperbolicTangent=O.tanh=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+7,t.rounding=1,Z(i.sinh(),i.cosh(),t.precision=n,t.rounding=e)):new t(i.s)},O.inverseCosine=O.acos=function(){var n,e=this,i=e.constructor,t=e.abs().cmp(1),r=i.precision,s=i.rounding;return-1!==t?0===t?e.isNeg()?U(i,r,s):new i(0):new i(NaN):e.isZero()?U(i,r+4,s).times(.5):(i.precision=r+6,i.rounding=1,e=e.asin(),n=U(i,r+4,s).times(.5),i.precision=r,i.rounding=s,n.minus(e))},O.inverseHyperbolicCosine=O.acosh=function(){var n,e,i=this,t=i.constructor;return i.lte(1)?new t(i.eq(1)?0:NaN):i.isFinite()?(n=t.precision,e=t.rounding,t.precision=n+Math.max(Math.abs(i.e),i.sd())+4,t.rounding=1,h=!1,i=i.times(i).minus(1).sqrt().plus(i),h=!0,t.precision=n,t.rounding=e,i.ln()):new t(i)},O.inverseHyperbolicSine=O.asinh=function(){var n,e,i=this,t=i.constructor;return!i.isFinite()||i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+2*Math.max(Math.abs(i.e),i.sd())+6,t.rounding=1,h=!1,i=i.times(i).plus(1).sqrt().plus(i),h=!0,t.precision=n,t.rounding=e,i.ln())},O.inverseHyperbolicTangent=O.atanh=function(){var n,e,i,t,r=this,s=r.constructor;return r.isFinite()?r.e>=0?new s(r.abs().eq(1)?r.s/0:r.isZero()?r:NaN):(n=s.precision,e=s.rounding,t=r.sd(),Math.max(t,n)<2*-r.e-1?P(new s(r),n,e,!0):(s.precision=i=t-r.e,r=Z(r.plus(1),new s(1).minus(r),i+n,1),s.precision=n+4,s.rounding=1,r=r.ln(),s.precision=n,s.rounding=e,r.times(.5))):new s(NaN)},O.inverseSine=O.asin=function(){var n,e,i,t,r=this,s=r.constructor;return r.isZero()?new s(r):(e=r.abs().cmp(1),i=s.precision,t=s.rounding,-1!==e?0===e?((n=U(s,i+4,t).times(.5)).s=r.s,n):new s(NaN):(s.precision=i+6,s.rounding=1,r=r.div(new s(1).minus(r.times(r)).sqrt().plus(1)).atan(),s.precision=i,s.rounding=t,r.times(2)))},O.inverseTangent=O.atan=function(){var n,e,i,t,r,s,o,u,c,f=this,a=f.constructor,d=a.precision,l=a.rounding;if(f.isFinite()){if(f.isZero())return new a(f);if(f.abs().eq(1)&&d+4<=q)return(o=U(a,d+4,l).times(.25)).s=f.s,o}else{if(!f.s)return new a(NaN);if(d+4<=q)return(o=U(a,d+4,l).times(.5)).s=f.s,o}for(a.precision=u=d+10,a.rounding=1,n=i=Math.min(28,u/y+2|0);n;--n)f=f.div(f.times(f).plus(1).sqrt().plus(1));for(h=!1,e=Math.ceil(u/y),t=1,c=f.times(f),o=new a(f),r=f;-1!==n;)if(r=r.times(c),s=o.minus(r.div(t+=2)),r=r.times(c),void 0!==(o=s.plus(r.div(t+=2))).d[e])for(n=e;o.d[n]===s.d[n]&&n--;);return i&&(o=o.times(2<<i-1)),h=!0,P(o,a.precision=d,a.rounding=l,!0)},O.isFinite=function(){return!!this.d},O.isInteger=O.isInt=function(){return!!this.d&&m(this.e/y)>this.d.length-2},O.isNaN=function(){return!this.s},O.isNegative=O.isNeg=function(){return this.s<0},O.isPositive=O.isPos=function(){return this.s>0},O.isZero=function(){return!!this.d&&0===this.d[0]},O.lessThan=O.lt=function(n){return this.cmp(n)<0},O.lessThanOrEqualTo=O.lte=function(n){return this.cmp(n)<1},O.logarithm=O.log=function(n){var e,i,t,r,s,o,u,c,f=this.constructor,a=f.precision,d=f.rounding;if(null==n)n=new f(10),e=!0;else{if(i=(n=new f(n)).d,n.s<0||!i||!i[0]||n.eq(1))return new f(NaN);e=n.eq(10)}if(i=this.d,this.s<0||!i||!i[0]||this.eq(1))return new f(i&&!i[0]?-1/0:1!=this.s?NaN:i?0:1/0);if(e)if(i.length>1)s=!0;else{for(r=i[0];r%10==0;)r/=10;s=1!==r}if(h=!1,o=V(this,u=a+5),t=e?T(f,u+10):V(n,u),A((c=Z(o,t,u,1)).d,r=a,d))do{if(o=V(this,u+=10),t=e?T(f,u+10):V(n,u),c=Z(o,t,u,1),!s){+D(c.d).slice(r+1,r+15)+1==1e14&&(c=P(c,a+1,0));break}}while(A(c.d,r+=10,d));return h=!0,P(c,a,d)},O.minus=O.sub=function(n){var e,i,t,r,s,o,u,c,f,a,d,l,p=this,g=p.constructor;if(n=new g(n),!p.d||!n.d)return p.s&&n.s?p.d?n.s=-n.s:n=new g(n.d||p.s!==n.s?p:NaN):n=new g(NaN),n;if(p.s!=n.s)return n.s=-n.s,p.plus(n);if(f=p.d,l=n.d,u=g.precision,c=g.rounding,!f[0]||!l[0]){if(l[0])n.s=-n.s;else{if(!f[0])return new g(3===c?-0:0);n=new g(p)}return h?P(n,u,c):n}if(i=m(n.e/y),a=m(p.e/y),f=f.slice(),s=a-i){for((d=s<0)?(e=f,s=-s,o=l.length):(e=l,i=a,o=f.length),s>(t=Math.max(Math.ceil(u/y),o)+2)&&(s=t,e.length=1),e.reverse(),t=s;t--;)e.push(0);e.reverse()}else{for((d=(t=f.length)<(o=l.length))&&(o=t),t=0;t<o;t++)if(f[t]!=l[t]){d=f[t]<l[t];break}s=0}for(d&&(e=f,f=l,l=e,n.s=-n.s),o=f.length,t=l.length-o;t>0;--t)f[o++]=0;for(t=l.length;t>s;){if(f[--t]<l[t]){for(r=t;r&&0===f[--r];)f[r]=x-1;--f[r],f[t]+=x}f[t]-=l[t]}for(;0===f[--o];)f.pop();for(;0===f[0];f.shift())--i;return f[0]?(n.d=f,n.e=L(f,i),h?P(n,u,c):n):new g(3===c?-0:0)},O.modulo=O.mod=function(n){var e,i=this,t=i.constructor;return n=new t(n),!i.d||!n.s||n.d&&!n.d[0]?new t(NaN):!n.d||i.d&&!i.d[0]?P(new t(i),t.precision,t.rounding):(h=!1,9==t.modulo?(e=Z(i,n.abs(),0,3,1)).s*=n.s:e=Z(i,n,0,t.modulo,1),e=e.times(n),h=!0,i.minus(e))},O.naturalExponential=O.exp=function(){return B(this)},O.naturalLogarithm=O.ln=function(){return V(this)},O.negated=O.neg=function(){var n=new this.constructor(this);return n.s=-n.s,P(n)},O.plus=O.add=function(n){var e,i,t,r,s,o,u,c,f,a,d=this,l=d.constructor;if(n=new l(n),!d.d||!n.d)return d.s&&n.s?d.d||(n=new l(n.d||d.s===n.s?d:NaN)):n=new l(NaN),n;if(d.s!=n.s)return n.s=-n.s,d.minus(n);if(f=d.d,a=n.d,u=l.precision,c=l.rounding,!f[0]||!a[0])return a[0]||(n=new l(d)),h?P(n,u,c):n;if(s=m(d.e/y),t=m(n.e/y),f=f.slice(),r=s-t){for(r<0?(i=f,r=-r,o=a.length):(i=a,t=s,o=f.length),r>(o=(s=Math.ceil(u/y))>o?s+1:o+1)&&(r=o,i.length=1),i.reverse();r--;)i.push(0);i.reverse()}for((o=f.length)-(r=a.length)<0&&(r=o,i=a,a=f,f=i),e=0;r;)e=(f[--r]=f[r]+a[r]+e)/x|0,f[r]%=x;for(e&&(f.unshift(e),++t),o=f.length;0==f[--o];)f.pop();return n.d=f,n.e=L(f,t),h?P(n,u,c):n},O.precision=O.sd=function(n){var e,i=this;if(void 0!==n&&n!==!!n&&1!==n&&0!==n)throw Error(l+n);return i.d?(e=_(i.d),n&&i.e+1>e&&(e=i.e+1)):e=NaN,e},O.round=function(){var n=this,e=n.constructor;return P(new e(n),n.e+1,e.rounding)},O.sine=O.sin=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+Math.max(i.e,i.sd())+y,t.rounding=1,i=function(n,e){var i,t=e.d.length;if(t<3)return J(n,2,e,e);i=(i=1.4*Math.sqrt(t))>16?16:0|i,e=e.times(1/z(5,i)),e=J(n,2,e,e);for(var r,s=new n(5),o=new n(16),u=new n(20);i--;)r=e.times(e),e=e.times(s.plus(r.times(o.times(r).minus(u))));return e}(t,G(t,i)),t.precision=n,t.rounding=e,P(r>2?i.neg():i,n,e,!0)):new t(NaN)},O.squareRoot=O.sqrt=function(){var n,e,i,t,r,s,o=this,u=o.d,c=o.e,f=o.s,a=o.constructor;if(1!==f||!u||!u[0])return new a(!f||f<0&&(!u||u[0])?NaN:u?o:1/0);for(h=!1,0==(f=Math.sqrt(+o))||f==1/0?(((e=D(u)).length+c)%2==0&&(e+=\"0\"),f=Math.sqrt(e),c=m((c+1)/2)-(c<0||c%2),t=new a(e=f==1/0?\"5e\"+c:(e=f.toExponential()).slice(0,e.indexOf(\"e\")+1)+c)):t=new a(f.toString()),i=(c=a.precision)+3;;)if(t=(s=t).plus(Z(o,s,i+2,1)).times(.5),D(s.d).slice(0,i)===(e=D(t.d)).slice(0,i)){if(\"9999\"!=(e=e.slice(i-3,i+1))&&(r||\"4999\"!=e)){+e&&(+e.slice(1)||\"5\"!=e.charAt(0))||(P(t,c+1,1),n=!t.times(t).eq(o));break}if(!r&&(P(s,c+1,0),s.times(s).eq(o))){t=s;break}i+=4,r=1}return h=!0,P(t,c,a.rounding,n)},O.tangent=O.tan=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+10,t.rounding=1,(i=i.sin()).s=1,i=Z(i,new t(1).minus(i.times(i)).sqrt(),n+10,0),t.precision=n,t.rounding=e,P(2==r||4==r?i.neg():i,n,e,!0)):new t(NaN)},O.times=O.mul=function(n){var e,i,t,r,s,o,u,c,f,a=this,d=a.constructor,l=a.d,p=(n=new d(n)).d;if(n.s*=a.s,!(l&&l[0]&&p&&p[0]))return new d(!n.s||l&&!l[0]&&!p||p&&!p[0]&&!l?NaN:l&&p?0*n.s:n.s/0);for(i=m(a.e/y)+m(n.e/y),(c=l.length)<(f=p.length)&&(s=l,l=p,p=s,o=c,c=f,f=o),s=[],t=o=c+f;t--;)s.push(0);for(t=f;--t>=0;){for(e=0,r=c+t;r>t;)u=s[r]+p[t]*l[r-t-1]+e,s[r--]=u%x|0,e=u/x|0;s[r]=(s[r]+e)%x|0}for(;!s[--o];)s.pop();return e?++i:s.shift(),n.d=s,n.e=L(s,i),h?P(n,d.precision,d.rounding):n},O.toBinary=function(n,e){return K(this,2,n,e)},O.toDecimalPlaces=O.toDP=function(n,e){var i=this,t=i.constructor;return i=new t(i),void 0===n?i:(F(n,0,o),void 0===e?e=t.rounding:F(e,0,8),P(i,n+i.e+1,e))},O.toExponential=function(n,e){var i,t=this,r=t.constructor;return void 0===n?i=R(t,!0):(F(n,0,o),void 0===e?e=r.rounding:F(e,0,8),i=R(t=P(new r(t),n+1,e),!0,n+1)),t.isNeg()&&!t.isZero()?\"-\"+i:i},O.toFixed=function(n,e){var i,t,r=this,s=r.constructor;return void 0===n?i=R(r):(F(n,0,o),void 0===e?e=s.rounding:F(e,0,8),i=R(t=P(new s(r),n+r.e+1,e),!1,n+t.e+1)),r.isNeg()&&!r.isZero()?\"-\"+i:i},O.toFraction=function(n){var e,i,t,r,s,o,u,c,f,a,d,p,g=this,m=g.d,v=g.constructor;if(!m)return new v(g);if(f=i=new v(1),t=c=new v(0),o=(s=(e=new v(t)).e=_(m)-g.e-1)%y,e.d[0]=w(10,o<0?y+o:o),null==n)n=s>0?e:f;else{if(!(u=new v(n)).isInt()||u.lt(f))throw Error(l+u);n=u.gt(e)?s>0?e:f:u}for(h=!1,u=new v(D(m)),a=v.precision,v.precision=s=m.length*y*2;d=Z(u,e,0,1,1),1!=(r=i.plus(d.times(t))).cmp(n);)i=t,t=r,r=f,f=c.plus(d.times(r)),c=r,r=e,e=u.minus(d.times(r)),u=r;return r=Z(n.minus(i),t,0,1,1),c=c.plus(r.times(f)),i=i.plus(r.times(t)),c.s=f.s=g.s,p=Z(f,t,s,1).minus(g).abs().cmp(Z(c,i,s,1).minus(g).abs())<1?[f,t]:[c,i],v.precision=a,h=!0,p},O.toHexadecimal=O.toHex=function(n,e){return K(this,16,n,e)},O.toNearest=function(n,e){var i=this,t=i.constructor;if(i=new t(i),null==n){if(!i.d)return i;n=new t(1),e=t.rounding}else{if(n=new t(n),void 0===e?e=t.rounding:F(e,0,8),!i.d)return n.s?i:n;if(!n.d)return n.s&&(n.s=i.s),n}return n.d[0]?(h=!1,i=Z(i,n,0,e,1).times(n),h=!0,P(i)):(n.s=i.s,i=n),i},O.toNumber=function(){return+this},O.toOctal=function(n,e){return K(this,8,n,e)},O.toPower=O.pow=function(n){var e,i,t,r,s,o,u=this,c=u.constructor,f=+(n=new c(n));if(!(u.d&&n.d&&u.d[0]&&n.d[0]))return new c(w(+u,f));if((u=new c(u)).eq(1))return u;if(t=c.precision,s=c.rounding,n.eq(1))return P(u,t,s);if((e=m(n.e/y))>=n.d.length-1&&(i=f<0?-f:f)<=9007199254740991)return r=C(c,u,i,t),n.s<0?new c(1).div(r):P(r,t,s);if((o=u.s)<0){if(e<n.d.length-1)return new c(NaN);if(0==(1&n.d[e])&&(o=1),0==u.e&&1==u.d[0]&&1==u.d.length)return u.s=o,u}return(e=0!=(i=w(+u,f))&&isFinite(i)?new c(i+\"\").e:m(f*(Math.log(\"0.\"+D(u.d))/Math.LN10+u.e+1)))>c.maxE+1||e<c.minE-1?new c(e>0?o/0:0):(h=!1,c.rounding=u.s=1,i=Math.min(12,(e+\"\").length),(r=B(n.times(V(u,t+i)),t)).d&&A((r=P(r,t+5,1)).d,t,s)&&(e=t+10,+D((r=P(B(n.times(V(u,e+i)),e),e+5,1)).d).slice(t+1,t+15)+1==1e14&&(r=P(r,t+1,0))),r.s=o,h=!0,c.rounding=s,P(r,t,s))},O.toPrecision=function(n,e){var i,t=this,r=t.constructor;return void 0===n?i=R(t,t.e<=r.toExpNeg||t.e>=r.toExpPos):(F(n,1,o),void 0===e?e=r.rounding:F(e,0,8),i=R(t=P(new r(t),n,e),n<=t.e||t.e<=r.toExpNeg,n)),t.isNeg()&&!t.isZero()?\"-\"+i:i},O.toSignificantDigits=O.toSD=function(n,e){var i=this.constructor;return void 0===n?(n=i.precision,e=i.rounding):(F(n,1,o),void 0===e?e=i.rounding:F(e,0,8)),P(new i(this),n,e)},O.toString=function(){var n=this,e=n.constructor,i=R(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()&&!n.isZero()?\"-\"+i:i},O.truncated=O.trunc=function(){return P(new this.constructor(this),this.e+1,1)},O.valueOf=O.toJSON=function(){var n=this,e=n.constructor,i=R(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()?\"-\"+i:i};var Z=function(){function n(n,e,i){var t,r=0,s=n.length;for(n=n.slice();s--;)t=n[s]*e+r,n[s]=t%i|0,r=t/i|0;return r&&n.unshift(r),n}function e(n,e,i,t){var r,s;if(i!=t)s=i>t?1:-1;else for(r=s=0;r<i;r++)if(n[r]!=e[r]){s=n[r]>e[r]?1:-1;break}return s}function t(n,e,i,t){for(var r=0;i--;)n[i]-=r,r=n[i]<e[i]?1:0,n[i]=r*t+n[i]-e[i];for(;!n[0]&&n.length>1;)n.shift()}return function(r,s,o,u,c,f){var a,h,d,l,p,g,w,v,N,b,E,M,q,O,D,F,A,S,Z,R,L=r.constructor,T=r.s==s.s?1:-1,U=r.d,_=s.d;if(!(U&&U[0]&&_&&_[0]))return new L(r.s&&s.s&&(U?!_||U[0]!=_[0]:_)?U&&0==U[0]||!_?0*T:T/0:NaN);for(f?(p=1,h=r.e-s.e):(f=x,p=y,h=m(r.e/p)-m(s.e/p)),Z=_.length,A=U.length,b=(N=new L(T)).d=[],d=0;_[d]==(U[d]||0);d++);if(_[d]>(U[d]||0)&&h--,null==o?(O=o=L.precision,u=L.rounding):O=c?o+(r.e-s.e)+1:o,O<0)b.push(1),g=!0;else{if(O=O/p+2|0,d=0,1==Z){for(l=0,_=_[0],O++;(d<A||l)&&O--;d++)D=l*f+(U[d]||0),b[d]=D/_|0,l=D%_|0;g=l||d<A}else{for((l=f/(_[0]+1)|0)>1&&(_=n(_,l,f),U=n(U,l,f),Z=_.length,A=U.length),F=Z,M=(E=U.slice(0,Z)).length;M<Z;)E[M++]=0;(R=_.slice()).unshift(0),S=_[0],_[1]>=f/2&&++S;do{l=0,(a=e(_,E,Z,M))<0?(q=E[0],Z!=M&&(q=q*f+(E[1]||0)),(l=q/S|0)>1?(l>=f&&(l=f-1),1==(a=e(w=n(_,l,f),E,v=w.length,M=E.length))&&(l--,t(w,Z<v?R:_,v,f))):(0==l&&(a=l=1),w=_.slice()),(v=w.length)<M&&w.unshift(0),t(E,w,M,f),-1==a&&(a=e(_,E,Z,M=E.length))<1&&(l++,t(E,Z<M?R:_,M,f)),M=E.length):0===a&&(l++,E=[0]),b[d++]=l,a&&E[0]?E[M++]=U[F]||0:(E=[U[F]],M=1)}while((F++<A||void 0!==E[0])&&O--);g=void 0!==E[0]}b[0]||b.shift()}if(1==p)N.e=h,i=g;else{for(d=1,l=b[0];l>=10;l/=10)d++;N.e=d+h*p-1,P(N,c?o+N.e+1:o,u,g)}return N}}();function P(n,e,i,t){var r,s,o,u,c,f,a,d,l,p=n.constructor;n:if(null!=e){if(!(d=n.d))return n;for(r=1,u=d[0];u>=10;u/=10)r++;if((s=e-r)<0)s+=y,o=e,c=(a=d[l=0])/w(10,r-o-1)%10|0;else if((l=Math.ceil((s+1)/y))>=(u=d.length)){if(!t)break n;for(;u++<=l;)d.push(0);a=c=0,r=1,o=(s%=y)-y+1}else{for(a=u=d[l],r=1;u>=10;u/=10)r++;c=(o=(s%=y)-y+r)<0?0:a/w(10,r-o-1)%10|0}if(t=t||e<0||void 0!==d[l+1]||(o<0?a:a%w(10,r-o-1)),f=i<4?(c||t)&&(0==i||i==(n.s<0?3:2)):c>5||5==c&&(4==i||t||6==i&&(s>0?o>0?a/w(10,r-o):0:d[l-1])%10&1||i==(n.s<0?8:7)),e<1||!d[0])return d.length=0,f?(e-=n.e+1,d[0]=w(10,(y-e%y)%y),n.e=-e||0):d[0]=n.e=0,n;if(0==s?(d.length=l,u=1,l--):(d.length=l+1,u=w(10,y-s),d[l]=o>0?(a/w(10,r-o)%w(10,o)|0)*u:0),f)for(;;){if(0==l){for(s=1,o=d[0];o>=10;o/=10)s++;for(o=d[0]+=u,u=1;o>=10;o/=10)u++;s!=u&&(n.e++,d[0]==x&&(d[0]=1));break}if(d[l]+=u,d[l]!=x)break;d[l--]=0,u=1}for(s=d.length;0===d[--s];)d.pop()}return h&&(n.e>p.maxE?(n.d=null,n.e=NaN):n.e<p.minE&&(n.e=0,n.d=[0])),n}function R(n,e,i){if(!n.isFinite())return j(n);var t,r=n.e,s=D(n.d),o=s.length;return e?(i&&(t=i-o)>0?s=s.charAt(0)+\".\"+s.slice(1)+k(t):o>1&&(s=s.charAt(0)+\".\"+s.slice(1)),s=s+(n.e<0?\"e\":\"e+\")+n.e):r<0?(s=\"0.\"+k(-r-1)+s,i&&(t=i-o)>0&&(s+=k(t))):r>=o?(s+=k(r+1-o),i&&(t=i-r-1)>0&&(s=s+\".\"+k(t))):((t=r+1)<o&&(s=s.slice(0,t)+\".\"+s.slice(t)),i&&(t=i-o)>0&&(r+1===o&&(s+=\".\"),s+=k(t))),s}function L(n,e){var i=n[0];for(e*=y;i>=10;i/=10)e++;return e}function T(n,e,i){if(e>M)throw h=!0,i&&(n.precision=i),Error(p);return P(new n(c),e,1,!0)}function U(n,e,i){if(e>q)throw Error(p);return P(new n(f),e,i,!0)}function _(n){var e=n.length-1,i=e*y+1;if(e=n[e]){for(;e%10==0;e/=10)i--;for(e=n[0];e>=10;e/=10)i++}return i}function k(n){for(var e=\"\";n--;)e+=\"0\";return e}function C(n,e,i,t){var r,s=new n(1),o=Math.ceil(t/y+4);for(h=!1;;){if(i%2&&Q((s=s.times(e)).d,o)&&(r=!0),0===(i=m(i/2))){i=s.d.length-1,r&&0===s.d[i]&&++s.d[i];break}Q((e=e.times(e)).d,o)}return h=!0,s}function I(n){return 1&n.d[n.d.length-1]}function H(n,e,i){for(var t,r=new n(e[0]),s=0;++s<e.length;){if(!(t=new n(e[s])).s){r=t;break}r[i](t)&&(r=t)}return r}function B(n,e){var i,t,r,s,o,u,c,f=0,a=0,d=0,l=n.constructor,p=l.rounding,g=l.precision;if(!n.d||!n.d[0]||n.e>17)return new l(n.d?n.d[0]?n.s<0?0:1/0:1:n.s?n.s<0?0:n:NaN);for(null==e?(h=!1,c=g):c=e,u=new l(.03125);n.e>-2;)n=n.times(u),d+=5;for(c+=t=Math.log(w(2,d))/Math.LN10*2+5|0,i=s=o=new l(1),l.precision=c;;){if(s=P(s.times(n),c,1),i=i.times(++a),D((u=o.plus(Z(s,i,c,1))).d).slice(0,c)===D(o.d).slice(0,c)){for(r=d;r--;)o=P(o.times(o),c,1);if(null!=e)return l.precision=g,o;if(!(f<3&&A(o.d,c-t,p,f)))return P(o,l.precision=g,p,h=!0);l.precision=c+=10,i=s=u=new l(1),a=0,f++}o=u}}function V(n,e){var i,t,r,s,o,u,c,f,a,d,l,p=1,g=n,m=g.d,w=g.constructor,v=w.rounding,N=w.precision;if(g.s<0||!m||!m[0]||!g.e&&1==m[0]&&1==m.length)return new w(m&&!m[0]?-1/0:1!=g.s?NaN:m?0:g);if(null==e?(h=!1,a=N):a=e,w.precision=a+=10,t=(i=D(m)).charAt(0),!(Math.abs(s=g.e)<15e14))return f=T(w,a+2,N).times(s+\"\"),g=V(new w(t+\".\"+i.slice(1)),a-10).plus(f),w.precision=N,null==e?P(g,N,v,h=!0):g;for(;t<7&&1!=t||1==t&&i.charAt(1)>3;)t=(i=D((g=g.times(n)).d)).charAt(0),p++;for(s=g.e,t>1?(g=new w(\"0.\"+i),s++):g=new w(t+\".\"+i.slice(1)),d=g,c=o=g=Z(g.minus(1),g.plus(1),a,1),l=P(g.times(g),a,1),r=3;;){if(o=P(o.times(l),a,1),D((f=c.plus(Z(o,new w(r),a,1))).d).slice(0,a)===D(c.d).slice(0,a)){if(c=c.times(2),0!==s&&(c=c.plus(T(w,a+2,N).times(s+\"\"))),c=Z(c,new w(p),a,1),null!=e)return w.precision=N,c;if(!A(c.d,a-10,v,u))return P(c,w.precision=N,v,h=!0);w.precision=a+=10,f=o=g=Z(d.minus(1),d.plus(1),a,1),l=P(g.times(g),a,1),r=u=1}c=f,r+=2}}function j(n){return String(n.s*n.s/0)}function $(n,e){var i,t,r;for((i=e.indexOf(\".\"))>-1&&(e=e.replace(\".\",\"\")),(t=e.search(/e/i))>0?(i<0&&(i=t),i+=+e.slice(t+1),e=e.substring(0,t)):i<0&&(i=e.length),t=0;48===e.charCodeAt(t);t++);for(r=e.length;48===e.charCodeAt(r-1);--r);if(e=e.slice(t,r)){if(r-=t,n.e=i=i-t-1,n.d=[],t=(i+1)%y,i<0&&(t+=y),t<r){for(t&&n.d.push(+e.slice(0,t)),r-=y;t<r;)n.d.push(+e.slice(t,t+=y));e=e.slice(t),t=y-e.length}else t-=r;for(;t--;)e+=\"0\";n.d.push(+e),h&&(n.e>n.constructor.maxE?(n.d=null,n.e=NaN):n.e<n.constructor.minE&&(n.e=0,n.d=[0]))}else n.e=0,n.d=[0];return n}function W(n,i){var t,r,s,o,u,c,f,a,d;if(\"Infinity\"===i||\"NaN\"===i)return+i||(n.s=NaN),n.e=NaN,n.d=null,n;if(N.test(i))t=16,i=i.toLowerCase();else if(v.test(i))t=2;else{if(!b.test(i))throw Error(l+i);t=8}for((o=i.search(/p/i))>0?(f=+i.slice(o+1),i=i.substring(2,o)):i=i.slice(2),u=(o=i.indexOf(\".\"))>=0,r=n.constructor,u&&(o=(c=(i=i.replace(\".\",\"\")).length)-o,s=C(r,new r(t),o,2*o)),o=d=(a=S(i,t,x)).length-1;0===a[o];--o)a.pop();return o<0?new r(0*n.s):(n.e=L(a,d),n.d=a,h=!1,u&&(n=Z(n,s,4*c)),f&&(n=n.times(Math.abs(f)<54?w(2,f):e.pow(2,f))),h=!0,n)}function J(n,e,i,t,r){var s,o,u,c,f=n.precision,a=Math.ceil(f/y);for(h=!1,c=i.times(i),u=new n(t);;){if(o=Z(u.times(c),new n(e++*e++),f,1),u=r?t.plus(o):t.minus(o),t=Z(o.times(c),new n(e++*e++),f,1),void 0!==(o=u.plus(t)).d[a]){for(s=a;o.d[s]===u.d[s]&&s--;);if(-1==s)break}s=u,u=t,t=o,o=s,0}return h=!0,o.d.length=a+1,o}function z(n,e){for(var i=n;--e;)i*=n;return i}function G(n,e){var i,t=e.s<0,s=U(n,n.precision,1),o=s.times(.5);if((e=e.abs()).lte(o))return r=t?4:1,e;if((i=e.divToInt(s)).isZero())r=t?3:2;else{if((e=e.minus(i.times(s))).lte(o))return r=I(i)?t?2:3:t?4:1,e;r=I(i)?t?1:4:t?3:2}return e.minus(s).abs()}function K(n,e,t,r){var s,c,f,a,h,d,l,p,g,m=n.constructor,w=void 0!==t;if(w?(F(t,1,o),void 0===r?r=m.rounding:F(r,0,8)):(t=m.precision,r=m.rounding),n.isFinite()){for(w?(s=2,16==e?t=4*t-3:8==e&&(t=3*t-2)):s=e,(f=(l=R(n)).indexOf(\".\"))>=0&&(l=l.replace(\".\",\"\"),(g=new m(1)).e=l.length-f,g.d=S(R(g),10,s),g.e=g.d.length),c=h=(p=S(l,10,s)).length;0==p[--h];)p.pop();if(p[0]){if(f<0?c--:((n=new m(n)).d=p,n.e=c,p=(n=Z(n,g,t,r,0,s)).d,c=n.e,d=i),f=p[t],a=s/2,d=d||void 0!==p[t+1],d=r<4?(void 0!==f||d)&&(0===r||r===(n.s<0?3:2)):f>a||f===a&&(4===r||d||6===r&&1&p[t-1]||r===(n.s<0?8:7)),p.length=t,d)for(;++p[--t]>s-1;)p[t]=0,t||(++c,p.unshift(1));for(h=p.length;!p[h-1];--h);for(f=0,l=\"\";f<h;f++)l+=u.charAt(p[f]);if(w){if(h>1)if(16==e||8==e){for(f=16==e?4:3,--h;h%f;h++)l+=\"0\";for(h=(p=S(l,s,e)).length;!p[h-1];--h);for(f=1,l=\"1.\";f<h;f++)l+=u.charAt(p[f])}else l=l.charAt(0)+\".\"+l.slice(1);l=l+(c<0?\"p\":\"p+\")+c}else if(c<0){for(;++c;)l=\"0\"+l;l=\"0.\"+l}else if(++c>h)for(c-=h;c--;)l+=\"0\";else c<h&&(l=l.slice(0,c)+\".\"+l.slice(c))}else l=w?\"0p+0\":\"0\";l=(16==e?\"0x\":2==e?\"0b\":8==e?\"0o\":\"\")+l}else l=j(n);return n.s<0?\"-\"+l:l}function Q(n,e){if(n.length>e)return n.length=e,!0}function X(n){return new this(n).abs()}function Y(n){return new this(n).acos()}function nn(n){return new this(n).acosh()}function en(n,e){return new this(n).plus(e)}function tn(n){return new this(n).asin()}function rn(n){return new this(n).asinh()}function sn(n){return new this(n).atan()}function on(n){return new this(n).atanh()}function un(n,e){n=new this(n),e=new this(e);var i,t=this.precision,r=this.rounding,s=t+4;return n.s&&e.s?n.d||e.d?!e.d||n.isZero()?(i=e.s<0?U(this,t,r):new this(0)).s=n.s:!n.d||e.isZero()?(i=U(this,s,1).times(.5)).s=n.s:e.s<0?(this.precision=s,this.rounding=1,i=this.atan(Z(n,e,s,1)),e=U(this,s,1),this.precision=t,this.rounding=r,i=n.s<0?i.minus(e):i.plus(e)):i=this.atan(Z(n,e,s,1)):(i=U(this,s,1).times(e.s>0?.25:.75)).s=n.s:i=new this(NaN),i}function cn(n){return new this(n).cbrt()}function fn(n){return P(n=new this(n),n.e+1,2)}function an(n){if(!n||\"object\"!=typeof n)throw Error(d+\"Object expected\");var e,i,t,r=!0===n.defaults,u=[\"precision\",1,o,\"rounding\",0,8,\"toExpNeg\",-s,0,\"toExpPos\",0,s,\"maxE\",0,s,\"minE\",-s,0,\"modulo\",0,9];for(e=0;e<u.length;e+=3)if(i=u[e],r&&(this[i]=a[i]),void 0!==(t=n[i])){if(!(m(t)===t&&t>=u[e+1]&&t<=u[e+2]))throw Error(l+i+\": \"+t);this[i]=t}if(i=\"crypto\",r&&(this[i]=a[i]),void 0!==(t=n[i])){if(!0!==t&&!1!==t&&0!==t&&1!==t)throw Error(l+i+\": \"+t);if(t){if(\"undefined\"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(g);this[i]=!0}else this[i]=!1}return this}function hn(n){return new this(n).cos()}function dn(n){return new this(n).cosh()}function ln(n,e){return new this(n).div(e)}function pn(n){return new this(n).exp()}function gn(n){return P(n=new this(n),n.e+1,3)}function mn(){var n,e,i=new this(0);for(h=!1,n=0;n<arguments.length;)if((e=new this(arguments[n++])).d)i.d&&(i=i.plus(e.times(e)));else{if(e.s)return h=!0,new this(1/0);i=e}return h=!0,i.sqrt()}function wn(n){return n instanceof e||n&&\"[object Decimal]\"===n.name||!1}function vn(n){return new this(n).ln()}function Nn(n,e){return new this(n).log(e)}function bn(n){return new this(n).log(2)}function En(n){return new this(n).log(10)}function xn(){return H(this,arguments,\"lt\")}function yn(){return H(this,arguments,\"gt\")}function Mn(n,e){return new this(n).mod(e)}function qn(n,e){return new this(n).mul(e)}function On(n,e){return new this(n).pow(e)}function Dn(n){var e,i,t,r,s=0,u=new this(1),c=[];if(void 0===n?n=this.precision:F(n,1,o),t=Math.ceil(n/y),this.crypto)if(crypto.getRandomValues)for(e=crypto.getRandomValues(new Uint32Array(t));s<t;)(r=e[s])>=429e7?e[s]=crypto.getRandomValues(new Uint32Array(1))[0]:c[s++]=r%1e7;else{if(!crypto.randomBytes)throw Error(g);for(e=crypto.randomBytes(t*=4);s<t;)(r=e[s]+(e[s+1]<<8)+(e[s+2]<<16)+((127&e[s+3])<<24))>=214e7?crypto.randomBytes(4).copy(e,s):(c.push(r%1e7),s+=4);s=t/4}else for(;s<t;)c[s++]=1e7*Math.random()|0;for(t=c[--s],n%=y,t&&n&&(r=w(10,y-n),c[s]=(t/r|0)*r);0===c[s];s--)c.pop();if(s<0)i=0,c=[0];else{for(i=-1;0===c[0];i-=y)c.shift();for(t=1,r=c[0];r>=10;r/=10)t++;t<y&&(i-=y-t)}return u.e=i,u.d=c,u}function Fn(n){return P(n=new this(n),n.e+1,this.rounding)}function An(n){return(n=new this(n)).d?n.d[0]?n.s:0*n.s:n.s||NaN}function Sn(n){return new this(n).sin()}function Zn(n){return new this(n).sinh()}function Pn(n){return new this(n).sqrt()}function Rn(n,e){return new this(n).sub(e)}function Ln(n){return new this(n).tan()}function Tn(n){return new this(n).tanh()}function Un(n){return P(n=new this(n),n.e+1,1)}return(e=function n(e){var i,t,r;function s(n){var e,i,t,r=this;if(!(r instanceof s))return new s(n);if(r.constructor=s,n instanceof s)return r.s=n.s,void(h?!n.d||n.e>s.maxE?(r.e=NaN,r.d=null):n.e<s.minE?(r.e=0,r.d=[0]):(r.e=n.e,r.d=n.d.slice()):(r.e=n.e,r.d=n.d?n.d.slice():n.d));if(\"number\"==(t=typeof n)){if(0===n)return r.s=1/n<0?-1:1,r.e=0,void(r.d=[0]);if(n<0?(n=-n,r.s=-1):r.s=1,n===~~n&&n<1e7){for(e=0,i=n;i>=10;i/=10)e++;return void(h?e>s.maxE?(r.e=NaN,r.d=null):e<s.minE?(r.e=0,r.d=[0]):(r.e=e,r.d=[n]):(r.e=e,r.d=[n]))}return 0*n!=0?(n||(r.s=NaN),r.e=NaN,void(r.d=null)):$(r,n.toString())}if(\"string\"!==t)throw Error(l+n);return 45===(i=n.charCodeAt(0))?(n=n.slice(1),r.s=-1):(43===i&&(n=n.slice(1)),r.s=1),E.test(n)?$(r,n):W(r,n)}if(s.prototype=O,s.ROUND_UP=0,s.ROUND_DOWN=1,s.ROUND_CEIL=2,s.ROUND_FLOOR=3,s.ROUND_HALF_UP=4,s.ROUND_HALF_DOWN=5,s.ROUND_HALF_EVEN=6,s.ROUND_HALF_CEIL=7,s.ROUND_HALF_FLOOR=8,s.EUCLID=9,s.config=s.set=an,s.clone=n,s.isDecimal=wn,s.abs=X,s.acos=Y,s.acosh=nn,s.add=en,s.asin=tn,s.asinh=rn,s.atan=sn,s.atanh=on,s.atan2=un,s.cbrt=cn,s.ceil=fn,s.cos=hn,s.cosh=dn,s.div=ln,s.exp=pn,s.floor=gn,s.hypot=mn,s.ln=vn,s.log=Nn,s.log10=En,s.log2=bn,s.max=xn,s.min=yn,s.mod=Mn,s.mul=qn,s.pow=On,s.random=Dn,s.round=Fn,s.sign=An,s.sin=Sn,s.sinh=Zn,s.sqrt=Pn,s.sub=Rn,s.tan=Ln,s.tanh=Tn,s.trunc=Un,void 0===e&&(e={}),e&&!0!==e.defaults)for(r=[\"precision\",\"rounding\",\"toExpNeg\",\"toExpPos\",\"maxE\",\"minE\",\"modulo\",\"crypto\"],i=0;i<r.length;)e.hasOwnProperty(t=r[i++])||(e[t]=this[t]);return s.config(e),s}(a)).default=e.Decimal=e,c=new e(c),f=new e(f),\"function\"==typeof define&&define.amd?define(function(){return e}):\"undefined\"!=typeof module&&module.exports?(\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator&&(O[Symbol.for(\"nodejs.util.inspect.custom\")]=O.toString,O[Symbol.toStringTag]=\"Decimal\"),module.exports=e):(n||(n=\"undefined\"!=typeof self&&self&&self.self==self?self:window),t=n.Decimal,e.noConflict=function(){return n.Decimal=t,e},n.Decimal=e),e}(this)\r\n//    bigDec: require('decimal.js')\r\n});\r\n\r\nif((typeof module) !== 'undefined') {\r\n    module.exports = nerdamer;\r\n};"],"names":["nerdamer","require","core","getCore","_","PARSER","N","groups","P","S","EX","FN","PL","CP","CB","keys","Utils","even","variables","format","round","Frac","isInt","Symbol","CONST_HASH","Settings","math","importFunctions","evaluate","Polynomial","symbol","variable","order","isSymbol","this","parse","isNaN","undefined","exceptions","InvalidVariableNameError","coeffs","fill","Factors","factors","length","MVTerm","coeff","terms","map","sum","image","fromArray","arr","p","fit","c1","c2","n","base","Array","t","Math","pow","i","b","q","c","sign","floor","abs","prototype","isPoly","NerdamerTypeError","text","power","absEquals","expand","group","multiplier","toDecimal","x","symbols","sub","Number","l","trim","equalsZero","equals","pop","modP","j","subtract","add","d","mod","w","divide","up_one","next","poly","max","a","dividend","arrayClone","divisor","mp","quotient","multiply","p1","l1","l2","x1","k","x2","e","isZero","clone","deg","lc","monic","gcd","Math2","QGCD","apply","diff","new_array","push","integrate","gcf","toPolynomial","ca","indexOf","fnz","parr","quad","incl_img","roots","Error","dsc","sqrt","squareFree","output","equalsNumber","y","z","toSymbol","end","str","plus","String","toString","with_order","error","s","distributeMultiplier","isComposite","isConstant","isImaginary","m","each","imaginary","tBase","collectSymbols","g","nterm","sym","value","updateCount","altVar","sameVars","groupTerms","f","egrouped","grouped","el","decompose_fn","collectFactors","getNumberSymbolics","fo","firstObject","symfunction","PARENTHESIS","obj","negate","key","preAdd","pFactor","is_constant","v","factored","Object","values","sort","factor","fname","unwrapPARENS","merge","o","isLinear","args","call","count","clean","h","lessThan","getVars","vars","term","getRevMap","rev_map","join","len","mapped","generateImage","getImg","mvterm","new_mvterm","toMapObj","filledArray","clss","arrSum","haveIntersection","some","subFunctions","subbed","previousGroup","val","tvar","inBrackets","getFunctionsSubs","subs","__","Algebra","version","proots","decp","known_roots","get_roots","rarr","powers","calcroots","concat","unshift","lowest_pow","arrayMin","lowest_symbol","toUnitMultiplier","minpower","arrayMax","isArray","last_power","slice","ValueLimitExceededError","zeroi","degreePar","Degree","zeror","QuadSD_ak1","NN","u","iPar","calcSC_ak1","DBL_EPSILON","K","qk","sdPar","dumFlag","a3","a1","a7","nextK_ak1","tFlag","qp","temp","newest_ak1","a4","a5","b1","b2","c3","c4","Quad_ak1","sr","si","lr","li","QuadIT_ak1","uu","vv","calcPar","ee","omp","relstp","ui","vi","zm","qPar","triedFlag","NZ","szr","szi","lzr","lzi","RealIT_ak1","kv","ms","pv","nm1","Fxshfr_ak1","MDP1","L2","betas","betav","oss","ots","otv","ovv","ss","ts","tss","tv","tvv","fflag","spass","stry","vpass","vtry","svk","iFlag","degPar","bnd","df","dx","ff","moduli_max","moduli_min","sc","xm","aa","bb","cc","xxx","jj","NM1","zerok","RADFAC","LB2","LN2","pt","Fxshfr_Par","LO","MIN_VALUE","cosr","cos","sinr","sin","xx","yy","MAX_VALUE","log","exp","rpSolve","img","real","num","replace","nroots","Vector","froot","guess","xn","build","Calculus","fn","Function","done","safety","r","newtonraph","sumProd","invert","wrt","contains","polyPowers","for_variable","arrayUnique","Factor","split","mix","include_negatives","ll","common","zeroes","exit","tp","allSame","n_terms","n_zeroes","div","_symbol","retval","_factor","create","_factored","quadFactor","degree","cf","root","filter","root1","root2","cubeFactor","sign_a","sign_b","isCube","m_root_a","getNth","m_root_b","arg","isSimple","greaterThan","untouched","den_array","num_array","den","dfact","nfact","Simplify","strip","getDenom","getNum","unstrip","toLinear","IMAGINARY","multiVar","all_S","all_unit","coeff_factors","coeffFactor","power_factors","powerFactor","mfactor","t_factors","trialAndError","tf_symbol","t_factor","addPower","reduce","nn","result","sqfr","allNumeric","LT","updateHash","factor_array","cnst","cfactors","ifactor","search","forEach","check","candidate","ltfactors","isubbed","nfactors","cp","ceil","lc_is_neg","cnst_is_neg","factor_found","isPrime","mSqfrFactor","reverse","can_divide","is_factor","sqdiff","remove_square","block","separated","separate","obj_array","constants","powSimp","factors2","unwrapSQRT","sorted","maxes","new_factor","divided","has_fractions","neg_numeric_factor","rem","allLinear","set","status","sg","arguments","elements","arguments2Array","appeared","splice","every","aggregate","gcd_","lcm","gcd_m","GCD","gcd_v","gcd_p","vars_a","vars_b","T","multipliers","denom","numer","prev","curr","denom_args","input","size","mask","results","total","isVariableSymbol","symbol1","symbol2","remainder","fail","symbol1_has_func","hasFunc","symbol2_has_func","parse_funcs","quot","reconvert","get_unique_max","any","idx","get_det","lookat","det","umax","is_equal","max1","max2","idx1","idx2","item1","item2","d1","d2","s2","cterm","t_map","init_sort","is_larger","s1","target","lead_var","sf","blv","alv","checked","tt","try_better_lead_var","fdt","fnt","nd","dividend_larger","InfiniteLoopError","shift","neg","cur","remove","line","v1","v2","convertToVector","isVector","dy","PartFrac","createTemplate","denom_factors","f_array","factors_vec","degrees","efactor","partfrac","as_array","ofactors","nterms","dterms","M","ks","template","tfactors","Matrix","fillHoles","transpose","partials","denominators","e2","sd","depth","distributeExponent","sqComplete","raw","br","sqrt_a","stop","msg","complexSimp","ac","bd","bc","ad","cd","r1","r2","i1","i2","realpart","imagpart","trigSimp","containsFunction","sym_array","tr","fnTransform","simplify","fracSimp","n1","n2","ratSimp","sqrtSimp","isSQRT","trial","simp","patternSub","patterns","has_CP","found","collect","getU","simplified","Classes","Expression","useAlgebraDiv","divideFn","calls","ans","useParserDiv","register","name","visible","numargs","updateAPI","LOG","ABS","SQRT","SIN","COS","TAN","SEC","CSC","COT","ASIN","ACOS","ATAN","ASEC","ACSC","ACOT","SINH","COSH","TANH","CSCH","SECH","COTH","ASECH","ACSCH","ACOTH","NoIntegralFound","message","hasIntegral","double_angle","transformed","hasTrig","in_trig","in_inverse_trig","toCommonDenominator","denominator","numerator","in_htrig","jacobian","eqns","arrayGetVariables","eq","gt","cMatrix","all_functions","cosAsinBtransform","cosAsinBtranform","cosAsinAtransform","cosAsinAtranform","sinAsinBtransform","trigTransform","integration_depth","max_lim_depth","index","start","isNumericSymbol","modifier","product","nth","vector","isMatrix","matrix","sp","derive","polydiff","product_rule","qdiff","x_","y_","LOG10","altVal","integration","u_substitution","try_combo","do_fn_sub","Q","g1","g2","poly_integrate","dc","decompose_arg","xp","dc2","new_val","by_parts","integrated","A","B","f1","f2","warn","partial_fraction","opt","partial_fractions","get_udv","parts","setSymbol","dv","part","trig_sub","du","integral","clearU","udv","vdu","uv","integral_vdu","vdu_s","previous","stripVar","isE","is_cyclic","original_symbol","dt","decomp","ax","b_is_positive","unwrapAbs","C","D","E","F","L1","sqrt_ax","sqa","sqb","aob","bsqi","was_factored","fx","sq","u_du","ag","decomposed","a_","b_","rd","rd2","na","parse_str","cfsymbol","unwrapped","sym1","sym2","fn1","fn2","arg1","arg2","new_sym","p1_even","p2_even","trans","bx","sym1_is_linear","pd","min","pc","f_is_linear","p2","dummy","bksub","u_transform","expanded","U","scope","U2","cosn","X","sym2_clone","sa","sb","nq","syma","symb","first","intg","DivisionByZero","defint","from","to","get_value","point","Limit","limit","num_integrate","upper","lower","interval","diverges","lim","gin","lim_sign","isInfinity","fm","gm","L","lim1","lim2","indeterminate","ft","t_symbol","den_is_zero","infinity","rewriteToLog","getSubbed","isInterval","isConvergent","_num","_den","isOne","symbol_","lim_base","lim_pow","evaluates","s_arg","pi","divergent","FACTORIAL","_lim","_symbols","fns","Fresnel","bigInt","bigDec","precision","callPeekers","init_primes","exclude","suppress_errors","PARSE2NUMBER","SAFE","FUNCTION_MODULES","ALLOW_CHARS","USE_MULTICHARACTER_VARS","POWER_OPERATOR","VALIDATION_REGEX","IMPLIED_MULTIPLICATION_REGEX","ALIASES","POSITIVE_MULTIPLIERS","CACHE","SILENCE_WARNINGS","PRECISION","EXPRESSION_DECP","DEFAULT_DECP","VECTOR","DOUBLEFACTORIAL","LONG_PI","LONG_E","PI","LOG10_LATEX","MAX_EXP","SCIENTIFIC_MAX_DECIMAL_PLACES","SCIENTIFIC_IGNORE_ZERO_EXPONENTS","stack","R","ne","ae","hasOwnProperty","G","V","H","$","Z","Y","W","J","SHOW_WARNINGS","console","test","toLowerCase","te","Fe","pe","re","Ve","ie","He","se","je","oe","ue","le","ce","fe","functions","mapped_function","params","body","he","me","ge","de","ve","we","ye","be","Se","Me","Ne","isPi","Ee","qe","xe","Ae","Ce","I","Le","Ie","Ue","_e","Oe","O","Re","Te","ParseError","OutOfFunctionDomainError","UndefinedError","MaximumIterationsReached","ParityError","OperatorError","OutOfRangeError","DimensionError","NerdamerValueError","SolveError","UnexpectedTokenError","csc","sec","cot","tan","acsc","asin","asec","acos","acot","atan","erf","median","_len","_key","fromContinued","fractions","whole","continuedFraction","EPSILON","bigpow","De","isInteger","nthroot","gamma","bigfactorial","times","bigLog","quick","factorial","NaN","dfactorial","isNegative","LCM","sfactor","lt","minus","boxfactor","fib","integer_part","simpson","maxDepthCount","nanEncountered","Ci","Si","Ei","Shi","Chi","cosh","Li","gamma_incomplete","step","rect","sinc","tri","gte","decimal","Pe","valueOf","exec","divmod","E_TO_EXP","charAt","parens","ke","startsWith","substr","isScientific","fromScientific","convert","simple","Be","quickConversion","names","actions","type","column","OPERATOR","FUNCTION","precedence","MAX_PRECEDENCE","leftAssoc","append","getItems","pretty_print","is_prefix","VARIABLE_OR_LITERAL","UNIT","KEYWORD","classes","Collection","Slice","Token","prec","sinh","removeDen","tanh","sech","csch","coth","acosh","asinh","atanh","asech","acsch","acoth","hyp","USE_BIG","atan2","trig","dividedBy","trigh","operator","action","prefix","postfix","units","operation","overloaded","overloadAction","overloadLeftAssoc","vectorFn","id","is_open","is_close","maps_to","arccos","arcsin","arctan","log10","radians","SYMBOLIC_MIN_MAX","trunc","fact","continued_fraction","scientific","pfactor","Set","imatrix","identity","cbrt","expand_denominator","expand_functions","determinant","cols","rows","dot","cross","vecget","vecset","vectrim","matget","matset","matgetrow","matsetrow","matgetcol","matsetcol","rationalize","IF","is_in","conjugate","polarform","toPolarFormArray","rectform","union","intersection","difference","intersects","is_subset","print","left","right","setPower","numVal","toExponential","isFinite","override","restore","extend","callfunction","operator_filter_regex","RegExp","setOperator","postif","getOperator","aliasOperator","getOperators","getBrackets","initConstants","CONSTANTS","peekers","pre_operator","post_operator","pre_function","post_function","tokenize","substring","toRPN","parseRPN","fromSet","parent","getter","isUnit","toHTML","repeat","tree","match","toObject","isConversion","toTeX","decimals","cdot","Ge","braces","brackets","latex","frac","getFunction","addPreprocessor","PreprocessorError","getPreprocessors","removePreprocessor","unit","Unit","attach","insert","shell","eachElement","dimensions","toFixed","combine","multiplyPower","IGNORE_E","comma","percent","assign","function_assign","lte","LOG10E","getExpression","text_","buildFunction","Xe","isNumber","isFraction","isPolynomial","hasFunction","exponent","removeLeadingZeroes","removeTrailingZeroes","leadingZeroes","dec","wholes","copy","isFrac","qcompare","isToNth","isSquare","toArray","isMonomial","isInverse","isImgSymbol","keyForGroup","isCombination","fullConversion","parser","space","formatFrac","greek","alpha","beta","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omnikron","rho","sigma","tau","upsilon","phi","chi","psi","omega","Gamma","Delta","Epsilon","Theta","Lambda","Xi","Pi","Sigma","Phi","Psi","Omega","ker","limsup","lg","ln","Pr","sup","hom","LN","dim","inf","liminf","formatSubscripts","formatP","square","brace","angle","filterTokens","infty","items","arrayPrefill","custom","modulus","eql","toUnitVector","angleFrom","isParallelTo","isAntiparallelTo","isPerpendicularTo","magnitude","zeroMatrix","get","row","col","toRightTriangular","isSingular","augment","canMultiplyFromLeft","sameSize","toVector","dependencies","_rename","nround","reformat","getProperName","compileDependencies","getArgsDeps","$e","setFunction","LOG_FNS","arrayAddSlices","arrayEqual","arraySum","comboSort","compare","random","customError","customType","evenFraction","generatePrimes","getCoeffs","isExpression","isReserved","knownVariable","reserveNames","range","sameSign","scientificToDecimal","stringReplace","validateName","Ze","Parser","Scientific","Fraction","LaTeX","err","rpn","convertToLaTeX","convertFromLaTeX","getWarnings","setConstant","getConstant","constant","getEquation","reserved","clear","flush","expressions","validVarName","supported","numEquations","numExpressions","setVar","getVar","clearVars","load","replaceFunction","htmlTree","addPeeker","removePeeker","isSmall","isEven","isDivisibleBy","lesser","modPow","_multiplyBySmall","over","isPositive","isOdd","compareAbs","compareTo","neq","notEquals","greater","geq","greaterOrEquals","leq","lesserOrEquals","bitLength","isProbablePrime","randBetween","modInv","zero","one","not","toJSNumber","shiftLeft","shiftRight","and","or","xor","charCodeAt","parseInt","toJSON","minusOne","isInstance","module","exports","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","absoluteValue","constructor","comparedTo","cmp","cosine","cubeRoot","decimalPlaces","dp","dividedToIntegerBy","divToInt","greaterThanOrEqualTo","hyperbolicCosine","hyperbolicSine","hyperbolicTangent","inverseCosine","isNeg","inverseHyperbolicCosine","inverseHyperbolicSine","inverseHyperbolicTangent","inverseSine","inverseTangent","isPos","lessThanOrEqualTo","logarithm","naturalExponential","naturalLogarithm","negated","sine","squareRoot","tangent","mul","toBinary","toDecimalPlaces","toDP","toFraction","toHexadecimal","toHex","toNearest","toNumber","toOctal","toPower","LN10","toPrecision","toSignificantDigits","toSD","truncated","defaults","getRandomValues","randomBytes","Uint32Array","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","isDecimal","hypot","log2","default","Decimal","define","ct","ht","mt","vt","wt","yt","bt","St","Mt","Nt","Et","qt","xt","At","Ct","Lt","It","Ut","_t","Ot","Rt","Tt","Pt","kt","Dt","Ft","Bt","Gt","Vt","ot","at","ut","We","Je","nt","ze","Qe","Ye","Ke","et","st","rt","it","LHS","RHS","SOLVE_RADIUS","ROOTS_PER_SIDE","make_pi_conversions","STEP_SIZE","MAX_NEWTON_ITERATIONS","MAX_NON_LINEAR_TRIES","NON_LINEAR_JUMP_AT","NON_LINEAR_JUMP_SIZE","NON_LINEAR_START","NEWTON_SLICES","NEWTON_EPSILON","SOLUTION_PROXIMITY","FILTER_SOLUTIONS","MAX_SOLVE_DEPTH","ZERO_EPSILON","MAX_BISECTION_ITER","BI_SECTION_EPSILON","hasNegativeTerms","toLHS","removeDenom","solveFor","Equation","checkAll","Solve","solutions","solve","solveCircle","SOLUTIONS_AS_OBJECT","solveNonLinearSystem","systemSolutions","solveSystemBySubstitution","solveSystem","cubic","quartic","divideAndConquer","csolve","getPoints","bisection","Newton","rewrite","sqrtSolve","PRE_ADD_SOLUTION","inverseFunctionSolve","Laplace_integration_depth","findFunction","Extra","LaPlace","transform","inverse","Statistics","frequencyMap","mean","mode","gVariance","variance","sampleVariance","standardDeviation","sampleStandardDeviation","zScore","Units","table","foot","meter","decimeter","imports","Groups","PRIMES","CUSTOM_OPERATORS","nthpow","EXPRESSIONS","VARS","RESERVED","WARNINGS","ErrorObj","last","typ","nsign","coeff_array","prevgroup","isSet","stringify","both","params_array","as_obj","item","removeDuplicates","condition","conditionType","seen","indexOrKey","setting","current_setting","upto","allNumbers","allConstants","half","contd","absn","ni","is_int","ifactors","prime","xf","cz","sm","side","tol","maxdepth","adsimp","fa","fb","V0","state","sl","V1","V2","Infinity","dk","dk0","d0","xk","powb","dk_dec","ld","same_delta","option","useGroup","asHash","wrapCondition","asDecimal","negative","digits","passed","om","txt","pg","pwg","cv","primeFactors","bin","preprocessors","node","node_type","operators","collection","complex","im","squared","getQuadrant","symMinMax","sigfigs","mat","vec1","vec2","tolerance","col_index","original","getval","aval","bval","set1","set2","which","with_what","what","force_call","fn_name","allowed_args","fn_settings","num_allowed_args","is_array","min_args","max_args","num_args","error_msg","numericArgs","fmodules","fmodule","bigConvert","ostr","Node","token","regex","lpos","tokens","scopes","open_brackets","has_space","addScope","scope_type","new_scope","goUp","get_operator_str","start_at","chunkify","operator_str","_operators","ch","add_token","add_function","set_last_position","position","last_token_is_numeric","bracket","pair","nxt","is_operator","prefixes","collapse","destination","next_is_operator","last_on_stack","substitutions","is_comma","fn_args","ret","il","element","indent","tab","html","location","group1","group2","before","prepare_expression","expression_string","objectify","chunkAtCommas","chunks","rem_brackets","retnum","retden","is_negative","qa","tw","asbig","img_part","sIsConstant","rank","testSQRT","expression_or_obj","TeX","narr","next_is_array","next_is_minus","before_last","remove_redundant_powers","nobj","expr","argSplit","new_num","new_den","shift_cells","aIsSymbol","bIsSymbol","aneg","bneg","ap","bp","h1","h2","powEQ","aIsComposite","bIsComposite","PN","PNEQ","valEQ","canIterate","bothPL","bIsMatrix","bnum","bden","a_pow","a_multiplier","ONN","bm","isSymbolP1","isSymbolP2","toEX","logV","ndiv","ddiv","ps","isMatrixB","isMatrixA","isVectorA","isVectorB","raised","aIsZero","bIsZero","nre","nim","bIsConstant","aIsConstant","bIsInt","sgn","_a","_b","log_a","neg_num","nr","tn","evenr","evenp","evennp","_result","fct","testPow","isEX","bool2Symbol","expression_number","asType","expression","first_arg","Build","for_symbol","otype","callback","dot_location","rounded","next_two","ed","is_neg","m_dc","isnegative","all","nthPower","nthMultiplier","mfactors","out_","in_","multivariate","exclude_x","fn_group","same_pow","a_is_unit_multiplier","find","needle","nargs","check_all","check_symbols","retainSign","isSymbolic","properties","keepSign","deep","power_only","is_one","existing","hash","contents","is_parens","sort_fn","expand_symbol","collected","opts","qc","nparts","stripSign","cparts","keep","LaTeXArray","rowTeX","m_array","v_array","p_array","inverted","t_varray","den_map","num_map","num_c","den_c","setBrackets","container","counter","laTex","combine_power","isBracketed","mn","md","vn","vd","top","bottom","glue","is_pow","filtered","next_token","raw_tokens","parse_next","lw","rl","mod1","mod2","theta_val","tex","raw_values","nc","np","els","new_element","ki","kp","inverse_elements","nel","nj","MM","kj","newline","to_decimal","row_tex","_union","_intersection","deps","dep_string","replacements","components","arg_array","supplements","ftext","xports","ftext_complex","ftext_function","bn","alias","slices","arr1","arr2","indx","combined","nb","comparison","info","_roots","with_str","libExports","fndec","add_on","asArray","equation_number","keep_EXPRESSIONS_fixed","asObject","asLaTeX","parent_obj","varname","loader","linker","new_num_args","withOperator","BASE","LOG_BASE","MAX_INT","MAX_INT_ARR","smallToArray","LOG_MAX_INT","Integer","radix","parseValue","parseBase","BigInteger","SmallInteger","isPrecise","arrayToSmall","createArray","truncate","l_a","l_b","carry","addAny","addSmall","a_l","b_l","borrow","subtractSmall","multiplyLong","a_i","multiplySmall","multiplyKaratsuba","abcd","multiplySmallAndArray","divModSmall","divModAny","self","quotientDigit","divisorMostSignificantDigit","divMod1","xlen","highx","highy","divMod2","qSign","mSign","isBasicPrime","millerRabinTest","nPrev","subtractAny","small","strict","bits","logN","iterations","lastT","lastR","newT","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","xSign","ySign","xRem","yRem","xDigit","yDigit","xDivMod","yDivMod","remQuo","LOBMASK_I","LOBMASK_BI","roughLOB","integerLogarithm","tmp","absBase","charCode","parseBaseFromArray","digit","toBase","out","toBaseString","parseStringValue","decimalPlace","parseNumberValue","low","restricted","en","rn","sn","on","un","cn","an","hn","dn","pn","gn","wn","Nn","En","yn","Mn","qn","On","Dn","Fn","An","Sn","Zn","Pn","Rn","Ln","Tn","Un"],"sourceRoot":""}