"use strict";(self.webpackChunklearn_and_run=self.webpackChunklearn_and_run||[]).push([[520],{21878:(e,s,t)=>{t.d(s,{H:()=>i});var n=t(72791),c=t(32378),o=t(80184);const i=e=>{let{title:s,functions:t,display:i,classes:a}=e;const[x,l]=(0,n.useState)("");return(0,n.useEffect)((()=>{if(t){let e="\\begin{cases}";for(let s=0;s<t.length;s++)e=e+t[s].f+"&",e+=t[s].domain,s!==t.length-1&&(e+="\\\\\\\\");e+="\\end{cases}",l(e)}}),[t]),(0,o.jsx)(o.Fragment,{children:(0,o.jsx)(c.Z,{classes:a||"",expression:"".concat(s?"".concat(s," = "):""," ").concat(x),display:i})})}},11520:(e,s,t)=>{t.r(s),t.d(s,{default:()=>r});t(72791);var n=t(15041),c=t(1735),o=t(48654),i=t(21878),a=t(32378),x=t(59959),l=t(80184);const r=()=>(()=>{const e=[],s=[],t=(0,n.xT)(0,10)<=6?1:2,r=(0,n.lx)(t,!0,-3,2);let d=[];const h=(0,n.xT)(0,r.length-1),f=r[h];for(let c=0;c<t;c++)d.push((0,n.xT)(-7,7));const p=1===t&&(0,n.xT)(0,10)<=6,m=p?(0,n.xT)(0,2):(0,n.xT)(0,1);let j=0===h&&p?0:(0,n.xT)(0,1);const u=[];for(let i=0;i<=r.length;i++){let t,a,x,l,v=!1;if(i-1===h&&p){const s=String(2!==m?d[h]:(0,n.iP)(-7,7,[d[h]]));e.push({f:s,domain:"x = ".concat(f)}),j=1,u.push({type:1,f:s,value:s,replaced:!1})}0===i?(t="x ".concat(j?"\\leq":"<"," ").concat(r[i]),x=r[i],l=d[i],v=j&&i===h):i===r.length?(t="x ".concat(j?">":"\\geq"," ").concat(r[i-1]),x=r[i-1],l=1===m&&h===i-1?(0,n.iP)(-7,7,[d[i-1]]):d[i-1],v=!j&&i-1===h):(t="".concat(r[i-1]," ").concat(j?"<":"\\leq"," x"),v=i-1===h&&!j,j=h===i&&p?0:(0,n.xT)(0,1),v=v||j&&h===i,t+=" ".concat(j?"\\leq":"<"," ").concat(r[i]),x=r[h],l=1===m?(0,n.iP)(-7,7,[d[h]]):d[h]);let g=Math.abs(x)>2?1:(0,n.xT)(1,2);a=(0,o.X2)(g,x,l);const _=c.Qc(a);if(s.push((e=>_.evaluate({x:e}))),a=c.NC(a).toTex({parenthesis:"auto"}).replaceAll("\\cdot",""),e.push({f:a,domain:t}),v){const e=a.includes("x");let s=a.replaceAll("x","(".concat(x,")"));u.push({type:1,f:s,value:l,replaced:e})}i!==h&&i-1!==h||u.push({type:i===h?0:2,f:a,value:l})}u.sort(((e,s)=>e.type-s.type));const v=(0,l.jsxs)("div",{className:"flex vertical center medium-gap",children:[(0,l.jsxs)("h3",{children:["Is the function continuous at ",(0,l.jsx)(a.Z,{expression:"x = ".concat(f)}),"?"]}),(0,l.jsx)(i.H,{functions:e,title:"f(x)"})]}),g=(0,l.jsx)(l.Fragment,{}),_=[{component:(0,l.jsxs)("div",{children:["Yes, because ",(0,l.jsx)(a.Z,{expression:"\\lim_{x \\to ".concat(f,"^{\\footnotesize\\texttt{+}}} f(x) = \\lim_{x \\to ").concat(f,"^{\\footnotesize\\texttt{-}}} f(x)")})," and ",(0,l.jsx)(a.Z,{expression:"\\lim_{x \\to ".concat(f,"} f(x) = f(").concat(f,")")})]}),correct:0===m},{component:(0,l.jsxs)("div",{children:["Yes, because ",(0,l.jsx)(a.Z,{expression:"\\lim_{x \\to ".concat(f,"} f(x)")})," exists."]}),correct:!1},{component:(0,l.jsxs)("div",{children:["No, because ",(0,l.jsx)(a.Z,{expression:"\\lim_{x \\to ".concat(f,"} f(x) ")})," does not exist."]}),correct:1===m},{component:(0,l.jsxs)("div",{children:["No, because ",(0,l.jsx)(a.Z,{expression:"\\lim_{x \\to ".concat(f,"} f(x) ")})," exists, but ",(0,l.jsx)(a.Z,{expression:"\\lim_{x \\to ".concat(f,"} f(x) \\neq f(").concat(f,")")}),"."]}),correct:2===m}],Z=[(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)("div",{children:"Remember, we have 2 conditions to check for continuity for this function:"}),(0,l.jsx)("div",{children:(0,l.jsxs)("ul",{className:"text-start",children:[(0,l.jsxs)("li",{children:[(0,l.jsx)(a.Z,{classes:"bold",expression:"\\lim_{x \\to a} f(x)"})," must ",(0,l.jsx)("strong",{children:"exist"})]}),(0,l.jsx)("li",{children:(0,l.jsx)(a.Z,{classes:"bold",expression:"\\lim_{x \\to a} f(x) = f(a)",display:!0})})]})})]}),(0,l.jsx)(l.Fragment,{children:(0,l.jsxs)("div",{children:["In order to determine if ",(0,l.jsx)(a.Z,{classes:"bold",expression:"\\lim_{x \\to ".concat(f,"} f(x)")})," ",(0,l.jsx)("strong",{children:"exists"}),", confirm that ",(0,l.jsx)(a.Z,{classes:"bold",expression:"\\lim_{x \\to ".concat(f).concat(x.G9,"} f(x) = \\lim_{x \\to ").concat(f).concat(x.md,"} f(x)")}),"."]})}),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)("div",{children:"We can evaluate:"}),(0,l.jsx)("div",{children:(0,l.jsx)(a.Z,{expression:"\\lim_{x \\to ".concat(f).concat(x.G9,"} f(x) = \\lim_{x \\to ").concat(f,"} \\left(").concat(u[0].f,"\\right) = ").concat(u[0].value),display:!0})}),(0,l.jsx)("div",{children:(0,l.jsx)(a.Z,{expression:"\\lim_{x \\to ".concat(f).concat(x.md,"} f(x) = \\lim_{x \\to ").concat(f,"} \\left(").concat(u[2].f,"\\right) = ").concat(u[2].value),display:!0})})]})];return 1===m?Z.push((0,l.jsx)(l.Fragment,{children:(0,l.jsx)("div",{children:"Since these limits don't equal each other, the first condition is not satisfied."})}),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)("div",{children:"Thus, the correct answer is:"}),(0,l.jsx)("div",{className:"hint-ans input correct ans",children:_[2].component})]})):Z.push((0,l.jsx)(l.Fragment,{children:(0,l.jsxs)("div",{children:["These limits equal each other, meaning the first condition is satisfied. Now, we can move on to the second condition: does ",(0,l.jsx)(a.Z,{classes:"bold",expression:"\\lim_{x \\to ".concat(f,"} f(x) = f(").concat(f,")")}),"?"]})}),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)("div",{children:["We can evaluate ",(0,l.jsx)(a.Z,{expression:"f(".concat(f,")")}),":"]}),(0,l.jsx)("div",{children:(0,l.jsx)(a.Z,{expression:"f(".concat(f,") = ").concat(u[1].f,"\n          ").concat(u[1].replaced?"= ".concat(u[1].value):""," "),display:!0})})]}),(0,l.jsx)(l.Fragment,{children:(0,l.jsxs)("div",{children:["Since ",(0,l.jsx)(a.Z,{expression:"\\lim_{x \\to ".concat(f,"} f(x) ").concat(0===m?"=":"\\neq"," f(").concat(f,")")}),", the second condition ",0===m?"holds":"does not hold","."]})}),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)("div",{children:"Thus, the correct answer is:"}),(0,l.jsx)("div",{className:"hint-ans input correct ans",children:0===m?_[0].component:_[3].component})]})),{title:g,question:v,input:_,type:"mc",hints:Z}})()}}]);
//# sourceMappingURL=520.bc48aaea.chunk.js.map