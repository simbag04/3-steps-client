{"version":3,"file":"static/js/718.e916775a.chunk.js","mappings":"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","sources":["helpers/Latex.js","components/content-components/tables/FunctionTable.js","topics/evaluating-limits-using-tables/Sections.js","topics/evaluating-limits-using-tables/learn-content.js"],"sourcesContent":["/**\r\n * Latex component that uses katex to render math in latex font\r\n * Parameters: \r\n *  - classes: custom classes to be added to returned html\r\n *  - expression: math to be rendered as latex\r\n *  - inline: boolean value indicating whether latex should be rendered inline or block mode\r\n */\r\n\r\nimport 'katex/dist/katex.min.css';  // Import KaTeX styles\r\nimport { BlockMath, InlineMath } from 'react-katex';\r\n\r\nconst Latex = ({classes, expression, display}) => {\r\n  return (\r\n    <span className={classes}>\r\n      {!display ? \r\n      <InlineMath math={expression} /> :\r\n      <BlockMath math={expression} /> }\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default Latex","import { useRef, useState, useEffect } from \"react\"\r\nimport { useWindowSize } from \"../../../helpers/useWindowSize\";\r\nimport '../../../styles/table.css'\r\n\r\nexport const FunctionTable = ({ xTitle, yTitle, data }) => {\r\n  const tableRef = useRef(null);\r\n  const [width, setWidth] = useState(0);\r\n  const originalWidthRef = useRef(null);\r\n  const windowWidth = useWindowSize()[0];\r\n  const [display, setDisplay] = useState(\"horizontal\");\r\n\r\n  // gets width of table\r\n  useEffect(() => {\r\n    const element = tableRef.current;\r\n    if (!element) return;\r\n\r\n    const resizeObserver = new ResizeObserver(entries => {\r\n      for (const entry of entries) {\r\n        if (entry.target === element) {\r\n          if (display === \"horizontal\") {\r\n            originalWidthRef.current = entry.contentRect.width;\r\n          }\r\n          setWidth(entry.contentRect.width);\r\n        }\r\n      }\r\n    });\r\n\r\n    resizeObserver.observe(element);\r\n\r\n    return () => {\r\n      resizeObserver.unobserve(element);\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, [tableRef, windowWidth, display]);\r\n\r\n  useEffect(() => {\r\n    if (width > 0.8 * windowWidth) {\r\n      setDisplay(\"vertical\")\r\n    } else if (originalWidthRef && originalWidthRef.current && originalWidthRef.current < 0.8 * windowWidth) {\r\n      setDisplay(\"horizontal\")\r\n    }\r\n  }, [width, windowWidth])\r\n\r\n  return (\r\n    <table ref={tableRef} className={`function-table flex ${display}`}>\r\n      <tr>\r\n        <th>{xTitle}</th>\r\n        <th>{yTitle}</th>\r\n      </tr>\r\n      {data.map((d, i) => {\r\n        return (\r\n          <tr key={i} className={i % 2 === 0 ? \"table-color-1\" : \"table-color-2\"}>\r\n            <td>{d.x}</td>\r\n            <td>{d.y}</td>\r\n          </tr>\r\n        )\r\n      })}\r\n    </table>\r\n  )\r\n}","import { FunctionTable } from \"../../components/content-components/tables/FunctionTable\"\r\nimport Latex from \"../../helpers/Latex\"\r\n\r\nconst table1Data = [\r\n  { x: 1, y: 3 },\r\n  { x: 2, y: 4 },\r\n  { x: 3, y: 6 },\r\n  { x: 3.9, y: 6.3 },\r\n  { x: 3.99, y: 6.49 },\r\n  { x: 3.999, y: 6.499 },\r\n  { x: 4, y: 10 },\r\n  { x: 4.001, y: 6.501 },\r\n  { x: 4.01, y: 6.51 },\r\n  { x: 4.1, y: 6.7 },\r\n  { x: 5, y: 8 },\r\n  { x: 6, y: 9 },\r\n  { x: 7, y: 10 },\r\n]\r\n\r\nconst table2Data = [\r\n  { x: 1, y: 5 },\r\n  { x: 2, y: 6 },\r\n  { x: 3, y: 8 },\r\n  { x: 3.9, y: 8.8 },\r\n  { x: 3.99, y: 8.95 },\r\n  { x: 3.999, y: 8.999 },\r\n  { x: 4, y: 9 },\r\n]\r\n\r\nconst table3Data = [\r\n  { x: 1, y: 8 },\r\n  { x: 2, y: 7 },\r\n  { x: 3, y: 3 },\r\n  { x: 4, y: 0 },\r\n  { x: 5, y: -2 },\r\n  { x: 6, y: -5 },\r\n  { x: 7, y: -9 },\r\n]\r\n\r\nconst table4Data = [\r\n  { x: 2, y: 5},\r\n  { x: 2.9, y: 5.9 },\r\n  { x: 2.99, y: 5.99 },\r\n  { x: 2.999, y: 5.999 },\r\n  { x: 3, y: \"und\" },\r\n  { x: 3.001, y: 6.001 },\r\n  { x: 3.01, y: 6.01  },\r\n  { x: 3.1, y: 6.1 },\r\n  { x: 4, y: 7     },\r\n]\r\n\r\nconst Section1 = () => {\r\n  return (\r\n    <div>In addition to graphs, limits can also be estimated from tables.</div>\r\n  )\r\n}\r\nconst Section2 = () => {\r\n  return (\r\n    <>\r\n      <div>For example, consider this table. </div>\r\n      <FunctionTable xTitle={<Latex expression={\"x\"} />} yTitle={<Latex expression={`f(x)`} />} data={table1Data} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section3 = () => {\r\n  return (\r\n    <>\r\n      <div>It is reasonable to estimate that <Latex expression={`{\\\\lim}_{x \\\\to 4} f(x) = 6.5`} /> because that is what the values near <Latex expression={`x = 4`} /> seem to be approaching.</div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section4 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        This is reasonable even though <Latex expression={`f(4) = 10`} />, because a limit is defined as what a function is <strong>approaching</strong>, not the actual value of the function. For all we know, there could be a hole in the graph at this point!\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section5 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        What about estimating <Latex expression={`{\\\\lim}_{x \\\\to 4} g(x)`} /> from this table?\r\n      </div>\r\n      <FunctionTable xTitle={<Latex expression={`x`} />} yTitle={<Latex expression={`g(x)`} />} data={table2Data} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section6 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        We only have information about <Latex expression={`x`} /> values to the <strong>left</strong> of 4. Since we don't know anything about the graph on the right side of <Latex expression={`x = 4`} />, we cannot say anything about the limit.\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section7 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        Let's look at another table: What can we say about <Latex expression={`{\\\\lim}_{x \\\\to 4} h(x)`} />?\r\n      </div>\r\n      <FunctionTable xTitle={<Latex expression={`x`} />} yTitle={<Latex expression={`h(x)`} />} data={table3Data} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section8 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        Again, we can't really say anything at all because we aren't really \"zooming in\" on <Latex expression={`x = 4`} />. Limits are the idea of getting infinitely close to the <Latex expression={`x`} /> value, and we don't see that in this table.\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section9 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        All of this brings us closer to estimating limits of functions. For example, suppose we are asked to find <Latex expression={`{\\\\lim}_{x \\\\to 3} k(x)`} />, where <Latex expression={`k(x) = \\\\frac{x^2 - 9}{x - 3}`} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section10 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        We don't have a graph of this function, so we cannot visually see the limit. However, what we can do is create a <strong>table of values</strong> for the function, \"zooming in\" on <Latex expression={`x = 3`} />. This will give us a good estimate of the limit.\r\n      </div>\r\n      <FunctionTable xTitle={<Latex expression={`x`} />} yTitle={<Latex expression={`k(x)`} />} data={table4Data} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section11 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        Based on this table, we can reasonably estimate that <Latex expression={`{\\\\lim}_{x \\\\to 3} k(x) = 6`} />.\r\n      </div>\r\n      <div>\r\n        When we use this strategy to estimate a limit, it is important to make sure to \"zoom in\" on the point from <strong>both</strong> sides. Pick x-values that get infinitely close to the point in question to get a good estimate!\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport { Section1, Section2, Section3, Section4, Section5, Section6, Section7, Section8, Section9, Section10, Section11 }","import { Section1, Section10, Section11, Section2, Section3, Section4, Section5, Section6, Section7, Section8, Section9 } from \"./Sections\";\r\n\r\n/**\r\n * array of content to be shown on learn page\r\n */\r\nconst learnContent = [\r\n  <Section1 />,\r\n  <Section2 />,\r\n  <Section3 />,\r\n  <Section4 />,\r\n  <Section5 />,\r\n  <Section6 />,\r\n  <Section7 />,\r\n  <Section8 />,\r\n  <Section9 />,\r\n  <Section10 />,\r\n  <Section11 />\r\n]\r\n\r\nexport default learnContent;"],"names":["_ref","classes","expression","display","_jsx","className","children","BlockMath","math","InlineMath","FunctionTable","xTitle","yTitle","data","tableRef","useRef","_useState","useState","_useState2","_slicedToArray","width","setWidth","originalWidthRef","windowWidth","useWindowSize","_useState3","_useState4","setDisplay","useEffect","element","current","resizeObserver","ResizeObserver","entries","_step","_iterator","_createForOfIteratorHelper","s","n","done","entry","value","target","contentRect","err","e","f","observe","unobserve","disconnect","_jsxs","ref","concat","map","d","i","x","y","table1Data","table2Data","table3Data","table4Data","Section1","Section2","_Fragment","Latex","Section3","Section4","Section5","Section6","Section7","Section8","Section9","Section10","Section11"],"sourceRoot":""}