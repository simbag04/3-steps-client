{"version":3,"file":"static/js/596.9d93406a.chunk.js","mappings":"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","sources":["components/latex/Piecewise.tsx","topics/01-limits/05-evaluating-limits-using-direct-substitution/Sections.tsx","topics/01-limits/05-evaluating-limits-using-direct-substitution/learn-content.tsx"],"sourcesContent":["/**\r\n * Renders Piecewise Function in Latex\r\n */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Latex from \"./Latex\";\r\nimport { PiecewiseFunction } from \"../../@types/PiecewiseFunction\";\r\n\r\ninterface PiecewiseProps {\r\n  title: string, // name of function\r\n  functions: PiecewiseFunction[], // functions to show\r\n  display?: string | boolean, // whether it should be display mode\r\n  classes?: string // classes to apply\r\n}\r\n\r\nexport const Piecewise: React.FC<PiecewiseProps> = ({ title, functions, display, classes }) => {\r\n  const [expression, setExpression] = useState(``);\r\n  useEffect(() => {\r\n    if (functions) {\r\n      let e = `\\\\begin{cases}`;\r\n      for (let i = 0; i < functions.length; i++) {\r\n        e = e + functions[i].f + \"&\";\r\n        e = e + functions[i].domain;\r\n        if (i !== functions.length - 1) {\r\n          e = e + \"\\\\\\\\\\\\\\\\\"\r\n        }\r\n      }\r\n      e = e + \"\\\\end{cases}\"\r\n      setExpression(e)\r\n    }\r\n  },[functions])\r\n  \r\n  return (\r\n    <>\r\n      <Latex classes={classes ? classes : \"\"} expression={`${title ? `${title} = ` : ''} ${expression}`} display={display} />\r\n    </>\r\n  )\r\n}","import Latex from \"../../../components/latex/Latex\"\r\nimport { Piecewise } from \"../../../components/latex/Piecewise\"\r\nimport React from \"react\"\r\n\r\n/*\r\nconst Section1 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        In the last section, we learned about using properties of limits to evaluate limits of complex functions.\r\n      </div>\r\n      <div>\r\n        You may have noticed that you could have just directly substituted in the values of the limits.\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section2 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        For example, suppose that <Latex expression={`\\\\lim_{x \\\\to 5} f(x) = 5`} /> and <Latex expression={`\\\\lim_{x \\\\to 5} g(x) = 3`} />, and we want to find <Latex expression={`\\\\lim_{x \\\\to 5} \\\\left[\\\\frac{3f(x)}{g(x)} + g(x)^2 \\\\right]`} />.\r\n      </div>\r\n      <div>\r\n        We could use the limit properties to simplify this, but we could also just directly substitute 5 for <Latex expression={`f(x)`} /> and 3 for <Latex expression={`g(x)`} /> in the limit expression.\r\n      </div>\r\n      <div>\r\n        Then, we would get <Latex expression={`\\\\lim_{x \\\\to 5} \\\\left[\\\\frac{3f(x)}{g(x)} + g(x)^2 \\\\right] = `} /> <Latex expression={`\\\\frac{3(5)}{3} + (3)^2 = 5 + 9 = 14`} />.\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section3 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        This works because we already know the limit exists at <Latex expression={`x = 5`} /> for both <Latex expression={`f(x)`} /> and <Latex expression={`g(x)`} />.\r\n      </div>\r\n      <div>\r\n        The expression for which we want to find the limit is just a transformation of these two functions. Therefore, we can apply the transformation directly to the values of the limits (i.e. directly substitute in the values).\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n*/\r\n\r\nconst Section1 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        Another rule for limits that we can use is <Latex expression={`\\\\lim_{x \\\\to c} x = c`} />, where <Latex expression={`c`} /> is a constant.\r\n      </div>\r\n      <div>\r\n        This makes sense because the graph of <Latex expression={`y = x`} /> is just a continuous line, so the limit at any point on the line is just the y-value at that point.\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section2 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        Due to this, we can evaluate limits with just <Latex expression={`x`} /> as a variable.\r\n      </div>\r\n      <div>\r\n        As an example, consider <Latex classes='bold' expression={`\\\\lim_{x \\\\to 3} (x^2 + 6x - 3)`} />.\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section3 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        We already know <Latex expression={`\\\\lim_{x \\\\to 3} x = 3`} />. Thus, we can directly substitute in 3 for <Latex expression={`x`} />.\r\n      </div>\r\n      <div>\r\n        This gives us <Latex expression={`\\\\lim_{x \\\\to 3} (x^2 + 6x - 3) = `} /> <Latex expression={`(3)^2 + 6(3) - 3 = 24`} />.\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section4 = () => {\r\n  const functions = [{ f: `2x - 1`, domain: `x < 0` }, { f: `x`, domain: `x \\\\geq 0` }]\r\n  return (\r\n    <>\r\n      <div>\r\n        Let's look at an example with <strong>piecewise functions</strong>. Let <Piecewise title={`f(x)`} functions={functions} display={true} />\r\n      </div>\r\n      <div>\r\n        What is <Latex classes='bold' expression={`\\\\lim_{x \\\\to 5} f(x)`} />?\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section5 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        Since we are evaluating the limit as <Latex expression={`x \\\\to 5`} />, and <Latex expression={`5 \\\\geq 0`} />, we need to use the second function.\r\n      </div>\r\n      <div>\r\n        Therefore, <Latex expression={`\\\\lim_{x \\\\to 5} f(x) = `} /> <Latex expression={`\\\\lim_{x \\\\to 5} x = 5`} />.\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section6 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        What about <Latex classes='bold' expression={`\\\\lim_{x \\\\to 0^{\\\\footnotesize\\\\texttt{-}}} f(x)`} /> and <Latex classes='bold' expression={`\\\\lim_{x \\\\to 0^{\\\\footnotesize\\\\texttt{+}}} f(x)`} />? <Latex classes='bold' expression={`\\\\lim_{x \\\\to 0} f(x)`} />?\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section7 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        For <Latex expression={`\\\\lim_{x \\\\to 0^{\\\\footnotesize\\\\texttt{-}}} f(x)`} />, since we are asked about the limit from the <strong>left</strong>, we need to use the first function. Therefore, <Latex expression={`\\\\lim_{x \\\\to 0^{\\\\footnotesize\\\\texttt{-}}} f(x) = `} /> <Latex expression={`\\\\lim_{x \\\\to 0} (2x - 1) = -1`} />.\r\n      </div>\r\n      <div>\r\n        Similarly, <Latex expression={`\\\\lim_{x \\\\to 0^{\\\\footnotesize\\\\texttt{+}}} f(x) = `} /> <Latex expression={`\\\\lim_{x \\\\to 0} x = 0`} />.\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section8 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        Since <Latex expression={`\\\\lim_{x \\\\to 0^{\\\\footnotesize\\\\texttt{-}}} f(x) \\\\neq`} /> <Latex expression={`\\\\lim_{x \\\\to 0^{\\\\footnotesize\\\\texttt{+}}} f(x)`} />, <Latex expression={`\\\\lim_{x \\\\to 0} f(x)`} /> <strong>does not exist!</strong>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section9 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        Lastly, let's look at <strong>absolute value functions</strong>. Let <Latex expression={`g(x) = |x - 3|`} />. What is <Latex expression={`\\\\lim_{x \\\\to 3} g(x)`} />?\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section10 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        The first thing we should do is rewrite this absolute value function as a piecewise function, so we know which function we should use to evaluate the limit.\r\n      </div>\r\n      <div>\r\n        Recall that to write an absolute value function as a piecewise function, we need to first find where the inside of the absolute value (in this case <Latex expression={`x - 3`} />) is <Latex expression={'<'} /> or <Latex expression={'>'} /> than 0.\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section11 = () => {\r\n  const functions = [{ f: '-(x - 3)', domain: 'x < 3' }, { f: `x - 3`, domain: `x \\\\geq 3` }]\r\n  return (\r\n    <>\r\n      <div>\r\n        Since <Latex expression={`x - 3 \\\\geq 0`} /> when <Latex expression={`x \\\\geq 3`} />, and <Latex expression={`x - 3 < 0`} /> when <Latex expression={`x < 3`} />, we have <Piecewise title={'g(x)'} functions={functions} display={true} />\r\n      </div>\r\n      <div>\r\n        Using this, we can evaluate both limits:\r\n      </div>\r\n      <div>\r\n        <Latex expression={`\\\\lim_{x \\\\to 3^{\\\\footnotesize\\\\texttt{-}}} g(x) = \\\\lim_{x \\\\to 3} \\\\left[-(x - 3)\\\\right] = 0`} display={true} />\r\n        <Latex expression={`\\\\lim_{x \\\\to 3^{\\\\footnotesize\\\\texttt{+}}} g(x) = \\\\lim_{x \\\\to 3} (x - 3) = 0`} display={true} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section12 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        Since <Latex expression={`\\\\lim_{x \\\\to 3^{-}} g(x) = `} /> <Latex expression={`\\\\lim_{x \\\\to 3^{+}} g(x) = 0`} />, <Latex expression={`\\\\lim_{x \\\\to 3} g(x) = 0`} />!\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Section13 = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        To summarize, direct substitution is a great first step towards evaluating a limit. However, remember to use the correct functions to substitute into, especially in cases with piecewise and absolute value functions.\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport { Section1, Section2, Section3, Section4, Section5, Section6, Section7, Section8, Section9, Section10, Section11, Section12, Section13 }","import { Section1, Section10, Section11, Section12, Section13, Section2, Section3, Section4, Section5, Section6, Section7, Section8, Section9 } from \"./Sections\";\r\nimport React from \"react\";\r\n\r\nconst learnContent = [\r\n  <Section1 />,\r\n  <Section2 />,\r\n  <Section3 />,\r\n  <Section4 />,\r\n  <Section5 />,\r\n  <Section6 />,\r\n  <Section7 />,\r\n  <Section8 />,\r\n  <Section9 />,\r\n  <Section10 />,\r\n  <Section11 />,\r\n  <Section12 />,\r\n  <Section13 />\r\n]\r\n\r\nexport default learnContent\r\n"],"names":["Piecewise","_ref","title","functions","display","classes","expression","setExpression","useState","useEffect","e","i","length","f","domain","_jsx","_Fragment","children","Latex","concat","Section1","_jsxs","Section2","Section3","Section4","Section5","Section6","Section7","Section8","Section9","Section10","Section11","Section12","Section13"],"sourceRoot":""}